{
    "id": 176,
    "expression": "this.typeArguments",
    "projectName": "google@gson",
    "commitID": "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
    "filePath": "gson/src/main/java/com/google/gson/internal/$Gson$Types.java",
    "occurrences": 5,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "this.typeArguments",
            "nodeType": "FieldAccess",
            "nodePosition": {
                "charLength": 18,
                "startLineNumber": 453,
                "startColumnNumber": 26,
                "endLineNumber": 453,
                "endColumnNumber": 44
            },
            "astNodeNumber": 3,
            "astHeight": 2,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 25,
                        "startLineNumber": 453,
                        "startColumnNumber": 26,
                        "endLineNumber": 453,
                        "endColumnNumber": 51
                    },
                    "nodeContext": "this.typeArguments.length",
                    "nodeType": "FieldAccess",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
                    "nodePosition": {
                        "charLength": 29,
                        "startLineNumber": 453,
                        "startColumnNumber": 22,
                        "endLineNumber": 453,
                        "endColumnNumber": 51
                    },
                    "nodeContext": "t < this.typeArguments.length",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 225,
                        "startLineNumber": 453,
                        "startColumnNumber": 6,
                        "endLineNumber": 457,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "for (int t=0; t < this.typeArguments.length; t++) {\n  checkNotNull(this.typeArguments[t]);\n  checkNotPrimitive(this.typeArguments[t]);\n  this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 46,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 857,
                        "startLineNumber": 440,
                        "startColumnNumber": 86,
                        "endLineNumber": 458,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (rawType instanceof Class<?>) {\n    Class<?> rawTypeAsClass=(Class<?>)rawType;\n    boolean isStaticOrTopLevelClass=Modifier.isStatic(rawTypeAsClass.getModifiers()) || rawTypeAsClass.getEnclosingClass() == null;\n    checkArgument(ownerType != null || isStaticOrTopLevelClass);\n    checkArgument(ownerType == null || !isStaticOrTopLevelClass);\n  }\n  this.ownerType=ownerType == null ? null : canonicalize(ownerType);\n  this.rawType=canonicalize(rawType);\n  this.typeArguments=typeArguments.clone();\n  for (int t=0; t < this.typeArguments.length; t++) {\n    checkNotNull(this.typeArguments[t]);\n    checkNotPrimitive(this.typeArguments[t]);\n    this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 130,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 939,
                        "startLineNumber": 440,
                        "startColumnNumber": 4,
                        "endLineNumber": 458,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "public ParameterizedTypeImpl(Type ownerType,Type rawType,Type... typeArguments){\n  if (rawType instanceof Class<?>) {\n    Class<?> rawTypeAsClass=(Class<?>)rawType;\n    boolean isStaticOrTopLevelClass=Modifier.isStatic(rawTypeAsClass.getModifiers()) || rawTypeAsClass.getEnclosingClass() == null;\n    checkArgument(ownerType != null || isStaticOrTopLevelClass);\n    checkArgument(ownerType == null || !isStaticOrTopLevelClass);\n  }\n  this.ownerType=ownerType == null ? null : canonicalize(ownerType);\n  this.rawType=canonicalize(rawType);\n  this.typeArguments=typeArguments.clone();\n  for (int t=0; t < this.typeArguments.length; t++) {\n    checkNotNull(this.typeArguments[t]);\n    checkNotPrimitive(this.typeArguments[t]);\n    this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 145,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
                "nodePosition": {
                    "charLength": 29,
                    "startLineNumber": 453,
                    "startColumnNumber": 22,
                    "endLineNumber": 453,
                    "endColumnNumber": 51
                },
                "nodeContext": "t < this.typeArguments.length",
                "nodeType": "InfixExpression",
                "astNodeNumber": 7,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.lang.reflect.Type[]"
        },
        {
            "nodeContext": "this.typeArguments",
            "nodeType": "FieldAccess",
            "nodePosition": {
                "charLength": 18,
                "startLineNumber": 454,
                "startColumnNumber": 21,
                "endLineNumber": 454,
                "endColumnNumber": 39
            },
            "astNodeNumber": 3,
            "astHeight": 2,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 21,
                        "startLineNumber": 454,
                        "startColumnNumber": 21,
                        "endLineNumber": 454,
                        "endColumnNumber": 42
                    },
                    "nodeContext": "this.typeArguments[t]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 35,
                        "startLineNumber": 454,
                        "startColumnNumber": 8,
                        "endLineNumber": 454,
                        "endColumnNumber": 43
                    },
                    "nodeContext": "checkNotNull(this.typeArguments[t])",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 36,
                        "startLineNumber": 454,
                        "startColumnNumber": 8,
                        "endLineNumber": 454,
                        "endColumnNumber": 44
                    },
                    "nodeContext": "checkNotNull(this.typeArguments[t]);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 8,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 173,
                        "startLineNumber": 453,
                        "startColumnNumber": 58,
                        "endLineNumber": 457,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "{\n  checkNotNull(this.typeArguments[t]);\n  checkNotPrimitive(this.typeArguments[t]);\n  this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 31,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 225,
                        "startLineNumber": 453,
                        "startColumnNumber": 6,
                        "endLineNumber": 457,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "for (int t=0; t < this.typeArguments.length; t++) {\n  checkNotNull(this.typeArguments[t]);\n  checkNotPrimitive(this.typeArguments[t]);\n  this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 46,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 857,
                        "startLineNumber": 440,
                        "startColumnNumber": 86,
                        "endLineNumber": 458,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (rawType instanceof Class<?>) {\n    Class<?> rawTypeAsClass=(Class<?>)rawType;\n    boolean isStaticOrTopLevelClass=Modifier.isStatic(rawTypeAsClass.getModifiers()) || rawTypeAsClass.getEnclosingClass() == null;\n    checkArgument(ownerType != null || isStaticOrTopLevelClass);\n    checkArgument(ownerType == null || !isStaticOrTopLevelClass);\n  }\n  this.ownerType=ownerType == null ? null : canonicalize(ownerType);\n  this.rawType=canonicalize(rawType);\n  this.typeArguments=typeArguments.clone();\n  for (int t=0; t < this.typeArguments.length; t++) {\n    checkNotNull(this.typeArguments[t]);\n    checkNotPrimitive(this.typeArguments[t]);\n    this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 130,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 939,
                        "startLineNumber": 440,
                        "startColumnNumber": 4,
                        "endLineNumber": 458,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "public ParameterizedTypeImpl(Type ownerType,Type rawType,Type... typeArguments){\n  if (rawType instanceof Class<?>) {\n    Class<?> rawTypeAsClass=(Class<?>)rawType;\n    boolean isStaticOrTopLevelClass=Modifier.isStatic(rawTypeAsClass.getModifiers()) || rawTypeAsClass.getEnclosingClass() == null;\n    checkArgument(ownerType != null || isStaticOrTopLevelClass);\n    checkArgument(ownerType == null || !isStaticOrTopLevelClass);\n  }\n  this.ownerType=ownerType == null ? null : canonicalize(ownerType);\n  this.rawType=canonicalize(rawType);\n  this.typeArguments=typeArguments.clone();\n  for (int t=0; t < this.typeArguments.length; t++) {\n    checkNotNull(this.typeArguments[t]);\n    checkNotPrimitive(this.typeArguments[t]);\n    this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 145,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 36,
                    "startLineNumber": 454,
                    "startColumnNumber": 8,
                    "endLineNumber": 454,
                    "endColumnNumber": 44
                },
                "nodeContext": "checkNotNull(this.typeArguments[t]);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 8,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "java.lang.reflect.Type[]"
        },
        {
            "nodeContext": "this.typeArguments",
            "nodeType": "FieldAccess",
            "nodePosition": {
                "charLength": 18,
                "startLineNumber": 455,
                "startColumnNumber": 26,
                "endLineNumber": 455,
                "endColumnNumber": 44
            },
            "astNodeNumber": 3,
            "astHeight": 2,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 21,
                        "startLineNumber": 455,
                        "startColumnNumber": 26,
                        "endLineNumber": 455,
                        "endColumnNumber": 47
                    },
                    "nodeContext": "this.typeArguments[t]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 40,
                        "startLineNumber": 455,
                        "startColumnNumber": 8,
                        "endLineNumber": 455,
                        "endColumnNumber": 48
                    },
                    "nodeContext": "checkNotPrimitive(this.typeArguments[t])",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 41,
                        "startLineNumber": 455,
                        "startColumnNumber": 8,
                        "endLineNumber": 455,
                        "endColumnNumber": 49
                    },
                    "nodeContext": "checkNotPrimitive(this.typeArguments[t]);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 8,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 173,
                        "startLineNumber": 453,
                        "startColumnNumber": 58,
                        "endLineNumber": 457,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "{\n  checkNotNull(this.typeArguments[t]);\n  checkNotPrimitive(this.typeArguments[t]);\n  this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 31,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 225,
                        "startLineNumber": 453,
                        "startColumnNumber": 6,
                        "endLineNumber": 457,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "for (int t=0; t < this.typeArguments.length; t++) {\n  checkNotNull(this.typeArguments[t]);\n  checkNotPrimitive(this.typeArguments[t]);\n  this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 46,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 857,
                        "startLineNumber": 440,
                        "startColumnNumber": 86,
                        "endLineNumber": 458,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (rawType instanceof Class<?>) {\n    Class<?> rawTypeAsClass=(Class<?>)rawType;\n    boolean isStaticOrTopLevelClass=Modifier.isStatic(rawTypeAsClass.getModifiers()) || rawTypeAsClass.getEnclosingClass() == null;\n    checkArgument(ownerType != null || isStaticOrTopLevelClass);\n    checkArgument(ownerType == null || !isStaticOrTopLevelClass);\n  }\n  this.ownerType=ownerType == null ? null : canonicalize(ownerType);\n  this.rawType=canonicalize(rawType);\n  this.typeArguments=typeArguments.clone();\n  for (int t=0; t < this.typeArguments.length; t++) {\n    checkNotNull(this.typeArguments[t]);\n    checkNotPrimitive(this.typeArguments[t]);\n    this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 130,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 939,
                        "startLineNumber": 440,
                        "startColumnNumber": 4,
                        "endLineNumber": 458,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "public ParameterizedTypeImpl(Type ownerType,Type rawType,Type... typeArguments){\n  if (rawType instanceof Class<?>) {\n    Class<?> rawTypeAsClass=(Class<?>)rawType;\n    boolean isStaticOrTopLevelClass=Modifier.isStatic(rawTypeAsClass.getModifiers()) || rawTypeAsClass.getEnclosingClass() == null;\n    checkArgument(ownerType != null || isStaticOrTopLevelClass);\n    checkArgument(ownerType == null || !isStaticOrTopLevelClass);\n  }\n  this.ownerType=ownerType == null ? null : canonicalize(ownerType);\n  this.rawType=canonicalize(rawType);\n  this.typeArguments=typeArguments.clone();\n  for (int t=0; t < this.typeArguments.length; t++) {\n    checkNotNull(this.typeArguments[t]);\n    checkNotPrimitive(this.typeArguments[t]);\n    this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 145,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 41,
                    "startLineNumber": 455,
                    "startColumnNumber": 8,
                    "endLineNumber": 455,
                    "endColumnNumber": 49
                },
                "nodeContext": "checkNotPrimitive(this.typeArguments[t]);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 8,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "java.lang.reflect.Type[]"
        },
        {
            "nodeContext": "this.typeArguments",
            "nodeType": "FieldAccess",
            "nodePosition": {
                "charLength": 18,
                "startLineNumber": 456,
                "startColumnNumber": 8,
                "endLineNumber": 456,
                "endColumnNumber": 26
            },
            "astNodeNumber": 3,
            "astHeight": 2,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
                    "nodePosition": {
                        "charLength": 21,
                        "startLineNumber": 456,
                        "startColumnNumber": 8,
                        "endLineNumber": 456,
                        "endColumnNumber": 29
                    },
                    "nodeContext": "this.typeArguments[t]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 59,
                        "startLineNumber": 456,
                        "startColumnNumber": 8,
                        "endLineNumber": 456,
                        "endColumnNumber": 67
                    },
                    "nodeContext": "this.typeArguments[t]=canonicalize(this.typeArguments[t])",
                    "nodeType": "Assignment",
                    "astNodeNumber": 13,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 60,
                        "startLineNumber": 456,
                        "startColumnNumber": 8,
                        "endLineNumber": 456,
                        "endColumnNumber": 68
                    },
                    "nodeContext": "this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 14,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 173,
                        "startLineNumber": 453,
                        "startColumnNumber": 58,
                        "endLineNumber": 457,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "{\n  checkNotNull(this.typeArguments[t]);\n  checkNotPrimitive(this.typeArguments[t]);\n  this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 31,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 225,
                        "startLineNumber": 453,
                        "startColumnNumber": 6,
                        "endLineNumber": 457,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "for (int t=0; t < this.typeArguments.length; t++) {\n  checkNotNull(this.typeArguments[t]);\n  checkNotPrimitive(this.typeArguments[t]);\n  this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 46,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 857,
                        "startLineNumber": 440,
                        "startColumnNumber": 86,
                        "endLineNumber": 458,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (rawType instanceof Class<?>) {\n    Class<?> rawTypeAsClass=(Class<?>)rawType;\n    boolean isStaticOrTopLevelClass=Modifier.isStatic(rawTypeAsClass.getModifiers()) || rawTypeAsClass.getEnclosingClass() == null;\n    checkArgument(ownerType != null || isStaticOrTopLevelClass);\n    checkArgument(ownerType == null || !isStaticOrTopLevelClass);\n  }\n  this.ownerType=ownerType == null ? null : canonicalize(ownerType);\n  this.rawType=canonicalize(rawType);\n  this.typeArguments=typeArguments.clone();\n  for (int t=0; t < this.typeArguments.length; t++) {\n    checkNotNull(this.typeArguments[t]);\n    checkNotPrimitive(this.typeArguments[t]);\n    this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 130,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 939,
                        "startLineNumber": 440,
                        "startColumnNumber": 4,
                        "endLineNumber": 458,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "public ParameterizedTypeImpl(Type ownerType,Type rawType,Type... typeArguments){\n  if (rawType instanceof Class<?>) {\n    Class<?> rawTypeAsClass=(Class<?>)rawType;\n    boolean isStaticOrTopLevelClass=Modifier.isStatic(rawTypeAsClass.getModifiers()) || rawTypeAsClass.getEnclosingClass() == null;\n    checkArgument(ownerType != null || isStaticOrTopLevelClass);\n    checkArgument(ownerType == null || !isStaticOrTopLevelClass);\n  }\n  this.ownerType=ownerType == null ? null : canonicalize(ownerType);\n  this.rawType=canonicalize(rawType);\n  this.typeArguments=typeArguments.clone();\n  for (int t=0; t < this.typeArguments.length; t++) {\n    checkNotNull(this.typeArguments[t]);\n    checkNotPrimitive(this.typeArguments[t]);\n    this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 145,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 60,
                    "startLineNumber": 456,
                    "startColumnNumber": 8,
                    "endLineNumber": 456,
                    "endColumnNumber": 68
                },
                "nodeContext": "this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 14,
                "astHeight": 6
            },
            "tokenLength": 1,
            "type": "java.lang.reflect.Type[]"
        },
        {
            "nodeContext": "this.typeArguments",
            "nodeType": "FieldAccess",
            "nodePosition": {
                "charLength": 18,
                "startLineNumber": 456,
                "startColumnNumber": 45,
                "endLineNumber": 456,
                "endColumnNumber": 63
            },
            "astNodeNumber": 3,
            "astHeight": 2,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 21,
                        "startLineNumber": 456,
                        "startColumnNumber": 45,
                        "endLineNumber": 456,
                        "endColumnNumber": 66
                    },
                    "nodeContext": "this.typeArguments[t]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 35,
                        "startLineNumber": 456,
                        "startColumnNumber": 32,
                        "endLineNumber": 456,
                        "endColumnNumber": 67
                    },
                    "nodeContext": "canonicalize(this.typeArguments[t])",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 59,
                        "startLineNumber": 456,
                        "startColumnNumber": 8,
                        "endLineNumber": 456,
                        "endColumnNumber": 67
                    },
                    "nodeContext": "this.typeArguments[t]=canonicalize(this.typeArguments[t])",
                    "nodeType": "Assignment",
                    "astNodeNumber": 13,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 60,
                        "startLineNumber": 456,
                        "startColumnNumber": 8,
                        "endLineNumber": 456,
                        "endColumnNumber": 68
                    },
                    "nodeContext": "this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 14,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 173,
                        "startLineNumber": 453,
                        "startColumnNumber": 58,
                        "endLineNumber": 457,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "{\n  checkNotNull(this.typeArguments[t]);\n  checkNotPrimitive(this.typeArguments[t]);\n  this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 31,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 225,
                        "startLineNumber": 453,
                        "startColumnNumber": 6,
                        "endLineNumber": 457,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "for (int t=0; t < this.typeArguments.length; t++) {\n  checkNotNull(this.typeArguments[t]);\n  checkNotPrimitive(this.typeArguments[t]);\n  this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 46,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 857,
                        "startLineNumber": 440,
                        "startColumnNumber": 86,
                        "endLineNumber": 458,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (rawType instanceof Class<?>) {\n    Class<?> rawTypeAsClass=(Class<?>)rawType;\n    boolean isStaticOrTopLevelClass=Modifier.isStatic(rawTypeAsClass.getModifiers()) || rawTypeAsClass.getEnclosingClass() == null;\n    checkArgument(ownerType != null || isStaticOrTopLevelClass);\n    checkArgument(ownerType == null || !isStaticOrTopLevelClass);\n  }\n  this.ownerType=ownerType == null ? null : canonicalize(ownerType);\n  this.rawType=canonicalize(rawType);\n  this.typeArguments=typeArguments.clone();\n  for (int t=0; t < this.typeArguments.length; t++) {\n    checkNotNull(this.typeArguments[t]);\n    checkNotPrimitive(this.typeArguments[t]);\n    this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 130,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 939,
                        "startLineNumber": 440,
                        "startColumnNumber": 4,
                        "endLineNumber": 458,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "public ParameterizedTypeImpl(Type ownerType,Type rawType,Type... typeArguments){\n  if (rawType instanceof Class<?>) {\n    Class<?> rawTypeAsClass=(Class<?>)rawType;\n    boolean isStaticOrTopLevelClass=Modifier.isStatic(rawTypeAsClass.getModifiers()) || rawTypeAsClass.getEnclosingClass() == null;\n    checkArgument(ownerType != null || isStaticOrTopLevelClass);\n    checkArgument(ownerType == null || !isStaticOrTopLevelClass);\n  }\n  this.ownerType=ownerType == null ? null : canonicalize(ownerType);\n  this.rawType=canonicalize(rawType);\n  this.typeArguments=typeArguments.clone();\n  for (int t=0; t < this.typeArguments.length; t++) {\n    checkNotNull(this.typeArguments[t]);\n    checkNotPrimitive(this.typeArguments[t]);\n    this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 145,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 60,
                    "startLineNumber": 456,
                    "startColumnNumber": 8,
                    "endLineNumber": 456,
                    "endColumnNumber": 68
                },
                "nodeContext": "this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 14,
                "astHeight": 6
            },
            "tokenLength": 1,
            "type": "java.lang.reflect.Type[]"
        }
    ],
    "positionList": [
        {
            "charLength": 18,
            "startLineNumber": 453,
            "startColumnNumber": 26,
            "endLineNumber": 453,
            "endColumnNumber": 44
        },
        {
            "charLength": 18,
            "startLineNumber": 454,
            "startColumnNumber": 21,
            "endLineNumber": 454,
            "endColumnNumber": 39
        },
        {
            "charLength": 18,
            "startLineNumber": 455,
            "startColumnNumber": 26,
            "endLineNumber": 455,
            "endColumnNumber": 44
        },
        {
            "charLength": 18,
            "startLineNumber": 456,
            "startColumnNumber": 8,
            "endLineNumber": 456,
            "endColumnNumber": 26
        },
        {
            "charLength": 18,
            "startLineNumber": 456,
            "startColumnNumber": 45,
            "endLineNumber": 456,
            "endColumnNumber": 63
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 4,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 3,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 3,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 3,
            "secondKey": 4,
            "layout": 1
        },
        {
            "firstKey": 4,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 1,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 2,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 3,
            "layout": 2
        }
    ]
}