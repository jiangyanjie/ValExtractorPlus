{
    "id": 2431,
    "expression": "minPos",
    "projectName": "commons-math",
    "commitID": "a3c552e3245b1211f60f4b8f08a259054b768c6a",
    "filePath": "src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java",
    "occurrences": 1,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "minPos",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 6,
                "startLineNumber": 70,
                "startColumnNumber": 15,
                "endLineNumber": 70,
                "endColumnNumber": 21
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 14,
                        "startLineNumber": 70,
                        "startColumnNumber": 8,
                        "endLineNumber": 70,
                        "endColumnNumber": 22
                    },
                    "nodeContext": "return minPos;\n",
                    "nodeType": "ReturnStatement",
                    "astNodeNumber": 2,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 371,
                        "startLineNumber": 61,
                        "startColumnNumber": 59,
                        "endLineNumber": 71,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  double minValue=0;\n  Integer minPos=null;\n  for (int i=tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {\n    if (MathUtils.compareTo(tableau.getEntry(0,i),minValue,epsilon) < 0) {\n      minValue=tableau.getEntry(0,i);\n      minPos=i;\n    }\n  }\n  return minPos;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 58,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 644,
                        "startLineNumber": 56,
                        "startColumnNumber": 4,
                        "endLineNumber": 71,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Returns the column with the most negative coefficient in the objective function row.\n * @param tableau simple tableau for the problem\n * @return column with the most negative coefficient\n */\nprivate Integer getPivotColumn(SimplexTableau tableau){\n  double minValue=0;\n  Integer minPos=null;\n  for (int i=tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {\n    if (MathUtils.compareTo(tableau.getEntry(0,i),minValue,epsilon) < 0) {\n      minValue=tableau.getEntry(0,i);\n      minPos=i;\n    }\n  }\n  return minPos;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 68,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 14,
                    "startLineNumber": 70,
                    "startColumnNumber": 8,
                    "endLineNumber": 70,
                    "endColumnNumber": 22
                },
                "nodeContext": "return minPos;\n",
                "nodeType": "ReturnStatement",
                "astNodeNumber": 2,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "java.lang.Integer"
        }
    ],
    "positionList": [
        {
            "charLength": 6,
            "startLineNumber": 70,
            "startColumnNumber": 15,
            "endLineNumber": 70,
            "endColumnNumber": 21
        }
    ],
    "layoutRelationDataList": []
}