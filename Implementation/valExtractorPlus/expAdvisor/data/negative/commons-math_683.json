{
    "id": 683,
    "expression": "3 * (yvals[i + 1] - yvals[i]) / w - 2 * firstDerivatives[i]",
    "projectName": "commons-math",
    "commitID": "ed565027c74d22a54f87c6e4e4dfd5b35d603ef7",
    "filePath": "src/main/java/org/apache/commons/math3/analysis/interpolation/AkimaSplineInterpolator.java",
    "occurrences": 1,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "3 * (yvals[i + 1] - yvals[i]) / w - 2 * firstDerivatives[i]",
            "nodeType": "InfixExpression",
            "nodePosition": {
                "charLength": 90,
                "startLineNumber": 213,
                "startColumnNumber": 31,
                "endLineNumber": 214,
                "endColumnNumber": 50
            },
            "astNodeNumber": 20,
            "astHeight": 8,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
                    "nodePosition": {
                        "charLength": 116,
                        "startLineNumber": 213,
                        "startColumnNumber": 31,
                        "endLineNumber": 214,
                        "endColumnNumber": 76
                    },
                    "nodeContext": "3 * (yvals[i + 1] - yvals[i]) / w - 2 * firstDerivatives[i] - firstDerivatives[i + 1]",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 26,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 118,
                        "startLineNumber": 213,
                        "startColumnNumber": 30,
                        "endLineNumber": 214,
                        "endColumnNumber": 77
                    },
                    "nodeContext": "(3 * (yvals[i + 1] - yvals[i]) / w - 2 * firstDerivatives[i] - firstDerivatives[i + 1])",
                    "nodeType": "ParenthesizedExpression",
                    "astNodeNumber": 27,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 152,
                        "startLineNumber": 213,
                        "startColumnNumber": 30,
                        "endLineNumber": 215,
                        "endColumnNumber": 31
                    },
                    "nodeContext": "(3 * (yvals[i + 1] - yvals[i]) / w - 2 * firstDerivatives[i] - firstDerivatives[i + 1]) / w",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 29,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 170,
                        "startLineNumber": 213,
                        "startColumnNumber": 12,
                        "endLineNumber": 215,
                        "endColumnNumber": 31
                    },
                    "nodeContext": "coefficients[2]=(3 * (yvals[i + 1] - yvals[i]) / w - 2 * firstDerivatives[i] - firstDerivatives[i + 1]) / w",
                    "nodeType": "Assignment",
                    "astNodeNumber": 33,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 171,
                        "startLineNumber": 213,
                        "startColumnNumber": 12,
                        "endLineNumber": 215,
                        "endColumnNumber": 32
                    },
                    "nodeContext": "coefficients[2]=(3 * (yvals[i + 1] - yvals[i]) / w - 2 * firstDerivatives[i] - firstDerivatives[i + 1]) / w;\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 34,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 613,
                        "startLineNumber": 208,
                        "startColumnNumber": 53,
                        "endLineNumber": 220,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  double w=xvals[i + 1] - xvals[i];\n  double w2=w * w;\n  coefficients[0]=yvals[i];\n  coefficients[1]=firstDerivatives[i];\n  coefficients[2]=(3 * (yvals[i + 1] - yvals[i]) / w - 2 * firstDerivatives[i] - firstDerivatives[i + 1]) / w;\n  coefficients[3]=(2 * (yvals[i] - yvals[i + 1]) / w + firstDerivatives[i] + firstDerivatives[i + 1]) / w2;\n  polynomials[i]=new PolynomialFunction(coefficients);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 112,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 658,
                        "startLineNumber": 208,
                        "startColumnNumber": 8,
                        "endLineNumber": 220,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=0; i < polynomials.length; i++) {\n  double w=xvals[i + 1] - xvals[i];\n  double w2=w * w;\n  coefficients[0]=yvals[i];\n  coefficients[1]=firstDerivatives[i];\n  coefficients[2]=(3 * (yvals[i + 1] - yvals[i]) / w - 2 * firstDerivatives[i] - firstDerivatives[i + 1]) / w;\n  coefficients[3]=(2 * (yvals[i] - yvals[i + 1]) / w + firstDerivatives[i] + firstDerivatives[i + 1]) / w2;\n  polynomials[i]=new PolynomialFunction(coefficients);\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 125,
                    "astHeight": 15
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1604,
                        "startLineNumber": 186,
                        "startColumnNumber": 89,
                        "endLineNumber": 224,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (xvals.length != yvals.length) {\n    throw new DimensionMismatchException(xvals.length,yvals.length);\n  }\n  if (xvals.length != firstDerivatives.length) {\n    throw new DimensionMismatchException(xvals.length,firstDerivatives.length);\n  }\n  final int minimumLength=2;\n  if (xvals.length < minimumLength) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,xvals.length,minimumLength,true);\n  }\n  int size=xvals.length - 1;\n  final PolynomialFunction polynomials[]=new PolynomialFunction[size];\n  final double coefficients[]=new double[4];\n  for (int i=0; i < polynomials.length; i++) {\n    double w=xvals[i + 1] - xvals[i];\n    double w2=w * w;\n    coefficients[0]=yvals[i];\n    coefficients[1]=firstDerivatives[i];\n    coefficients[2]=(3 * (yvals[i + 1] - yvals[i]) / w - 2 * firstDerivatives[i] - firstDerivatives[i + 1]) / w;\n    coefficients[3]=(2 * (yvals[i] - yvals[i + 1]) / w + firstDerivatives[i] + firstDerivatives[i + 1]) / w2;\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(xvals,polynomials);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 228,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2299,
                        "startLineNumber": 174,
                        "startColumnNumber": 4,
                        "endLineNumber": 224,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Creates a Hermite cubic spline interpolation from the set of (x,y) value pairs and their derivatives. This is modeled off of the InterpolateHermiteSorted method in the Math.NET CubicSpline class.\n * @param xvals x values for interpolation\n * @param yvals y values for interpolation\n * @param firstDerivatives first derivative values of the function\n * @return polynomial that fits the function\n */\nprivate PolynomialSplineFunction interpolateHermiteSorted(double[] xvals,double[] yvals,double[] firstDerivatives){\n  if (xvals.length != yvals.length) {\n    throw new DimensionMismatchException(xvals.length,yvals.length);\n  }\n  if (xvals.length != firstDerivatives.length) {\n    throw new DimensionMismatchException(xvals.length,firstDerivatives.length);\n  }\n  final int minimumLength=2;\n  if (xvals.length < minimumLength) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,xvals.length,minimumLength,true);\n  }\n  int size=xvals.length - 1;\n  final PolynomialFunction polynomials[]=new PolynomialFunction[size];\n  final double coefficients[]=new double[4];\n  for (int i=0; i < polynomials.length; i++) {\n    double w=xvals[i + 1] - xvals[i];\n    double w2=w * w;\n    coefficients[0]=yvals[i];\n    coefficients[1]=firstDerivatives[i];\n    coefficients[2]=(3 * (yvals[i + 1] - yvals[i]) / w - 2 * firstDerivatives[i] - firstDerivatives[i + 1]) / w;\n    coefficients[3]=(2 * (yvals[i] - yvals[i + 1]) / w + firstDerivatives[i] + firstDerivatives[i + 1]) / w2;\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(xvals,polynomials);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 249,
                    "astHeight": 17
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                "nodePosition": {
                    "charLength": 118,
                    "startLineNumber": 213,
                    "startColumnNumber": 30,
                    "endLineNumber": 214,
                    "endColumnNumber": 77
                },
                "nodeContext": "(3 * (yvals[i + 1] - yvals[i]) / w - 2 * firstDerivatives[i] - firstDerivatives[i + 1])",
                "nodeType": "ParenthesizedExpression",
                "astNodeNumber": 27,
                "astHeight": 10
            },
            "tokenLength": 16,
            "type": "double"
        }
    ],
    "positionList": [
        {
            "charLength": 90,
            "startLineNumber": 213,
            "startColumnNumber": 31,
            "endLineNumber": 214,
            "endColumnNumber": 50
        }
    ],
    "layoutRelationDataList": []
}