{
    "id": 249,
    "expression": "useConstructor",
    "projectName": "johnzon",
    "commitID": "1ea4fd8c3d894cbe8398e5808414cfd2d2eaa992",
    "filePath": "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/reflection/Mappings.java",
    "occurrences": 1,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "useConstructor",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 14,
                "startLineNumber": 73,
                "startColumnNumber": 72,
                "endLineNumber": 73,
                "endColumnNumber": 86
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 56,
                        "startLineNumber": 73,
                        "startColumnNumber": 31,
                        "endLineNumber": 73,
                        "endColumnNumber": 87
                    },
                    "nodeContext": "findConstructor(acceptHiddenConstructor,useConstructor)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 75,
                        "startLineNumber": 73,
                        "startColumnNumber": 12,
                        "endLineNumber": 73,
                        "endColumnNumber": 87
                    },
                    "nodeContext": "this.constructor=findConstructor(acceptHiddenConstructor,useConstructor)",
                    "nodeType": "Assignment",
                    "astNodeNumber": 8,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 76,
                        "startLineNumber": 73,
                        "startColumnNumber": 12,
                        "endLineNumber": 73,
                        "endColumnNumber": 88
                    },
                    "nodeContext": "this.constructor=findConstructor(acceptHiddenConstructor,useConstructor);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1808,
                        "startLineNumber": 69,
                        "startColumnNumber": 100,
                        "endLineNumber": 100,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  this.clazz=clazz;\n  this.getters=getters;\n  this.setters=setters;\n  this.constructor=findConstructor(acceptHiddenConstructor,useConstructor);\n  this.constructorHasArguments=this.constructor != null && this.constructor.getGenericParameterTypes().length > 0;\n  if (this.constructorHasArguments) {\n    this.constructorParameterTypes=this.constructor.getGenericParameterTypes();\n    this.constructorParameters=new String[this.constructor.getGenericParameterTypes().length];\n    final ConstructorProperties constructorProperties=this.constructor.getAnnotation(ConstructorProperties.class);\n    System.arraycopy(constructorProperties.value(),0,this.constructorParameters,0,this.constructorParameters.length);\n    this.constructorParameterConverters=new Converter<?>[this.constructor.getGenericParameterTypes().length];\n    for (int i=0; i < this.constructorParameters.length; i++) {\n      for (      final Annotation a : this.constructor.getParameterAnnotations()[i]) {\n        if (a.annotationType() == JohnzonConverter.class) {\n          try {\n            this.constructorParameterConverters[i]=JohnzonConverter.class.cast(a).value().newInstance();\n          }\n catch (          final Exception e) {\n            throw new IllegalArgumentException(e);\n          }\n        }\n      }\n    }\n  }\n else {\n    this.constructorParameterTypes=null;\n    this.constructorParameters=null;\n    this.constructorParameterConverters=null;\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 219,
                    "astHeight": 19
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2054,
                        "startLineNumber": 67,
                        "startColumnNumber": 8,
                        "endLineNumber": 100,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "protected ClassMapping(final Class<?> clazz,final Map<String,Getter> getters,final Map<String,Setter> setters,final boolean acceptHiddenConstructor,final boolean useConstructor){\n  this.clazz=clazz;\n  this.getters=getters;\n  this.setters=setters;\n  this.constructor=findConstructor(acceptHiddenConstructor,useConstructor);\n  this.constructorHasArguments=this.constructor != null && this.constructor.getGenericParameterTypes().length > 0;\n  if (this.constructorHasArguments) {\n    this.constructorParameterTypes=this.constructor.getGenericParameterTypes();\n    this.constructorParameters=new String[this.constructor.getGenericParameterTypes().length];\n    final ConstructorProperties constructorProperties=this.constructor.getAnnotation(ConstructorProperties.class);\n    System.arraycopy(constructorProperties.value(),0,this.constructorParameters,0,this.constructorParameters.length);\n    this.constructorParameterConverters=new Converter<?>[this.constructor.getGenericParameterTypes().length];\n    for (int i=0; i < this.constructorParameters.length; i++) {\n      for (      final Annotation a : this.constructor.getParameterAnnotations()[i]) {\n        if (a.annotationType() == JohnzonConverter.class) {\n          try {\n            this.constructorParameterConverters[i]=JohnzonConverter.class.cast(a).value().newInstance();\n          }\n catch (          final Exception e) {\n            throw new IllegalArgumentException(e);\n          }\n        }\n      }\n    }\n  }\n else {\n    this.constructorParameterTypes=null;\n    this.constructorParameters=null;\n    this.constructorParameterConverters=null;\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 257,
                    "astHeight": 20
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 76,
                    "startLineNumber": 73,
                    "startColumnNumber": 12,
                    "endLineNumber": 73,
                    "endColumnNumber": 88
                },
                "nodeContext": "this.constructor=findConstructor(acceptHiddenConstructor,useConstructor);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 9,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "boolean"
        }
    ],
    "positionList": [
        {
            "charLength": 14,
            "startLineNumber": 73,
            "startColumnNumber": 72,
            "endLineNumber": 73,
            "endColumnNumber": 86
        }
    ],
    "layoutRelationDataList": []
}