{
    "id": 213,
    "expression": "pushReq",
    "projectName": "eclipse-vertx@vert.x",
    "commitID": "665e20a715caff0cbaa72adfd1bb374c543281f0",
    "filePath": "src/main/java/io/vertx/core/http/impl/Http2ClientConnection.java",
    "occurrences": 4,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "pushReq",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 131,
                "startColumnNumber": 12,
                "endLineNumber": 131,
                "endColumnNumber": 19
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 88,
                        "startLineNumber": 131,
                        "startColumnNumber": 12,
                        "endLineNumber": 131,
                        "endColumnNumber": 100
                    },
                    "nodeContext": "pushReq.metric(metrics.responsePushed(metric,localAddress(),remoteAddress(),pushReq))",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 12,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 89,
                        "startLineNumber": 131,
                        "startColumnNumber": 12,
                        "endLineNumber": 131,
                        "endColumnNumber": 101
                    },
                    "nodeContext": "pushReq.metric(metrics.responsePushed(metric,localAddress(),remoteAddress(),pushReq));\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 13,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 115,
                        "startLineNumber": 130,
                        "startColumnNumber": 35,
                        "endLineNumber": 132,
                        "endColumnNumber": 11
                    },
                    "nodeContext": "{\n  pushReq.metric(metrics.responsePushed(metric,localAddress(),remoteAddress(),pushReq));\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 14,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 140,
                        "startLineNumber": 130,
                        "startColumnNumber": 10,
                        "endLineNumber": 132,
                        "endColumnNumber": 11
                    },
                    "nodeContext": "if (metrics.isEnabled()) {\n  pushReq.metric(metrics.responsePushed(metric,localAddress(),remoteAddress(),pushReq));\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 18,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
                    "nodePosition": {
                        "charLength": 847,
                        "startLineNumber": 122,
                        "startColumnNumber": 36,
                        "endLineNumber": 135,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  String rawMethod=headers.method().toString();\n  HttpMethod method=HttpUtils.toVertxMethod(rawMethod);\n  String uri=headers.path().toString();\n  String host=headers.authority() != null ? headers.authority().toString() : null;\n  MultiMap headersMap=new Http2HeadersAdaptor(headers);\n  Http2Stream promisedStream=handler.connection().stream(promisedStreamId);\n  HttpClientRequestPushPromise pushReq=new HttpClientRequestPushPromise(this,promisedStream,http2Pool.client,method,rawMethod,uri,host,headersMap);\n  if (metrics.isEnabled()) {\n    pushReq.metric(metrics.responsePushed(metric,localAddress(),remoteAddress(),pushReq));\n  }\n  streams.put(promisedStreamId,pushReq.getStream());\n  pushHandler.handle(pushReq);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 116,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 853,
                        "startLineNumber": 122,
                        "startColumnNumber": 30,
                        "endLineNumber": 135,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "() -> {\n  String rawMethod=headers.method().toString();\n  HttpMethod method=HttpUtils.toVertxMethod(rawMethod);\n  String uri=headers.path().toString();\n  String host=headers.authority() != null ? headers.authority().toString() : null;\n  MultiMap headersMap=new Http2HeadersAdaptor(headers);\n  Http2Stream promisedStream=handler.connection().stream(promisedStreamId);\n  HttpClientRequestPushPromise pushReq=new HttpClientRequestPushPromise(this,promisedStream,http2Pool.client,method,rawMethod,uri,host,headersMap);\n  if (metrics.isEnabled()) {\n    pushReq.metric(metrics.responsePushed(metric,localAddress(),remoteAddress(),pushReq));\n  }\n  streams.put(promisedStreamId,pushReq.getStream());\n  pushHandler.handle(pushReq);\n}\n",
                    "nodeType": "LambdaExpression",
                    "astNodeNumber": 117,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 89,
                    "startLineNumber": 131,
                    "startColumnNumber": 12,
                    "endLineNumber": 131,
                    "endColumnNumber": 101
                },
                "nodeContext": "pushReq.metric(metrics.responsePushed(metric,localAddress(),remoteAddress(),pushReq));\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 13,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "io.vertx.core.http.impl.HttpClientRequestPushPromise"
        },
        {
            "nodeContext": "pushReq",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 131,
                "startColumnNumber": 91,
                "endLineNumber": 131,
                "endColumnNumber": 98
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 72,
                        "startLineNumber": 131,
                        "startColumnNumber": 27,
                        "endLineNumber": 131,
                        "endColumnNumber": 99
                    },
                    "nodeContext": "metrics.responsePushed(metric,localAddress(),remoteAddress(),pushReq)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 9,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 88,
                        "startLineNumber": 131,
                        "startColumnNumber": 12,
                        "endLineNumber": 131,
                        "endColumnNumber": 100
                    },
                    "nodeContext": "pushReq.metric(metrics.responsePushed(metric,localAddress(),remoteAddress(),pushReq))",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 12,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 89,
                        "startLineNumber": 131,
                        "startColumnNumber": 12,
                        "endLineNumber": 131,
                        "endColumnNumber": 101
                    },
                    "nodeContext": "pushReq.metric(metrics.responsePushed(metric,localAddress(),remoteAddress(),pushReq));\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 13,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 115,
                        "startLineNumber": 130,
                        "startColumnNumber": 35,
                        "endLineNumber": 132,
                        "endColumnNumber": 11
                    },
                    "nodeContext": "{\n  pushReq.metric(metrics.responsePushed(metric,localAddress(),remoteAddress(),pushReq));\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 14,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 140,
                        "startLineNumber": 130,
                        "startColumnNumber": 10,
                        "endLineNumber": 132,
                        "endColumnNumber": 11
                    },
                    "nodeContext": "if (metrics.isEnabled()) {\n  pushReq.metric(metrics.responsePushed(metric,localAddress(),remoteAddress(),pushReq));\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 18,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
                    "nodePosition": {
                        "charLength": 847,
                        "startLineNumber": 122,
                        "startColumnNumber": 36,
                        "endLineNumber": 135,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  String rawMethod=headers.method().toString();\n  HttpMethod method=HttpUtils.toVertxMethod(rawMethod);\n  String uri=headers.path().toString();\n  String host=headers.authority() != null ? headers.authority().toString() : null;\n  MultiMap headersMap=new Http2HeadersAdaptor(headers);\n  Http2Stream promisedStream=handler.connection().stream(promisedStreamId);\n  HttpClientRequestPushPromise pushReq=new HttpClientRequestPushPromise(this,promisedStream,http2Pool.client,method,rawMethod,uri,host,headersMap);\n  if (metrics.isEnabled()) {\n    pushReq.metric(metrics.responsePushed(metric,localAddress(),remoteAddress(),pushReq));\n  }\n  streams.put(promisedStreamId,pushReq.getStream());\n  pushHandler.handle(pushReq);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 116,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 853,
                        "startLineNumber": 122,
                        "startColumnNumber": 30,
                        "endLineNumber": 135,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "() -> {\n  String rawMethod=headers.method().toString();\n  HttpMethod method=HttpUtils.toVertxMethod(rawMethod);\n  String uri=headers.path().toString();\n  String host=headers.authority() != null ? headers.authority().toString() : null;\n  MultiMap headersMap=new Http2HeadersAdaptor(headers);\n  Http2Stream promisedStream=handler.connection().stream(promisedStreamId);\n  HttpClientRequestPushPromise pushReq=new HttpClientRequestPushPromise(this,promisedStream,http2Pool.client,method,rawMethod,uri,host,headersMap);\n  if (metrics.isEnabled()) {\n    pushReq.metric(metrics.responsePushed(metric,localAddress(),remoteAddress(),pushReq));\n  }\n  streams.put(promisedStreamId,pushReq.getStream());\n  pushHandler.handle(pushReq);\n}\n",
                    "nodeType": "LambdaExpression",
                    "astNodeNumber": 117,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 89,
                    "startLineNumber": 131,
                    "startColumnNumber": 12,
                    "endLineNumber": 131,
                    "endColumnNumber": 101
                },
                "nodeContext": "pushReq.metric(metrics.responsePushed(metric,localAddress(),remoteAddress(),pushReq));\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 13,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "io.vertx.core.http.impl.HttpClientRequestPushPromise"
        },
        {
            "nodeContext": "pushReq",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 133,
                "startColumnNumber": 40,
                "endLineNumber": 133,
                "endColumnNumber": 47
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 19,
                        "startLineNumber": 133,
                        "startColumnNumber": 40,
                        "endLineNumber": 133,
                        "endColumnNumber": 59
                    },
                    "nodeContext": "pushReq.getStream()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 50,
                        "startLineNumber": 133,
                        "startColumnNumber": 10,
                        "endLineNumber": 133,
                        "endColumnNumber": 60
                    },
                    "nodeContext": "streams.put(promisedStreamId,pushReq.getStream())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 51,
                        "startLineNumber": 133,
                        "startColumnNumber": 10,
                        "endLineNumber": 133,
                        "endColumnNumber": 61
                    },
                    "nodeContext": "streams.put(promisedStreamId,pushReq.getStream());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
                    "nodePosition": {
                        "charLength": 847,
                        "startLineNumber": 122,
                        "startColumnNumber": 36,
                        "endLineNumber": 135,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  String rawMethod=headers.method().toString();\n  HttpMethod method=HttpUtils.toVertxMethod(rawMethod);\n  String uri=headers.path().toString();\n  String host=headers.authority() != null ? headers.authority().toString() : null;\n  MultiMap headersMap=new Http2HeadersAdaptor(headers);\n  Http2Stream promisedStream=handler.connection().stream(promisedStreamId);\n  HttpClientRequestPushPromise pushReq=new HttpClientRequestPushPromise(this,promisedStream,http2Pool.client,method,rawMethod,uri,host,headersMap);\n  if (metrics.isEnabled()) {\n    pushReq.metric(metrics.responsePushed(metric,localAddress(),remoteAddress(),pushReq));\n  }\n  streams.put(promisedStreamId,pushReq.getStream());\n  pushHandler.handle(pushReq);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 116,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 853,
                        "startLineNumber": 122,
                        "startColumnNumber": 30,
                        "endLineNumber": 135,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "() -> {\n  String rawMethod=headers.method().toString();\n  HttpMethod method=HttpUtils.toVertxMethod(rawMethod);\n  String uri=headers.path().toString();\n  String host=headers.authority() != null ? headers.authority().toString() : null;\n  MultiMap headersMap=new Http2HeadersAdaptor(headers);\n  Http2Stream promisedStream=handler.connection().stream(promisedStreamId);\n  HttpClientRequestPushPromise pushReq=new HttpClientRequestPushPromise(this,promisedStream,http2Pool.client,method,rawMethod,uri,host,headersMap);\n  if (metrics.isEnabled()) {\n    pushReq.metric(metrics.responsePushed(metric,localAddress(),remoteAddress(),pushReq));\n  }\n  streams.put(promisedStreamId,pushReq.getStream());\n  pushHandler.handle(pushReq);\n}\n",
                    "nodeType": "LambdaExpression",
                    "astNodeNumber": 117,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 51,
                    "startLineNumber": 133,
                    "startColumnNumber": 10,
                    "endLineNumber": 133,
                    "endColumnNumber": 61
                },
                "nodeContext": "streams.put(promisedStreamId,pushReq.getStream());\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 8,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "io.vertx.core.http.impl.HttpClientRequestPushPromise"
        },
        {
            "nodeContext": "pushReq",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 134,
                "startColumnNumber": 29,
                "endLineNumber": 134,
                "endColumnNumber": 36
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 27,
                        "startLineNumber": 134,
                        "startColumnNumber": 10,
                        "endLineNumber": 134,
                        "endColumnNumber": 37
                    },
                    "nodeContext": "pushHandler.handle(pushReq)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 28,
                        "startLineNumber": 134,
                        "startColumnNumber": 10,
                        "endLineNumber": 134,
                        "endColumnNumber": 38
                    },
                    "nodeContext": "pushHandler.handle(pushReq);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
                    "nodePosition": {
                        "charLength": 847,
                        "startLineNumber": 122,
                        "startColumnNumber": 36,
                        "endLineNumber": 135,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  String rawMethod=headers.method().toString();\n  HttpMethod method=HttpUtils.toVertxMethod(rawMethod);\n  String uri=headers.path().toString();\n  String host=headers.authority() != null ? headers.authority().toString() : null;\n  MultiMap headersMap=new Http2HeadersAdaptor(headers);\n  Http2Stream promisedStream=handler.connection().stream(promisedStreamId);\n  HttpClientRequestPushPromise pushReq=new HttpClientRequestPushPromise(this,promisedStream,http2Pool.client,method,rawMethod,uri,host,headersMap);\n  if (metrics.isEnabled()) {\n    pushReq.metric(metrics.responsePushed(metric,localAddress(),remoteAddress(),pushReq));\n  }\n  streams.put(promisedStreamId,pushReq.getStream());\n  pushHandler.handle(pushReq);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 116,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 853,
                        "startLineNumber": 122,
                        "startColumnNumber": 30,
                        "endLineNumber": 135,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "() -> {\n  String rawMethod=headers.method().toString();\n  HttpMethod method=HttpUtils.toVertxMethod(rawMethod);\n  String uri=headers.path().toString();\n  String host=headers.authority() != null ? headers.authority().toString() : null;\n  MultiMap headersMap=new Http2HeadersAdaptor(headers);\n  Http2Stream promisedStream=handler.connection().stream(promisedStreamId);\n  HttpClientRequestPushPromise pushReq=new HttpClientRequestPushPromise(this,promisedStream,http2Pool.client,method,rawMethod,uri,host,headersMap);\n  if (metrics.isEnabled()) {\n    pushReq.metric(metrics.responsePushed(metric,localAddress(),remoteAddress(),pushReq));\n  }\n  streams.put(promisedStreamId,pushReq.getStream());\n  pushHandler.handle(pushReq);\n}\n",
                    "nodeType": "LambdaExpression",
                    "astNodeNumber": 117,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 28,
                    "startLineNumber": 134,
                    "startColumnNumber": 10,
                    "endLineNumber": 134,
                    "endColumnNumber": 38
                },
                "nodeContext": "pushHandler.handle(pushReq);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 5,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "io.vertx.core.http.impl.HttpClientRequestPushPromise"
        }
    ],
    "positionList": [
        {
            "charLength": 7,
            "startLineNumber": 131,
            "startColumnNumber": 12,
            "endLineNumber": 131,
            "endColumnNumber": 19
        },
        {
            "charLength": 7,
            "startLineNumber": 131,
            "startColumnNumber": 91,
            "endLineNumber": 131,
            "endColumnNumber": 98
        },
        {
            "charLength": 7,
            "startLineNumber": 133,
            "startColumnNumber": 40,
            "endLineNumber": 133,
            "endColumnNumber": 47
        },
        {
            "charLength": 7,
            "startLineNumber": 134,
            "startColumnNumber": 29,
            "endLineNumber": 134,
            "endColumnNumber": 36
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 0
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 4
        },
        {
            "firstKey": 0,
            "secondKey": 3,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 1
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 3,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 3,
            "secondKey": 0,
            "layout": 2
        },
        {
            "firstKey": 3,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 3,
            "secondKey": 2,
            "layout": 2
        }
    ]
}