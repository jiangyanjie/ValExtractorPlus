{
    "id": 665,
    "expression": "builder.observer",
    "projectName": "jackrabbit-oak",
    "commitID": "127ecd01f2046e37a98a70970e08364da1df5b9b",
    "filePath": "oak-segment-tar/src/main/java/org/apache/jackrabbit/oak/segment/standby/server/StandbyServer.java",
    "occurrences": 2,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "builder.observer",
            "nodeType": "QualifiedName",
            "nodePosition": {
                "charLength": 16,
                "startLineNumber": 157,
                "startColumnNumber": 53,
                "endLineNumber": 157,
                "endColumnNumber": 69
            },
            "astNodeNumber": 3,
            "astHeight": 2,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 44,
                        "startLineNumber": 157,
                        "startColumnNumber": 26,
                        "endLineNumber": 157,
                        "endColumnNumber": 70
                    },
                    "nodeContext": "new RequestObserverHandler(builder.observer)",
                    "nodeType": "ClassInstanceCreation",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 55,
                        "startLineNumber": 157,
                        "startColumnNumber": 16,
                        "endLineNumber": 157,
                        "endColumnNumber": 71
                    },
                    "nodeContext": "p.addLast(new RequestObserverHandler(builder.observer))",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 56,
                        "startLineNumber": 157,
                        "startColumnNumber": 16,
                        "endLineNumber": 157,
                        "endColumnNumber": 72
                    },
                    "nodeContext": "p.addLast(new RequestObserverHandler(builder.observer));\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 10,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1383,
                        "startLineNumber": 142,
                        "startColumnNumber": 71,
                        "endLineNumber": 172,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  ChannelPipeline p=ch.pipeline();\n  p.addLast(new ClientFilterHandler(new ClientIpFilter(builder.allowedClientIPRanges)));\n  if (sslContext != null) {\n    p.addLast(\"ssl\",sslContext.newHandler(ch.alloc()));\n  }\n  p.addLast(new LineBasedFrameDecoder(8192));\n  p.addLast(new StringDecoder(CharsetUtil.UTF_8));\n  p.addLast(new RequestDecoder());\n  p.addLast(new StateHandler(builder.stateConsumer));\n  p.addLast(new RequestObserverHandler(builder.observer));\n  p.addLast(new SnappyFramedEncoder());\n  p.addLast(new GetHeadResponseEncoder());\n  p.addLast(new GetSegmentResponseEncoder());\n  p.addLast(new GetBlobResponseEncoder());\n  p.addLast(new ResponseObserverHandler(builder.observer));\n  p.addLast(new GetHeadRequestHandler(new DefaultStandbyHeadReader(builder.storeProvider.provideStore())));\n  p.addLast(new GetSegmentRequestHandler(new DefaultStandbySegmentReader(builder.storeProvider.provideStore())));\n  p.addLast(new GetBlobRequestHandler(new DefaultStandbyBlobReader(builder.storeProvider.provideStore())));\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 166,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1464,
                        "startLineNumber": 141,
                        "startColumnNumber": 12,
                        "endLineNumber": 172,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "@Override public void initChannel(SocketChannel ch) throws Exception {\n  ChannelPipeline p=ch.pipeline();\n  p.addLast(new ClientFilterHandler(new ClientIpFilter(builder.allowedClientIPRanges)));\n  if (sslContext != null) {\n    p.addLast(\"ssl\",sslContext.newHandler(ch.alloc()));\n  }\n  p.addLast(new LineBasedFrameDecoder(8192));\n  p.addLast(new StringDecoder(CharsetUtil.UTF_8));\n  p.addLast(new RequestDecoder());\n  p.addLast(new StateHandler(builder.stateConsumer));\n  p.addLast(new RequestObserverHandler(builder.observer));\n  p.addLast(new SnappyFramedEncoder());\n  p.addLast(new GetHeadResponseEncoder());\n  p.addLast(new GetSegmentResponseEncoder());\n  p.addLast(new GetBlobResponseEncoder());\n  p.addLast(new ResponseObserverHandler(builder.observer));\n  p.addLast(new GetHeadRequestHandler(new DefaultStandbyHeadReader(builder.storeProvider.provideStore())));\n  p.addLast(new GetSegmentRequestHandler(new DefaultStandbySegmentReader(builder.storeProvider.provideStore())));\n  p.addLast(new GetBlobRequestHandler(new DefaultStandbyBlobReader(builder.storeProvider.provideStore())));\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 178,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 56,
                    "startLineNumber": 157,
                    "startColumnNumber": 16,
                    "endLineNumber": 157,
                    "endColumnNumber": 72
                },
                "nodeContext": "p.addLast(new RequestObserverHandler(builder.observer));\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 10,
                "astHeight": 5
            },
            "tokenLength": 2,
            "type": "org.apache.jackrabbit.oak.segment.standby.store.CommunicationObserver"
        },
        {
            "nodeContext": "builder.observer",
            "nodeType": "QualifiedName",
            "nodePosition": {
                "charLength": 16,
                "startLineNumber": 165,
                "startColumnNumber": 54,
                "endLineNumber": 165,
                "endColumnNumber": 70
            },
            "astNodeNumber": 3,
            "astHeight": 2,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 45,
                        "startLineNumber": 165,
                        "startColumnNumber": 26,
                        "endLineNumber": 165,
                        "endColumnNumber": 71
                    },
                    "nodeContext": "new ResponseObserverHandler(builder.observer)",
                    "nodeType": "ClassInstanceCreation",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 56,
                        "startLineNumber": 165,
                        "startColumnNumber": 16,
                        "endLineNumber": 165,
                        "endColumnNumber": 72
                    },
                    "nodeContext": "p.addLast(new ResponseObserverHandler(builder.observer))",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 57,
                        "startLineNumber": 165,
                        "startColumnNumber": 16,
                        "endLineNumber": 165,
                        "endColumnNumber": 73
                    },
                    "nodeContext": "p.addLast(new ResponseObserverHandler(builder.observer));\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 10,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1383,
                        "startLineNumber": 142,
                        "startColumnNumber": 71,
                        "endLineNumber": 172,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  ChannelPipeline p=ch.pipeline();\n  p.addLast(new ClientFilterHandler(new ClientIpFilter(builder.allowedClientIPRanges)));\n  if (sslContext != null) {\n    p.addLast(\"ssl\",sslContext.newHandler(ch.alloc()));\n  }\n  p.addLast(new LineBasedFrameDecoder(8192));\n  p.addLast(new StringDecoder(CharsetUtil.UTF_8));\n  p.addLast(new RequestDecoder());\n  p.addLast(new StateHandler(builder.stateConsumer));\n  p.addLast(new RequestObserverHandler(builder.observer));\n  p.addLast(new SnappyFramedEncoder());\n  p.addLast(new GetHeadResponseEncoder());\n  p.addLast(new GetSegmentResponseEncoder());\n  p.addLast(new GetBlobResponseEncoder());\n  p.addLast(new ResponseObserverHandler(builder.observer));\n  p.addLast(new GetHeadRequestHandler(new DefaultStandbyHeadReader(builder.storeProvider.provideStore())));\n  p.addLast(new GetSegmentRequestHandler(new DefaultStandbySegmentReader(builder.storeProvider.provideStore())));\n  p.addLast(new GetBlobRequestHandler(new DefaultStandbyBlobReader(builder.storeProvider.provideStore())));\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 166,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1464,
                        "startLineNumber": 141,
                        "startColumnNumber": 12,
                        "endLineNumber": 172,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "@Override public void initChannel(SocketChannel ch) throws Exception {\n  ChannelPipeline p=ch.pipeline();\n  p.addLast(new ClientFilterHandler(new ClientIpFilter(builder.allowedClientIPRanges)));\n  if (sslContext != null) {\n    p.addLast(\"ssl\",sslContext.newHandler(ch.alloc()));\n  }\n  p.addLast(new LineBasedFrameDecoder(8192));\n  p.addLast(new StringDecoder(CharsetUtil.UTF_8));\n  p.addLast(new RequestDecoder());\n  p.addLast(new StateHandler(builder.stateConsumer));\n  p.addLast(new RequestObserverHandler(builder.observer));\n  p.addLast(new SnappyFramedEncoder());\n  p.addLast(new GetHeadResponseEncoder());\n  p.addLast(new GetSegmentResponseEncoder());\n  p.addLast(new GetBlobResponseEncoder());\n  p.addLast(new ResponseObserverHandler(builder.observer));\n  p.addLast(new GetHeadRequestHandler(new DefaultStandbyHeadReader(builder.storeProvider.provideStore())));\n  p.addLast(new GetSegmentRequestHandler(new DefaultStandbySegmentReader(builder.storeProvider.provideStore())));\n  p.addLast(new GetBlobRequestHandler(new DefaultStandbyBlobReader(builder.storeProvider.provideStore())));\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 178,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 57,
                    "startLineNumber": 165,
                    "startColumnNumber": 16,
                    "endLineNumber": 165,
                    "endColumnNumber": 73
                },
                "nodeContext": "p.addLast(new ResponseObserverHandler(builder.observer));\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 10,
                "astHeight": 5
            },
            "tokenLength": 2,
            "type": "org.apache.jackrabbit.oak.segment.standby.store.CommunicationObserver"
        }
    ],
    "positionList": [
        {
            "charLength": 16,
            "startLineNumber": 157,
            "startColumnNumber": 53,
            "endLineNumber": 157,
            "endColumnNumber": 69
        },
        {
            "charLength": 16,
            "startLineNumber": 165,
            "startColumnNumber": 54,
            "endLineNumber": 165,
            "endColumnNumber": 70
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 3
        }
    ]
}