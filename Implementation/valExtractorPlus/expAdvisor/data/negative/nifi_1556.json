{
    "id": 1556,
    "expression": "ResourceFactory.getDataResource(inputPort.getResource())",
    "projectName": "nifi",
    "commitID": "fca59ff9d0226ecc4d62d078291413d2fbdb1781",
    "filePath": "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/controller/ControllerFacade.java",
    "occurrences": 1,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "ResourceFactory.getDataResource(inputPort.getResource())",
            "nodeType": "MethodInvocation",
            "nodePosition": {
                "charLength": 56,
                "startLineNumber": 792,
                "startColumnNumber": 26,
                "endLineNumber": 792,
                "endColumnNumber": 82
            },
            "astNodeNumber": 6,
            "astHeight": 3,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 71,
                        "startLineNumber": 792,
                        "startColumnNumber": 12,
                        "endLineNumber": 792,
                        "endColumnNumber": 83
                    },
                    "nodeContext": "resources.add(ResourceFactory.getDataResource(inputPort.getResource()))",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 72,
                        "startLineNumber": 792,
                        "startColumnNumber": 12,
                        "endLineNumber": 792,
                        "endColumnNumber": 84
                    },
                    "nodeContext": "resources.add(ResourceFactory.getDataResource(inputPort.getResource()));\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 10,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 233,
                        "startLineNumber": 790,
                        "startColumnNumber": 62,
                        "endLineNumber": 793,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  resources.add(ResourceFactory.getComponentResource(ResourceType.InputPort,inputPort.getIdentifier(),inputPort.getName()));\n  resources.add(ResourceFactory.getDataResource(inputPort.getResource()));\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 27,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 287,
                        "startLineNumber": 790,
                        "startColumnNumber": 8,
                        "endLineNumber": 793,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (final Port inputPort : root.findAllInputPorts()) {\n  resources.add(ResourceFactory.getComponentResource(ResourceType.InputPort,inputPort.getIdentifier(),inputPort.getName()));\n  resources.add(ResourceFactory.getDataResource(inputPort.getResource()));\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 36,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 3536,
                        "startLineNumber": 755,
                        "startColumnNumber": 41,
                        "endLineNumber": 820,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final List<Resource> resources=new ArrayList<>();\n  resources.add(ResourceFactory.getSystemResource());\n  resources.add(ResourceFactory.getControllerResource());\n  resources.add(ResourceFactory.getFlowResource());\n  resources.add(ResourceFactory.getProvenanceResource());\n  resources.add(ResourceFactory.getProxyResource());\n  resources.add(ResourceFactory.getResourceResource());\n  final ProcessGroup root=flowController.getGroup(flowController.getRootGroupId());\n  for (  final ProcessorNode processor : root.findAllProcessors()) {\n    resources.add(ResourceFactory.getComponentResource(ResourceType.Processor,processor.getIdentifier(),processor.getName()));\n    resources.add(ResourceFactory.getDataResource(processor.getResource()));\n  }\n  for (  final Label label : root.findAllLabels()) {\n    resources.add(ResourceFactory.getComponentResource(ResourceType.Label,label.getIdentifier(),label.getValue()));\n  }\n  for (  final ProcessGroup processGroup : root.findAllProcessGroups()) {\n    resources.add(ResourceFactory.getComponentResource(ResourceType.ProcessGroup,processGroup.getIdentifier(),processGroup.getName()));\n    resources.add(ResourceFactory.getDataResource(processGroup.getResource()));\n  }\n  for (  final RemoteProcessGroup remoteProcessGroup : root.findAllRemoteProcessGroups()) {\n    resources.add(ResourceFactory.getComponentResource(ResourceType.RemoteProcessGroup,remoteProcessGroup.getIdentifier(),remoteProcessGroup.getName()));\n    resources.add(ResourceFactory.getDataResource(remoteProcessGroup.getResource()));\n  }\n  for (  final Port inputPort : root.findAllInputPorts()) {\n    resources.add(ResourceFactory.getComponentResource(ResourceType.InputPort,inputPort.getIdentifier(),inputPort.getName()));\n    resources.add(ResourceFactory.getDataResource(inputPort.getResource()));\n  }\n  for (  final Port outputPort : root.findAllOutputPorts()) {\n    resources.add(ResourceFactory.getComponentResource(ResourceType.OutputPort,outputPort.getIdentifier(),outputPort.getName()));\n    resources.add(ResourceFactory.getDataResource(outputPort.getResource()));\n  }\n  for (  final ControllerServiceNode controllerService : flowController.getAllControllerServices()) {\n    resources.add(ResourceFactory.getComponentResource(ResourceType.ControllerService,controllerService.getIdentifier(),controllerService.getName()));\n  }\n  for (  final ReportingTaskNode reportingTask : flowController.getAllReportingTasks()) {\n    resources.add(ResourceFactory.getComponentResource(ResourceType.ReportingTask,reportingTask.getIdentifier(),reportingTask.getName()));\n  }\n  for (  final Template template : root.findAllTemplates()) {\n    final TemplateDTO details=template.getDetails();\n    resources.add(ResourceFactory.getComponentResource(ResourceType.Template,details.getId(),details.getName()));\n  }\n  return resources;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 363,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 3573,
                        "startLineNumber": 755,
                        "startColumnNumber": 4,
                        "endLineNumber": 820,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "public List<Resource> getResources(){\n  final List<Resource> resources=new ArrayList<>();\n  resources.add(ResourceFactory.getSystemResource());\n  resources.add(ResourceFactory.getControllerResource());\n  resources.add(ResourceFactory.getFlowResource());\n  resources.add(ResourceFactory.getProvenanceResource());\n  resources.add(ResourceFactory.getProxyResource());\n  resources.add(ResourceFactory.getResourceResource());\n  final ProcessGroup root=flowController.getGroup(flowController.getRootGroupId());\n  for (  final ProcessorNode processor : root.findAllProcessors()) {\n    resources.add(ResourceFactory.getComponentResource(ResourceType.Processor,processor.getIdentifier(),processor.getName()));\n    resources.add(ResourceFactory.getDataResource(processor.getResource()));\n  }\n  for (  final Label label : root.findAllLabels()) {\n    resources.add(ResourceFactory.getComponentResource(ResourceType.Label,label.getIdentifier(),label.getValue()));\n  }\n  for (  final ProcessGroup processGroup : root.findAllProcessGroups()) {\n    resources.add(ResourceFactory.getComponentResource(ResourceType.ProcessGroup,processGroup.getIdentifier(),processGroup.getName()));\n    resources.add(ResourceFactory.getDataResource(processGroup.getResource()));\n  }\n  for (  final RemoteProcessGroup remoteProcessGroup : root.findAllRemoteProcessGroups()) {\n    resources.add(ResourceFactory.getComponentResource(ResourceType.RemoteProcessGroup,remoteProcessGroup.getIdentifier(),remoteProcessGroup.getName()));\n    resources.add(ResourceFactory.getDataResource(remoteProcessGroup.getResource()));\n  }\n  for (  final Port inputPort : root.findAllInputPorts()) {\n    resources.add(ResourceFactory.getComponentResource(ResourceType.InputPort,inputPort.getIdentifier(),inputPort.getName()));\n    resources.add(ResourceFactory.getDataResource(inputPort.getResource()));\n  }\n  for (  final Port outputPort : root.findAllOutputPorts()) {\n    resources.add(ResourceFactory.getComponentResource(ResourceType.OutputPort,outputPort.getIdentifier(),outputPort.getName()));\n    resources.add(ResourceFactory.getDataResource(outputPort.getResource()));\n  }\n  for (  final ControllerServiceNode controllerService : flowController.getAllControllerServices()) {\n    resources.add(ResourceFactory.getComponentResource(ResourceType.ControllerService,controllerService.getIdentifier(),controllerService.getName()));\n  }\n  for (  final ReportingTaskNode reportingTask : flowController.getAllReportingTasks()) {\n    resources.add(ResourceFactory.getComponentResource(ResourceType.ReportingTask,reportingTask.getIdentifier(),reportingTask.getName()));\n  }\n  for (  final Template template : root.findAllTemplates()) {\n    final TemplateDTO details=template.getDetails();\n    resources.add(ResourceFactory.getComponentResource(ResourceType.Template,details.getId(),details.getName()));\n  }\n  return resources;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 371,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 72,
                    "startLineNumber": 792,
                    "startColumnNumber": 12,
                    "endLineNumber": 792,
                    "endColumnNumber": 84
                },
                "nodeContext": "resources.add(ResourceFactory.getDataResource(inputPort.getResource()));\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 10,
                "astHeight": 5
            },
            "tokenLength": 4,
            "type": "org.apache.nifi.authorization.Resource"
        }
    ],
    "positionList": [
        {
            "charLength": 56,
            "startLineNumber": 792,
            "startColumnNumber": 26,
            "endLineNumber": 792,
            "endColumnNumber": 82
        }
    ],
    "layoutRelationDataList": []
}