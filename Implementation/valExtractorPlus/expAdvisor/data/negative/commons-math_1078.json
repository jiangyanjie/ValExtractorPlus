{
    "id": 1078,
    "expression": "ya",
    "projectName": "commons-math",
    "commitID": "6ab8b148472782919ca5a1c7a51e5f477e40d4fc",
    "filePath": "src/main/java/org/apache/commons/math3/util/FastMath.java",
    "occurrences": 10,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "ya",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 2,
                "startLineNumber": 2471,
                "startColumnNumber": 30,
                "endLineNumber": 2471,
                "endColumnNumber": 32
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 12,
                        "startLineNumber": 2471,
                        "startColumnNumber": 20,
                        "endLineNumber": 2471,
                        "endColumnNumber": 32
                    },
                    "nodeContext": "xb + xa - ya",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 17,
                        "startLineNumber": 2471,
                        "startColumnNumber": 15,
                        "endLineNumber": 2471,
                        "endColumnNumber": 32
                    },
                    "nodeContext": "yb=xb + xa - ya",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 25,
                        "startLineNumber": 2471,
                        "startColumnNumber": 8,
                        "endLineNumber": 2471,
                        "endColumnNumber": 33
                    },
                    "nodeContext": "double yb=xb + xa - ya;\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 9,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 4283,
                        "startLineNumber": 2434,
                        "startColumnNumber": 72,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 629,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 4685,
                        "startLineNumber": 2428,
                        "startColumnNumber": 4,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Internal helper function to compute arctangent.\n * @param xa number from which arctangent is requested\n * @param xb extra bits for x (may be 0.0)\n * @param leftPlane if true, result angle must be put in the left half plane\n * @return atan(xa + xb) (or angle shifted by {@code PI} if leftPlane is true)\n */\nprivate static double atan(double xa,double xb,boolean leftPlane){\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 644,
                    "astHeight": 17
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 25,
                    "startLineNumber": 2471,
                    "startColumnNumber": 8,
                    "endLineNumber": 2471,
                    "endColumnNumber": 33
                },
                "nodeContext": "double yb=xb + xa - ya;\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 9,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "double"
        },
        {
            "nodeContext": "ya",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 2,
                "startLineNumber": 2472,
                "startColumnNumber": 13,
                "endLineNumber": 2472,
                "endColumnNumber": 15
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 7,
                        "startLineNumber": 2472,
                        "startColumnNumber": 8,
                        "endLineNumber": 2472,
                        "endColumnNumber": 15
                    },
                    "nodeContext": "xa=ya",
                    "nodeType": "Assignment",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 8,
                        "startLineNumber": 2472,
                        "startColumnNumber": 8,
                        "endLineNumber": 2472,
                        "endColumnNumber": 16
                    },
                    "nodeContext": "xa=ya;\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 4,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 4283,
                        "startLineNumber": 2434,
                        "startColumnNumber": 72,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 629,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 4685,
                        "startLineNumber": 2428,
                        "startColumnNumber": 4,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Internal helper function to compute arctangent.\n * @param xa number from which arctangent is requested\n * @param xb extra bits for x (may be 0.0)\n * @param leftPlane if true, result angle must be put in the left half plane\n * @return atan(xa + xb) (or angle shifted by {@code PI} if leftPlane is true)\n */\nprivate static double atan(double xa,double xb,boolean leftPlane){\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 644,
                    "astHeight": 17
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 8,
                    "startLineNumber": 2472,
                    "startColumnNumber": 8,
                    "endLineNumber": 2472,
                    "endColumnNumber": 16
                },
                "nodeContext": "xa=ya;\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 4,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "double"
        },
        {
            "nodeContext": "ya",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 2,
                "startLineNumber": 2495,
                "startColumnNumber": 19,
                "endLineNumber": 2495,
                "endColumnNumber": 21
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 17,
                        "startLineNumber": 2495,
                        "startColumnNumber": 19,
                        "endLineNumber": 2495,
                        "endColumnNumber": 36
                    },
                    "nodeContext": "ya * HEX_40000000",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 24,
                        "startLineNumber": 2495,
                        "startColumnNumber": 12,
                        "endLineNumber": 2495,
                        "endColumnNumber": 36
                    },
                    "nodeContext": "temp=ya * HEX_40000000",
                    "nodeType": "Assignment",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 25,
                        "startLineNumber": 2495,
                        "startColumnNumber": 12,
                        "endLineNumber": 2495,
                        "endColumnNumber": 37
                    },
                    "nodeContext": "temp=ya * HEX_40000000;\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 6,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 850,
                        "startLineNumber": 2483,
                        "startColumnNumber": 15,
                        "endLineNumber": 2508,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  double temp2=xa * TANGENT_TABLE_A[idx];\n  double za=1d + temp2;\n  double zb=-(za - 1d - temp2);\n  temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n  temp=za + temp2;\n  zb+=-(temp - za - temp2);\n  za=temp;\n  zb+=xb * TANGENT_TABLE_B[idx];\n  ya=epsA / za;\n  temp=ya * HEX_40000000;\n  final double yaa=(ya + temp) - temp;\n  final double yab=ya - yaa;\n  temp=za * HEX_40000000;\n  final double zaa=(za + temp) - temp;\n  final double zab=za - zaa;\n  yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n  yb+=-epsA * zb / za / za;\n  yb+=epsB / za;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 164,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1355,
                        "startLineNumber": 2476,
                        "startColumnNumber": 8,
                        "endLineNumber": 2508,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (idx == 0) {\n  final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n  ya=epsA * denom;\n  yb=epsB * denom;\n}\n else {\n  double temp2=xa * TANGENT_TABLE_A[idx];\n  double za=1d + temp2;\n  double zb=-(za - 1d - temp2);\n  temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n  temp=za + temp2;\n  zb+=-(temp - za - temp2);\n  za=temp;\n  zb+=xb * TANGENT_TABLE_B[idx];\n  ya=epsA / za;\n  temp=ya * HEX_40000000;\n  final double yaa=(ya + temp) - temp;\n  final double yab=ya - yaa;\n  temp=za * HEX_40000000;\n  final double zaa=(za + temp) - temp;\n  final double zab=za - zaa;\n  yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n  yb+=-epsA * zb / za / za;\n  yb+=epsB / za;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 204,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 4283,
                        "startLineNumber": 2434,
                        "startColumnNumber": 72,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 629,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 4685,
                        "startLineNumber": 2428,
                        "startColumnNumber": 4,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Internal helper function to compute arctangent.\n * @param xa number from which arctangent is requested\n * @param xb extra bits for x (may be 0.0)\n * @param leftPlane if true, result angle must be put in the left half plane\n * @return atan(xa + xb) (or angle shifted by {@code PI} if leftPlane is true)\n */\nprivate static double atan(double xa,double xb,boolean leftPlane){\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 644,
                    "astHeight": 17
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 25,
                    "startLineNumber": 2495,
                    "startColumnNumber": 12,
                    "endLineNumber": 2495,
                    "endColumnNumber": 37
                },
                "nodeContext": "temp=ya * HEX_40000000;\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 6,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "double"
        },
        {
            "nodeContext": "ya",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 2,
                "startLineNumber": 2496,
                "startColumnNumber": 32,
                "endLineNumber": 2496,
                "endColumnNumber": 34
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
                    "nodePosition": {
                        "charLength": 9,
                        "startLineNumber": 2496,
                        "startColumnNumber": 32,
                        "endLineNumber": 2496,
                        "endColumnNumber": 41
                    },
                    "nodeContext": "ya + temp",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 11,
                        "startLineNumber": 2496,
                        "startColumnNumber": 31,
                        "endLineNumber": 2496,
                        "endColumnNumber": 42
                    },
                    "nodeContext": "(ya + temp)",
                    "nodeType": "ParenthesizedExpression",
                    "astNodeNumber": 4,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 18,
                        "startLineNumber": 2496,
                        "startColumnNumber": 31,
                        "endLineNumber": 2496,
                        "endColumnNumber": 49
                    },
                    "nodeContext": "(ya + temp) - temp",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 6,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 24,
                        "startLineNumber": 2496,
                        "startColumnNumber": 25,
                        "endLineNumber": 2496,
                        "endColumnNumber": 49
                    },
                    "nodeContext": "yaa=(ya + temp) - temp",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 8,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 38,
                        "startLineNumber": 2496,
                        "startColumnNumber": 12,
                        "endLineNumber": 2496,
                        "endColumnNumber": 50
                    },
                    "nodeContext": "final double yaa=(ya + temp) - temp;\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 11,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 850,
                        "startLineNumber": 2483,
                        "startColumnNumber": 15,
                        "endLineNumber": 2508,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  double temp2=xa * TANGENT_TABLE_A[idx];\n  double za=1d + temp2;\n  double zb=-(za - 1d - temp2);\n  temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n  temp=za + temp2;\n  zb+=-(temp - za - temp2);\n  za=temp;\n  zb+=xb * TANGENT_TABLE_B[idx];\n  ya=epsA / za;\n  temp=ya * HEX_40000000;\n  final double yaa=(ya + temp) - temp;\n  final double yab=ya - yaa;\n  temp=za * HEX_40000000;\n  final double zaa=(za + temp) - temp;\n  final double zab=za - zaa;\n  yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n  yb+=-epsA * zb / za / za;\n  yb+=epsB / za;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 164,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1355,
                        "startLineNumber": 2476,
                        "startColumnNumber": 8,
                        "endLineNumber": 2508,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (idx == 0) {\n  final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n  ya=epsA * denom;\n  yb=epsB * denom;\n}\n else {\n  double temp2=xa * TANGENT_TABLE_A[idx];\n  double za=1d + temp2;\n  double zb=-(za - 1d - temp2);\n  temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n  temp=za + temp2;\n  zb+=-(temp - za - temp2);\n  za=temp;\n  zb+=xb * TANGENT_TABLE_B[idx];\n  ya=epsA / za;\n  temp=ya * HEX_40000000;\n  final double yaa=(ya + temp) - temp;\n  final double yab=ya - yaa;\n  temp=za * HEX_40000000;\n  final double zaa=(za + temp) - temp;\n  final double zab=za - zaa;\n  yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n  yb+=-epsA * zb / za / za;\n  yb+=epsB / za;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 204,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 4283,
                        "startLineNumber": 2434,
                        "startColumnNumber": 72,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 629,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 4685,
                        "startLineNumber": 2428,
                        "startColumnNumber": 4,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Internal helper function to compute arctangent.\n * @param xa number from which arctangent is requested\n * @param xb extra bits for x (may be 0.0)\n * @param leftPlane if true, result angle must be put in the left half plane\n * @return atan(xa + xb) (or angle shifted by {@code PI} if leftPlane is true)\n */\nprivate static double atan(double xa,double xb,boolean leftPlane){\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 644,
                    "astHeight": 17
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 38,
                    "startLineNumber": 2496,
                    "startColumnNumber": 12,
                    "endLineNumber": 2496,
                    "endColumnNumber": 50
                },
                "nodeContext": "final double yaa=(ya + temp) - temp;\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 11,
                "astHeight": 6
            },
            "tokenLength": 1,
            "type": "double"
        },
        {
            "nodeContext": "ya",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 2,
                "startLineNumber": 2497,
                "startColumnNumber": 31,
                "endLineNumber": 2497,
                "endColumnNumber": 33
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 8,
                        "startLineNumber": 2497,
                        "startColumnNumber": 31,
                        "endLineNumber": 2497,
                        "endColumnNumber": 39
                    },
                    "nodeContext": "ya - yaa",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 14,
                        "startLineNumber": 2497,
                        "startColumnNumber": 25,
                        "endLineNumber": 2497,
                        "endColumnNumber": 39
                    },
                    "nodeContext": "yab=ya - yaa",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 28,
                        "startLineNumber": 2497,
                        "startColumnNumber": 12,
                        "endLineNumber": 2497,
                        "endColumnNumber": 40
                    },
                    "nodeContext": "final double yab=ya - yaa;\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 850,
                        "startLineNumber": 2483,
                        "startColumnNumber": 15,
                        "endLineNumber": 2508,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  double temp2=xa * TANGENT_TABLE_A[idx];\n  double za=1d + temp2;\n  double zb=-(za - 1d - temp2);\n  temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n  temp=za + temp2;\n  zb+=-(temp - za - temp2);\n  za=temp;\n  zb+=xb * TANGENT_TABLE_B[idx];\n  ya=epsA / za;\n  temp=ya * HEX_40000000;\n  final double yaa=(ya + temp) - temp;\n  final double yab=ya - yaa;\n  temp=za * HEX_40000000;\n  final double zaa=(za + temp) - temp;\n  final double zab=za - zaa;\n  yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n  yb+=-epsA * zb / za / za;\n  yb+=epsB / za;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 164,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1355,
                        "startLineNumber": 2476,
                        "startColumnNumber": 8,
                        "endLineNumber": 2508,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (idx == 0) {\n  final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n  ya=epsA * denom;\n  yb=epsB * denom;\n}\n else {\n  double temp2=xa * TANGENT_TABLE_A[idx];\n  double za=1d + temp2;\n  double zb=-(za - 1d - temp2);\n  temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n  temp=za + temp2;\n  zb+=-(temp - za - temp2);\n  za=temp;\n  zb+=xb * TANGENT_TABLE_B[idx];\n  ya=epsA / za;\n  temp=ya * HEX_40000000;\n  final double yaa=(ya + temp) - temp;\n  final double yab=ya - yaa;\n  temp=za * HEX_40000000;\n  final double zaa=(za + temp) - temp;\n  final double zab=za - zaa;\n  yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n  yb+=-epsA * zb / za / za;\n  yb+=epsB / za;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 204,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 4283,
                        "startLineNumber": 2434,
                        "startColumnNumber": 72,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 629,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 4685,
                        "startLineNumber": 2428,
                        "startColumnNumber": 4,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Internal helper function to compute arctangent.\n * @param xa number from which arctangent is requested\n * @param xb extra bits for x (may be 0.0)\n * @param leftPlane if true, result angle must be put in the left half plane\n * @return atan(xa + xb) (or angle shifted by {@code PI} if leftPlane is true)\n */\nprivate static double atan(double xa,double xb,boolean leftPlane){\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 644,
                    "astHeight": 17
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 28,
                    "startLineNumber": 2497,
                    "startColumnNumber": 12,
                    "endLineNumber": 2497,
                    "endColumnNumber": 40
                },
                "nodeContext": "final double yab=ya - yaa;\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 8,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "double"
        },
        {
            "nodeContext": "ya",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 2,
                "startLineNumber": 2511,
                "startColumnNumber": 15,
                "endLineNumber": 2511,
                "endColumnNumber": 17
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 9,
                        "startLineNumber": 2511,
                        "startColumnNumber": 8,
                        "endLineNumber": 2511,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "epsA=ya",
                    "nodeType": "Assignment",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 10,
                        "startLineNumber": 2511,
                        "startColumnNumber": 8,
                        "endLineNumber": 2511,
                        "endColumnNumber": 18
                    },
                    "nodeContext": "epsA=ya;\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 4,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 4283,
                        "startLineNumber": 2434,
                        "startColumnNumber": 72,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 629,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 4685,
                        "startLineNumber": 2428,
                        "startColumnNumber": 4,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Internal helper function to compute arctangent.\n * @param xa number from which arctangent is requested\n * @param xb extra bits for x (may be 0.0)\n * @param leftPlane if true, result angle must be put in the left half plane\n * @return atan(xa + xb) (or angle shifted by {@code PI} if leftPlane is true)\n */\nprivate static double atan(double xa,double xb,boolean leftPlane){\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 644,
                    "astHeight": 17
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 10,
                    "startLineNumber": 2511,
                    "startColumnNumber": 8,
                    "endLineNumber": 2511,
                    "endColumnNumber": 18
                },
                "nodeContext": "epsA=ya;\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 4,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "double"
        },
        {
            "nodeContext": "ya",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 2,
                "startLineNumber": 2537,
                "startColumnNumber": 15,
                "endLineNumber": 2537,
                "endColumnNumber": 17
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 7,
                        "startLineNumber": 2537,
                        "startColumnNumber": 15,
                        "endLineNumber": 2537,
                        "endColumnNumber": 22
                    },
                    "nodeContext": "ya + yb",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 14,
                        "startLineNumber": 2537,
                        "startColumnNumber": 8,
                        "endLineNumber": 2537,
                        "endColumnNumber": 22
                    },
                    "nodeContext": "temp=ya + yb",
                    "nodeType": "Assignment",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 15,
                        "startLineNumber": 2537,
                        "startColumnNumber": 8,
                        "endLineNumber": 2537,
                        "endColumnNumber": 23
                    },
                    "nodeContext": "temp=ya + yb;\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 6,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 4283,
                        "startLineNumber": 2434,
                        "startColumnNumber": 72,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 629,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 4685,
                        "startLineNumber": 2428,
                        "startColumnNumber": 4,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Internal helper function to compute arctangent.\n * @param xa number from which arctangent is requested\n * @param xb extra bits for x (may be 0.0)\n * @param leftPlane if true, result angle must be put in the left half plane\n * @return atan(xa + xb) (or angle shifted by {@code PI} if leftPlane is true)\n */\nprivate static double atan(double xa,double xb,boolean leftPlane){\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 644,
                    "astHeight": 17
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 15,
                    "startLineNumber": 2537,
                    "startColumnNumber": 8,
                    "endLineNumber": 2537,
                    "endColumnNumber": 23
                },
                "nodeContext": "temp=ya + yb;\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 6,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "double"
        },
        {
            "nodeContext": "ya",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 2,
                "startLineNumber": 2538,
                "startColumnNumber": 22,
                "endLineNumber": 2538,
                "endColumnNumber": 24
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
                    "nodePosition": {
                        "charLength": 14,
                        "startLineNumber": 2538,
                        "startColumnNumber": 15,
                        "endLineNumber": 2538,
                        "endColumnNumber": 29
                    },
                    "nodeContext": "temp - ya - yb",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
                    "nodePosition": {
                        "charLength": 16,
                        "startLineNumber": 2538,
                        "startColumnNumber": 14,
                        "endLineNumber": 2538,
                        "endColumnNumber": 30
                    },
                    "nodeContext": "(temp - ya - yb)",
                    "nodeType": "ParenthesizedExpression",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 17,
                        "startLineNumber": 2538,
                        "startColumnNumber": 13,
                        "endLineNumber": 2538,
                        "endColumnNumber": 30
                    },
                    "nodeContext": "-(temp - ya - yb)",
                    "nodeType": "PrefixExpression",
                    "astNodeNumber": 6,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 22,
                        "startLineNumber": 2538,
                        "startColumnNumber": 8,
                        "endLineNumber": 2538,
                        "endColumnNumber": 30
                    },
                    "nodeContext": "yb=-(temp - ya - yb)",
                    "nodeType": "Assignment",
                    "astNodeNumber": 8,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 23,
                        "startLineNumber": 2538,
                        "startColumnNumber": 8,
                        "endLineNumber": 2538,
                        "endColumnNumber": 31
                    },
                    "nodeContext": "yb=-(temp - ya - yb);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 9,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 4283,
                        "startLineNumber": 2434,
                        "startColumnNumber": 72,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 629,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 4685,
                        "startLineNumber": 2428,
                        "startColumnNumber": 4,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Internal helper function to compute arctangent.\n * @param xa number from which arctangent is requested\n * @param xb extra bits for x (may be 0.0)\n * @param leftPlane if true, result angle must be put in the left half plane\n * @return atan(xa + xb) (or angle shifted by {@code PI} if leftPlane is true)\n */\nprivate static double atan(double xa,double xb,boolean leftPlane){\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 644,
                    "astHeight": 17
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 23,
                    "startLineNumber": 2538,
                    "startColumnNumber": 8,
                    "endLineNumber": 2538,
                    "endColumnNumber": 31
                },
                "nodeContext": "yb=-(temp - ya - yb);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 9,
                "astHeight": 6
            },
            "tokenLength": 1,
            "type": "double"
        },
        {
            "nodeContext": "ya",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 2,
                "startLineNumber": 2545,
                "startColumnNumber": 35,
                "endLineNumber": 2545,
                "endColumnNumber": 37
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 17,
                        "startLineNumber": 2545,
                        "startColumnNumber": 20,
                        "endLineNumber": 2545,
                        "endColumnNumber": 37
                    },
                    "nodeContext": "EIGHTHS[idx] + ya",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 22,
                        "startLineNumber": 2545,
                        "startColumnNumber": 15,
                        "endLineNumber": 2545,
                        "endColumnNumber": 37
                    },
                    "nodeContext": "za=EIGHTHS[idx] + ya",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 30,
                        "startLineNumber": 2545,
                        "startColumnNumber": 8,
                        "endLineNumber": 2545,
                        "endColumnNumber": 38
                    },
                    "nodeContext": "double za=EIGHTHS[idx] + ya;\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 9,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 4283,
                        "startLineNumber": 2434,
                        "startColumnNumber": 72,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 629,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 4685,
                        "startLineNumber": 2428,
                        "startColumnNumber": 4,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Internal helper function to compute arctangent.\n * @param xa number from which arctangent is requested\n * @param xb extra bits for x (may be 0.0)\n * @param leftPlane if true, result angle must be put in the left half plane\n * @return atan(xa + xb) (or angle shifted by {@code PI} if leftPlane is true)\n */\nprivate static double atan(double xa,double xb,boolean leftPlane){\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 644,
                    "astHeight": 17
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 30,
                    "startLineNumber": 2545,
                    "startColumnNumber": 8,
                    "endLineNumber": 2545,
                    "endColumnNumber": 38
                },
                "nodeContext": "double za=EIGHTHS[idx] + ya;\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 9,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "double"
        },
        {
            "nodeContext": "ya",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 2,
                "startLineNumber": 2546,
                "startColumnNumber": 42,
                "endLineNumber": 2546,
                "endColumnNumber": 44
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
                    "nodePosition": {
                        "charLength": 22,
                        "startLineNumber": 2546,
                        "startColumnNumber": 22,
                        "endLineNumber": 2546,
                        "endColumnNumber": 44
                    },
                    "nodeContext": "za - EIGHTHS[idx] - ya",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
                    "nodePosition": {
                        "charLength": 24,
                        "startLineNumber": 2546,
                        "startColumnNumber": 21,
                        "endLineNumber": 2546,
                        "endColumnNumber": 45
                    },
                    "nodeContext": "(za - EIGHTHS[idx] - ya)",
                    "nodeType": "ParenthesizedExpression",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 25,
                        "startLineNumber": 2546,
                        "startColumnNumber": 20,
                        "endLineNumber": 2546,
                        "endColumnNumber": 45
                    },
                    "nodeContext": "-(za - EIGHTHS[idx] - ya)",
                    "nodeType": "PrefixExpression",
                    "astNodeNumber": 8,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 30,
                        "startLineNumber": 2546,
                        "startColumnNumber": 15,
                        "endLineNumber": 2546,
                        "endColumnNumber": 45
                    },
                    "nodeContext": "zb=-(za - EIGHTHS[idx] - ya)",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 10,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 38,
                        "startLineNumber": 2546,
                        "startColumnNumber": 8,
                        "endLineNumber": 2546,
                        "endColumnNumber": 46
                    },
                    "nodeContext": "double zb=-(za - EIGHTHS[idx] - ya);\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 12,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 4283,
                        "startLineNumber": 2434,
                        "startColumnNumber": 72,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 629,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 4685,
                        "startLineNumber": 2428,
                        "startColumnNumber": 4,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Internal helper function to compute arctangent.\n * @param xa number from which arctangent is requested\n * @param xb extra bits for x (may be 0.0)\n * @param leftPlane if true, result angle must be put in the left half plane\n * @return atan(xa + xb) (or angle shifted by {@code PI} if leftPlane is true)\n */\nprivate static double atan(double xa,double xb,boolean leftPlane){\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 644,
                    "astHeight": 17
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 38,
                    "startLineNumber": 2546,
                    "startColumnNumber": 8,
                    "endLineNumber": 2546,
                    "endColumnNumber": 46
                },
                "nodeContext": "double zb=-(za - EIGHTHS[idx] - ya);\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 12,
                "astHeight": 7
            },
            "tokenLength": 1,
            "type": "double"
        }
    ],
    "positionList": [
        {
            "charLength": 2,
            "startLineNumber": 2471,
            "startColumnNumber": 30,
            "endLineNumber": 2471,
            "endColumnNumber": 32
        },
        {
            "charLength": 2,
            "startLineNumber": 2472,
            "startColumnNumber": 13,
            "endLineNumber": 2472,
            "endColumnNumber": 15
        },
        {
            "charLength": 2,
            "startLineNumber": 2495,
            "startColumnNumber": 19,
            "endLineNumber": 2495,
            "endColumnNumber": 21
        },
        {
            "charLength": 2,
            "startLineNumber": 2496,
            "startColumnNumber": 32,
            "endLineNumber": 2496,
            "endColumnNumber": 34
        },
        {
            "charLength": 2,
            "startLineNumber": 2497,
            "startColumnNumber": 31,
            "endLineNumber": 2497,
            "endColumnNumber": 33
        },
        {
            "charLength": 2,
            "startLineNumber": 2511,
            "startColumnNumber": 15,
            "endLineNumber": 2511,
            "endColumnNumber": 17
        },
        {
            "charLength": 2,
            "startLineNumber": 2537,
            "startColumnNumber": 15,
            "endLineNumber": 2537,
            "endColumnNumber": 17
        },
        {
            "charLength": 2,
            "startLineNumber": 2538,
            "startColumnNumber": 22,
            "endLineNumber": 2538,
            "endColumnNumber": 24
        },
        {
            "charLength": 2,
            "startLineNumber": 2545,
            "startColumnNumber": 35,
            "endLineNumber": 2545,
            "endColumnNumber": 37
        },
        {
            "charLength": 2,
            "startLineNumber": 2546,
            "startColumnNumber": 42,
            "endLineNumber": 2546,
            "endColumnNumber": 44
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 6,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 7,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 8,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 9,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 4,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 5,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 6,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 7,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 8,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 9,
            "layout": 2
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 5,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 6,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 7,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 8,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 9,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 0,
            "layout": 7
        },
        {
            "firstKey": 3,
            "secondKey": 1,
            "layout": 7
        },
        {
            "firstKey": 3,
            "secondKey": 2,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 4,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 5,
            "layout": 7
        },
        {
            "firstKey": 3,
            "secondKey": 6,
            "layout": 7
        },
        {
            "firstKey": 3,
            "secondKey": 7,
            "layout": 7
        },
        {
            "firstKey": 3,
            "secondKey": 8,
            "layout": 7
        },
        {
            "firstKey": 3,
            "secondKey": 9,
            "layout": 7
        },
        {
            "firstKey": 4,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 1,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 4,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 4,
            "secondKey": 5,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 6,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 7,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 8,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 9,
            "layout": 5
        },
        {
            "firstKey": 5,
            "secondKey": 0,
            "layout": 2
        },
        {
            "firstKey": 5,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 5,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 5,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 5,
            "secondKey": 4,
            "layout": 2
        },
        {
            "firstKey": 5,
            "secondKey": 6,
            "layout": 2
        },
        {
            "firstKey": 5,
            "secondKey": 7,
            "layout": 2
        },
        {
            "firstKey": 5,
            "secondKey": 8,
            "layout": 2
        },
        {
            "firstKey": 5,
            "secondKey": 9,
            "layout": 2
        },
        {
            "firstKey": 6,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 6,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 6,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 6,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 6,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 6,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 6,
            "secondKey": 7,
            "layout": 3
        },
        {
            "firstKey": 6,
            "secondKey": 8,
            "layout": 3
        },
        {
            "firstKey": 6,
            "secondKey": 9,
            "layout": 3
        },
        {
            "firstKey": 7,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 7,
            "secondKey": 1,
            "layout": 5
        },
        {
            "firstKey": 7,
            "secondKey": 2,
            "layout": 5
        },
        {
            "firstKey": 7,
            "secondKey": 3,
            "layout": 5
        },
        {
            "firstKey": 7,
            "secondKey": 4,
            "layout": 5
        },
        {
            "firstKey": 7,
            "secondKey": 5,
            "layout": 5
        },
        {
            "firstKey": 7,
            "secondKey": 6,
            "layout": 5
        },
        {
            "firstKey": 7,
            "secondKey": 8,
            "layout": 5
        },
        {
            "firstKey": 7,
            "secondKey": 9,
            "layout": 5
        },
        {
            "firstKey": 8,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 8,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 8,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 8,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 8,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 8,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 8,
            "secondKey": 6,
            "layout": 3
        },
        {
            "firstKey": 8,
            "secondKey": 7,
            "layout": 3
        },
        {
            "firstKey": 8,
            "secondKey": 9,
            "layout": 3
        },
        {
            "firstKey": 9,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 9,
            "secondKey": 1,
            "layout": 5
        },
        {
            "firstKey": 9,
            "secondKey": 2,
            "layout": 5
        },
        {
            "firstKey": 9,
            "secondKey": 3,
            "layout": 5
        },
        {
            "firstKey": 9,
            "secondKey": 4,
            "layout": 5
        },
        {
            "firstKey": 9,
            "secondKey": 5,
            "layout": 5
        },
        {
            "firstKey": 9,
            "secondKey": 6,
            "layout": 5
        },
        {
            "firstKey": 9,
            "secondKey": 7,
            "layout": 5
        },
        {
            "firstKey": 9,
            "secondKey": 8,
            "layout": 5
        }
    ]
}