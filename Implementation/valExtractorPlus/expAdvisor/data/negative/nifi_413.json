{
    "id": 413,
    "expression": "bendPoint",
    "projectName": "nifi",
    "commitID": "5872eb3c4a060684a88555f1c697f07bec4c26dd",
    "filePath": "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/dto/DtoFactory.java",
    "occurrences": 1,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "bendPoint",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 9,
                "startLineNumber": 662,
                "startColumnNumber": 45,
                "endLineNumber": 662,
                "endColumnNumber": 54
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 28,
                        "startLineNumber": 662,
                        "startColumnNumber": 27,
                        "endLineNumber": 662,
                        "endColumnNumber": 55
                    },
                    "nodeContext": "createPositionDto(bendPoint)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 44,
                        "startLineNumber": 662,
                        "startColumnNumber": 12,
                        "endLineNumber": 662,
                        "endColumnNumber": 56
                    },
                    "nodeContext": "bendPoints.add(createPositionDto(bendPoint))",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 45,
                        "startLineNumber": 662,
                        "startColumnNumber": 12,
                        "endLineNumber": 662,
                        "endColumnNumber": 57
                    },
                    "nodeContext": "bendPoints.add(createPositionDto(bendPoint));\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 69,
                        "startLineNumber": 661,
                        "startColumnNumber": 68,
                        "endLineNumber": 663,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  bendPoints.add(createPositionDto(bendPoint));\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 8,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 129,
                        "startLineNumber": 661,
                        "startColumnNumber": 8,
                        "endLineNumber": 663,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (final Position bendPoint : connection.getBendPoints()) {\n  bendPoints.add(createPositionDto(bendPoint));\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 17,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2514,
                        "startLineNumber": 650,
                        "startColumnNumber": 74,
                        "endLineNumber": 703,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (connection == null) {\n    return null;\n  }\n  final ConnectionDTO dto=new ConnectionDTO();\n  dto.setId(connection.getIdentifier());\n  dto.setParentGroupId(connection.getProcessGroup().getIdentifier());\n  final List<PositionDTO> bendPoints=new ArrayList<>();\n  for (  final Position bendPoint : connection.getBendPoints()) {\n    bendPoints.add(createPositionDto(bendPoint));\n  }\n  dto.setBends(bendPoints);\n  dto.setName(connection.getName());\n  dto.setLabelIndex(connection.getLabelIndex());\n  dto.setzIndex(connection.getZIndex());\n  dto.setSource(createConnectableDto(connection.getSource()));\n  dto.setDestination(createConnectableDto(connection.getDestination()));\n  dto.setVersionedComponentId(connection.getVersionedComponentId().orElse(null));\n  dto.setBackPressureObjectThreshold(connection.getFlowFileQueue().getBackPressureObjectThreshold());\n  dto.setBackPressureDataSizeThreshold(connection.getFlowFileQueue().getBackPressureDataSizeThreshold());\n  dto.setFlowFileExpiration(connection.getFlowFileQueue().getFlowFileExpiration());\n  dto.setPrioritizers(new ArrayList<String>());\n  for (  final FlowFilePrioritizer comparator : connection.getFlowFileQueue().getPriorities()) {\n    dto.getPrioritizers().add(comparator.getClass().getCanonicalName());\n  }\n  for (  final Relationship selectedRelationship : connection.getRelationships()) {\n    if (!Relationship.ANONYMOUS.equals(selectedRelationship)) {\n      if (dto.getSelectedRelationships() == null) {\n        dto.setSelectedRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n      }\n      dto.getSelectedRelationships().add(selectedRelationship.getName());\n    }\n  }\n  for (  final Relationship availableRelationship : connection.getSource().getRelationships()) {\n    if (!Relationship.ANONYMOUS.equals(availableRelationship)) {\n      if (dto.getAvailableRelationships() == null) {\n        dto.setAvailableRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n      }\n      dto.getAvailableRelationships().add(availableRelationship.getName());\n    }\n  }\n  return dto;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 283,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2724,
                        "startLineNumber": 644,
                        "startColumnNumber": 4,
                        "endLineNumber": 703,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Creates a ConnectionDTO from the specified Connection.\n * @param connection connection\n * @return dto\n */\npublic ConnectionDTO createConnectionDto(final Connection connection){\n  if (connection == null) {\n    return null;\n  }\n  final ConnectionDTO dto=new ConnectionDTO();\n  dto.setId(connection.getIdentifier());\n  dto.setParentGroupId(connection.getProcessGroup().getIdentifier());\n  final List<PositionDTO> bendPoints=new ArrayList<>();\n  for (  final Position bendPoint : connection.getBendPoints()) {\n    bendPoints.add(createPositionDto(bendPoint));\n  }\n  dto.setBends(bendPoints);\n  dto.setName(connection.getName());\n  dto.setLabelIndex(connection.getLabelIndex());\n  dto.setzIndex(connection.getZIndex());\n  dto.setSource(createConnectableDto(connection.getSource()));\n  dto.setDestination(createConnectableDto(connection.getDestination()));\n  dto.setVersionedComponentId(connection.getVersionedComponentId().orElse(null));\n  dto.setBackPressureObjectThreshold(connection.getFlowFileQueue().getBackPressureObjectThreshold());\n  dto.setBackPressureDataSizeThreshold(connection.getFlowFileQueue().getBackPressureDataSizeThreshold());\n  dto.setFlowFileExpiration(connection.getFlowFileQueue().getFlowFileExpiration());\n  dto.setPrioritizers(new ArrayList<String>());\n  for (  final FlowFilePrioritizer comparator : connection.getFlowFileQueue().getPriorities()) {\n    dto.getPrioritizers().add(comparator.getClass().getCanonicalName());\n  }\n  for (  final Relationship selectedRelationship : connection.getRelationships()) {\n    if (!Relationship.ANONYMOUS.equals(selectedRelationship)) {\n      if (dto.getSelectedRelationships() == null) {\n        dto.setSelectedRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n      }\n      dto.getSelectedRelationships().add(selectedRelationship.getName());\n    }\n  }\n  for (  final Relationship availableRelationship : connection.getSource().getRelationships()) {\n    if (!Relationship.ANONYMOUS.equals(availableRelationship)) {\n      if (dto.getAvailableRelationships() == null) {\n        dto.setAvailableRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n      }\n      dto.getAvailableRelationships().add(availableRelationship.getName());\n    }\n  }\n  return dto;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 294,
                    "astHeight": 14
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 45,
                    "startLineNumber": 662,
                    "startColumnNumber": 12,
                    "endLineNumber": 662,
                    "endColumnNumber": 57
                },
                "nodeContext": "bendPoints.add(createPositionDto(bendPoint));\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 7,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.nifi.connectable.Position"
        }
    ],
    "positionList": [
        {
            "charLength": 9,
            "startLineNumber": 662,
            "startColumnNumber": 45,
            "endLineNumber": 662,
            "endColumnNumber": 54
        }
    ],
    "layoutRelationDataList": []
}