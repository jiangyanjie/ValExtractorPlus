{
    "id": 66,
    "expression": "input",
    "projectName": "antlr@antlr4",
    "commitID": "ab0655598ed4ddeff075fafe301ef4d57bd0017d",
    "filePath": "runtime-testsuite/test/org/antlr/v4/test/runtime/java/api/perf/TimeLexerSpeed.java",
    "occurrences": 2,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "input",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 5,
                "startLineNumber": 381,
                "startColumnNumber": 35,
                "endLineNumber": 381,
                "endColumnNumber": 40
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 20,
                        "startLineNumber": 381,
                        "startColumnNumber": 21,
                        "endLineNumber": 381,
                        "endColumnNumber": 41
                    },
                    "nodeContext": "new JavaLexer(input)",
                    "nodeType": "ClassInstanceCreation",
                    "astNodeNumber": 4,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 28,
                        "startLineNumber": 381,
                        "startColumnNumber": 13,
                        "endLineNumber": 381,
                        "endColumnNumber": 41
                    },
                    "nodeContext": "lexer=new JavaLexer(input)",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 6,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 39,
                        "startLineNumber": 381,
                        "startColumnNumber": 3,
                        "endLineNumber": 381,
                        "endColumnNumber": 42
                    },
                    "nodeContext": "JavaLexer lexer=new JavaLexer(input);\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 9,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 555,
                        "startLineNumber": 378,
                        "startColumnNumber": 71,
                        "endLineNumber": 390,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  long size=getResourceSize(loader,Parser_java_file);\n  CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n  JavaLexer lexer=new JavaLexer(input);\n  double avg=tokenize(lexer,n,clearLexerDFACache);\n  String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n  if (output)   System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols%s\\n\",currentMethodName,(int)avg,n,input.size(),clearLexerDFACache ? \" DFA cleared\" : \"\");\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 75,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 624,
                        "startLineNumber": 378,
                        "startColumnNumber": 2,
                        "endLineNumber": 390,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "try (InputStream is=loader.getResourceAsStream(Parser_java_file)){\n  long size=getResourceSize(loader,Parser_java_file);\n  CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n  JavaLexer lexer=new JavaLexer(input);\n  double avg=tokenize(lexer,n,clearLexerDFACache);\n  String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n  if (output)   System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols%s\\n\",currentMethodName,(int)avg,n,input.size(),clearLexerDFACache ? \" DFA cleared\" : \"\");\n}\n ",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 85,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 696,
                        "startLineNumber": 376,
                        "startColumnNumber": 83,
                        "endLineNumber": 391,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  ClassLoader loader=TimeLexerSpeed.class.getClassLoader();\n  try (InputStream is=loader.getResourceAsStream(Parser_java_file)){\n    long size=getResourceSize(loader,Parser_java_file);\n    CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n    JavaLexer lexer=new JavaLexer(input);\n    double avg=tokenize(lexer,n,clearLexerDFACache);\n    String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n    if (output)     System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols%s\\n\",currentMethodName,(int)avg,n,input.size(),clearLexerDFACache ? \" DFA cleared\" : \"\");\n  }\n }\n",
                    "nodeType": "Block",
                    "astNodeNumber": 96,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 778,
                        "startLineNumber": 376,
                        "startColumnNumber": 1,
                        "endLineNumber": 391,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "public void lex_new_java_utf8(int n,boolean clearLexerDFACache) throws Exception {\n  ClassLoader loader=TimeLexerSpeed.class.getClassLoader();\n  try (InputStream is=loader.getResourceAsStream(Parser_java_file)){\n    long size=getResourceSize(loader,Parser_java_file);\n    CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n    JavaLexer lexer=new JavaLexer(input);\n    double avg=tokenize(lexer,n,clearLexerDFACache);\n    String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n    if (output)     System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols%s\\n\",currentMethodName,(int)avg,n,input.size(),clearLexerDFACache ? \" DFA cleared\" : \"\");\n  }\n }\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 108,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 39,
                    "startLineNumber": 381,
                    "startColumnNumber": 3,
                    "endLineNumber": 381,
                    "endColumnNumber": 42
                },
                "nodeContext": "JavaLexer lexer=new JavaLexer(input);\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 9,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "org.antlr.v4.runtime.CharStream"
        },
        {
            "nodeContext": "input",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 5,
                "startLineNumber": 388,
                "startColumnNumber": 7,
                "endLineNumber": 388,
                "endColumnNumber": 12
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 12,
                        "startLineNumber": 388,
                        "startColumnNumber": 7,
                        "endLineNumber": 388,
                        "endColumnNumber": 19
                    },
                    "nodeContext": "input.size()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 205,
                        "startLineNumber": 384,
                        "startColumnNumber": 17,
                        "endLineNumber": 389,
                        "endColumnNumber": 48
                    },
                    "nodeContext": "System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols%s\\n\",currentMethodName,(int)avg,n,input.size(),clearLexerDFACache ? \" DFA cleared\" : \"\")",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 18,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 206,
                        "startLineNumber": 384,
                        "startColumnNumber": 17,
                        "endLineNumber": 389,
                        "endColumnNumber": 49
                    },
                    "nodeContext": "System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols%s\\n\",currentMethodName,(int)avg,n,input.size(),clearLexerDFACache ? \" DFA cleared\" : \"\");\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 19,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 220,
                        "startLineNumber": 384,
                        "startColumnNumber": 3,
                        "endLineNumber": 389,
                        "endColumnNumber": 49
                    },
                    "nodeContext": "if (output) System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols%s\\n\",currentMethodName,(int)avg,n,input.size(),clearLexerDFACache ? \" DFA cleared\" : \"\");\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 21,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 555,
                        "startLineNumber": 378,
                        "startColumnNumber": 71,
                        "endLineNumber": 390,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  long size=getResourceSize(loader,Parser_java_file);\n  CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n  JavaLexer lexer=new JavaLexer(input);\n  double avg=tokenize(lexer,n,clearLexerDFACache);\n  String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n  if (output)   System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols%s\\n\",currentMethodName,(int)avg,n,input.size(),clearLexerDFACache ? \" DFA cleared\" : \"\");\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 75,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 624,
                        "startLineNumber": 378,
                        "startColumnNumber": 2,
                        "endLineNumber": 390,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "try (InputStream is=loader.getResourceAsStream(Parser_java_file)){\n  long size=getResourceSize(loader,Parser_java_file);\n  CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n  JavaLexer lexer=new JavaLexer(input);\n  double avg=tokenize(lexer,n,clearLexerDFACache);\n  String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n  if (output)   System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols%s\\n\",currentMethodName,(int)avg,n,input.size(),clearLexerDFACache ? \" DFA cleared\" : \"\");\n}\n ",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 85,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 696,
                        "startLineNumber": 376,
                        "startColumnNumber": 83,
                        "endLineNumber": 391,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  ClassLoader loader=TimeLexerSpeed.class.getClassLoader();\n  try (InputStream is=loader.getResourceAsStream(Parser_java_file)){\n    long size=getResourceSize(loader,Parser_java_file);\n    CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n    JavaLexer lexer=new JavaLexer(input);\n    double avg=tokenize(lexer,n,clearLexerDFACache);\n    String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n    if (output)     System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols%s\\n\",currentMethodName,(int)avg,n,input.size(),clearLexerDFACache ? \" DFA cleared\" : \"\");\n  }\n }\n",
                    "nodeType": "Block",
                    "astNodeNumber": 96,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 778,
                        "startLineNumber": 376,
                        "startColumnNumber": 1,
                        "endLineNumber": 391,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "public void lex_new_java_utf8(int n,boolean clearLexerDFACache) throws Exception {\n  ClassLoader loader=TimeLexerSpeed.class.getClassLoader();\n  try (InputStream is=loader.getResourceAsStream(Parser_java_file)){\n    long size=getResourceSize(loader,Parser_java_file);\n    CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n    JavaLexer lexer=new JavaLexer(input);\n    double avg=tokenize(lexer,n,clearLexerDFACache);\n    String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n    if (output)     System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols%s\\n\",currentMethodName,(int)avg,n,input.size(),clearLexerDFACache ? \" DFA cleared\" : \"\");\n  }\n }\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 108,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                "nodePosition": {
                    "charLength": 12,
                    "startLineNumber": 388,
                    "startColumnNumber": 7,
                    "endLineNumber": 388,
                    "endColumnNumber": 19
                },
                "nodeContext": "input.size()",
                "nodeType": "MethodInvocation",
                "astNodeNumber": 3,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "org.antlr.v4.runtime.CharStream"
        }
    ],
    "positionList": [
        {
            "charLength": 5,
            "startLineNumber": 381,
            "startColumnNumber": 35,
            "endLineNumber": 381,
            "endColumnNumber": 40
        },
        {
            "charLength": 5,
            "startLineNumber": 388,
            "startColumnNumber": 7,
            "endLineNumber": 388,
            "endColumnNumber": 12
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 4
        }
    ]
}