{
    "id": 169,
    "expression": "file",
    "projectName": "dromara@hutool",
    "commitID": "c33e2d89712025d94a6f8ed8391deffc58ce70a4",
    "filePath": "hutool-core/src/main/java/cn/hutool/core/lang/ClassScanner.java",
    "occurrences": 6,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "file",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 231,
                "startColumnNumber": 6,
                "endLineNumber": 231,
                "endColumnNumber": 10
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 13,
                        "startLineNumber": 231,
                        "startColumnNumber": 6,
                        "endLineNumber": 231,
                        "endColumnNumber": 19
                    },
                    "nodeContext": "file.isFile()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 801,
                        "startLineNumber": 231,
                        "startColumnNumber": 2,
                        "endLineNumber": 254,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "if (file.isFile()) {\n  final String fileName=file.getAbsolutePath();\n  if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n    final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n    addIfAccept(className);\n  }\n else   if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n    try {\n      scanJar(new JarFile(file));\n    }\n catch (    IOException e) {\n      throw new IORuntimeException(e);\n    }\n  }\n}\n else if (file.isDirectory()) {\n  final File[] files=file.listFiles();\n  if (null != files) {\n    for (    File subFile : files) {\n      scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n    }\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 120,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 810,
                        "startLineNumber": 230,
                        "startColumnNumber": 50,
                        "endLineNumber": 255,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  if (file.isFile()) {\n    final String fileName=file.getAbsolutePath();\n    if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n      final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n      addIfAccept(className);\n    }\n else     if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n      try {\n        scanJar(new JarFile(file));\n      }\n catch (      IOException e) {\n        throw new IORuntimeException(e);\n      }\n    }\n  }\n else   if (file.isDirectory()) {\n    final File[] files=file.listFiles();\n    if (null != files) {\n      for (      File subFile : files) {\n        scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n      }\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 121,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 956,
                        "startLineNumber": 224,
                        "startColumnNumber": 1,
                        "endLineNumber": 255,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "/** \n * 扫描文件或目录中的类\n * @param file    文件或目录\n * @param rootDir 包名对应classpath绝对路径\n */\nprivate void scanFile(File file,String rootDir){\n  if (file.isFile()) {\n    final String fileName=file.getAbsolutePath();\n    if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n      final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n      addIfAccept(className);\n    }\n else     if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n      try {\n        scanJar(new JarFile(file));\n      }\n catch (      IOException e) {\n        throw new IORuntimeException(e);\n      }\n    }\n  }\n else   if (file.isDirectory()) {\n    final File[] files=file.listFiles();\n    if (null != files) {\n      for (      File subFile : files) {\n        scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n      }\n    }\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 134,
                    "astHeight": 15
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 13,
                    "startLineNumber": 231,
                    "startColumnNumber": 6,
                    "endLineNumber": 231,
                    "endColumnNumber": 19
                },
                "nodeContext": "file.isFile()",
                "nodeType": "MethodInvocation",
                "astNodeNumber": 3,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "java.io.File"
        },
        {
            "nodeContext": "file",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 232,
                "startColumnNumber": 27,
                "endLineNumber": 232,
                "endColumnNumber": 31
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 22,
                        "startLineNumber": 232,
                        "startColumnNumber": 27,
                        "endLineNumber": 232,
                        "endColumnNumber": 49
                    },
                    "nodeContext": "file.getAbsolutePath()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 33,
                        "startLineNumber": 232,
                        "startColumnNumber": 16,
                        "endLineNumber": 232,
                        "endColumnNumber": 49
                    },
                    "nodeContext": "fileName=file.getAbsolutePath()",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 47,
                        "startLineNumber": 232,
                        "startColumnNumber": 3,
                        "endLineNumber": 232,
                        "endColumnNumber": 50
                    },
                    "nodeContext": "final String fileName=file.getAbsolutePath();\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 550,
                        "startLineNumber": 231,
                        "startColumnNumber": 21,
                        "endLineNumber": 247,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  final String fileName=file.getAbsolutePath();\n  if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n    final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n    addIfAccept(className);\n  }\n else   if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n    try {\n      scanJar(new JarFile(file));\n    }\n catch (    IOException e) {\n      throw new IORuntimeException(e);\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 75,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 801,
                        "startLineNumber": 231,
                        "startColumnNumber": 2,
                        "endLineNumber": 254,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "if (file.isFile()) {\n  final String fileName=file.getAbsolutePath();\n  if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n    final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n    addIfAccept(className);\n  }\n else   if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n    try {\n      scanJar(new JarFile(file));\n    }\n catch (    IOException e) {\n      throw new IORuntimeException(e);\n    }\n  }\n}\n else if (file.isDirectory()) {\n  final File[] files=file.listFiles();\n  if (null != files) {\n    for (    File subFile : files) {\n      scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n    }\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 120,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 810,
                        "startLineNumber": 230,
                        "startColumnNumber": 50,
                        "endLineNumber": 255,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  if (file.isFile()) {\n    final String fileName=file.getAbsolutePath();\n    if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n      final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n      addIfAccept(className);\n    }\n else     if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n      try {\n        scanJar(new JarFile(file));\n      }\n catch (      IOException e) {\n        throw new IORuntimeException(e);\n      }\n    }\n  }\n else   if (file.isDirectory()) {\n    final File[] files=file.listFiles();\n    if (null != files) {\n      for (      File subFile : files) {\n        scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n      }\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 121,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 956,
                        "startLineNumber": 224,
                        "startColumnNumber": 1,
                        "endLineNumber": 255,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "/** \n * 扫描文件或目录中的类\n * @param file    文件或目录\n * @param rootDir 包名对应classpath绝对路径\n */\nprivate void scanFile(File file,String rootDir){\n  if (file.isFile()) {\n    final String fileName=file.getAbsolutePath();\n    if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n      final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n      addIfAccept(className);\n    }\n else     if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n      try {\n        scanJar(new JarFile(file));\n      }\n catch (      IOException e) {\n        throw new IORuntimeException(e);\n      }\n    }\n  }\n else   if (file.isDirectory()) {\n    final File[] files=file.listFiles();\n    if (null != files) {\n      for (      File subFile : files) {\n        scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n      }\n    }\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 134,
                    "astHeight": 15
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 47,
                    "startLineNumber": 232,
                    "startColumnNumber": 3,
                    "endLineNumber": 232,
                    "endColumnNumber": 50
                },
                "nodeContext": "final String fileName=file.getAbsolutePath();\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 9,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.io.File"
        },
        {
            "nodeContext": "file",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 242,
                "startColumnNumber": 25,
                "endLineNumber": 242,
                "endColumnNumber": 29
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 17,
                        "startLineNumber": 242,
                        "startColumnNumber": 13,
                        "endLineNumber": 242,
                        "endColumnNumber": 30
                    },
                    "nodeContext": "new JarFile(file)",
                    "nodeType": "ClassInstanceCreation",
                    "astNodeNumber": 4,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 26,
                        "startLineNumber": 242,
                        "startColumnNumber": 5,
                        "endLineNumber": 242,
                        "endColumnNumber": 31
                    },
                    "nodeContext": "scanJar(new JarFile(file))",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 6,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 27,
                        "startLineNumber": 242,
                        "startColumnNumber": 5,
                        "endLineNumber": 242,
                        "endColumnNumber": 32
                    },
                    "nodeContext": "scanJar(new JarFile(file));\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 7,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 42,
                        "startLineNumber": 241,
                        "startColumnNumber": 8,
                        "endLineNumber": 243,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  scanJar(new JarFile(file));\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 8,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 116,
                        "startLineNumber": 241,
                        "startColumnNumber": 4,
                        "endLineNumber": 245,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "try {\n  scanJar(new JarFile(file));\n}\n catch (IOException e) {\n  throw new IORuntimeException(e);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 20,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 129,
                        "startLineNumber": 240,
                        "startColumnNumber": 56,
                        "endLineNumber": 246,
                        "endColumnNumber": 4
                    },
                    "nodeContext": "{\n  try {\n    scanJar(new JarFile(file));\n  }\n catch (  IOException e) {\n    throw new IORuntimeException(e);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 21,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 175,
                        "startLineNumber": 240,
                        "startColumnNumber": 10,
                        "endLineNumber": 246,
                        "endColumnNumber": 4
                    },
                    "nodeContext": "if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n  try {\n    scanJar(new JarFile(file));\n  }\n catch (  IOException e) {\n    throw new IORuntimeException(e);\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 28,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 487,
                        "startLineNumber": 233,
                        "startColumnNumber": 3,
                        "endLineNumber": 246,
                        "endColumnNumber": 4
                    },
                    "nodeContext": "if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n  final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n  addIfAccept(className);\n}\n else if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n  try {\n    scanJar(new JarFile(file));\n  }\n catch (  IOException e) {\n    throw new IORuntimeException(e);\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 65,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 550,
                        "startLineNumber": 231,
                        "startColumnNumber": 21,
                        "endLineNumber": 247,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  final String fileName=file.getAbsolutePath();\n  if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n    final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n    addIfAccept(className);\n  }\n else   if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n    try {\n      scanJar(new JarFile(file));\n    }\n catch (    IOException e) {\n      throw new IORuntimeException(e);\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 75,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 801,
                        "startLineNumber": 231,
                        "startColumnNumber": 2,
                        "endLineNumber": 254,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "if (file.isFile()) {\n  final String fileName=file.getAbsolutePath();\n  if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n    final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n    addIfAccept(className);\n  }\n else   if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n    try {\n      scanJar(new JarFile(file));\n    }\n catch (    IOException e) {\n      throw new IORuntimeException(e);\n    }\n  }\n}\n else if (file.isDirectory()) {\n  final File[] files=file.listFiles();\n  if (null != files) {\n    for (    File subFile : files) {\n      scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n    }\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 120,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 810,
                        "startLineNumber": 230,
                        "startColumnNumber": 50,
                        "endLineNumber": 255,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  if (file.isFile()) {\n    final String fileName=file.getAbsolutePath();\n    if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n      final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n      addIfAccept(className);\n    }\n else     if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n      try {\n        scanJar(new JarFile(file));\n      }\n catch (      IOException e) {\n        throw new IORuntimeException(e);\n      }\n    }\n  }\n else   if (file.isDirectory()) {\n    final File[] files=file.listFiles();\n    if (null != files) {\n      for (      File subFile : files) {\n        scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n      }\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 121,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 956,
                        "startLineNumber": 224,
                        "startColumnNumber": 1,
                        "endLineNumber": 255,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "/** \n * 扫描文件或目录中的类\n * @param file    文件或目录\n * @param rootDir 包名对应classpath绝对路径\n */\nprivate void scanFile(File file,String rootDir){\n  if (file.isFile()) {\n    final String fileName=file.getAbsolutePath();\n    if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n      final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n      addIfAccept(className);\n    }\n else     if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n      try {\n        scanJar(new JarFile(file));\n      }\n catch (      IOException e) {\n        throw new IORuntimeException(e);\n      }\n    }\n  }\n else   if (file.isDirectory()) {\n    final File[] files=file.listFiles();\n    if (null != files) {\n      for (      File subFile : files) {\n        scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n      }\n    }\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 134,
                    "astHeight": 15
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 27,
                    "startLineNumber": 242,
                    "startColumnNumber": 5,
                    "endLineNumber": 242,
                    "endColumnNumber": 32
                },
                "nodeContext": "scanJar(new JarFile(file));\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 7,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "java.io.File"
        },
        {
            "nodeContext": "file",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 247,
                "startColumnNumber": 13,
                "endLineNumber": 247,
                "endColumnNumber": 17
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 18,
                        "startLineNumber": 247,
                        "startColumnNumber": 13,
                        "endLineNumber": 247,
                        "endColumnNumber": 31
                    },
                    "nodeContext": "file.isDirectory()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 226,
                        "startLineNumber": 247,
                        "startColumnNumber": 9,
                        "endLineNumber": 254,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "if (file.isDirectory()) {\n  final File[] files=file.listFiles();\n  if (null != files) {\n    for (    File subFile : files) {\n      scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n    }\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 41,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 801,
                        "startLineNumber": 231,
                        "startColumnNumber": 2,
                        "endLineNumber": 254,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "if (file.isFile()) {\n  final String fileName=file.getAbsolutePath();\n  if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n    final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n    addIfAccept(className);\n  }\n else   if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n    try {\n      scanJar(new JarFile(file));\n    }\n catch (    IOException e) {\n      throw new IORuntimeException(e);\n    }\n  }\n}\n else if (file.isDirectory()) {\n  final File[] files=file.listFiles();\n  if (null != files) {\n    for (    File subFile : files) {\n      scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n    }\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 120,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 810,
                        "startLineNumber": 230,
                        "startColumnNumber": 50,
                        "endLineNumber": 255,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  if (file.isFile()) {\n    final String fileName=file.getAbsolutePath();\n    if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n      final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n      addIfAccept(className);\n    }\n else     if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n      try {\n        scanJar(new JarFile(file));\n      }\n catch (      IOException e) {\n        throw new IORuntimeException(e);\n      }\n    }\n  }\n else   if (file.isDirectory()) {\n    final File[] files=file.listFiles();\n    if (null != files) {\n      for (      File subFile : files) {\n        scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n      }\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 121,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 956,
                        "startLineNumber": 224,
                        "startColumnNumber": 1,
                        "endLineNumber": 255,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "/** \n * 扫描文件或目录中的类\n * @param file    文件或目录\n * @param rootDir 包名对应classpath绝对路径\n */\nprivate void scanFile(File file,String rootDir){\n  if (file.isFile()) {\n    final String fileName=file.getAbsolutePath();\n    if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n      final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n      addIfAccept(className);\n    }\n else     if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n      try {\n        scanJar(new JarFile(file));\n      }\n catch (      IOException e) {\n        throw new IORuntimeException(e);\n      }\n    }\n  }\n else   if (file.isDirectory()) {\n    final File[] files=file.listFiles();\n    if (null != files) {\n      for (      File subFile : files) {\n        scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n      }\n    }\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 134,
                    "astHeight": 15
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 18,
                    "startLineNumber": 247,
                    "startColumnNumber": 13,
                    "endLineNumber": 247,
                    "endColumnNumber": 31
                },
                "nodeContext": "file.isDirectory()",
                "nodeType": "MethodInvocation",
                "astNodeNumber": 3,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "java.io.File"
        },
        {
            "nodeContext": "file",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 248,
                "startColumnNumber": 24,
                "endLineNumber": 248,
                "endColumnNumber": 28
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 16,
                        "startLineNumber": 248,
                        "startColumnNumber": 24,
                        "endLineNumber": 248,
                        "endColumnNumber": 40
                    },
                    "nodeContext": "file.listFiles()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 24,
                        "startLineNumber": 248,
                        "startColumnNumber": 16,
                        "endLineNumber": 248,
                        "endColumnNumber": 40
                    },
                    "nodeContext": "files=file.listFiles()",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 38,
                        "startLineNumber": 248,
                        "startColumnNumber": 3,
                        "endLineNumber": 248,
                        "endColumnNumber": 41
                    },
                    "nodeContext": "final File[] files=file.listFiles();\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 11,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 202,
                        "startLineNumber": 247,
                        "startColumnNumber": 33,
                        "endLineNumber": 254,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  final File[] files=file.listFiles();\n  if (null != files) {\n    for (    File subFile : files) {\n      scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 37,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 226,
                        "startLineNumber": 247,
                        "startColumnNumber": 9,
                        "endLineNumber": 254,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "if (file.isDirectory()) {\n  final File[] files=file.listFiles();\n  if (null != files) {\n    for (    File subFile : files) {\n      scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n    }\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 41,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 801,
                        "startLineNumber": 231,
                        "startColumnNumber": 2,
                        "endLineNumber": 254,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "if (file.isFile()) {\n  final String fileName=file.getAbsolutePath();\n  if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n    final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n    addIfAccept(className);\n  }\n else   if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n    try {\n      scanJar(new JarFile(file));\n    }\n catch (    IOException e) {\n      throw new IORuntimeException(e);\n    }\n  }\n}\n else if (file.isDirectory()) {\n  final File[] files=file.listFiles();\n  if (null != files) {\n    for (    File subFile : files) {\n      scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n    }\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 120,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 810,
                        "startLineNumber": 230,
                        "startColumnNumber": 50,
                        "endLineNumber": 255,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  if (file.isFile()) {\n    final String fileName=file.getAbsolutePath();\n    if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n      final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n      addIfAccept(className);\n    }\n else     if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n      try {\n        scanJar(new JarFile(file));\n      }\n catch (      IOException e) {\n        throw new IORuntimeException(e);\n      }\n    }\n  }\n else   if (file.isDirectory()) {\n    final File[] files=file.listFiles();\n    if (null != files) {\n      for (      File subFile : files) {\n        scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n      }\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 121,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 956,
                        "startLineNumber": 224,
                        "startColumnNumber": 1,
                        "endLineNumber": 255,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "/** \n * 扫描文件或目录中的类\n * @param file    文件或目录\n * @param rootDir 包名对应classpath绝对路径\n */\nprivate void scanFile(File file,String rootDir){\n  if (file.isFile()) {\n    final String fileName=file.getAbsolutePath();\n    if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n      final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n      addIfAccept(className);\n    }\n else     if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n      try {\n        scanJar(new JarFile(file));\n      }\n catch (      IOException e) {\n        throw new IORuntimeException(e);\n      }\n    }\n  }\n else   if (file.isDirectory()) {\n    final File[] files=file.listFiles();\n    if (null != files) {\n      for (      File subFile : files) {\n        scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n      }\n    }\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 134,
                    "astHeight": 15
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 38,
                    "startLineNumber": 248,
                    "startColumnNumber": 3,
                    "endLineNumber": 248,
                    "endColumnNumber": 41
                },
                "nodeContext": "final File[] files=file.listFiles();\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 11,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.io.File"
        },
        {
            "nodeContext": "file",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 251,
                "startColumnNumber": 64,
                "endLineNumber": 251,
                "endColumnNumber": 68
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
                    "nodePosition": {
                        "charLength": 26,
                        "startLineNumber": 251,
                        "startColumnNumber": 43,
                        "endLineNumber": 251,
                        "endColumnNumber": 69
                    },
                    "nodeContext": "subPathBeforePackage(file)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 56,
                        "startLineNumber": 251,
                        "startColumnNumber": 23,
                        "endLineNumber": 251,
                        "endColumnNumber": 79
                    },
                    "nodeContext": "(null == rootDir) ? subPathBeforePackage(file) : rootDir",
                    "nodeType": "ConditionalExpression",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 75,
                        "startLineNumber": 251,
                        "startColumnNumber": 5,
                        "endLineNumber": 251,
                        "endColumnNumber": 80
                    },
                    "nodeContext": "scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 12,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 76,
                        "startLineNumber": 251,
                        "startColumnNumber": 5,
                        "endLineNumber": 251,
                        "endColumnNumber": 81
                    },
                    "nodeContext": "scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 13,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 91,
                        "startLineNumber": 250,
                        "startColumnNumber": 31,
                        "endLineNumber": 252,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 14,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 118,
                        "startLineNumber": 250,
                        "startColumnNumber": 4,
                        "endLineNumber": 252,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "for (File subFile : files) {\n  scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 20,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 131,
                        "startLineNumber": 249,
                        "startColumnNumber": 20,
                        "endLineNumber": 253,
                        "endColumnNumber": 4
                    },
                    "nodeContext": "{\n  for (  File subFile : files) {\n    scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 21,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 148,
                        "startLineNumber": 249,
                        "startColumnNumber": 3,
                        "endLineNumber": 253,
                        "endColumnNumber": 4
                    },
                    "nodeContext": "if (null != files) {\n  for (  File subFile : files) {\n    scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 25,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 202,
                        "startLineNumber": 247,
                        "startColumnNumber": 33,
                        "endLineNumber": 254,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  final File[] files=file.listFiles();\n  if (null != files) {\n    for (    File subFile : files) {\n      scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 37,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 226,
                        "startLineNumber": 247,
                        "startColumnNumber": 9,
                        "endLineNumber": 254,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "if (file.isDirectory()) {\n  final File[] files=file.listFiles();\n  if (null != files) {\n    for (    File subFile : files) {\n      scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n    }\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 41,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 801,
                        "startLineNumber": 231,
                        "startColumnNumber": 2,
                        "endLineNumber": 254,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "if (file.isFile()) {\n  final String fileName=file.getAbsolutePath();\n  if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n    final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n    addIfAccept(className);\n  }\n else   if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n    try {\n      scanJar(new JarFile(file));\n    }\n catch (    IOException e) {\n      throw new IORuntimeException(e);\n    }\n  }\n}\n else if (file.isDirectory()) {\n  final File[] files=file.listFiles();\n  if (null != files) {\n    for (    File subFile : files) {\n      scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n    }\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 120,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 810,
                        "startLineNumber": 230,
                        "startColumnNumber": 50,
                        "endLineNumber": 255,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  if (file.isFile()) {\n    final String fileName=file.getAbsolutePath();\n    if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n      final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n      addIfAccept(className);\n    }\n else     if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n      try {\n        scanJar(new JarFile(file));\n      }\n catch (      IOException e) {\n        throw new IORuntimeException(e);\n      }\n    }\n  }\n else   if (file.isDirectory()) {\n    final File[] files=file.listFiles();\n    if (null != files) {\n      for (      File subFile : files) {\n        scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n      }\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 121,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 956,
                        "startLineNumber": 224,
                        "startColumnNumber": 1,
                        "endLineNumber": 255,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "/** \n * 扫描文件或目录中的类\n * @param file    文件或目录\n * @param rootDir 包名对应classpath绝对路径\n */\nprivate void scanFile(File file,String rootDir){\n  if (file.isFile()) {\n    final String fileName=file.getAbsolutePath();\n    if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n      final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n      addIfAccept(className);\n    }\n else     if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n      try {\n        scanJar(new JarFile(file));\n      }\n catch (      IOException e) {\n        throw new IORuntimeException(e);\n      }\n    }\n  }\n else   if (file.isDirectory()) {\n    final File[] files=file.listFiles();\n    if (null != files) {\n      for (      File subFile : files) {\n        scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n      }\n    }\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 134,
                    "astHeight": 15
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 76,
                    "startLineNumber": 251,
                    "startColumnNumber": 5,
                    "endLineNumber": 251,
                    "endColumnNumber": 81
                },
                "nodeContext": "scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 13,
                "astHeight": 6
            },
            "tokenLength": 1,
            "type": "java.io.File"
        }
    ],
    "positionList": [
        {
            "charLength": 4,
            "startLineNumber": 231,
            "startColumnNumber": 6,
            "endLineNumber": 231,
            "endColumnNumber": 10
        },
        {
            "charLength": 4,
            "startLineNumber": 232,
            "startColumnNumber": 27,
            "endLineNumber": 232,
            "endColumnNumber": 31
        },
        {
            "charLength": 4,
            "startLineNumber": 242,
            "startColumnNumber": 25,
            "endLineNumber": 242,
            "endColumnNumber": 29
        },
        {
            "charLength": 4,
            "startLineNumber": 247,
            "startColumnNumber": 13,
            "endLineNumber": 247,
            "endColumnNumber": 17
        },
        {
            "charLength": 4,
            "startLineNumber": 248,
            "startColumnNumber": 24,
            "endLineNumber": 248,
            "endColumnNumber": 28
        },
        {
            "charLength": 4,
            "startLineNumber": 251,
            "startColumnNumber": 64,
            "endLineNumber": 251,
            "endColumnNumber": 68
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 1
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 1
        },
        {
            "firstKey": 0,
            "secondKey": 3,
            "layout": 1
        },
        {
            "firstKey": 0,
            "secondKey": 4,
            "layout": 1
        },
        {
            "firstKey": 0,
            "secondKey": 5,
            "layout": 1
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 3,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 4,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 5,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 9
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 8
        },
        {
            "firstKey": 2,
            "secondKey": 3,
            "layout": 9
        },
        {
            "firstKey": 2,
            "secondKey": 4,
            "layout": 9
        },
        {
            "firstKey": 2,
            "secondKey": 5,
            "layout": 9
        },
        {
            "firstKey": 3,
            "secondKey": 0,
            "layout": 2
        },
        {
            "firstKey": 3,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 3,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 3,
            "secondKey": 4,
            "layout": 1
        },
        {
            "firstKey": 3,
            "secondKey": 5,
            "layout": 1
        },
        {
            "firstKey": 4,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 1,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 2,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 3,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 5,
            "secondKey": 0,
            "layout": 10
        },
        {
            "firstKey": 5,
            "secondKey": 1,
            "layout": 10
        },
        {
            "firstKey": 5,
            "secondKey": 2,
            "layout": 10
        },
        {
            "firstKey": 5,
            "secondKey": 3,
            "layout": 9
        },
        {
            "firstKey": 5,
            "secondKey": 4,
            "layout": 8
        }
    ]
}