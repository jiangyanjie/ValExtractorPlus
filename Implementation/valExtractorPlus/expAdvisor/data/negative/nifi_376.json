{
    "id": 376,
    "expression": "Locale",
    "projectName": "nifi",
    "commitID": "5872eb3c4a060684a88555f1c697f07bec4c26dd",
    "filePath": "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/dto/DtoFactory.java",
    "occurrences": 2,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "Locale",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 6,
                "startLineNumber": 684,
                "startColumnNumber": 90,
                "endLineNumber": 684,
                "endColumnNumber": 96
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 9,
                        "startLineNumber": 684,
                        "startColumnNumber": 90,
                        "endLineNumber": 684,
                        "endColumnNumber": 99
                    },
                    "nodeContext": "Locale.US",
                    "nodeType": "QualifiedName",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
                    "nodePosition": {
                        "charLength": 31,
                        "startLineNumber": 684,
                        "startColumnNumber": 69,
                        "endLineNumber": 684,
                        "endColumnNumber": 100
                    },
                    "nodeContext": "Collator.getInstance(Locale.US)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 52,
                        "startLineNumber": 684,
                        "startColumnNumber": 49,
                        "endLineNumber": 684,
                        "endColumnNumber": 101
                    },
                    "nodeContext": "new TreeSet<String>(Collator.getInstance(Locale.US))",
                    "nodeType": "ClassInstanceCreation",
                    "astNodeNumber": 12,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 82,
                        "startLineNumber": 684,
                        "startColumnNumber": 20,
                        "endLineNumber": 684,
                        "endColumnNumber": 102
                    },
                    "nodeContext": "dto.setSelectedRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)))",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 15,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 83,
                        "startLineNumber": 684,
                        "startColumnNumber": 20,
                        "endLineNumber": 684,
                        "endColumnNumber": 103
                    },
                    "nodeContext": "dto.setSelectedRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 16,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 123,
                        "startLineNumber": 683,
                        "startColumnNumber": 60,
                        "endLineNumber": 685,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  dto.setSelectedRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 17,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 167,
                        "startLineNumber": 683,
                        "startColumnNumber": 16,
                        "endLineNumber": 685,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (dto.getSelectedRelationships() == null) {\n  dto.setSelectedRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 23,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 284,
                        "startLineNumber": 682,
                        "startColumnNumber": 70,
                        "endLineNumber": 688,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  if (dto.getSelectedRelationships() == null) {\n    dto.setSelectedRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n  }\n  dto.getSelectedRelationships().add(selectedRelationship.getName());\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 33,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 342,
                        "startLineNumber": 682,
                        "startColumnNumber": 12,
                        "endLineNumber": 688,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (!Relationship.ANONYMOUS.equals(selectedRelationship)) {\n  if (dto.getSelectedRelationships() == null) {\n    dto.setSelectedRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n  }\n  dto.getSelectedRelationships().add(selectedRelationship.getName());\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 41,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 366,
                        "startLineNumber": 681,
                        "startColumnNumber": 86,
                        "endLineNumber": 689,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (!Relationship.ANONYMOUS.equals(selectedRelationship)) {\n    if (dto.getSelectedRelationships() == null) {\n      dto.setSelectedRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n    }\n    dto.getSelectedRelationships().add(selectedRelationship.getName());\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 42,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 444,
                        "startLineNumber": 681,
                        "startColumnNumber": 8,
                        "endLineNumber": 689,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (final Relationship selectedRelationship : connection.getRelationships()) {\n  if (!Relationship.ANONYMOUS.equals(selectedRelationship)) {\n    if (dto.getSelectedRelationships() == null) {\n      dto.setSelectedRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n    }\n    dto.getSelectedRelationships().add(selectedRelationship.getName());\n  }\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 51,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2514,
                        "startLineNumber": 650,
                        "startColumnNumber": 74,
                        "endLineNumber": 703,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (connection == null) {\n    return null;\n  }\n  final ConnectionDTO dto=new ConnectionDTO();\n  dto.setId(connection.getIdentifier());\n  dto.setParentGroupId(connection.getProcessGroup().getIdentifier());\n  final List<PositionDTO> bendPoints=new ArrayList<>();\n  for (  final Position bendPoint : connection.getBendPoints()) {\n    bendPoints.add(createPositionDto(bendPoint));\n  }\n  dto.setBends(bendPoints);\n  dto.setName(connection.getName());\n  dto.setLabelIndex(connection.getLabelIndex());\n  dto.setzIndex(connection.getZIndex());\n  dto.setSource(createConnectableDto(connection.getSource()));\n  dto.setDestination(createConnectableDto(connection.getDestination()));\n  dto.setVersionedComponentId(connection.getVersionedComponentId().orElse(null));\n  dto.setBackPressureObjectThreshold(connection.getFlowFileQueue().getBackPressureObjectThreshold());\n  dto.setBackPressureDataSizeThreshold(connection.getFlowFileQueue().getBackPressureDataSizeThreshold());\n  dto.setFlowFileExpiration(connection.getFlowFileQueue().getFlowFileExpiration());\n  dto.setPrioritizers(new ArrayList<String>());\n  for (  final FlowFilePrioritizer comparator : connection.getFlowFileQueue().getPriorities()) {\n    dto.getPrioritizers().add(comparator.getClass().getCanonicalName());\n  }\n  for (  final Relationship selectedRelationship : connection.getRelationships()) {\n    if (!Relationship.ANONYMOUS.equals(selectedRelationship)) {\n      if (dto.getSelectedRelationships() == null) {\n        dto.setSelectedRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n      }\n      dto.getSelectedRelationships().add(selectedRelationship.getName());\n    }\n  }\n  for (  final Relationship availableRelationship : connection.getSource().getRelationships()) {\n    if (!Relationship.ANONYMOUS.equals(availableRelationship)) {\n      if (dto.getAvailableRelationships() == null) {\n        dto.setAvailableRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n      }\n      dto.getAvailableRelationships().add(availableRelationship.getName());\n    }\n  }\n  return dto;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 283,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2724,
                        "startLineNumber": 644,
                        "startColumnNumber": 4,
                        "endLineNumber": 703,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Creates a ConnectionDTO from the specified Connection.\n * @param connection connection\n * @return dto\n */\npublic ConnectionDTO createConnectionDto(final Connection connection){\n  if (connection == null) {\n    return null;\n  }\n  final ConnectionDTO dto=new ConnectionDTO();\n  dto.setId(connection.getIdentifier());\n  dto.setParentGroupId(connection.getProcessGroup().getIdentifier());\n  final List<PositionDTO> bendPoints=new ArrayList<>();\n  for (  final Position bendPoint : connection.getBendPoints()) {\n    bendPoints.add(createPositionDto(bendPoint));\n  }\n  dto.setBends(bendPoints);\n  dto.setName(connection.getName());\n  dto.setLabelIndex(connection.getLabelIndex());\n  dto.setzIndex(connection.getZIndex());\n  dto.setSource(createConnectableDto(connection.getSource()));\n  dto.setDestination(createConnectableDto(connection.getDestination()));\n  dto.setVersionedComponentId(connection.getVersionedComponentId().orElse(null));\n  dto.setBackPressureObjectThreshold(connection.getFlowFileQueue().getBackPressureObjectThreshold());\n  dto.setBackPressureDataSizeThreshold(connection.getFlowFileQueue().getBackPressureDataSizeThreshold());\n  dto.setFlowFileExpiration(connection.getFlowFileQueue().getFlowFileExpiration());\n  dto.setPrioritizers(new ArrayList<String>());\n  for (  final FlowFilePrioritizer comparator : connection.getFlowFileQueue().getPriorities()) {\n    dto.getPrioritizers().add(comparator.getClass().getCanonicalName());\n  }\n  for (  final Relationship selectedRelationship : connection.getRelationships()) {\n    if (!Relationship.ANONYMOUS.equals(selectedRelationship)) {\n      if (dto.getSelectedRelationships() == null) {\n        dto.setSelectedRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n      }\n      dto.getSelectedRelationships().add(selectedRelationship.getName());\n    }\n  }\n  for (  final Relationship availableRelationship : connection.getSource().getRelationships()) {\n    if (!Relationship.ANONYMOUS.equals(availableRelationship)) {\n      if (dto.getAvailableRelationships() == null) {\n        dto.setAvailableRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n      }\n      dto.getAvailableRelationships().add(availableRelationship.getName());\n    }\n  }\n  return dto;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 294,
                    "astHeight": 14
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 83,
                    "startLineNumber": 684,
                    "startColumnNumber": 20,
                    "endLineNumber": 684,
                    "endColumnNumber": 103
                },
                "nodeContext": "dto.setSelectedRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 16,
                "astHeight": 6
            },
            "tokenLength": 1,
            "type": "java.util.Locale"
        },
        {
            "nodeContext": "Locale",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 6,
                "startLineNumber": 695,
                "startColumnNumber": 91,
                "endLineNumber": 695,
                "endColumnNumber": 97
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 9,
                        "startLineNumber": 695,
                        "startColumnNumber": 91,
                        "endLineNumber": 695,
                        "endColumnNumber": 100
                    },
                    "nodeContext": "Locale.US",
                    "nodeType": "QualifiedName",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
                    "nodePosition": {
                        "charLength": 31,
                        "startLineNumber": 695,
                        "startColumnNumber": 70,
                        "endLineNumber": 695,
                        "endColumnNumber": 101
                    },
                    "nodeContext": "Collator.getInstance(Locale.US)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 52,
                        "startLineNumber": 695,
                        "startColumnNumber": 50,
                        "endLineNumber": 695,
                        "endColumnNumber": 102
                    },
                    "nodeContext": "new TreeSet<String>(Collator.getInstance(Locale.US))",
                    "nodeType": "ClassInstanceCreation",
                    "astNodeNumber": 12,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 83,
                        "startLineNumber": 695,
                        "startColumnNumber": 20,
                        "endLineNumber": 695,
                        "endColumnNumber": 103
                    },
                    "nodeContext": "dto.setAvailableRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)))",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 15,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 84,
                        "startLineNumber": 695,
                        "startColumnNumber": 20,
                        "endLineNumber": 695,
                        "endColumnNumber": 104
                    },
                    "nodeContext": "dto.setAvailableRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 16,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 124,
                        "startLineNumber": 694,
                        "startColumnNumber": 61,
                        "endLineNumber": 696,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  dto.setAvailableRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 17,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 169,
                        "startLineNumber": 694,
                        "startColumnNumber": 16,
                        "endLineNumber": 696,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (dto.getAvailableRelationships() == null) {\n  dto.setAvailableRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 23,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 288,
                        "startLineNumber": 693,
                        "startColumnNumber": 71,
                        "endLineNumber": 699,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  if (dto.getAvailableRelationships() == null) {\n    dto.setAvailableRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n  }\n  dto.getAvailableRelationships().add(availableRelationship.getName());\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 33,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 347,
                        "startLineNumber": 693,
                        "startColumnNumber": 12,
                        "endLineNumber": 699,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (!Relationship.ANONYMOUS.equals(availableRelationship)) {\n  if (dto.getAvailableRelationships() == null) {\n    dto.setAvailableRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n  }\n  dto.getAvailableRelationships().add(availableRelationship.getName());\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 41,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 371,
                        "startLineNumber": 692,
                        "startColumnNumber": 99,
                        "endLineNumber": 700,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (!Relationship.ANONYMOUS.equals(availableRelationship)) {\n    if (dto.getAvailableRelationships() == null) {\n      dto.setAvailableRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n    }\n    dto.getAvailableRelationships().add(availableRelationship.getName());\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 42,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 462,
                        "startLineNumber": 692,
                        "startColumnNumber": 8,
                        "endLineNumber": 700,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (final Relationship availableRelationship : connection.getSource().getRelationships()) {\n  if (!Relationship.ANONYMOUS.equals(availableRelationship)) {\n    if (dto.getAvailableRelationships() == null) {\n      dto.setAvailableRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n    }\n    dto.getAvailableRelationships().add(availableRelationship.getName());\n  }\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 53,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2514,
                        "startLineNumber": 650,
                        "startColumnNumber": 74,
                        "endLineNumber": 703,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (connection == null) {\n    return null;\n  }\n  final ConnectionDTO dto=new ConnectionDTO();\n  dto.setId(connection.getIdentifier());\n  dto.setParentGroupId(connection.getProcessGroup().getIdentifier());\n  final List<PositionDTO> bendPoints=new ArrayList<>();\n  for (  final Position bendPoint : connection.getBendPoints()) {\n    bendPoints.add(createPositionDto(bendPoint));\n  }\n  dto.setBends(bendPoints);\n  dto.setName(connection.getName());\n  dto.setLabelIndex(connection.getLabelIndex());\n  dto.setzIndex(connection.getZIndex());\n  dto.setSource(createConnectableDto(connection.getSource()));\n  dto.setDestination(createConnectableDto(connection.getDestination()));\n  dto.setVersionedComponentId(connection.getVersionedComponentId().orElse(null));\n  dto.setBackPressureObjectThreshold(connection.getFlowFileQueue().getBackPressureObjectThreshold());\n  dto.setBackPressureDataSizeThreshold(connection.getFlowFileQueue().getBackPressureDataSizeThreshold());\n  dto.setFlowFileExpiration(connection.getFlowFileQueue().getFlowFileExpiration());\n  dto.setPrioritizers(new ArrayList<String>());\n  for (  final FlowFilePrioritizer comparator : connection.getFlowFileQueue().getPriorities()) {\n    dto.getPrioritizers().add(comparator.getClass().getCanonicalName());\n  }\n  for (  final Relationship selectedRelationship : connection.getRelationships()) {\n    if (!Relationship.ANONYMOUS.equals(selectedRelationship)) {\n      if (dto.getSelectedRelationships() == null) {\n        dto.setSelectedRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n      }\n      dto.getSelectedRelationships().add(selectedRelationship.getName());\n    }\n  }\n  for (  final Relationship availableRelationship : connection.getSource().getRelationships()) {\n    if (!Relationship.ANONYMOUS.equals(availableRelationship)) {\n      if (dto.getAvailableRelationships() == null) {\n        dto.setAvailableRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n      }\n      dto.getAvailableRelationships().add(availableRelationship.getName());\n    }\n  }\n  return dto;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 283,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2724,
                        "startLineNumber": 644,
                        "startColumnNumber": 4,
                        "endLineNumber": 703,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Creates a ConnectionDTO from the specified Connection.\n * @param connection connection\n * @return dto\n */\npublic ConnectionDTO createConnectionDto(final Connection connection){\n  if (connection == null) {\n    return null;\n  }\n  final ConnectionDTO dto=new ConnectionDTO();\n  dto.setId(connection.getIdentifier());\n  dto.setParentGroupId(connection.getProcessGroup().getIdentifier());\n  final List<PositionDTO> bendPoints=new ArrayList<>();\n  for (  final Position bendPoint : connection.getBendPoints()) {\n    bendPoints.add(createPositionDto(bendPoint));\n  }\n  dto.setBends(bendPoints);\n  dto.setName(connection.getName());\n  dto.setLabelIndex(connection.getLabelIndex());\n  dto.setzIndex(connection.getZIndex());\n  dto.setSource(createConnectableDto(connection.getSource()));\n  dto.setDestination(createConnectableDto(connection.getDestination()));\n  dto.setVersionedComponentId(connection.getVersionedComponentId().orElse(null));\n  dto.setBackPressureObjectThreshold(connection.getFlowFileQueue().getBackPressureObjectThreshold());\n  dto.setBackPressureDataSizeThreshold(connection.getFlowFileQueue().getBackPressureDataSizeThreshold());\n  dto.setFlowFileExpiration(connection.getFlowFileQueue().getFlowFileExpiration());\n  dto.setPrioritizers(new ArrayList<String>());\n  for (  final FlowFilePrioritizer comparator : connection.getFlowFileQueue().getPriorities()) {\n    dto.getPrioritizers().add(comparator.getClass().getCanonicalName());\n  }\n  for (  final Relationship selectedRelationship : connection.getRelationships()) {\n    if (!Relationship.ANONYMOUS.equals(selectedRelationship)) {\n      if (dto.getSelectedRelationships() == null) {\n        dto.setSelectedRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n      }\n      dto.getSelectedRelationships().add(selectedRelationship.getName());\n    }\n  }\n  for (  final Relationship availableRelationship : connection.getSource().getRelationships()) {\n    if (!Relationship.ANONYMOUS.equals(availableRelationship)) {\n      if (dto.getAvailableRelationships() == null) {\n        dto.setAvailableRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n      }\n      dto.getAvailableRelationships().add(availableRelationship.getName());\n    }\n  }\n  return dto;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 294,
                    "astHeight": 14
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 84,
                    "startLineNumber": 695,
                    "startColumnNumber": 20,
                    "endLineNumber": 695,
                    "endColumnNumber": 104
                },
                "nodeContext": "dto.setAvailableRelationships(new TreeSet<String>(Collator.getInstance(Locale.US)));\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 16,
                "astHeight": 6
            },
            "tokenLength": 1,
            "type": "java.util.Locale"
        }
    ],
    "positionList": [
        {
            "charLength": 6,
            "startLineNumber": 684,
            "startColumnNumber": 90,
            "endLineNumber": 684,
            "endColumnNumber": 96
        },
        {
            "charLength": 6,
            "startLineNumber": 695,
            "startColumnNumber": 91,
            "endLineNumber": 695,
            "endColumnNumber": 97
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 11
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 11
        }
    ]
}