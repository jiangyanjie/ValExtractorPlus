{
    "id": 1774,
    "expression": "out",
    "projectName": "commons-compress",
    "commitID": "8619fdc1b65f51ecde2e96982eac9ee5843db462",
    "filePath": "src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java",
    "occurrences": 2,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "out",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 3,
                "startLineNumber": 71,
                "startColumnNumber": 46,
                "endLineNumber": 71,
                "endColumnNumber": 49
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 53,
                        "startLineNumber": 71,
                        "startColumnNumber": 16,
                        "endLineNumber": 71,
                        "endColumnNumber": 69
                    },
                    "nodeContext": "copyStream(change.getInput(),out,change.getEntry())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 9,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 54,
                        "startLineNumber": 71,
                        "startColumnNumber": 16,
                        "endLineNumber": 71,
                        "endColumnNumber": 70
                    },
                    "nodeContext": "copyStream(change.getInput(),out,change.getEntry());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 10,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 115,
                        "startLineNumber": 70,
                        "startColumnNumber": 50,
                        "endLineNumber": 73,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  copyStream(change.getInput(),out,change.getEntry());\n  it.remove();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 15,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 153,
                        "startLineNumber": 70,
                        "startColumnNumber": 12,
                        "endLineNumber": 73,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (change.type() == Change.TYPE_ADD) {\n  copyStream(change.getInput(),out,change.getEntry());\n  it.remove();\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 23,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 226,
                        "startLineNumber": 67,
                        "startColumnNumber": 65,
                        "endLineNumber": 74,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  Change change=(Change)it.next();\n  if (change.type() == Change.TYPE_ADD) {\n    copyStream(change.getInput(),out,change.getEntry());\n    it.remove();\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 35,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 283,
                        "startLineNumber": 67,
                        "startColumnNumber": 8,
                        "endLineNumber": 74,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (Iterator it=workingSet.iterator(); it.hasNext(); ) {\n  Change change=(Change)it.next();\n  if (change.type() == Change.TYPE_ADD) {\n    copyStream(change.getInput(),out,change.getEntry());\n    it.remove();\n  }\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 47,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1443,
                        "startLineNumber": 64,
                        "startColumnNumber": 31,
                        "endLineNumber": 106,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  Set workingSet=new LinkedHashSet(changes);\n  for (Iterator it=workingSet.iterator(); it.hasNext(); ) {\n    Change change=(Change)it.next();\n    if (change.type() == Change.TYPE_ADD) {\n      copyStream(change.getInput(),out,change.getEntry());\n      it.remove();\n    }\n  }\n  ArchiveEntry entry=null;\n  while ((entry=in.getNextEntry()) != null) {\n    boolean copy=true;\n    for (Iterator it=workingSet.iterator(); it.hasNext(); ) {\n      Change change=(Change)it.next();\n      if (change.type() == Change.TYPE_DELETE && entry.getName() != null) {\n        if (entry.getName().equals(change.targetFile())) {\n          copy=false;\n          it.remove();\n          break;\n        }\n      }\n else       if (change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null) {\n        if (entry.getName().matches(change.targetFile() + \"/.*\")) {\n          copy=false;\n          break;\n        }\n      }\n    }\n    if (copy) {\n      if (!isDeletedLater(workingSet,entry)) {\n        copyStream(in,out,entry);\n      }\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 184,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1971,
                        "startLineNumber": 52,
                        "startColumnNumber": 4,
                        "endLineNumber": 106,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Performs all changes collected in this ChangeSet on the input stream and streams the result to the output stream. Perform may be called more than once.\n * @param in the InputStream to perform the changes on\n * @param out the resulting OutputStream with all modifications\n * @throws IOException if an read/write error occurs\n */\npublic void perform(ArchiveInputStream in,ArchiveOutputStream out) throws IOException {\n  Set workingSet=new LinkedHashSet(changes);\n  for (Iterator it=workingSet.iterator(); it.hasNext(); ) {\n    Change change=(Change)it.next();\n    if (change.type() == Change.TYPE_ADD) {\n      copyStream(change.getInput(),out,change.getEntry());\n      it.remove();\n    }\n  }\n  ArchiveEntry entry=null;\n  while ((entry=in.getNextEntry()) != null) {\n    boolean copy=true;\n    for (Iterator it=workingSet.iterator(); it.hasNext(); ) {\n      Change change=(Change)it.next();\n      if (change.type() == Change.TYPE_DELETE && entry.getName() != null) {\n        if (entry.getName().equals(change.targetFile())) {\n          copy=false;\n          it.remove();\n          break;\n        }\n      }\n else       if (change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null) {\n        if (entry.getName().matches(change.targetFile() + \"/.*\")) {\n          copy=false;\n          break;\n        }\n      }\n    }\n    if (copy) {\n      if (!isDeletedLater(workingSet,entry)) {\n        copyStream(in,out,entry);\n      }\n    }\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 199,
                    "astHeight": 14
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 54,
                    "startLineNumber": 71,
                    "startColumnNumber": 16,
                    "endLineNumber": 71,
                    "endColumnNumber": 70
                },
                "nodeContext": "copyStream(change.getInput(),out,change.getEntry());\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 10,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.commons.compress.archivers.ArchiveOutputStream"
        },
        {
            "nodeContext": "out",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 3,
                "startLineNumber": 102,
                "startColumnNumber": 35,
                "endLineNumber": 102,
                "endColumnNumber": 38
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 26,
                        "startLineNumber": 102,
                        "startColumnNumber": 20,
                        "endLineNumber": 102,
                        "endColumnNumber": 46
                    },
                    "nodeContext": "copyStream(in,out,entry)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 27,
                        "startLineNumber": 102,
                        "startColumnNumber": 20,
                        "endLineNumber": 102,
                        "endColumnNumber": 47
                    },
                    "nodeContext": "copyStream(in,out,entry);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 67,
                        "startLineNumber": 101,
                        "startColumnNumber": 56,
                        "endLineNumber": 103,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  copyStream(in,out,entry);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 107,
                        "startLineNumber": 101,
                        "startColumnNumber": 16,
                        "endLineNumber": 103,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (!isDeletedLater(workingSet,entry)) {\n  copyStream(in,out,entry);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 13,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 139,
                        "startLineNumber": 100,
                        "startColumnNumber": 22,
                        "endLineNumber": 104,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  if (!isDeletedLater(workingSet,entry)) {\n    copyStream(in,out,entry);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 14,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 149,
                        "startLineNumber": 100,
                        "startColumnNumber": 12,
                        "endLineNumber": 104,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (copy) {\n  if (!isDeletedLater(workingSet,entry)) {\n    copyStream(in,out,entry);\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 16,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
                    "nodePosition": {
                        "charLength": 993,
                        "startLineNumber": 77,
                        "startColumnNumber": 52,
                        "endLineNumber": 105,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  boolean copy=true;\n  for (Iterator it=workingSet.iterator(); it.hasNext(); ) {\n    Change change=(Change)it.next();\n    if (change.type() == Change.TYPE_DELETE && entry.getName() != null) {\n      if (entry.getName().equals(change.targetFile())) {\n        copy=false;\n        it.remove();\n        break;\n      }\n    }\n else     if (change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null) {\n      if (entry.getName().matches(change.targetFile() + \"/.*\")) {\n        copy=false;\n        break;\n      }\n    }\n  }\n  if (copy) {\n    if (!isDeletedLater(workingSet,entry)) {\n      copyStream(in,out,entry);\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 112,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1037,
                        "startLineNumber": 77,
                        "startColumnNumber": 8,
                        "endLineNumber": 105,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "while ((entry=in.getNextEntry()) != null) {\n  boolean copy=true;\n  for (Iterator it=workingSet.iterator(); it.hasNext(); ) {\n    Change change=(Change)it.next();\n    if (change.type() == Change.TYPE_DELETE && entry.getName() != null) {\n      if (entry.getName().equals(change.targetFile())) {\n        copy=false;\n        it.remove();\n        break;\n      }\n    }\n else     if (change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null) {\n      if (entry.getName().matches(change.targetFile() + \"/.*\")) {\n        copy=false;\n        break;\n      }\n    }\n  }\n  if (copy) {\n    if (!isDeletedLater(workingSet,entry)) {\n      copyStream(in,out,entry);\n    }\n  }\n}\n",
                    "nodeType": "WhileStatement",
                    "astNodeNumber": 121,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1443,
                        "startLineNumber": 64,
                        "startColumnNumber": 31,
                        "endLineNumber": 106,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  Set workingSet=new LinkedHashSet(changes);\n  for (Iterator it=workingSet.iterator(); it.hasNext(); ) {\n    Change change=(Change)it.next();\n    if (change.type() == Change.TYPE_ADD) {\n      copyStream(change.getInput(),out,change.getEntry());\n      it.remove();\n    }\n  }\n  ArchiveEntry entry=null;\n  while ((entry=in.getNextEntry()) != null) {\n    boolean copy=true;\n    for (Iterator it=workingSet.iterator(); it.hasNext(); ) {\n      Change change=(Change)it.next();\n      if (change.type() == Change.TYPE_DELETE && entry.getName() != null) {\n        if (entry.getName().equals(change.targetFile())) {\n          copy=false;\n          it.remove();\n          break;\n        }\n      }\n else       if (change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null) {\n        if (entry.getName().matches(change.targetFile() + \"/.*\")) {\n          copy=false;\n          break;\n        }\n      }\n    }\n    if (copy) {\n      if (!isDeletedLater(workingSet,entry)) {\n        copyStream(in,out,entry);\n      }\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 184,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1971,
                        "startLineNumber": 52,
                        "startColumnNumber": 4,
                        "endLineNumber": 106,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Performs all changes collected in this ChangeSet on the input stream and streams the result to the output stream. Perform may be called more than once.\n * @param in the InputStream to perform the changes on\n * @param out the resulting OutputStream with all modifications\n * @throws IOException if an read/write error occurs\n */\npublic void perform(ArchiveInputStream in,ArchiveOutputStream out) throws IOException {\n  Set workingSet=new LinkedHashSet(changes);\n  for (Iterator it=workingSet.iterator(); it.hasNext(); ) {\n    Change change=(Change)it.next();\n    if (change.type() == Change.TYPE_ADD) {\n      copyStream(change.getInput(),out,change.getEntry());\n      it.remove();\n    }\n  }\n  ArchiveEntry entry=null;\n  while ((entry=in.getNextEntry()) != null) {\n    boolean copy=true;\n    for (Iterator it=workingSet.iterator(); it.hasNext(); ) {\n      Change change=(Change)it.next();\n      if (change.type() == Change.TYPE_DELETE && entry.getName() != null) {\n        if (entry.getName().equals(change.targetFile())) {\n          copy=false;\n          it.remove();\n          break;\n        }\n      }\n else       if (change.type() == Change.TYPE_DELETE_DIR && entry.getName() != null) {\n        if (entry.getName().matches(change.targetFile() + \"/.*\")) {\n          copy=false;\n          break;\n        }\n      }\n    }\n    if (copy) {\n      if (!isDeletedLater(workingSet,entry)) {\n        copyStream(in,out,entry);\n      }\n    }\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 199,
                    "astHeight": 14
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 27,
                    "startLineNumber": 102,
                    "startColumnNumber": 20,
                    "endLineNumber": 102,
                    "endColumnNumber": 47
                },
                "nodeContext": "copyStream(in,out,entry);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 6,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "org.apache.commons.compress.archivers.ArchiveOutputStream"
        }
    ],
    "positionList": [
        {
            "charLength": 3,
            "startLineNumber": 71,
            "startColumnNumber": 46,
            "endLineNumber": 71,
            "endColumnNumber": 49
        },
        {
            "charLength": 3,
            "startLineNumber": 102,
            "startColumnNumber": 35,
            "endLineNumber": 102,
            "endColumnNumber": 38
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 6
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 8
        }
    ]
}