{
    "id": 177,
    "expression": "chipStrokeWidth / 2f + chipStartPadding + calculateChipIconWidth()",
    "projectName": "material-components@material-components-android",
    "commitID": "663e1cd1cb3bbe75094e9f4baaae94f44a469798",
    "filePath": "lib/src/android/support/design/chip/ChipDrawable.java",
    "occurrences": 1,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "chipStrokeWidth / 2f + chipStartPadding + calculateChipIconWidth()",
            "nodeType": "InfixExpression",
            "nodePosition": {
                "charLength": 66,
                "startLineNumber": 619,
                "startColumnNumber": 10,
                "endLineNumber": 619,
                "endColumnNumber": 76
            },
            "astNodeNumber": 8,
            "astHeight": 4,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 85,
                        "startLineNumber": 619,
                        "startColumnNumber": 10,
                        "endLineNumber": 619,
                        "endColumnNumber": 95
                    },
                    "nodeContext": "chipStrokeWidth / 2f + chipStartPadding + calculateChipIconWidth() + textStartPadding",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 10,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 113,
                        "startLineNumber": 618,
                        "startColumnNumber": 12,
                        "endLineNumber": 619,
                        "endColumnNumber": 95
                    },
                    "nodeContext": "offsetFromStart=chipStrokeWidth / 2f + chipStartPadding + calculateChipIconWidth() + textStartPadding",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 12,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 120,
                        "startLineNumber": 618,
                        "startColumnNumber": 6,
                        "endLineNumber": 619,
                        "endColumnNumber": 96
                    },
                    "nodeContext": "float offsetFromStart=chipStrokeWidth / 2f + chipStartPadding + calculateChipIconWidth() + textStartPadding;\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 14,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 474,
                        "startLineNumber": 617,
                        "startColumnNumber": 26,
                        "endLineNumber": 630,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  float offsetFromStart=chipStrokeWidth / 2f + chipStartPadding + calculateChipIconWidth() + textStartPadding;\n  if (DrawableCompat.getLayoutDirection(this) == View.LAYOUT_DIRECTION_LTR) {\n    pointF.x=bounds.left + offsetFromStart;\n    align=Align.LEFT;\n  }\n else {\n    pointF.x=bounds.right - offsetFromStart;\n    align=Align.RIGHT;\n  }\n  pointF.y=bounds.centerY() - calculateChipTextCenterFromBaseline();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 69,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 496,
                        "startLineNumber": 617,
                        "startColumnNumber": 4,
                        "endLineNumber": 630,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "if (chipText != null) {\n  float offsetFromStart=chipStrokeWidth / 2f + chipStartPadding + calculateChipIconWidth() + textStartPadding;\n  if (DrawableCompat.getLayoutDirection(this) == View.LAYOUT_DIRECTION_LTR) {\n    pointF.x=bounds.left + offsetFromStart;\n    align=Align.LEFT;\n  }\n else {\n    pointF.x=bounds.right - offsetFromStart;\n    align=Align.RIGHT;\n  }\n  pointF.y=bounds.centerY() - calculateChipTextCenterFromBaseline();\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 73,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 572,
                        "startLineNumber": 613,
                        "startColumnNumber": 68,
                        "endLineNumber": 633,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  pointF.set(0,0);\n  Align align=null;\n  if (chipText != null) {\n    float offsetFromStart=chipStrokeWidth / 2f + chipStartPadding + calculateChipIconWidth() + textStartPadding;\n    if (DrawableCompat.getLayoutDirection(this) == View.LAYOUT_DIRECTION_LTR) {\n      pointF.x=bounds.left + offsetFromStart;\n      align=Align.LEFT;\n    }\n else {\n      pointF.x=bounds.right - offsetFromStart;\n      align=Align.RIGHT;\n    }\n    pointF.y=bounds.centerY() - calculateChipTextCenterFromBaseline();\n  }\n  return align;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 88,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 814,
                        "startLineNumber": 609,
                        "startColumnNumber": 2,
                        "endLineNumber": 633,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "/** \n * Calculates the chip text's drawable-absolute origin point (top-left is <code>[bounds.left, bounds.top]</code>). Returns the text alignment at the origin.\n */\nprivate Align calculateChipTextOrigin(Rect bounds,PointF pointF){\n  pointF.set(0,0);\n  Align align=null;\n  if (chipText != null) {\n    float offsetFromStart=chipStrokeWidth / 2f + chipStartPadding + calculateChipIconWidth() + textStartPadding;\n    if (DrawableCompat.getLayoutDirection(this) == View.LAYOUT_DIRECTION_LTR) {\n      pointF.x=bounds.left + offsetFromStart;\n      align=Align.LEFT;\n    }\n else {\n      pointF.x=bounds.right - offsetFromStart;\n      align=Align.RIGHT;\n    }\n    pointF.y=bounds.centerY() - calculateChipTextCenterFromBaseline();\n  }\n  return align;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 102,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                "nodePosition": {
                    "charLength": 85,
                    "startLineNumber": 619,
                    "startColumnNumber": 10,
                    "endLineNumber": 619,
                    "endColumnNumber": 95
                },
                "nodeContext": "chipStrokeWidth / 2f + chipStartPadding + calculateChipIconWidth() + textStartPadding",
                "nodeType": "InfixExpression",
                "astNodeNumber": 10,
                "astHeight": 5
            },
            "tokenLength": 7,
            "type": "float"
        }
    ],
    "positionList": [
        {
            "charLength": 66,
            "startLineNumber": 619,
            "startColumnNumber": 10,
            "endLineNumber": 619,
            "endColumnNumber": 76
        }
    ],
    "layoutRelationDataList": []
}