{
    "id": 256,
    "expression": "symbolTable",
    "projectName": "NationalSecurityAgency@ghidra",
    "commitID": "e5df6fdd7bbc13dadc918bafa0f4f5767e74e1a7",
    "filePath": "Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/symbol/SymbolDatabaseAdapterV3.java",
    "occurrences": 2,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "symbolTable",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 11,
                "startLineNumber": 108,
                "startColumnNumber": 17,
                "endLineNumber": 108,
                "endColumnNumber": 28
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 23,
                        "startLineNumber": 108,
                        "startColumnNumber": 17,
                        "endLineNumber": 108,
                        "endColumnNumber": 40
                    },
                    "nodeContext": "symbolTable.getSchema()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 40,
                        "startLineNumber": 108,
                        "startColumnNumber": 17,
                        "endLineNumber": 108,
                        "endColumnNumber": 57
                    },
                    "nodeContext": "symbolTable.getSchema().createRecord(id)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 46,
                        "startLineNumber": 108,
                        "startColumnNumber": 11,
                        "endLineNumber": 108,
                        "endColumnNumber": 57
                    },
                    "nodeContext": "rec=symbolTable.getSchema().createRecord(id)",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 56,
                        "startLineNumber": 108,
                        "startColumnNumber": 2,
                        "endLineNumber": 108,
                        "endColumnNumber": 58
                    },
                    "nodeContext": "DBRecord rec=symbolTable.getSchema().createRecord(id);\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 11,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 975,
                        "startLineNumber": 104,
                        "startColumnNumber": 77,
                        "endLineNumber": 136,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  long addressKey=addrMap.getKey(address,true);\n  DBRecord rec=symbolTable.getSchema().createRecord(id);\n  rec.setString(SYMBOL_NAME_COL,name);\n  rec.setLongValue(SYMBOL_ADDR_COL,addressKey);\n  rec.setLongValue(SYMBOL_PARENT_COL,namespaceID);\n  rec.setByteValue(SYMBOL_TYPE_COL,symbolType.getID());\n  rec.setString(SYMBOL_STRING_DATA_COL,stringData);\n  rec.setByteValue(SYMBOL_FLAGS_COL,flags);\n  rec.setField(SYMBOL_HASH_COL,computeLocatorHash(name,namespaceID,addressKey));\n  if (isPrimary) {\n    rec.setLongValue(SYMBOL_PRIMARY_COL,addressKey);\n  }\n  if (dataTypeId != null) {\n    rec.setLongValue(SYMBOL_DATATYPE_COL,dataTypeId);\n  }\n  if (varOffset != null) {\n    rec.setIntValue(SYMBOL_VAROFFSET_COL,varOffset);\n  }\n  symbolTable.putRecord(rec);\n  return rec;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 107,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1198,
                        "startLineNumber": 102,
                        "startColumnNumber": 1,
                        "endLineNumber": 136,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "private DBRecord createSymbol(long id,String name,Address address,long namespaceID,SymbolType symbolType,String stringData,byte flags,Long dataTypeId,Integer varOffset,boolean isPrimary) throws IOException {\n  long addressKey=addrMap.getKey(address,true);\n  DBRecord rec=symbolTable.getSchema().createRecord(id);\n  rec.setString(SYMBOL_NAME_COL,name);\n  rec.setLongValue(SYMBOL_ADDR_COL,addressKey);\n  rec.setLongValue(SYMBOL_PARENT_COL,namespaceID);\n  rec.setByteValue(SYMBOL_TYPE_COL,symbolType.getID());\n  rec.setString(SYMBOL_STRING_DATA_COL,stringData);\n  rec.setByteValue(SYMBOL_FLAGS_COL,flags);\n  rec.setField(SYMBOL_HASH_COL,computeLocatorHash(name,namespaceID,addressKey));\n  if (isPrimary) {\n    rec.setLongValue(SYMBOL_PRIMARY_COL,addressKey);\n  }\n  if (dataTypeId != null) {\n    rec.setLongValue(SYMBOL_DATATYPE_COL,dataTypeId);\n  }\n  if (varOffset != null) {\n    rec.setIntValue(SYMBOL_VAROFFSET_COL,varOffset);\n  }\n  symbolTable.putRecord(rec);\n  return rec;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 150,
                    "astHeight": 7
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 56,
                    "startLineNumber": 108,
                    "startColumnNumber": 2,
                    "endLineNumber": 108,
                    "endColumnNumber": 58
                },
                "nodeContext": "DBRecord rec=symbolTable.getSchema().createRecord(id);\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 11,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "db.Table"
        },
        {
            "nodeContext": "symbolTable",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 11,
                "startLineNumber": 134,
                "startColumnNumber": 2,
                "endLineNumber": 134,
                "endColumnNumber": 13
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 26,
                        "startLineNumber": 134,
                        "startColumnNumber": 2,
                        "endLineNumber": 134,
                        "endColumnNumber": 28
                    },
                    "nodeContext": "symbolTable.putRecord(rec)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 27,
                        "startLineNumber": 134,
                        "startColumnNumber": 2,
                        "endLineNumber": 134,
                        "endColumnNumber": 29
                    },
                    "nodeContext": "symbolTable.putRecord(rec);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 975,
                        "startLineNumber": 104,
                        "startColumnNumber": 77,
                        "endLineNumber": 136,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  long addressKey=addrMap.getKey(address,true);\n  DBRecord rec=symbolTable.getSchema().createRecord(id);\n  rec.setString(SYMBOL_NAME_COL,name);\n  rec.setLongValue(SYMBOL_ADDR_COL,addressKey);\n  rec.setLongValue(SYMBOL_PARENT_COL,namespaceID);\n  rec.setByteValue(SYMBOL_TYPE_COL,symbolType.getID());\n  rec.setString(SYMBOL_STRING_DATA_COL,stringData);\n  rec.setByteValue(SYMBOL_FLAGS_COL,flags);\n  rec.setField(SYMBOL_HASH_COL,computeLocatorHash(name,namespaceID,addressKey));\n  if (isPrimary) {\n    rec.setLongValue(SYMBOL_PRIMARY_COL,addressKey);\n  }\n  if (dataTypeId != null) {\n    rec.setLongValue(SYMBOL_DATATYPE_COL,dataTypeId);\n  }\n  if (varOffset != null) {\n    rec.setIntValue(SYMBOL_VAROFFSET_COL,varOffset);\n  }\n  symbolTable.putRecord(rec);\n  return rec;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 107,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1198,
                        "startLineNumber": 102,
                        "startColumnNumber": 1,
                        "endLineNumber": 136,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "private DBRecord createSymbol(long id,String name,Address address,long namespaceID,SymbolType symbolType,String stringData,byte flags,Long dataTypeId,Integer varOffset,boolean isPrimary) throws IOException {\n  long addressKey=addrMap.getKey(address,true);\n  DBRecord rec=symbolTable.getSchema().createRecord(id);\n  rec.setString(SYMBOL_NAME_COL,name);\n  rec.setLongValue(SYMBOL_ADDR_COL,addressKey);\n  rec.setLongValue(SYMBOL_PARENT_COL,namespaceID);\n  rec.setByteValue(SYMBOL_TYPE_COL,symbolType.getID());\n  rec.setString(SYMBOL_STRING_DATA_COL,stringData);\n  rec.setByteValue(SYMBOL_FLAGS_COL,flags);\n  rec.setField(SYMBOL_HASH_COL,computeLocatorHash(name,namespaceID,addressKey));\n  if (isPrimary) {\n    rec.setLongValue(SYMBOL_PRIMARY_COL,addressKey);\n  }\n  if (dataTypeId != null) {\n    rec.setLongValue(SYMBOL_DATATYPE_COL,dataTypeId);\n  }\n  if (varOffset != null) {\n    rec.setIntValue(SYMBOL_VAROFFSET_COL,varOffset);\n  }\n  symbolTable.putRecord(rec);\n  return rec;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 150,
                    "astHeight": 7
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 27,
                    "startLineNumber": 134,
                    "startColumnNumber": 2,
                    "endLineNumber": 134,
                    "endColumnNumber": 29
                },
                "nodeContext": "symbolTable.putRecord(rec);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 5,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "db.Table"
        }
    ],
    "positionList": [
        {
            "charLength": 11,
            "startLineNumber": 108,
            "startColumnNumber": 17,
            "endLineNumber": 108,
            "endColumnNumber": 28
        },
        {
            "charLength": 11,
            "startLineNumber": 134,
            "startColumnNumber": 2,
            "endLineNumber": 134,
            "endColumnNumber": 13
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 2
        }
    ]
}