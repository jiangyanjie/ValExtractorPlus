{
    "id": 2671,
    "expression": "pivot[row]",
    "projectName": "commons-math",
    "commitID": "d60149c7f8a840f9a21556aabfbc0d33e1d58eb5",
    "filePath": "src/java/org/apache/commons/math/linear/decomposition/LUDecompositionImpl.java",
    "occurrences": 1,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "pivot[row]",
            "nodeType": "ArrayAccess",
            "nodePosition": {
                "charLength": 10,
                "startLineNumber": 329,
                "startColumnNumber": 41,
                "endLineNumber": 329,
                "endColumnNumber": 51
            },
            "astNodeNumber": 3,
            "astHeight": 2,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 22,
                        "startLineNumber": 329,
                        "startColumnNumber": 30,
                        "endLineNumber": 329,
                        "endColumnNumber": 52
                    },
                    "nodeContext": "b.getEntry(pivot[row])",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 32,
                        "startLineNumber": 329,
                        "startColumnNumber": 20,
                        "endLineNumber": 329,
                        "endColumnNumber": 52
                    },
                    "nodeContext": "bp[row]=b.getEntry(pivot[row])",
                    "nodeType": "Assignment",
                    "astNodeNumber": 10,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 33,
                        "startLineNumber": 329,
                        "startColumnNumber": 20,
                        "endLineNumber": 329,
                        "endColumnNumber": 53
                    },
                    "nodeContext": "bp[row]=b.getEntry(pivot[row]);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 11,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 73,
                        "startLineNumber": 328,
                        "startColumnNumber": 50,
                        "endLineNumber": 330,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  bp[row]=b.getEntry(pivot[row]);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 12,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 107,
                        "startLineNumber": 328,
                        "startColumnNumber": 16,
                        "endLineNumber": 330,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "for (int row=0; row < m; row++) {\n  bp[row]=b.getEntry(pivot[row]);\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 23,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
                    "nodePosition": {
                        "charLength": 1233,
                        "startLineNumber": 313,
                        "startColumnNumber": 45,
                        "endLineNumber": 349,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  final int m=pivot.length;\n  if (b.getDimension() != m) {\n    throw MathRuntimeException.createIllegalArgumentException(\"vector length mismatch: got {0} but expected {1}\",b.getDimension(),m);\n  }\n  if (singular) {\n    throw new SingularMatrixException();\n  }\n  final double[] bp=new double[m];\n  for (int row=0; row < m; row++) {\n    bp[row]=b.getEntry(pivot[row]);\n  }\n  for (int col=0; col < m; col++) {\n    for (int i=col + 1; i < m; i++) {\n      bp[i]-=bp[col] * lu[i][col];\n    }\n  }\n  for (int col=m - 1; col >= 0; col--) {\n    bp[col]/=lu[col][col];\n    for (int i=0; i < col; i++) {\n      bp[i]-=bp[col] * lu[i][col];\n    }\n  }\n  return new RealVectorImpl(bp,false);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 163,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
                    "nodePosition": {
                        "charLength": 1264,
                        "startLineNumber": 313,
                        "startColumnNumber": 14,
                        "endLineNumber": 349,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "catch (ClassCastException cce) {\n  final int m=pivot.length;\n  if (b.getDimension() != m) {\n    throw MathRuntimeException.createIllegalArgumentException(\"vector length mismatch: got {0} but expected {1}\",b.getDimension(),m);\n  }\n  if (singular) {\n    throw new SingularMatrixException();\n  }\n  final double[] bp=new double[m];\n  for (int row=0; row < m; row++) {\n    bp[row]=b.getEntry(pivot[row]);\n  }\n  for (int col=0; col < m; col++) {\n    for (int i=col + 1; i < m; i++) {\n      bp[i]-=bp[col] * lu[i][col];\n    }\n  }\n  for (int col=m - 1; col >= 0; col--) {\n    bp[col]/=lu[col][col];\n    for (int i=0; i < col; i++) {\n      bp[i]-=bp[col] * lu[i][col];\n    }\n  }\n  return new RealVectorImpl(bp,false);\n}\n",
                    "nodeType": "CatchClause",
                    "astNodeNumber": 168,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1334,
                        "startLineNumber": 311,
                        "startColumnNumber": 12,
                        "endLineNumber": 349,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "try {\n  return solve((RealVectorImpl)b);\n}\n catch (ClassCastException cce) {\n  final int m=pivot.length;\n  if (b.getDimension() != m) {\n    throw MathRuntimeException.createIllegalArgumentException(\"vector length mismatch: got {0} but expected {1}\",b.getDimension(),m);\n  }\n  if (singular) {\n    throw new SingularMatrixException();\n  }\n  final double[] bp=new double[m];\n  for (int row=0; row < m; row++) {\n    bp[row]=b.getEntry(pivot[row]);\n  }\n  for (int col=0; col < m; col++) {\n    for (int i=col + 1; i < m; i++) {\n      bp[i]-=bp[col] * lu[i][col];\n    }\n  }\n  for (int col=m - 1; col >= 0; col--) {\n    bp[col]/=lu[col][col];\n    for (int i=0; i < col; i++) {\n      bp[i]-=bp[col] * lu[i][col];\n    }\n  }\n  return new RealVectorImpl(bp,false);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 177,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1358,
                        "startLineNumber": 310,
                        "startColumnNumber": 68,
                        "endLineNumber": 350,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  try {\n    return solve((RealVectorImpl)b);\n  }\n catch (  ClassCastException cce) {\n    final int m=pivot.length;\n    if (b.getDimension() != m) {\n      throw MathRuntimeException.createIllegalArgumentException(\"vector length mismatch: got {0} but expected {1}\",b.getDimension(),m);\n    }\n    if (singular) {\n      throw new SingularMatrixException();\n    }\n    final double[] bp=new double[m];\n    for (int row=0; row < m; row++) {\n      bp[row]=b.getEntry(pivot[row]);\n    }\n    for (int col=0; col < m; col++) {\n      for (int i=col + 1; i < m; i++) {\n        bp[i]-=bp[col] * lu[i][col];\n      }\n    }\n    for (int col=m - 1; col >= 0; col--) {\n      bp[col]/=lu[col][col];\n      for (int i=0; i < col; i++) {\n        bp[i]-=bp[col] * lu[i][col];\n      }\n    }\n    return new RealVectorImpl(bp,false);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 178,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1493,
                        "startLineNumber": 308,
                        "startColumnNumber": 8,
                        "endLineNumber": 350,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "/** \n * {@inheritDoc} \n */\npublic RealVector solve(RealVector b) throws IllegalArgumentException, InvalidMatrixException {\n  try {\n    return solve((RealVectorImpl)b);\n  }\n catch (  ClassCastException cce) {\n    final int m=pivot.length;\n    if (b.getDimension() != m) {\n      throw MathRuntimeException.createIllegalArgumentException(\"vector length mismatch: got {0} but expected {1}\",b.getDimension(),m);\n    }\n    if (singular) {\n      throw new SingularMatrixException();\n    }\n    final double[] bp=new double[m];\n    for (int row=0; row < m; row++) {\n      bp[row]=b.getEntry(pivot[row]);\n    }\n    for (int col=0; col < m; col++) {\n      for (int i=col + 1; i < m; i++) {\n        bp[i]-=bp[col] * lu[i][col];\n      }\n    }\n    for (int col=m - 1; col >= 0; col--) {\n      bp[col]/=lu[col][col];\n      for (int i=0; i < col; i++) {\n        bp[i]-=bp[col] * lu[i][col];\n      }\n    }\n    return new RealVectorImpl(bp,false);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 192,
                    "astHeight": 15
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 33,
                    "startLineNumber": 329,
                    "startColumnNumber": 20,
                    "endLineNumber": 329,
                    "endColumnNumber": 53
                },
                "nodeContext": "bp[row]=b.getEntry(pivot[row]);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 11,
                "astHeight": 5
            },
            "tokenLength": 2,
            "type": "int"
        }
    ],
    "positionList": [
        {
            "charLength": 10,
            "startLineNumber": 329,
            "startColumnNumber": 41,
            "endLineNumber": 329,
            "endColumnNumber": 51
        }
    ],
    "layoutRelationDataList": []
}