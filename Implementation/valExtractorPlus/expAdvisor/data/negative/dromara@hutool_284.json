{
    "id": 284,
    "expression": "ignoreError",
    "projectName": "dromara@hutool",
    "commitID": "df58ad5eff9d1a896e34348e7720fe7c46e7b690",
    "filePath": "hutool-core/src/main/java/cn/hutool/core/bean/copier/provider/BeanValueProvider.java",
    "occurrences": 2,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "ignoreError",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 11,
                "startLineNumber": 54,
                "startColumnNumber": 18,
                "endLineNumber": 54,
                "endColumnNumber": 29
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 20,
                        "startLineNumber": 54,
                        "startColumnNumber": 9,
                        "endLineNumber": 54,
                        "endColumnNumber": 29
                    },
                    "nodeContext": "false == ignoreError",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 97,
                        "startLineNumber": 54,
                        "startColumnNumber": 5,
                        "endLineNumber": 56,
                        "endColumnNumber": 6
                    },
                    "nodeContext": "if (false == ignoreError) {\n  throw new UtilException(e,\"Inject [{}] error!\",key);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 12,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
                    "nodePosition": {
                        "charLength": 112,
                        "startLineNumber": 53,
                        "startColumnNumber": 26,
                        "endLineNumber": 57,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (false == ignoreError) {\n    throw new UtilException(e,\"Inject [{}] error!\",key);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 13,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
                    "nodePosition": {
                        "charLength": 132,
                        "startLineNumber": 53,
                        "startColumnNumber": 6,
                        "endLineNumber": 57,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "catch (Exception e) {\n  if (false == ignoreError) {\n    throw new UtilException(e,\"Inject [{}] error!\",key);\n  }\n}\n",
                    "nodeType": "CatchClause",
                    "astNodeNumber": 18,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 183,
                        "startLineNumber": 51,
                        "startColumnNumber": 4,
                        "endLineNumber": 57,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "try {\n  result=getter.invoke(source);\n}\n catch (Exception e) {\n  if (false == ignoreError) {\n    throw new UtilException(e,\"Inject [{}] error!\",key);\n  }\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 27,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 396,
                        "startLineNumber": 50,
                        "startColumnNumber": 23,
                        "endLineNumber": 64,
                        "endColumnNumber": 4
                    },
                    "nodeContext": "{\n  try {\n    result=getter.invoke(source);\n  }\n catch (  Exception e) {\n    if (false == ignoreError) {\n      throw new UtilException(e,\"Inject [{}] error!\",key);\n    }\n  }\n  final Object convertValue=Convert.convertWithCheck(valueType,result,null,ignoreError);\n  if (null != convertValue) {\n    result=convertValue;\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 50,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 416,
                        "startLineNumber": 50,
                        "startColumnNumber": 3,
                        "endLineNumber": 64,
                        "endColumnNumber": 4
                    },
                    "nodeContext": "if (null != getter) {\n  try {\n    result=getter.invoke(source);\n  }\n catch (  Exception e) {\n    if (false == ignoreError) {\n      throw new UtilException(e,\"Inject [{}] error!\",key);\n    }\n  }\n  final Object convertValue=Convert.convertWithCheck(valueType,result,null,ignoreError);\n  if (null != convertValue) {\n    result=convertValue;\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 54,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 475,
                        "startLineNumber": 48,
                        "startColumnNumber": 24,
                        "endLineNumber": 65,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  final Method getter=sourcePd.getGetter();\n  if (null != getter) {\n    try {\n      result=getter.invoke(source);\n    }\n catch (    Exception e) {\n      if (false == ignoreError) {\n        throw new UtilException(e,\"Inject [{}] error!\",key);\n      }\n    }\n    final Object convertValue=Convert.convertWithCheck(valueType,result,null,ignoreError);\n    if (null != convertValue) {\n      result=convertValue;\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 64,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 497,
                        "startLineNumber": 48,
                        "startColumnNumber": 2,
                        "endLineNumber": 65,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "if (null != sourcePd) {\n  final Method getter=sourcePd.getGetter();\n  if (null != getter) {\n    try {\n      result=getter.invoke(source);\n    }\n catch (    Exception e) {\n      if (false == ignoreError) {\n        throw new UtilException(e,\"Inject [{}] error!\",key);\n      }\n    }\n    final Object convertValue=Convert.convertWithCheck(valueType,result,null,ignoreError);\n    if (null != convertValue) {\n      result=convertValue;\n    }\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 68,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 788,
                        "startLineNumber": 40,
                        "startColumnNumber": 49,
                        "endLineNumber": 67,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  PropDesc sourcePd=sourcePdMap.get(key);\n  if (null == sourcePd && (Boolean.class == valueType || boolean.class == valueType)) {\n    sourcePd=sourcePdMap.get(StrUtil.upperFirstAndAddPre(key,\"is\"));\n  }\n  Object result=null;\n  if (null != sourcePd) {\n    final Method getter=sourcePd.getGetter();\n    if (null != getter) {\n      try {\n        result=getter.invoke(source);\n      }\n catch (      Exception e) {\n        if (false == ignoreError) {\n          throw new UtilException(e,\"Inject [{}] error!\",key);\n        }\n      }\n      final Object convertValue=Convert.convertWithCheck(valueType,result,null,ignoreError);\n      if (null != convertValue) {\n        result=convertValue;\n      }\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 114,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 848,
                        "startLineNumber": 39,
                        "startColumnNumber": 1,
                        "endLineNumber": 67,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "@Override public Object value(String key,Type valueType){\n  PropDesc sourcePd=sourcePdMap.get(key);\n  if (null == sourcePd && (Boolean.class == valueType || boolean.class == valueType)) {\n    sourcePd=sourcePdMap.get(StrUtil.upperFirstAndAddPre(key,\"is\"));\n  }\n  Object result=null;\n  if (null != sourcePd) {\n    final Method getter=sourcePd.getGetter();\n    if (null != getter) {\n      try {\n        result=getter.invoke(source);\n      }\n catch (      Exception e) {\n        if (false == ignoreError) {\n          throw new UtilException(e,\"Inject [{}] error!\",key);\n        }\n      }\n      final Object convertValue=Convert.convertWithCheck(valueType,result,null,ignoreError);\n      if (null != convertValue) {\n        result=convertValue;\n      }\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 129,
                    "astHeight": 15
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 20,
                    "startLineNumber": 54,
                    "startColumnNumber": 9,
                    "endLineNumber": 54,
                    "endColumnNumber": 29
                },
                "nodeContext": "false == ignoreError",
                "nodeType": "InfixExpression",
                "astNodeNumber": 3,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "boolean"
        },
        {
            "nodeContext": "ignoreError",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 11,
                "startLineNumber": 60,
                "startColumnNumber": 81,
                "endLineNumber": 60,
                "endColumnNumber": 92
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 61,
                        "startLineNumber": 60,
                        "startColumnNumber": 32,
                        "endLineNumber": 60,
                        "endColumnNumber": 93
                    },
                    "nodeContext": "Convert.convertWithCheck(valueType,result,null,ignoreError)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 7,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 76,
                        "startLineNumber": 60,
                        "startColumnNumber": 17,
                        "endLineNumber": 60,
                        "endColumnNumber": 93
                    },
                    "nodeContext": "convertValue=Convert.convertWithCheck(valueType,result,null,ignoreError)",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 9,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 90,
                        "startLineNumber": 60,
                        "startColumnNumber": 4,
                        "endLineNumber": 60,
                        "endColumnNumber": 94
                    },
                    "nodeContext": "final Object convertValue=Convert.convertWithCheck(valueType,result,null,ignoreError);\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 13,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 396,
                        "startLineNumber": 50,
                        "startColumnNumber": 23,
                        "endLineNumber": 64,
                        "endColumnNumber": 4
                    },
                    "nodeContext": "{\n  try {\n    result=getter.invoke(source);\n  }\n catch (  Exception e) {\n    if (false == ignoreError) {\n      throw new UtilException(e,\"Inject [{}] error!\",key);\n    }\n  }\n  final Object convertValue=Convert.convertWithCheck(valueType,result,null,ignoreError);\n  if (null != convertValue) {\n    result=convertValue;\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 50,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 416,
                        "startLineNumber": 50,
                        "startColumnNumber": 3,
                        "endLineNumber": 64,
                        "endColumnNumber": 4
                    },
                    "nodeContext": "if (null != getter) {\n  try {\n    result=getter.invoke(source);\n  }\n catch (  Exception e) {\n    if (false == ignoreError) {\n      throw new UtilException(e,\"Inject [{}] error!\",key);\n    }\n  }\n  final Object convertValue=Convert.convertWithCheck(valueType,result,null,ignoreError);\n  if (null != convertValue) {\n    result=convertValue;\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 54,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 475,
                        "startLineNumber": 48,
                        "startColumnNumber": 24,
                        "endLineNumber": 65,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  final Method getter=sourcePd.getGetter();\n  if (null != getter) {\n    try {\n      result=getter.invoke(source);\n    }\n catch (    Exception e) {\n      if (false == ignoreError) {\n        throw new UtilException(e,\"Inject [{}] error!\",key);\n      }\n    }\n    final Object convertValue=Convert.convertWithCheck(valueType,result,null,ignoreError);\n    if (null != convertValue) {\n      result=convertValue;\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 64,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 497,
                        "startLineNumber": 48,
                        "startColumnNumber": 2,
                        "endLineNumber": 65,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "if (null != sourcePd) {\n  final Method getter=sourcePd.getGetter();\n  if (null != getter) {\n    try {\n      result=getter.invoke(source);\n    }\n catch (    Exception e) {\n      if (false == ignoreError) {\n        throw new UtilException(e,\"Inject [{}] error!\",key);\n      }\n    }\n    final Object convertValue=Convert.convertWithCheck(valueType,result,null,ignoreError);\n    if (null != convertValue) {\n      result=convertValue;\n    }\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 68,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 788,
                        "startLineNumber": 40,
                        "startColumnNumber": 49,
                        "endLineNumber": 67,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  PropDesc sourcePd=sourcePdMap.get(key);\n  if (null == sourcePd && (Boolean.class == valueType || boolean.class == valueType)) {\n    sourcePd=sourcePdMap.get(StrUtil.upperFirstAndAddPre(key,\"is\"));\n  }\n  Object result=null;\n  if (null != sourcePd) {\n    final Method getter=sourcePd.getGetter();\n    if (null != getter) {\n      try {\n        result=getter.invoke(source);\n      }\n catch (      Exception e) {\n        if (false == ignoreError) {\n          throw new UtilException(e,\"Inject [{}] error!\",key);\n        }\n      }\n      final Object convertValue=Convert.convertWithCheck(valueType,result,null,ignoreError);\n      if (null != convertValue) {\n        result=convertValue;\n      }\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 114,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 848,
                        "startLineNumber": 39,
                        "startColumnNumber": 1,
                        "endLineNumber": 67,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "@Override public Object value(String key,Type valueType){\n  PropDesc sourcePd=sourcePdMap.get(key);\n  if (null == sourcePd && (Boolean.class == valueType || boolean.class == valueType)) {\n    sourcePd=sourcePdMap.get(StrUtil.upperFirstAndAddPre(key,\"is\"));\n  }\n  Object result=null;\n  if (null != sourcePd) {\n    final Method getter=sourcePd.getGetter();\n    if (null != getter) {\n      try {\n        result=getter.invoke(source);\n      }\n catch (      Exception e) {\n        if (false == ignoreError) {\n          throw new UtilException(e,\"Inject [{}] error!\",key);\n        }\n      }\n      final Object convertValue=Convert.convertWithCheck(valueType,result,null,ignoreError);\n      if (null != convertValue) {\n        result=convertValue;\n      }\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 129,
                    "astHeight": 15
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 90,
                    "startLineNumber": 60,
                    "startColumnNumber": 4,
                    "endLineNumber": 60,
                    "endColumnNumber": 94
                },
                "nodeContext": "final Object convertValue=Convert.convertWithCheck(valueType,result,null,ignoreError);\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 13,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "boolean"
        }
    ],
    "positionList": [
        {
            "charLength": 11,
            "startLineNumber": 54,
            "startColumnNumber": 18,
            "endLineNumber": 54,
            "endColumnNumber": 29
        },
        {
            "charLength": 11,
            "startLineNumber": 60,
            "startColumnNumber": 81,
            "endLineNumber": 60,
            "endColumnNumber": 92
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 3
        }
    ]
}