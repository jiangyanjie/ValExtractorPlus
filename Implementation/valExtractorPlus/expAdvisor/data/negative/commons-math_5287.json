{
    "id": 5287,
    "expression": "new double[nRowB][nColB]",
    "projectName": "commons-math",
    "commitID": "7e7207cd4fa31f8f75b9a8a309c98c12fb672a7b",
    "filePath": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
    "occurrences": 1,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "new double[nRowB][nColB]",
            "nodeType": "ArrayCreation",
            "nodePosition": {
                "charLength": 24,
                "startLineNumber": 725,
                "startColumnNumber": 24,
                "endLineNumber": 725,
                "endColumnNumber": 48
            },
            "astNodeNumber": 7,
            "astHeight": 3,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 29,
                        "startLineNumber": 725,
                        "startColumnNumber": 19,
                        "endLineNumber": 725,
                        "endColumnNumber": 48
                    },
                    "nodeContext": "bp=new double[nRowB][nColB]",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 41,
                        "startLineNumber": 725,
                        "startColumnNumber": 8,
                        "endLineNumber": 725,
                        "endColumnNumber": 49
                    },
                    "nodeContext": "double[][] bp=new double[nRowB][nColB];\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 14,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1557,
                        "startLineNumber": 709,
                        "startColumnNumber": 99,
                        "endLineNumber": 755,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (b.getRowDimension() != this.getRowDimension()) {\n    throw new IllegalArgumentException(\"Incorrect row dimension\");\n  }\n  if (!this.isSquare()) {\n    throw new InvalidMatrixException(\"coefficient matrix is not square\");\n  }\n  if (this.isSingular()) {\n    throw new InvalidMatrixException(\"Matrix is singular.\");\n  }\n  int nCol=this.getColumnDimension();\n  int nColB=b.getColumnDimension();\n  int nRowB=b.getRowDimension();\n  double[][] bp=new double[nRowB][nColB];\n  for (int row=0; row < nRowB; row++) {\n    for (int col=0; col < nColB; col++) {\n      bp[row][col]=b.getEntry(permutation[row],col);\n    }\n  }\n  for (int col=0; col < nCol; col++) {\n    for (int i=col + 1; i < nCol; i++) {\n      for (int j=0; j < nColB; j++) {\n        bp[i][j]-=bp[col][j] * lu[i][col];\n      }\n    }\n  }\n  for (int col=nCol - 1; col >= 0; col--) {\n    for (int j=0; j < nColB; j++) {\n      bp[col][j]/=lu[col][col];\n    }\n    for (int i=0; i < col; i++) {\n      for (int j=0; j < nColB; j++) {\n        bp[i][j]-=bp[col][j] * lu[i][col];\n      }\n    }\n  }\n  RealMatrixImpl outMat=new RealMatrixImpl(bp);\n  return outMat;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 256,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2137,
                        "startLineNumber": 698,
                        "startColumnNumber": 4,
                        "endLineNumber": 755,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Returns a matrix of (column) solution vectors for linear systems with coefficient matrix = this and constant vectors = columns of <code>b</code>.\n * @param b  matrix of constant vectors forming RHS of linear systems toto solve\n * @return matrix of solution vectors\n * @throws IllegalArgumentException if this.rowDimension != row dimension\n * @throws InvalidMatrixException if this matrix is not square or is singular\n */\npublic RealMatrix solve(RealMatrix b) throws IllegalArgumentException, InvalidMatrixException {\n  if (b.getRowDimension() != this.getRowDimension()) {\n    throw new IllegalArgumentException(\"Incorrect row dimension\");\n  }\n  if (!this.isSquare()) {\n    throw new InvalidMatrixException(\"coefficient matrix is not square\");\n  }\n  if (this.isSingular()) {\n    throw new InvalidMatrixException(\"Matrix is singular.\");\n  }\n  int nCol=this.getColumnDimension();\n  int nColB=b.getColumnDimension();\n  int nRowB=b.getRowDimension();\n  double[][] bp=new double[nRowB][nColB];\n  for (int row=0; row < nRowB; row++) {\n    for (int col=0; col < nColB; col++) {\n      bp[row][col]=b.getEntry(permutation[row],col);\n    }\n  }\n  for (int col=0; col < nCol; col++) {\n    for (int i=col + 1; i < nCol; i++) {\n      for (int j=0; j < nColB; j++) {\n        bp[i][j]-=bp[col][j] * lu[i][col];\n      }\n    }\n  }\n  for (int col=nCol - 1; col >= 0; col--) {\n    for (int j=0; j < nColB; j++) {\n      bp[col][j]/=lu[col][col];\n    }\n    for (int i=0; i < col; i++) {\n      for (int j=0; j < nColB; j++) {\n        bp[i][j]-=bp[col][j] * lu[i][col];\n      }\n    }\n  }\n  RealMatrixImpl outMat=new RealMatrixImpl(bp);\n  return outMat;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 270,
                    "astHeight": 14
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 41,
                    "startLineNumber": 725,
                    "startColumnNumber": 8,
                    "endLineNumber": 725,
                    "endColumnNumber": 49
                },
                "nodeContext": "double[][] bp=new double[nRowB][nColB];\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 14,
                "astHeight": 5
            },
            "tokenLength": 2,
            "type": "double[][]"
        }
    ],
    "positionList": [
        {
            "charLength": 24,
            "startLineNumber": 725,
            "startColumnNumber": 24,
            "endLineNumber": 725,
            "endColumnNumber": 48
        }
    ],
    "layoutRelationDataList": []
}