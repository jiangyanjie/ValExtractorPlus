{
    "id": 1054,
    "expression": "!toChildren.hasMore",
    "projectName": "jackrabbit-oak",
    "commitID": "9eadffafd5f9c7f77ec8b2ae9fc113b06d3f7c74",
    "filePath": "oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore.java",
    "occurrences": 1,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "!toChildren.hasMore",
            "nodeType": "PrefixExpression",
            "nodePosition": {
                "charLength": 19,
                "startLineNumber": 2087,
                "startColumnNumber": 37,
                "endLineNumber": 2087,
                "endColumnNumber": 56
            },
            "astNodeNumber": 4,
            "astHeight": 3,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 44,
                        "startLineNumber": 2087,
                        "startColumnNumber": 12,
                        "endLineNumber": 2087,
                        "endColumnNumber": 56
                    },
                    "nodeContext": "!fromChildren.hasMore && !toChildren.hasMore",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 847,
                        "startLineNumber": 2087,
                        "startColumnNumber": 8,
                        "endLineNumber": 2104,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (!fromChildren.hasMore && !toChildren.hasMore) {\n  diffAlgo=\"diffFewChildren\";\n  diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n}\n else {\n  if (FAST_DIFF) {\n    diffAlgo=\"diffManyChildren\";\n    diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n  }\n else {\n    diffAlgo=\"diffAllChildren\";\n    max=Integer.MAX_VALUE;\n    fromChildren=getChildren(from,null,max);\n    toChildren=getChildren(to,null,max);\n    diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 93,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1759,
                        "startLineNumber": 2071,
                        "startColumnNumber": 42,
                        "endLineNumber": 2113,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  JsopWriter w=new JsopStream();\n  int max=MANY_CHILDREN_THRESHOLD;\n  final boolean debug=LOG.isDebugEnabled();\n  final long start=debug ? now() : 0;\n  DocumentNodeState.Children fromChildren, toChildren;\n  fromChildren=getChildren(from,null,max);\n  toChildren=getChildren(to,null,max);\n  final long getChildrenDoneIn=debug ? now() : 0;\n  String diffAlgo;\n  if (!fromChildren.hasMore && !toChildren.hasMore) {\n    diffAlgo=\"diffFewChildren\";\n    diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n  }\n else {\n    if (FAST_DIFF) {\n      diffAlgo=\"diffManyChildren\";\n      diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n    }\n else {\n      diffAlgo=\"diffAllChildren\";\n      max=Integer.MAX_VALUE;\n      fromChildren=getChildren(from,null,max);\n      toChildren=getChildren(to,null,max);\n      diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n    }\n  }\n  if (debug) {\n    long end=now();\n    LOG.debug(\"Diff performed via '{}' at [{}] between revisions [{}] => [{}] took {} ms ({} ms)\",diffAlgo,from.getPath(),from.getLastRevision(),to.getLastRevision(),end - start,getChildrenDoneIn - start);\n  }\n  return w.toString();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 199,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1871,
                        "startLineNumber": 2070,
                        "startColumnNumber": 4,
                        "endLineNumber": 2113,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "private String diffImpl(DocumentNodeState from,DocumentNodeState to) throws DocumentStoreException {\n  JsopWriter w=new JsopStream();\n  int max=MANY_CHILDREN_THRESHOLD;\n  final boolean debug=LOG.isDebugEnabled();\n  final long start=debug ? now() : 0;\n  DocumentNodeState.Children fromChildren, toChildren;\n  fromChildren=getChildren(from,null,max);\n  toChildren=getChildren(to,null,max);\n  final long getChildrenDoneIn=debug ? now() : 0;\n  String diffAlgo;\n  if (!fromChildren.hasMore && !toChildren.hasMore) {\n    diffAlgo=\"diffFewChildren\";\n    diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n  }\n else {\n    if (FAST_DIFF) {\n      diffAlgo=\"diffManyChildren\";\n      diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n    }\n else {\n      diffAlgo=\"diffAllChildren\";\n      max=Integer.MAX_VALUE;\n      fromChildren=getChildren(from,null,max);\n      toChildren=getChildren(to,null,max);\n      diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n    }\n  }\n  if (debug) {\n    long end=now();\n    LOG.debug(\"Diff performed via '{}' at [{}] between revisions [{}] => [{}] took {} ms ({} ms)\",diffAlgo,from.getPath(),from.getLastRevision(),to.getLastRevision(),end - start,getChildrenDoneIn - start);\n  }\n  return w.toString();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 214,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 44,
                    "startLineNumber": 2087,
                    "startColumnNumber": 12,
                    "endLineNumber": 2087,
                    "endColumnNumber": 56
                },
                "nodeContext": "!fromChildren.hasMore && !toChildren.hasMore",
                "nodeType": "InfixExpression",
                "astNodeNumber": 9,
                "astHeight": 4
            },
            "tokenLength": 2,
            "type": "boolean"
        }
    ],
    "positionList": [
        {
            "charLength": 19,
            "startLineNumber": 2087,
            "startColumnNumber": 37,
            "endLineNumber": 2087,
            "endColumnNumber": 56
        }
    ],
    "layoutRelationDataList": []
}