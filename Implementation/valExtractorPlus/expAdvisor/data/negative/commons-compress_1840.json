{
    "id": 1840,
    "expression": "buffer[i] - '0'",
    "projectName": "commons-compress",
    "commitID": "048db3b1921a7bb58bbaf513bd4b6694b7b7e1c3",
    "filePath": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
    "occurrences": 1,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "buffer[i] - '0'",
            "nodeType": "InfixExpression",
            "nodePosition": {
                "charLength": 15,
                "startLineNumber": 67,
                "startColumnNumber": 38,
                "endLineNumber": 67,
                "endColumnNumber": 53
            },
            "astNodeNumber": 5,
            "astHeight": 3,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 17,
                        "startLineNumber": 67,
                        "startColumnNumber": 37,
                        "endLineNumber": 67,
                        "endColumnNumber": 54
                    },
                    "nodeContext": "(buffer[i] - '0')",
                    "nodeType": "ParenthesizedExpression",
                    "astNodeNumber": 6,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 33,
                        "startLineNumber": 67,
                        "startColumnNumber": 21,
                        "endLineNumber": 67,
                        "endColumnNumber": 54
                    },
                    "nodeContext": "(result << 3) + (buffer[i] - '0')",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 11,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 42,
                        "startLineNumber": 67,
                        "startColumnNumber": 12,
                        "endLineNumber": 67,
                        "endColumnNumber": 54
                    },
                    "nodeContext": "result=(result << 3) + (buffer[i] - '0')",
                    "nodeType": "Assignment",
                    "astNodeNumber": 13,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 43,
                        "startLineNumber": 67,
                        "startColumnNumber": 12,
                        "endLineNumber": 67,
                        "endColumnNumber": 55
                    },
                    "nodeContext": "result=(result << 3) + (buffer[i] - '0');\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 14,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 660,
                        "startLineNumber": 49,
                        "startColumnNumber": 43,
                        "endLineNumber": 69,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (buffer[i] == 0) {\n    break;\n  }\n  if (buffer[i] == (byte)' ' || buffer[i] == '0') {\n    if (stillPadding) {\n      continue;\n    }\n    if (buffer[i] == (byte)' ') {\n      break;\n    }\n  }\n  stillPadding=false;\n  result=(result << 3) + (buffer[i] - '0');\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 56,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 695,
                        "startLineNumber": 49,
                        "startColumnNumber": 8,
                        "endLineNumber": 69,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=offset; i < end; ++i) {\n  if (buffer[i] == 0) {\n    break;\n  }\n  if (buffer[i] == (byte)' ' || buffer[i] == '0') {\n    if (stillPadding) {\n      continue;\n    }\n    if (buffer[i] == (byte)' ') {\n      break;\n    }\n  }\n  stillPadding=false;\n  result=(result << 3) + (buffer[i] - '0');\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 67,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 840,
                        "startLineNumber": 44,
                        "startColumnNumber": 73,
                        "endLineNumber": 72,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  long result=0;\n  boolean stillPadding=true;\n  int end=offset + length;\n  for (int i=offset; i < end; ++i) {\n    if (buffer[i] == 0) {\n      break;\n    }\n    if (buffer[i] == (byte)' ' || buffer[i] == '0') {\n      if (stillPadding) {\n        continue;\n      }\n      if (buffer[i] == (byte)' ') {\n        break;\n      }\n    }\n    stillPadding=false;\n    result=(result << 3) + (buffer[i] - '0');\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 87,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1416,
                        "startLineNumber": 31,
                        "startColumnNumber": 4,
                        "endLineNumber": 72,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Parse an octal string from a buffer. Leading spaces are ignored. Parsing stops when a NUL is found, or a trailing space, or the buffer length is reached. Behaviour with non-octal input is currently undefined.\n * @param buffer The buffer from which to parse.\n * @param offset The offset into the buffer from which to parse.\n * @param length The maximum number of bytes to parse.\n * @return The long value of the octal string.\n */\npublic static long parseOctal(byte[] buffer,int offset,int length){\n  long result=0;\n  boolean stillPadding=true;\n  int end=offset + length;\n  for (int i=offset; i < end; ++i) {\n    if (buffer[i] == 0) {\n      break;\n    }\n    if (buffer[i] == (byte)' ' || buffer[i] == '0') {\n      if (stillPadding) {\n        continue;\n      }\n      if (buffer[i] == (byte)' ') {\n        break;\n      }\n    }\n    stillPadding=false;\n    result=(result << 3) + (buffer[i] - '0');\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 104,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 43,
                    "startLineNumber": 67,
                    "startColumnNumber": 12,
                    "endLineNumber": 67,
                    "endColumnNumber": 55
                },
                "nodeContext": "result=(result << 3) + (buffer[i] - '0');\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 14,
                "astHeight": 7
            },
            "tokenLength": 4,
            "type": "int"
        }
    ],
    "positionList": [
        {
            "charLength": 15,
            "startLineNumber": 67,
            "startColumnNumber": 38,
            "endLineNumber": 67,
            "endColumnNumber": 53
        }
    ],
    "layoutRelationDataList": []
}