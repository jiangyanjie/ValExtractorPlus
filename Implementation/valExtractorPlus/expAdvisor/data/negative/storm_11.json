{
    "id": 11,
    "expression": "nodeToUsedSlotsCache",
    "projectName": "storm",
    "commitID": "c122876f1518f5e737ca0ea831e8c853af8d6a79",
    "filePath": "storm-server/src/main/java/org/apache/storm/scheduler/Cluster.java",
    "occurrences": 1,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "nodeToUsedSlotsCache",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 20,
                "startLineNumber": 761,
                "startColumnNumber": 16,
                "endLineNumber": 761,
                "endColumnNumber": 36
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 62,
                        "startLineNumber": 761,
                        "startColumnNumber": 16,
                        "endLineNumber": 761,
                        "endColumnNumber": 78
                    },
                    "nodeContext": "nodeToUsedSlotsCache.computeIfAbsent(nodeId,Cluster::makeSet)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 75,
                        "startLineNumber": 761,
                        "startColumnNumber": 16,
                        "endLineNumber": 761,
                        "endColumnNumber": 91
                    },
                    "nodeContext": "nodeToUsedSlotsCache.computeIfAbsent(nodeId,Cluster::makeSet).remove(slot)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 10,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 76,
                        "startLineNumber": 761,
                        "startColumnNumber": 16,
                        "endLineNumber": 761,
                        "endColumnNumber": 92
                    },
                    "nodeContext": "nodeToUsedSlotsCache.computeIfAbsent(nodeId,Cluster::makeSet).remove(slot);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 11,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 660,
                        "startLineNumber": 753,
                        "startColumnNumber": 49,
                        "endLineNumber": 762,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  assertValidTopologyForModification(assignment.getTopologyId());\n  assignment.unassignBySlot(slot);\n  String nodeId=slot.getNodeId();\n  TopologyDetails td=topologies.getById(assignment.getTopologyId());\n  assignment.setTotalSharedOffHeapNodeMemory(nodeId,calculateSharedOffHeapNodeMemory(nodeId,assignment,td));\n  nodeToScheduledResourcesCache.computeIfAbsent(nodeId,Cluster::makeMap).put(slot,new NormalizedResourceRequest());\n  nodeToUsedSlotsCache.computeIfAbsent(nodeId,Cluster::makeSet).remove(slot);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 66,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 697,
                        "startLineNumber": 753,
                        "startColumnNumber": 12,
                        "endLineNumber": 762,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (assignment.isSlotOccupied(slot)) {\n  assertValidTopologyForModification(assignment.getTopologyId());\n  assignment.unassignBySlot(slot);\n  String nodeId=slot.getNodeId();\n  TopologyDetails td=topologies.getById(assignment.getTopologyId());\n  assignment.setTotalSharedOffHeapNodeMemory(nodeId,calculateSharedOffHeapNodeMemory(nodeId,assignment,td));\n  nodeToScheduledResourcesCache.computeIfAbsent(nodeId,Cluster::makeMap).put(slot,new NormalizedResourceRequest());\n  nodeToUsedSlotsCache.computeIfAbsent(nodeId,Cluster::makeSet).remove(slot);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 71,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 723,
                        "startLineNumber": 752,
                        "startColumnNumber": 72,
                        "endLineNumber": 763,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (assignment.isSlotOccupied(slot)) {\n    assertValidTopologyForModification(assignment.getTopologyId());\n    assignment.unassignBySlot(slot);\n    String nodeId=slot.getNodeId();\n    TopologyDetails td=topologies.getById(assignment.getTopologyId());\n    assignment.setTotalSharedOffHeapNodeMemory(nodeId,calculateSharedOffHeapNodeMemory(nodeId,assignment,td));\n    nodeToScheduledResourcesCache.computeIfAbsent(nodeId,Cluster::makeMap).put(slot,new NormalizedResourceRequest());\n    nodeToUsedSlotsCache.computeIfAbsent(nodeId,Cluster::makeSet).remove(slot);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 72,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 787,
                        "startLineNumber": 752,
                        "startColumnNumber": 8,
                        "endLineNumber": 763,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (SchedulerAssignmentImpl assignment : assignments.values()) {\n  if (assignment.isSlotOccupied(slot)) {\n    assertValidTopologyForModification(assignment.getTopologyId());\n    assignment.unassignBySlot(slot);\n    String nodeId=slot.getNodeId();\n    TopologyDetails td=topologies.getById(assignment.getTopologyId());\n    assignment.setTotalSharedOffHeapNodeMemory(nodeId,calculateSharedOffHeapNodeMemory(nodeId,assignment,td));\n    nodeToScheduledResourcesCache.computeIfAbsent(nodeId,Cluster::makeMap).put(slot,new NormalizedResourceRequest());\n    nodeToUsedSlotsCache.computeIfAbsent(nodeId,Cluster::makeSet).remove(slot);\n  }\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 80,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 990,
                        "startLineNumber": 750,
                        "startColumnNumber": 42,
                        "endLineNumber": 766,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  for (  SchedulerAssignmentImpl assignment : assignments.values()) {\n    if (assignment.isSlotOccupied(slot)) {\n      assertValidTopologyForModification(assignment.getTopologyId());\n      assignment.unassignBySlot(slot);\n      String nodeId=slot.getNodeId();\n      TopologyDetails td=topologies.getById(assignment.getTopologyId());\n      assignment.setTotalSharedOffHeapNodeMemory(nodeId,calculateSharedOffHeapNodeMemory(nodeId,assignment,td));\n      nodeToScheduledResourcesCache.computeIfAbsent(nodeId,Cluster::makeMap).put(slot,new NormalizedResourceRequest());\n      nodeToUsedSlotsCache.computeIfAbsent(nodeId,Cluster::makeSet).remove(slot);\n    }\n  }\n  totalResourcesPerNodeCache.remove(slot.getNodeId());\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 88,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1124,
                        "startLineNumber": 745,
                        "startColumnNumber": 4,
                        "endLineNumber": 766,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Free the specified slot.\n * @param slot the slot to free\n */\npublic void freeSlot(WorkerSlot slot){\n  for (  SchedulerAssignmentImpl assignment : assignments.values()) {\n    if (assignment.isSlotOccupied(slot)) {\n      assertValidTopologyForModification(assignment.getTopologyId());\n      assignment.unassignBySlot(slot);\n      String nodeId=slot.getNodeId();\n      TopologyDetails td=topologies.getById(assignment.getTopologyId());\n      assignment.setTotalSharedOffHeapNodeMemory(nodeId,calculateSharedOffHeapNodeMemory(nodeId,assignment,td));\n      nodeToScheduledResourcesCache.computeIfAbsent(nodeId,Cluster::makeMap).put(slot,new NormalizedResourceRequest());\n      nodeToUsedSlotsCache.computeIfAbsent(nodeId,Cluster::makeSet).remove(slot);\n    }\n  }\n  totalResourcesPerNodeCache.remove(slot.getNodeId());\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 97,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 76,
                    "startLineNumber": 761,
                    "startColumnNumber": 16,
                    "endLineNumber": 761,
                    "endColumnNumber": 92
                },
                "nodeContext": "nodeToUsedSlotsCache.computeIfAbsent(nodeId,Cluster::makeSet).remove(slot);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 11,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "java.util.Map<java.lang.String,java.util.Set<org.apache.storm.scheduler.WorkerSlot>>"
        }
    ],
    "positionList": [
        {
            "charLength": 20,
            "startLineNumber": 761,
            "startColumnNumber": 16,
            "endLineNumber": 761,
            "endColumnNumber": 36
        }
    ],
    "layoutRelationDataList": []
}