{
    "id": 500,
    "expression": "colName",
    "projectName": "nifi",
    "commitID": "729f8aa246767df4a2930771673ca2a7e18957bd",
    "filePath": "nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/GenerateTableFetch.java",
    "occurrences": 6,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "colName",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 254,
                "startColumnNumber": 51,
                "endLineNumber": 254,
                "endColumnNumber": 58
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 33,
                        "startLineNumber": 254,
                        "startColumnNumber": 42,
                        "endLineNumber": 254,
                        "endColumnNumber": 75
                    },
                    "nodeContext": "\"MAX(\" + colName + \") \"+ colName",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 5,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 60,
                        "startLineNumber": 254,
                        "startColumnNumber": 16,
                        "endLineNumber": 254,
                        "endColumnNumber": 76
                    },
                    "nodeContext": "maxValueSelectColumns.add(\"MAX(\" + colName + \") \"+ colName)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 8,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 61,
                        "startLineNumber": 254,
                        "startColumnNumber": 16,
                        "endLineNumber": 254,
                        "endColumnNumber": 77
                    },
                    "nodeContext": "maxValueSelectColumns.add(\"MAX(\" + colName + \") \"+ colName);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
                    "nodePosition": {
                        "charLength": 940,
                        "startLineNumber": 251,
                        "startColumnNumber": 81,
                        "endLineNumber": 266,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  String colName=maxValueColumnNameList.get(index);\n  maxValueSelectColumns.add(\"MAX(\" + colName + \") \"+ colName);\n  String maxValue=getColumnStateMaxValue(tableName,statePropertyMap,colName,dbAdapter);\n  if (!StringUtils.isEmpty(maxValue)) {\n    if (columnTypeMap.isEmpty() || getColumnType(tableName,colName,dbAdapter) == null) {\n      super.setup(context,false,finalFileToProcess);\n    }\n    Integer type=getColumnType(tableName,colName,dbAdapter);\n    maxValueClauses.add(colName + (index == 0 ? \" > \" : \" >= \") + getLiteralByType(type,maxValue,dbAdapter.getName()));\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 86,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 951,
                        "startLineNumber": 251,
                        "startColumnNumber": 70,
                        "endLineNumber": 266,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "(index) -> {\n  String colName=maxValueColumnNameList.get(index);\n  maxValueSelectColumns.add(\"MAX(\" + colName + \") \"+ colName);\n  String maxValue=getColumnStateMaxValue(tableName,statePropertyMap,colName,dbAdapter);\n  if (!StringUtils.isEmpty(maxValue)) {\n    if (columnTypeMap.isEmpty() || getColumnType(tableName,colName,dbAdapter) == null) {\n      super.setup(context,false,finalFileToProcess);\n    }\n    Integer type=getColumnType(tableName,colName,dbAdapter);\n    maxValueClauses.add(colName + (index == 0 ? \" > \" : \" >= \") + getLiteralByType(type,maxValue,dbAdapter.getName()));\n  }\n}\n",
                    "nodeType": "LambdaExpression",
                    "astNodeNumber": 89,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 61,
                    "startLineNumber": 254,
                    "startColumnNumber": 16,
                    "endLineNumber": 254,
                    "endColumnNumber": 77
                },
                "nodeContext": "maxValueSelectColumns.add(\"MAX(\" + colName + \") \"+ colName);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 9,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        },
        {
            "nodeContext": "colName",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 254,
                "startColumnNumber": 68,
                "endLineNumber": 254,
                "endColumnNumber": 75
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 33,
                        "startLineNumber": 254,
                        "startColumnNumber": 42,
                        "endLineNumber": 254,
                        "endColumnNumber": 75
                    },
                    "nodeContext": "\"MAX(\" + colName + \") \"+ colName",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 5,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 60,
                        "startLineNumber": 254,
                        "startColumnNumber": 16,
                        "endLineNumber": 254,
                        "endColumnNumber": 76
                    },
                    "nodeContext": "maxValueSelectColumns.add(\"MAX(\" + colName + \") \"+ colName)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 8,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 61,
                        "startLineNumber": 254,
                        "startColumnNumber": 16,
                        "endLineNumber": 254,
                        "endColumnNumber": 77
                    },
                    "nodeContext": "maxValueSelectColumns.add(\"MAX(\" + colName + \") \"+ colName);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
                    "nodePosition": {
                        "charLength": 940,
                        "startLineNumber": 251,
                        "startColumnNumber": 81,
                        "endLineNumber": 266,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  String colName=maxValueColumnNameList.get(index);\n  maxValueSelectColumns.add(\"MAX(\" + colName + \") \"+ colName);\n  String maxValue=getColumnStateMaxValue(tableName,statePropertyMap,colName,dbAdapter);\n  if (!StringUtils.isEmpty(maxValue)) {\n    if (columnTypeMap.isEmpty() || getColumnType(tableName,colName,dbAdapter) == null) {\n      super.setup(context,false,finalFileToProcess);\n    }\n    Integer type=getColumnType(tableName,colName,dbAdapter);\n    maxValueClauses.add(colName + (index == 0 ? \" > \" : \" >= \") + getLiteralByType(type,maxValue,dbAdapter.getName()));\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 86,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 951,
                        "startLineNumber": 251,
                        "startColumnNumber": 70,
                        "endLineNumber": 266,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "(index) -> {\n  String colName=maxValueColumnNameList.get(index);\n  maxValueSelectColumns.add(\"MAX(\" + colName + \") \"+ colName);\n  String maxValue=getColumnStateMaxValue(tableName,statePropertyMap,colName,dbAdapter);\n  if (!StringUtils.isEmpty(maxValue)) {\n    if (columnTypeMap.isEmpty() || getColumnType(tableName,colName,dbAdapter) == null) {\n      super.setup(context,false,finalFileToProcess);\n    }\n    Integer type=getColumnType(tableName,colName,dbAdapter);\n    maxValueClauses.add(colName + (index == 0 ? \" > \" : \" >= \") + getLiteralByType(type,maxValue,dbAdapter.getName()));\n  }\n}\n",
                    "nodeType": "LambdaExpression",
                    "astNodeNumber": 89,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 61,
                    "startLineNumber": 254,
                    "startColumnNumber": 16,
                    "endLineNumber": 254,
                    "endColumnNumber": 77
                },
                "nodeContext": "maxValueSelectColumns.add(\"MAX(\" + colName + \") \"+ colName);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 9,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        },
        {
            "nodeContext": "colName",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 255,
                "startColumnNumber": 86,
                "endLineNumber": 255,
                "endColumnNumber": 93
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 71,
                        "startLineNumber": 255,
                        "startColumnNumber": 34,
                        "endLineNumber": 255,
                        "endColumnNumber": 105
                    },
                    "nodeContext": "getColumnStateMaxValue(tableName,statePropertyMap,colName,dbAdapter)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 6,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 82,
                        "startLineNumber": 255,
                        "startColumnNumber": 23,
                        "endLineNumber": 255,
                        "endColumnNumber": 105
                    },
                    "nodeContext": "maxValue=getColumnStateMaxValue(tableName,statePropertyMap,colName,dbAdapter)",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 8,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 90,
                        "startLineNumber": 255,
                        "startColumnNumber": 16,
                        "endLineNumber": 255,
                        "endColumnNumber": 106
                    },
                    "nodeContext": "String maxValue=getColumnStateMaxValue(tableName,statePropertyMap,colName,dbAdapter);\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 11,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
                    "nodePosition": {
                        "charLength": 940,
                        "startLineNumber": 251,
                        "startColumnNumber": 81,
                        "endLineNumber": 266,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  String colName=maxValueColumnNameList.get(index);\n  maxValueSelectColumns.add(\"MAX(\" + colName + \") \"+ colName);\n  String maxValue=getColumnStateMaxValue(tableName,statePropertyMap,colName,dbAdapter);\n  if (!StringUtils.isEmpty(maxValue)) {\n    if (columnTypeMap.isEmpty() || getColumnType(tableName,colName,dbAdapter) == null) {\n      super.setup(context,false,finalFileToProcess);\n    }\n    Integer type=getColumnType(tableName,colName,dbAdapter);\n    maxValueClauses.add(colName + (index == 0 ? \" > \" : \" >= \") + getLiteralByType(type,maxValue,dbAdapter.getName()));\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 86,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 951,
                        "startLineNumber": 251,
                        "startColumnNumber": 70,
                        "endLineNumber": 266,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "(index) -> {\n  String colName=maxValueColumnNameList.get(index);\n  maxValueSelectColumns.add(\"MAX(\" + colName + \") \"+ colName);\n  String maxValue=getColumnStateMaxValue(tableName,statePropertyMap,colName,dbAdapter);\n  if (!StringUtils.isEmpty(maxValue)) {\n    if (columnTypeMap.isEmpty() || getColumnType(tableName,colName,dbAdapter) == null) {\n      super.setup(context,false,finalFileToProcess);\n    }\n    Integer type=getColumnType(tableName,colName,dbAdapter);\n    maxValueClauses.add(colName + (index == 0 ? \" > \" : \" >= \") + getLiteralByType(type,maxValue,dbAdapter.getName()));\n  }\n}\n",
                    "nodeType": "LambdaExpression",
                    "astNodeNumber": 89,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 90,
                    "startLineNumber": 255,
                    "startColumnNumber": 16,
                    "endLineNumber": 255,
                    "endColumnNumber": 106
                },
                "nodeContext": "String maxValue=getColumnStateMaxValue(tableName,statePropertyMap,colName,dbAdapter);\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 11,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        },
        {
            "nodeContext": "colName",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 257,
                "startColumnNumber": 75,
                "endLineNumber": 257,
                "endColumnNumber": 82
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 44,
                        "startLineNumber": 257,
                        "startColumnNumber": 50,
                        "endLineNumber": 257,
                        "endColumnNumber": 94
                    },
                    "nodeContext": "getColumnType(tableName,colName,dbAdapter)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 52,
                        "startLineNumber": 257,
                        "startColumnNumber": 50,
                        "endLineNumber": 257,
                        "endColumnNumber": 102
                    },
                    "nodeContext": "getColumnType(tableName,colName,dbAdapter) == null",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 79,
                        "startLineNumber": 257,
                        "startColumnNumber": 23,
                        "endLineNumber": 257,
                        "endColumnNumber": 102
                    },
                    "nodeContext": "columnTypeMap.isEmpty() || getColumnType(tableName,colName,dbAdapter) == null",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 11,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 298,
                        "startLineNumber": 257,
                        "startColumnNumber": 20,
                        "endLineNumber": 260,
                        "endColumnNumber": 21
                    },
                    "nodeContext": "if (columnTypeMap.isEmpty() || getColumnType(tableName,colName,dbAdapter) == null) {\n  super.setup(context,false,finalFileToProcess);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 19,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 618,
                        "startLineNumber": 256,
                        "startColumnNumber": 52,
                        "endLineNumber": 265,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  if (columnTypeMap.isEmpty() || getColumnType(tableName,colName,dbAdapter) == null) {\n    super.setup(context,false,finalFileToProcess);\n  }\n  Integer type=getColumnType(tableName,colName,dbAdapter);\n  maxValueClauses.add(colName + (index == 0 ? \" > \" : \" >= \") + getLiteralByType(type,maxValue,dbAdapter.getName()));\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 50,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 654,
                        "startLineNumber": 256,
                        "startColumnNumber": 16,
                        "endLineNumber": 265,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (!StringUtils.isEmpty(maxValue)) {\n  if (columnTypeMap.isEmpty() || getColumnType(tableName,colName,dbAdapter) == null) {\n    super.setup(context,false,finalFileToProcess);\n  }\n  Integer type=getColumnType(tableName,colName,dbAdapter);\n  maxValueClauses.add(colName + (index == 0 ? \" > \" : \" >= \") + getLiteralByType(type,maxValue,dbAdapter.getName()));\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 56,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
                    "nodePosition": {
                        "charLength": 940,
                        "startLineNumber": 251,
                        "startColumnNumber": 81,
                        "endLineNumber": 266,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  String colName=maxValueColumnNameList.get(index);\n  maxValueSelectColumns.add(\"MAX(\" + colName + \") \"+ colName);\n  String maxValue=getColumnStateMaxValue(tableName,statePropertyMap,colName,dbAdapter);\n  if (!StringUtils.isEmpty(maxValue)) {\n    if (columnTypeMap.isEmpty() || getColumnType(tableName,colName,dbAdapter) == null) {\n      super.setup(context,false,finalFileToProcess);\n    }\n    Integer type=getColumnType(tableName,colName,dbAdapter);\n    maxValueClauses.add(colName + (index == 0 ? \" > \" : \" >= \") + getLiteralByType(type,maxValue,dbAdapter.getName()));\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 86,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 951,
                        "startLineNumber": 251,
                        "startColumnNumber": 70,
                        "endLineNumber": 266,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "(index) -> {\n  String colName=maxValueColumnNameList.get(index);\n  maxValueSelectColumns.add(\"MAX(\" + colName + \") \"+ colName);\n  String maxValue=getColumnStateMaxValue(tableName,statePropertyMap,colName,dbAdapter);\n  if (!StringUtils.isEmpty(maxValue)) {\n    if (columnTypeMap.isEmpty() || getColumnType(tableName,colName,dbAdapter) == null) {\n      super.setup(context,false,finalFileToProcess);\n    }\n    Integer type=getColumnType(tableName,colName,dbAdapter);\n    maxValueClauses.add(colName + (index == 0 ? \" > \" : \" >= \") + getLiteralByType(type,maxValue,dbAdapter.getName()));\n  }\n}\n",
                    "nodeType": "LambdaExpression",
                    "astNodeNumber": 89,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 79,
                    "startLineNumber": 257,
                    "startColumnNumber": 23,
                    "endLineNumber": 257,
                    "endColumnNumber": 102
                },
                "nodeContext": "columnTypeMap.isEmpty() || getColumnType(tableName,colName,dbAdapter) == null",
                "nodeType": "InfixExpression",
                "astNodeNumber": 11,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        },
        {
            "nodeContext": "colName",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 261,
                "startColumnNumber": 60,
                "endLineNumber": 261,
                "endColumnNumber": 67
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 44,
                        "startLineNumber": 261,
                        "startColumnNumber": 35,
                        "endLineNumber": 261,
                        "endColumnNumber": 79
                    },
                    "nodeContext": "getColumnType(tableName,colName,dbAdapter)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 51,
                        "startLineNumber": 261,
                        "startColumnNumber": 28,
                        "endLineNumber": 261,
                        "endColumnNumber": 79
                    },
                    "nodeContext": "type=getColumnType(tableName,colName,dbAdapter)",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 60,
                        "startLineNumber": 261,
                        "startColumnNumber": 20,
                        "endLineNumber": 261,
                        "endColumnNumber": 80
                    },
                    "nodeContext": "Integer type=getColumnType(tableName,colName,dbAdapter);\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 10,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 618,
                        "startLineNumber": 256,
                        "startColumnNumber": 52,
                        "endLineNumber": 265,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  if (columnTypeMap.isEmpty() || getColumnType(tableName,colName,dbAdapter) == null) {\n    super.setup(context,false,finalFileToProcess);\n  }\n  Integer type=getColumnType(tableName,colName,dbAdapter);\n  maxValueClauses.add(colName + (index == 0 ? \" > \" : \" >= \") + getLiteralByType(type,maxValue,dbAdapter.getName()));\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 50,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 654,
                        "startLineNumber": 256,
                        "startColumnNumber": 16,
                        "endLineNumber": 265,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (!StringUtils.isEmpty(maxValue)) {\n  if (columnTypeMap.isEmpty() || getColumnType(tableName,colName,dbAdapter) == null) {\n    super.setup(context,false,finalFileToProcess);\n  }\n  Integer type=getColumnType(tableName,colName,dbAdapter);\n  maxValueClauses.add(colName + (index == 0 ? \" > \" : \" >= \") + getLiteralByType(type,maxValue,dbAdapter.getName()));\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 56,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
                    "nodePosition": {
                        "charLength": 940,
                        "startLineNumber": 251,
                        "startColumnNumber": 81,
                        "endLineNumber": 266,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  String colName=maxValueColumnNameList.get(index);\n  maxValueSelectColumns.add(\"MAX(\" + colName + \") \"+ colName);\n  String maxValue=getColumnStateMaxValue(tableName,statePropertyMap,colName,dbAdapter);\n  if (!StringUtils.isEmpty(maxValue)) {\n    if (columnTypeMap.isEmpty() || getColumnType(tableName,colName,dbAdapter) == null) {\n      super.setup(context,false,finalFileToProcess);\n    }\n    Integer type=getColumnType(tableName,colName,dbAdapter);\n    maxValueClauses.add(colName + (index == 0 ? \" > \" : \" >= \") + getLiteralByType(type,maxValue,dbAdapter.getName()));\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 86,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 951,
                        "startLineNumber": 251,
                        "startColumnNumber": 70,
                        "endLineNumber": 266,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "(index) -> {\n  String colName=maxValueColumnNameList.get(index);\n  maxValueSelectColumns.add(\"MAX(\" + colName + \") \"+ colName);\n  String maxValue=getColumnStateMaxValue(tableName,statePropertyMap,colName,dbAdapter);\n  if (!StringUtils.isEmpty(maxValue)) {\n    if (columnTypeMap.isEmpty() || getColumnType(tableName,colName,dbAdapter) == null) {\n      super.setup(context,false,finalFileToProcess);\n    }\n    Integer type=getColumnType(tableName,colName,dbAdapter);\n    maxValueClauses.add(colName + (index == 0 ? \" > \" : \" >= \") + getLiteralByType(type,maxValue,dbAdapter.getName()));\n  }\n}\n",
                    "nodeType": "LambdaExpression",
                    "astNodeNumber": 89,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 60,
                    "startLineNumber": 261,
                    "startColumnNumber": 20,
                    "endLineNumber": 261,
                    "endColumnNumber": 80
                },
                "nodeContext": "Integer type=getColumnType(tableName,colName,dbAdapter);\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 10,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        },
        {
            "nodeContext": "colName",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 264,
                "startColumnNumber": 40,
                "endLineNumber": 264,
                "endColumnNumber": 47
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 95,
                        "startLineNumber": 264,
                        "startColumnNumber": 40,
                        "endLineNumber": 264,
                        "endColumnNumber": 135
                    },
                    "nodeContext": "colName + (index == 0 ? \" > \" : \" >= \") + getLiteralByType(type,maxValue,dbAdapter.getName())",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 16,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 116,
                        "startLineNumber": 264,
                        "startColumnNumber": 20,
                        "endLineNumber": 264,
                        "endColumnNumber": 136
                    },
                    "nodeContext": "maxValueClauses.add(colName + (index == 0 ? \" > \" : \" >= \") + getLiteralByType(type,maxValue,dbAdapter.getName()))",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 19,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 117,
                        "startLineNumber": 264,
                        "startColumnNumber": 20,
                        "endLineNumber": 264,
                        "endColumnNumber": 137
                    },
                    "nodeContext": "maxValueClauses.add(colName + (index == 0 ? \" > \" : \" >= \") + getLiteralByType(type,maxValue,dbAdapter.getName()));\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 20,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 618,
                        "startLineNumber": 256,
                        "startColumnNumber": 52,
                        "endLineNumber": 265,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  if (columnTypeMap.isEmpty() || getColumnType(tableName,colName,dbAdapter) == null) {\n    super.setup(context,false,finalFileToProcess);\n  }\n  Integer type=getColumnType(tableName,colName,dbAdapter);\n  maxValueClauses.add(colName + (index == 0 ? \" > \" : \" >= \") + getLiteralByType(type,maxValue,dbAdapter.getName()));\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 50,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 654,
                        "startLineNumber": 256,
                        "startColumnNumber": 16,
                        "endLineNumber": 265,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (!StringUtils.isEmpty(maxValue)) {\n  if (columnTypeMap.isEmpty() || getColumnType(tableName,colName,dbAdapter) == null) {\n    super.setup(context,false,finalFileToProcess);\n  }\n  Integer type=getColumnType(tableName,colName,dbAdapter);\n  maxValueClauses.add(colName + (index == 0 ? \" > \" : \" >= \") + getLiteralByType(type,maxValue,dbAdapter.getName()));\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 56,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
                    "nodePosition": {
                        "charLength": 940,
                        "startLineNumber": 251,
                        "startColumnNumber": 81,
                        "endLineNumber": 266,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  String colName=maxValueColumnNameList.get(index);\n  maxValueSelectColumns.add(\"MAX(\" + colName + \") \"+ colName);\n  String maxValue=getColumnStateMaxValue(tableName,statePropertyMap,colName,dbAdapter);\n  if (!StringUtils.isEmpty(maxValue)) {\n    if (columnTypeMap.isEmpty() || getColumnType(tableName,colName,dbAdapter) == null) {\n      super.setup(context,false,finalFileToProcess);\n    }\n    Integer type=getColumnType(tableName,colName,dbAdapter);\n    maxValueClauses.add(colName + (index == 0 ? \" > \" : \" >= \") + getLiteralByType(type,maxValue,dbAdapter.getName()));\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 86,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 951,
                        "startLineNumber": 251,
                        "startColumnNumber": 70,
                        "endLineNumber": 266,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "(index) -> {\n  String colName=maxValueColumnNameList.get(index);\n  maxValueSelectColumns.add(\"MAX(\" + colName + \") \"+ colName);\n  String maxValue=getColumnStateMaxValue(tableName,statePropertyMap,colName,dbAdapter);\n  if (!StringUtils.isEmpty(maxValue)) {\n    if (columnTypeMap.isEmpty() || getColumnType(tableName,colName,dbAdapter) == null) {\n      super.setup(context,false,finalFileToProcess);\n    }\n    Integer type=getColumnType(tableName,colName,dbAdapter);\n    maxValueClauses.add(colName + (index == 0 ? \" > \" : \" >= \") + getLiteralByType(type,maxValue,dbAdapter.getName()));\n  }\n}\n",
                    "nodeType": "LambdaExpression",
                    "astNodeNumber": 89,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 117,
                    "startLineNumber": 264,
                    "startColumnNumber": 20,
                    "endLineNumber": 264,
                    "endColumnNumber": 137
                },
                "nodeContext": "maxValueClauses.add(colName + (index == 0 ? \" > \" : \" >= \") + getLiteralByType(type,maxValue,dbAdapter.getName()));\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 20,
                "astHeight": 7
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        }
    ],
    "positionList": [
        {
            "charLength": 7,
            "startLineNumber": 254,
            "startColumnNumber": 51,
            "endLineNumber": 254,
            "endColumnNumber": 58
        },
        {
            "charLength": 7,
            "startLineNumber": 254,
            "startColumnNumber": 68,
            "endLineNumber": 254,
            "endColumnNumber": 75
        },
        {
            "charLength": 7,
            "startLineNumber": 255,
            "startColumnNumber": 86,
            "endLineNumber": 255,
            "endColumnNumber": 93
        },
        {
            "charLength": 7,
            "startLineNumber": 257,
            "startColumnNumber": 75,
            "endLineNumber": 257,
            "endColumnNumber": 82
        },
        {
            "charLength": 7,
            "startLineNumber": 261,
            "startColumnNumber": 60,
            "endLineNumber": 261,
            "endColumnNumber": 67
        },
        {
            "charLength": 7,
            "startLineNumber": 264,
            "startColumnNumber": 40,
            "endLineNumber": 264,
            "endColumnNumber": 47
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 0
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 0
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 3,
            "secondKey": 0,
            "layout": 6
        },
        {
            "firstKey": 3,
            "secondKey": 1,
            "layout": 6
        },
        {
            "firstKey": 3,
            "secondKey": 2,
            "layout": 6
        },
        {
            "firstKey": 3,
            "secondKey": 4,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 5,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 1,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 2,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 4,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 5,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 5,
            "secondKey": 1,
            "layout": 5
        },
        {
            "firstKey": 5,
            "secondKey": 2,
            "layout": 5
        },
        {
            "firstKey": 5,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 5,
            "secondKey": 4,
            "layout": 3
        }
    ]
}