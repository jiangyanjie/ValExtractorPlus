{
    "id": 18,
    "expression": "0",
    "projectName": "ReactiveX@RxAndroid",
    "commitID": "6b7cfe2a0acb8903ea10014d2f66386954a37813",
    "filePath": "src/test/java/rx/android/operators/OperatorAdapterViewOnItemClickTest.java",
    "occurrences": 1,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "0",
            "nodeType": "NumberLiteral",
            "nodePosition": {
                "charLength": 1,
                "startLineNumber": 348,
                "startColumnNumber": 21,
                "endLineNumber": 348,
                "endColumnNumber": 22
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
                    "nodePosition": {
                        "charLength": 5,
                        "startLineNumber": 348,
                        "startColumnNumber": 17,
                        "endLineNumber": 348,
                        "endColumnNumber": 22
                    },
                    "nodeContext": "i=0",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
                    "nodePosition": {
                        "charLength": 9,
                        "startLineNumber": 348,
                        "startColumnNumber": 13,
                        "endLineNumber": 348,
                        "endColumnNumber": 22
                    },
                    "nodeContext": "int i=0",
                    "nodeType": "VariableDeclarationExpression",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 308,
                        "startLineNumber": 348,
                        "startColumnNumber": 8,
                        "endLineNumber": 352,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=0; i < count; i++) {\n  adapterView.performItemClick(any(View.class),i,i);\n  inOrder1.verify(observer1,never()).onNext(any(OnItemClickEvent.class));\n  inOrder2.verify(observer2,times(1)).onNext(new OnItemClickEvent(adapterView,any(View.class),i,i));\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 58,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1277,
                        "startLineNumber": 330,
                        "startColumnNumber": 147,
                        "endLineNumber": 354,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  Adapter adapter=adapterView.getAdapter();\n  Assert.assertNotNull(adapter);\n  final Observable<OnItemClickEvent> observable=ViewObservable.itemClicks(adapterView);\n  final Observer<OnItemClickEvent> observer1=mock(Observer.class);\n  final Observer<OnItemClickEvent> observer2=mock(Observer.class);\n  final Subscription subscription1=observable.subscribe(new TestObserver<OnItemClickEvent>(observer1));\n  final Subscription subscription2=observable.subscribe(new TestObserver<OnItemClickEvent>(observer2));\n  final InOrder inOrder1=inOrder(observer1);\n  final InOrder inOrder2=inOrder(observer2);\n  inOrder1.verify(observer1,never()).onNext(any(OnItemClickEvent.class));\n  inOrder2.verify(observer2,never()).onNext(any(OnItemClickEvent.class));\n  subscription1.unsubscribe();\n  final int count=adapter.getCount();\n  for (int i=0; i < count; i++) {\n    adapterView.performItemClick(any(View.class),i,i);\n    inOrder1.verify(observer1,never()).onNext(any(OnItemClickEvent.class));\n    inOrder2.verify(observer2,times(1)).onNext(new OnItemClickEvent(adapterView,any(View.class),i,i));\n  }\n  subscription2.unsubscribe();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 207,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1455,
                        "startLineNumber": 329,
                        "startColumnNumber": 4,
                        "endLineNumber": 354,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@SuppressWarnings(\"unchecked\") private void performTestAdapterViewMultipleSubscriptionsClickAllViewsEmitAllEventsForOneSubscriber(AdapterView<? extends Adapter> adapterView){\n  Adapter adapter=adapterView.getAdapter();\n  Assert.assertNotNull(adapter);\n  final Observable<OnItemClickEvent> observable=ViewObservable.itemClicks(adapterView);\n  final Observer<OnItemClickEvent> observer1=mock(Observer.class);\n  final Observer<OnItemClickEvent> observer2=mock(Observer.class);\n  final Subscription subscription1=observable.subscribe(new TestObserver<OnItemClickEvent>(observer1));\n  final Subscription subscription2=observable.subscribe(new TestObserver<OnItemClickEvent>(observer2));\n  final InOrder inOrder1=inOrder(observer1);\n  final InOrder inOrder2=inOrder(observer2);\n  inOrder1.verify(observer1,never()).onNext(any(OnItemClickEvent.class));\n  inOrder2.verify(observer2,never()).onNext(any(OnItemClickEvent.class));\n  subscription1.unsubscribe();\n  final int count=adapter.getCount();\n  for (int i=0; i < count; i++) {\n    adapterView.performItemClick(any(View.class),i,i);\n    inOrder1.verify(observer1,never()).onNext(any(OnItemClickEvent.class));\n    inOrder2.verify(observer2,times(1)).onNext(new OnItemClickEvent(adapterView,any(View.class),i,i));\n  }\n  subscription2.unsubscribe();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 222,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
                "nodePosition": {
                    "charLength": 9,
                    "startLineNumber": 348,
                    "startColumnNumber": 13,
                    "endLineNumber": 348,
                    "endColumnNumber": 22
                },
                "nodeContext": "int i=0",
                "nodeType": "VariableDeclarationExpression",
                "astNodeNumber": 5,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "int"
        }
    ],
    "positionList": [
        {
            "charLength": 1,
            "startLineNumber": 348,
            "startColumnNumber": 21,
            "endLineNumber": 348,
            "endColumnNumber": 22
        }
    ],
    "layoutRelationDataList": []
}