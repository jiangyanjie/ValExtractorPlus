{
    "id": 3748,
    "expression": "d5",
    "projectName": "commons-math",
    "commitID": "79287ddb7cacac075c5d56deef4840aaeec136ee",
    "filePath": "src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java",
    "occurrences": 1,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "d5",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 2,
                "startLineNumber": 130,
                "startColumnNumber": 40,
                "endLineNumber": 130,
                "endColumnNumber": 42
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 16,
                        "startLineNumber": 130,
                        "startColumnNumber": 40,
                        "endLineNumber": 130,
                        "endColumnNumber": 56
                    },
                    "nodeContext": "d5 * yDotK[5][i]",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 113,
                        "startLineNumber": 129,
                        "startColumnNumber": 21,
                        "endLineNumber": 130,
                        "endColumnNumber": 56
                    },
                    "nodeContext": "d0 * yDotK[0][i] + d2 * yDotK[2][i] + d3 * yDotK[3][i] + d4 * yDotK[4][i] + d5 * yDotK[5][i]",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 39,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
                    "nodePosition": {
                        "charLength": 132,
                        "startLineNumber": 129,
                        "startColumnNumber": 21,
                        "endLineNumber": 130,
                        "endColumnNumber": 75
                    },
                    "nodeContext": "d0 * yDotK[0][i] + d2 * yDotK[2][i] + d3 * yDotK[3][i] + d4 * yDotK[4][i] + d5 * yDotK[5][i] + d6 * yDotK[6][i]",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 47,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 134,
                        "startLineNumber": 129,
                        "startColumnNumber": 20,
                        "endLineNumber": 130,
                        "endColumnNumber": 76
                    },
                    "nodeContext": "(d0 * yDotK[0][i] + d2 * yDotK[2][i] + d3 * yDotK[3][i] + d4 * yDotK[4][i] + d5 * yDotK[5][i] + d6 * yDotK[6][i])",
                    "nodeType": "ParenthesizedExpression",
                    "astNodeNumber": 48,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 138,
                        "startLineNumber": 129,
                        "startColumnNumber": 16,
                        "endLineNumber": 130,
                        "endColumnNumber": 76
                    },
                    "nodeContext": "h * (d0 * yDotK[0][i] + d2 * yDotK[2][i] + d3 * yDotK[3][i] + d4 * yDotK[4][i] + d5 * yDotK[5][i] + d6 * yDotK[6][i])",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 50,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 146,
                        "startLineNumber": 129,
                        "startColumnNumber": 8,
                        "endLineNumber": 130,
                        "endColumnNumber": 76
                    },
                    "nodeContext": "v4[i]=h * (d0 * yDotK[0][i] + d2 * yDotK[2][i] + d3 * yDotK[3][i] + d4 * yDotK[4][i] + d5 * yDotK[5][i] + d6 * yDotK[6][i])",
                    "nodeType": "Assignment",
                    "astNodeNumber": 54,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 147,
                        "startLineNumber": 129,
                        "startColumnNumber": 8,
                        "endLineNumber": 130,
                        "endColumnNumber": 77
                    },
                    "nodeContext": "v4[i]=h * (d0 * yDotK[0][i] + d2 * yDotK[2][i] + d3 * yDotK[3][i] + d4 * yDotK[4][i] + d5 * yDotK[5][i] + d6 * yDotK[6][i]);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 55,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 397,
                        "startLineNumber": 124,
                        "startColumnNumber": 57,
                        "endLineNumber": 131,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "{\n  v1[i]=h * (a70 * yDotK[0][i] + a72 * yDotK[2][i] + a73 * yDotK[3][i] + a74 * yDotK[4][i] + a75 * yDotK[5][i]);\n  v2[i]=h * yDotK[0][i] - v1[i];\n  v3[i]=v1[i] - v2[i] - h * yDotK[6][i];\n  v4[i]=h * (d0 * yDotK[0][i] + d2 * yDotK[2][i] + d3 * yDotK[3][i] + d4 * yDotK[4][i] + d5 * yDotK[5][i] + d6 * yDotK[6][i]);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 138,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 448,
                        "startLineNumber": 124,
                        "startColumnNumber": 6,
                        "endLineNumber": 131,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "for (int i=0; i < interpolatedState.length; ++i) {\n  v1[i]=h * (a70 * yDotK[0][i] + a72 * yDotK[2][i] + a73 * yDotK[3][i] + a74 * yDotK[4][i] + a75 * yDotK[5][i]);\n  v2[i]=h * yDotK[0][i] - v1[i];\n  v3[i]=v1[i] - v2[i] - h * yDotK[6][i];\n  v4[i]=h * (d0 * yDotK[0][i] + d2 * yDotK[2][i] + d3 * yDotK[3][i] + d4 * yDotK[4][i] + d5 * yDotK[5][i] + d6 * yDotK[6][i]);\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 151,
                    "astHeight": 15
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 871,
                        "startLineNumber": 112,
                        "startColumnNumber": 30,
                        "endLineNumber": 135,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (v1 == null) {\n    v1=new double[interpolatedState.length];\n    v2=new double[interpolatedState.length];\n    v3=new double[interpolatedState.length];\n    v4=new double[interpolatedState.length];\n  }\n  for (int i=0; i < interpolatedState.length; ++i) {\n    v1[i]=h * (a70 * yDotK[0][i] + a72 * yDotK[2][i] + a73 * yDotK[3][i] + a74 * yDotK[4][i] + a75 * yDotK[5][i]);\n    v2[i]=h * yDotK[0][i] - v1[i];\n    v3[i]=v1[i] - v2[i] - h * yDotK[6][i];\n    v4[i]=h * (d0 * yDotK[0][i] + d2 * yDotK[2][i] + d3 * yDotK[3][i] + d4 * yDotK[4][i] + d5 * yDotK[5][i] + d6 * yDotK[6][i]);\n  }\n  vectorsInitialized=true;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 201,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 897,
                        "startLineNumber": 112,
                        "startColumnNumber": 4,
                        "endLineNumber": 135,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "if (!vectorsInitialized) {\n  if (v1 == null) {\n    v1=new double[interpolatedState.length];\n    v2=new double[interpolatedState.length];\n    v3=new double[interpolatedState.length];\n    v4=new double[interpolatedState.length];\n  }\n  for (int i=0; i < interpolatedState.length; ++i) {\n    v1[i]=h * (a70 * yDotK[0][i] + a72 * yDotK[2][i] + a73 * yDotK[3][i] + a74 * yDotK[4][i] + a75 * yDotK[5][i]);\n    v2[i]=h * yDotK[0][i] - v1[i];\n    v3[i]=v1[i] - v2[i] - h * yDotK[6][i];\n    v4[i]=h * (d0 * yDotK[0][i] + d2 * yDotK[2][i] + d3 * yDotK[3][i] + d4 * yDotK[4][i] + d5 * yDotK[5][i] + d6 * yDotK[6][i]);\n  }\n  vectorsInitialized=true;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 204,
                    "astHeight": 17
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1157,
                        "startLineNumber": 110,
                        "startColumnNumber": 31,
                        "endLineNumber": 144,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  if (!vectorsInitialized) {\n    if (v1 == null) {\n      v1=new double[interpolatedState.length];\n      v2=new double[interpolatedState.length];\n      v3=new double[interpolatedState.length];\n      v4=new double[interpolatedState.length];\n    }\n    for (int i=0; i < interpolatedState.length; ++i) {\n      v1[i]=h * (a70 * yDotK[0][i] + a72 * yDotK[2][i] + a73 * yDotK[3][i] + a74 * yDotK[4][i] + a75 * yDotK[5][i]);\n      v2[i]=h * yDotK[0][i] - v1[i];\n      v3[i]=v1[i] - v2[i] - h * yDotK[6][i];\n      v4[i]=h * (d0 * yDotK[0][i] + d2 * yDotK[2][i] + d3 * yDotK[3][i] + d4 * yDotK[4][i] + d5 * yDotK[5][i] + d6 * yDotK[6][i]);\n    }\n    vectorsInitialized=true;\n  }\n  final double eta=oneMinusThetaH / h;\n  for (int i=0; i < interpolatedState.length; ++i) {\n    interpolatedState[i]=currentState[i] - eta * (v1[i] - theta * (v2[i] + theta * (v3[i] + eta * v4[i])));\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 262,
                    "astHeight": 18
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1342,
                        "startLineNumber": 107,
                        "startColumnNumber": 2,
                        "endLineNumber": 144,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "/** \n * {@inheritDoc} \n */\nprotected void computeInterpolatedState(final double theta,final double oneMinusThetaH) throws DerivativeException {\n  if (!vectorsInitialized) {\n    if (v1 == null) {\n      v1=new double[interpolatedState.length];\n      v2=new double[interpolatedState.length];\n      v3=new double[interpolatedState.length];\n      v4=new double[interpolatedState.length];\n    }\n    for (int i=0; i < interpolatedState.length; ++i) {\n      v1[i]=h * (a70 * yDotK[0][i] + a72 * yDotK[2][i] + a73 * yDotK[3][i] + a74 * yDotK[4][i] + a75 * yDotK[5][i]);\n      v2[i]=h * yDotK[0][i] - v1[i];\n      v3[i]=v1[i] - v2[i] - h * yDotK[6][i];\n      v4[i]=h * (d0 * yDotK[0][i] + d2 * yDotK[2][i] + d3 * yDotK[3][i] + d4 * yDotK[4][i] + d5 * yDotK[5][i] + d6 * yDotK[6][i]);\n    }\n    vectorsInitialized=true;\n  }\n  final double eta=oneMinusThetaH / h;\n  for (int i=0; i < interpolatedState.length; ++i) {\n    interpolatedState[i]=currentState[i] - eta * (v1[i] - theta * (v2[i] + theta * (v3[i] + eta * v4[i])));\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 277,
                    "astHeight": 19
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                "nodePosition": {
                    "charLength": 16,
                    "startLineNumber": 130,
                    "startColumnNumber": 40,
                    "endLineNumber": 130,
                    "endColumnNumber": 56
                },
                "nodeContext": "d5 * yDotK[5][i]",
                "nodeType": "InfixExpression",
                "astNodeNumber": 7,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "double"
        }
    ],
    "positionList": [
        {
            "charLength": 2,
            "startLineNumber": 130,
            "startColumnNumber": 40,
            "endLineNumber": 130,
            "endColumnNumber": 42
        }
    ],
    "layoutRelationDataList": []
}