{
    "id": 285,
    "expression": "addr",
    "projectName": "NationalSecurityAgency@ghidra",
    "commitID": "e5df6fdd7bbc13dadc918bafa0f4f5767e74e1a7",
    "filePath": "Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/symbol/SymbolManager.java",
    "occurrences": 2,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "addr",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 545,
                "startColumnNumber": 27,
                "endLineNumber": 545,
                "endColumnNumber": 31
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 53,
                        "startLineNumber": 545,
                        "startColumnNumber": 2,
                        "endLineNumber": 545,
                        "endColumnNumber": 55
                    },
                    "nodeContext": "checkDuplicateSymbolName(addr,name,namespace,type)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 6,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 54,
                        "startLineNumber": 545,
                        "startColumnNumber": 2,
                        "endLineNumber": 545,
                        "endColumnNumber": 56
                    },
                    "nodeContext": "checkDuplicateSymbolName(addr,name,namespace,type);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 845,
                        "startLineNumber": 539,
                        "startColumnNumber": 46,
                        "endLineNumber": 559,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  if (getSymbol(symbolID) != null) {\n    throw new IllegalArgumentException(\"Duplicate symbol ID\");\n  }\n  checkDuplicateSymbolName(addr,name,namespace,type);\n  DBRecord rec=SymbolDatabaseAdapter.SYMBOL_SCHEMA.createRecord(symbolID);\n  rec.setString(SymbolDatabaseAdapter.SYMBOL_NAME_COL,name);\n  long addressKey=addrMap.getKey(addr,true);\n  rec.setLongValue(SymbolDatabaseAdapter.SYMBOL_ADDR_COL,addressKey);\n  rec.setLongValue(SymbolDatabaseAdapter.SYMBOL_PARENT_COL,namespace.getID());\n  rec.setByteValue(SymbolDatabaseAdapter.SYMBOL_TYPE_COL,type.getID());\n  if (isPrimary) {\n    rec.setLongValue(SymbolDatabaseAdapter.SYMBOL_PRIMARY_COL,addressKey);\n  }\n  rec.setByteValue(SymbolDatabaseAdapter.SYMBOL_FLAGS_COL,(byte)source.ordinal());\n  adapter.updateSymbolRecord(rec);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 104,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1043,
                        "startLineNumber": 537,
                        "startColumnNumber": 1,
                        "endLineNumber": 559,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "private void addSymbolRecord(long symbolID,Address addr,Namespace namespace,String name,boolean isPrimary,SymbolType type,SourceType source) throws DuplicateNameException, IOException {\n  if (getSymbol(symbolID) != null) {\n    throw new IllegalArgumentException(\"Duplicate symbol ID\");\n  }\n  checkDuplicateSymbolName(addr,name,namespace,type);\n  DBRecord rec=SymbolDatabaseAdapter.SYMBOL_SCHEMA.createRecord(symbolID);\n  rec.setString(SymbolDatabaseAdapter.SYMBOL_NAME_COL,name);\n  long addressKey=addrMap.getKey(addr,true);\n  rec.setLongValue(SymbolDatabaseAdapter.SYMBOL_ADDR_COL,addressKey);\n  rec.setLongValue(SymbolDatabaseAdapter.SYMBOL_PARENT_COL,namespace.getID());\n  rec.setByteValue(SymbolDatabaseAdapter.SYMBOL_TYPE_COL,type.getID());\n  if (isPrimary) {\n    rec.setLongValue(SymbolDatabaseAdapter.SYMBOL_PRIMARY_COL,addressKey);\n  }\n  rec.setByteValue(SymbolDatabaseAdapter.SYMBOL_FLAGS_COL,(byte)source.ordinal());\n  adapter.updateSymbolRecord(rec);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 138,
                    "astHeight": 8
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 54,
                    "startLineNumber": 545,
                    "startColumnNumber": 2,
                    "endLineNumber": 545,
                    "endColumnNumber": 56
                },
                "nodeContext": "checkDuplicateSymbolName(addr,name,namespace,type);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 7,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "ghidra.program.model.address.Address"
        },
        {
            "nodeContext": "addr",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 549,
                "startColumnNumber": 35,
                "endLineNumber": 549,
                "endColumnNumber": 39
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 26,
                        "startLineNumber": 549,
                        "startColumnNumber": 20,
                        "endLineNumber": 549,
                        "endColumnNumber": 46
                    },
                    "nodeContext": "addrMap.getKey(addr,true)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 39,
                        "startLineNumber": 549,
                        "startColumnNumber": 7,
                        "endLineNumber": 549,
                        "endColumnNumber": 46
                    },
                    "nodeContext": "addressKey=addrMap.getKey(addr,true)",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 45,
                        "startLineNumber": 549,
                        "startColumnNumber": 2,
                        "endLineNumber": 549,
                        "endColumnNumber": 47
                    },
                    "nodeContext": "long addressKey=addrMap.getKey(addr,true);\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 845,
                        "startLineNumber": 539,
                        "startColumnNumber": 46,
                        "endLineNumber": 559,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  if (getSymbol(symbolID) != null) {\n    throw new IllegalArgumentException(\"Duplicate symbol ID\");\n  }\n  checkDuplicateSymbolName(addr,name,namespace,type);\n  DBRecord rec=SymbolDatabaseAdapter.SYMBOL_SCHEMA.createRecord(symbolID);\n  rec.setString(SymbolDatabaseAdapter.SYMBOL_NAME_COL,name);\n  long addressKey=addrMap.getKey(addr,true);\n  rec.setLongValue(SymbolDatabaseAdapter.SYMBOL_ADDR_COL,addressKey);\n  rec.setLongValue(SymbolDatabaseAdapter.SYMBOL_PARENT_COL,namespace.getID());\n  rec.setByteValue(SymbolDatabaseAdapter.SYMBOL_TYPE_COL,type.getID());\n  if (isPrimary) {\n    rec.setLongValue(SymbolDatabaseAdapter.SYMBOL_PRIMARY_COL,addressKey);\n  }\n  rec.setByteValue(SymbolDatabaseAdapter.SYMBOL_FLAGS_COL,(byte)source.ordinal());\n  adapter.updateSymbolRecord(rec);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 104,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1043,
                        "startLineNumber": 537,
                        "startColumnNumber": 1,
                        "endLineNumber": 559,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "private void addSymbolRecord(long symbolID,Address addr,Namespace namespace,String name,boolean isPrimary,SymbolType type,SourceType source) throws DuplicateNameException, IOException {\n  if (getSymbol(symbolID) != null) {\n    throw new IllegalArgumentException(\"Duplicate symbol ID\");\n  }\n  checkDuplicateSymbolName(addr,name,namespace,type);\n  DBRecord rec=SymbolDatabaseAdapter.SYMBOL_SCHEMA.createRecord(symbolID);\n  rec.setString(SymbolDatabaseAdapter.SYMBOL_NAME_COL,name);\n  long addressKey=addrMap.getKey(addr,true);\n  rec.setLongValue(SymbolDatabaseAdapter.SYMBOL_ADDR_COL,addressKey);\n  rec.setLongValue(SymbolDatabaseAdapter.SYMBOL_PARENT_COL,namespace.getID());\n  rec.setByteValue(SymbolDatabaseAdapter.SYMBOL_TYPE_COL,type.getID());\n  if (isPrimary) {\n    rec.setLongValue(SymbolDatabaseAdapter.SYMBOL_PRIMARY_COL,addressKey);\n  }\n  rec.setByteValue(SymbolDatabaseAdapter.SYMBOL_FLAGS_COL,(byte)source.ordinal());\n  adapter.updateSymbolRecord(rec);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 138,
                    "astHeight": 8
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 45,
                    "startLineNumber": 549,
                    "startColumnNumber": 2,
                    "endLineNumber": 549,
                    "endColumnNumber": 47
                },
                "nodeContext": "long addressKey=addrMap.getKey(addr,true);\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 9,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "ghidra.program.model.address.Address"
        }
    ],
    "positionList": [
        {
            "charLength": 4,
            "startLineNumber": 545,
            "startColumnNumber": 27,
            "endLineNumber": 545,
            "endColumnNumber": 31
        },
        {
            "charLength": 4,
            "startLineNumber": 549,
            "startColumnNumber": 35,
            "endLineNumber": 549,
            "endColumnNumber": 39
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 3
        }
    ]
}