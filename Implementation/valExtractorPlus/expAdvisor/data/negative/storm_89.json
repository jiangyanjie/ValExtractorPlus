{
    "id": 89,
    "expression": "objectId",
    "projectName": "storm",
    "commitID": "5cb4582ffb9f4703377e8963133640d1d50e065a",
    "filePath": "storm-server/src/main/java/org/apache/storm/scheduler/resource/strategies/scheduling/BaseResourceAwareStrategy.java",
    "occurrences": 1,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "objectId",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 8,
                "startLineNumber": 278,
                "startColumnNumber": 32,
                "endLineNumber": 278,
                "endColumnNumber": 40
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 17,
                        "startLineNumber": 278,
                        "startColumnNumber": 23,
                        "endLineNumber": 278,
                        "endColumnNumber": 40
                    },
                    "nodeContext": "rackId=objectId",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 25,
                        "startLineNumber": 278,
                        "startColumnNumber": 16,
                        "endLineNumber": 278,
                        "endColumnNumber": 41
                    },
                    "nodeContext": "String rackId=objectId;\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
                    "nodePosition": {
                        "charLength": 928,
                        "startLineNumber": 277,
                        "startColumnNumber": 26,
                        "endLineNumber": 294,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  String rackId=objectId;\n  Collection<ExecutorDetails> execs=new LinkedList<>();\n  if (cluster.getAssignmentById(topoId) != null) {\n    for (    Map.Entry<ExecutorDetails,WorkerSlot> entry : cluster.getAssignmentById(topoId).getExecutorToSlot().entrySet()) {\n      String nodeId=entry.getValue().getNodeId();\n      String hostname=idToNode(nodeId).getHostname();\n      ExecutorDetails exec1=entry.getKey();\n      if (nodeIdToRackId.get(hostname) != null && nodeIdToRackId.get(hostname).equals(rackId)) {\n        execs.add(exec1);\n      }\n    }\n  }\n  return execs.size();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 101,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 942,
                        "startLineNumber": 277,
                        "startColumnNumber": 12,
                        "endLineNumber": 294,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "(objectId) -> {\n  String rackId=objectId;\n  Collection<ExecutorDetails> execs=new LinkedList<>();\n  if (cluster.getAssignmentById(topoId) != null) {\n    for (    Map.Entry<ExecutorDetails,WorkerSlot> entry : cluster.getAssignmentById(topoId).getExecutorToSlot().entrySet()) {\n      String nodeId=entry.getValue().getNodeId();\n      String hostname=idToNode(nodeId).getHostname();\n      ExecutorDetails exec1=entry.getKey();\n      if (nodeIdToRackId.get(hostname) != null && nodeIdToRackId.get(hostname).equals(rackId)) {\n        execs.add(exec1);\n      }\n    }\n  }\n  return execs.size();\n}\n",
                    "nodeType": "LambdaExpression",
                    "astNodeNumber": 104,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 25,
                    "startLineNumber": 278,
                    "startColumnNumber": 16,
                    "endLineNumber": 278,
                    "endColumnNumber": 41
                },
                "nodeContext": "String rackId=objectId;\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 6,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        }
    ],
    "positionList": [
        {
            "charLength": 8,
            "startLineNumber": 278,
            "startColumnNumber": 32,
            "endLineNumber": 278,
            "endColumnNumber": 40
        }
    ],
    "layoutRelationDataList": []
}