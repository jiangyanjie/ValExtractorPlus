{
    "id": 474,
    "expression": "data[data.length - 1] instanceof UnparseableExtraFieldData",
    "projectName": "commons-compress",
    "commitID": "e3ea7b6607e7c96b9e2b6813c05bfba887c8e226",
    "filePath": "src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java",
    "occurrences": 1,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "data[data.length - 1] instanceof UnparseableExtraFieldData",
            "nodeType": "InstanceofExpression",
            "nodePosition": {
                "charLength": 58,
                "startLineNumber": 272,
                "startColumnNumber": 15,
                "endLineNumber": 272,
                "endColumnNumber": 73
            },
            "astNodeNumber": 10,
            "astHeight": 5,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 90,
                        "startLineNumber": 271,
                        "startColumnNumber": 48,
                        "endLineNumber": 272,
                        "endColumnNumber": 73
                    },
                    "nodeContext": "data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 16,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 116,
                        "startLineNumber": 271,
                        "startColumnNumber": 22,
                        "endLineNumber": 272,
                        "endColumnNumber": 73
                    },
                    "nodeContext": "lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 18,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 131,
                        "startLineNumber": 271,
                        "startColumnNumber": 8,
                        "endLineNumber": 272,
                        "endColumnNumber": 74
                    },
                    "nodeContext": "final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 21,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1396,
                        "startLineNumber": 270,
                        "startColumnNumber": 79,
                        "endLineNumber": 301,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getCentralDirectoryLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getCentralDirectoryLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] central=data[i].getCentralDirectoryData();\n    if (central != null) {\n      System.arraycopy(central,0,result,start,central.length);\n      start+=central.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] central=data[data.length - 1].getCentralDirectoryData();\n    if (central != null) {\n      System.arraycopy(central,0,result,start,central.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 196,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1640,
                        "startLineNumber": 265,
                        "startColumnNumber": 4,
                        "endLineNumber": 301,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Merges the central directory fields of the given ZipExtraFields.\n * @param data an array of ExtraFields\n * @return an array of bytes\n */\npublic static byte[] mergeCentralDirectoryData(final ZipExtraField[] data){\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getCentralDirectoryLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getCentralDirectoryLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] central=data[i].getCentralDirectoryData();\n    if (central != null) {\n      System.arraycopy(central,0,result,start,central.length);\n      start+=central.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] central=data[data.length - 1].getCentralDirectoryData();\n    if (central != null) {\n      System.arraycopy(central,0,result,start,central.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 211,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                "nodePosition": {
                    "charLength": 90,
                    "startLineNumber": 271,
                    "startColumnNumber": 48,
                    "endLineNumber": 272,
                    "endColumnNumber": 73
                },
                "nodeContext": "data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData",
                "nodeType": "InfixExpression",
                "astNodeNumber": 16,
                "astHeight": 6
            },
            "tokenLength": 6,
            "type": "boolean"
        }
    ],
    "positionList": [
        {
            "charLength": 58,
            "startLineNumber": 272,
            "startColumnNumber": 15,
            "endLineNumber": 272,
            "endColumnNumber": 73
        }
    ],
    "layoutRelationDataList": []
}