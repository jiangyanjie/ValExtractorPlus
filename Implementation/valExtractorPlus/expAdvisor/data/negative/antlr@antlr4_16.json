{
    "id": 16,
    "expression": "CharStreams.fromStream(is,StandardCharsets.UTF_8,size)",
    "projectName": "antlr@antlr4",
    "commitID": "ab0655598ed4ddeff075fafe301ef4d57bd0017d",
    "filePath": "runtime-testsuite/test/org/antlr/v4/test/runtime/java/api/perf/TimeLexerSpeed.java",
    "occurrences": 1,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "CharStreams.fromStream(is,StandardCharsets.UTF_8,size)",
            "nodeType": "MethodInvocation",
            "nodePosition": {
                "charLength": 56,
                "startLineNumber": 416,
                "startColumnNumber": 22,
                "endLineNumber": 416,
                "endColumnNumber": 78
            },
            "astNodeNumber": 8,
            "astHeight": 3,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 64,
                        "startLineNumber": 416,
                        "startColumnNumber": 14,
                        "endLineNumber": 416,
                        "endColumnNumber": 78
                    },
                    "nodeContext": "input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size)",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 10,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 76,
                        "startLineNumber": 416,
                        "startColumnNumber": 3,
                        "endLineNumber": 416,
                        "endColumnNumber": 79
                    },
                    "nodeContext": "CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 13,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 587,
                        "startLineNumber": 414,
                        "startColumnNumber": 66,
                        "endLineNumber": 427,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  long size=getResourceSize(loader,resourceName);\n  CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n  graphemesLexer lexer=new graphemesLexer(input);\n  double avg=tokenize(lexer,n,clearLexerDFACache);\n  String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n  if (output)   System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols from %s%s\\n\",currentMethodName,(int)avg,n,input.size(),fileName,clearLexerDFACache ? \" DFA cleared\" : \"\");\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 76,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 651,
                        "startLineNumber": 414,
                        "startColumnNumber": 2,
                        "endLineNumber": 427,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "try (InputStream is=loader.getResourceAsStream(resourceName)){\n  long size=getResourceSize(loader,resourceName);\n  CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n  graphemesLexer lexer=new graphemesLexer(input);\n  double avg=tokenize(lexer,n,clearLexerDFACache);\n  String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n  if (output)   System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols from %s%s\\n\",currentMethodName,(int)avg,n,input.size(),fileName,clearLexerDFACache ? \" DFA cleared\" : \"\");\n}\n ",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 86,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 770,
                        "startLineNumber": 411,
                        "startColumnNumber": 104,
                        "endLineNumber": 428,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  String resourceName=PerfDir + \"/\" + fileName;\n  ClassLoader loader=TimeLexerSpeed.class.getClassLoader();\n  try (InputStream is=loader.getResourceAsStream(resourceName)){\n    long size=getResourceSize(loader,resourceName);\n    CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n    graphemesLexer lexer=new graphemesLexer(input);\n    double avg=tokenize(lexer,n,clearLexerDFACache);\n    String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n    if (output)     System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols from %s%s\\n\",currentMethodName,(int)avg,n,input.size(),fileName,clearLexerDFACache ? \" DFA cleared\" : \"\");\n  }\n }\n",
                    "nodeType": "Block",
                    "astNodeNumber": 106,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 873,
                        "startLineNumber": 411,
                        "startColumnNumber": 1,
                        "endLineNumber": 428,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "public void lex_new_grapheme_utf8(String fileName,int n,boolean clearLexerDFACache) throws Exception {\n  String resourceName=PerfDir + \"/\" + fileName;\n  ClassLoader loader=TimeLexerSpeed.class.getClassLoader();\n  try (InputStream is=loader.getResourceAsStream(resourceName)){\n    long size=getResourceSize(loader,resourceName);\n    CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n    graphemesLexer lexer=new graphemesLexer(input);\n    double avg=tokenize(lexer,n,clearLexerDFACache);\n    String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n    if (output)     System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols from %s%s\\n\",currentMethodName,(int)avg,n,input.size(),fileName,clearLexerDFACache ? \" DFA cleared\" : \"\");\n  }\n }\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 122,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 76,
                    "startLineNumber": 416,
                    "startColumnNumber": 3,
                    "endLineNumber": 416,
                    "endColumnNumber": 79
                },
                "nodeContext": "CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 13,
                "astHeight": 5
            },
            "tokenLength": 7,
            "type": "org.antlr.v4.runtime.CharStream"
        }
    ],
    "positionList": [
        {
            "charLength": 56,
            "startLineNumber": 416,
            "startColumnNumber": 22,
            "endLineNumber": 416,
            "endColumnNumber": 78
        }
    ],
    "layoutRelationDataList": []
}