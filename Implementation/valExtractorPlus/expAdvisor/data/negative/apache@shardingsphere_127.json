{
    "id": 127,
    "expression": "getPreviousColumnTokens(tableName,each)",
    "projectName": "apache@shardingsphere",
    "commitID": "2e33b07fd41a1e5fd64e83334ae8cfbcc69c9563",
    "filePath": "shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptAlterTableTokenGenerator.java",
    "occurrences": 1,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "getPreviousColumnTokens(tableName,each)",
            "nodeType": "MethodInvocation",
            "nodePosition": {
                "charLength": 40,
                "startLineNumber": 187,
                "startColumnNumber": 26,
                "endLineNumber": 187,
                "endColumnNumber": 66
            },
            "astNodeNumber": 4,
            "astHeight": 2,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 55,
                        "startLineNumber": 187,
                        "startColumnNumber": 12,
                        "endLineNumber": 187,
                        "endColumnNumber": 67
                    },
                    "nodeContext": "result.addAll(getPreviousColumnTokens(tableName,each))",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 56,
                        "startLineNumber": 187,
                        "startColumnNumber": 12,
                        "endLineNumber": 187,
                        "endColumnNumber": 68
                    },
                    "nodeContext": "result.addAll(getPreviousColumnTokens(tableName,each));\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 1269,
                        "startLineNumber": 186,
                        "startColumnNumber": 75,
                        "endLineNumber": 199,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  result.addAll(getPreviousColumnTokens(tableName,each));\n  result.addAll(getColumnTokens(tableName,each));\n  each.getColumnPosition().flatMap(columnPositionSegment -> getColumnPositionToken(tableName,columnPositionSegment)).ifPresent(result::add);\n  if (null != each.getPreviousColumn()) {\n    String previousColumnName=each.getPreviousColumn().getIdentifier().getValue();\n    getEncryptRule().findAssistedQueryColumn(tableName,previousColumnName).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_assisted\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n    getEncryptRule().findPlainColumn(tableName,previousColumnName).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_plain\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 146,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1336,
                        "startLineNumber": 186,
                        "startColumnNumber": 8,
                        "endLineNumber": 199,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (ChangeColumnDefinitionSegment each : changeColumnDefinitions) {\n  result.addAll(getPreviousColumnTokens(tableName,each));\n  result.addAll(getColumnTokens(tableName,each));\n  each.getColumnPosition().flatMap(columnPositionSegment -> getColumnPositionToken(tableName,columnPositionSegment)).ifPresent(result::add);\n  if (null != each.getPreviousColumn()) {\n    String previousColumnName=each.getPreviousColumn().getIdentifier().getValue();\n    getEncryptRule().findAssistedQueryColumn(tableName,previousColumnName).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_assisted\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n    getEncryptRule().findPlainColumn(tableName,previousColumnName).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_plain\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n  }\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 152,
                    "astHeight": 15
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1433,
                        "startLineNumber": 184,
                        "startColumnNumber": 152,
                        "endLineNumber": 201,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  Collection<SQLToken> result=new LinkedList<>();\n  for (  ChangeColumnDefinitionSegment each : changeColumnDefinitions) {\n    result.addAll(getPreviousColumnTokens(tableName,each));\n    result.addAll(getColumnTokens(tableName,each));\n    each.getColumnPosition().flatMap(columnPositionSegment -> getColumnPositionToken(tableName,columnPositionSegment)).ifPresent(result::add);\n    if (null != each.getPreviousColumn()) {\n      String previousColumnName=each.getPreviousColumn().getIdentifier().getValue();\n      getEncryptRule().findAssistedQueryColumn(tableName,previousColumnName).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_assisted\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n      getEncryptRule().findPlainColumn(tableName,previousColumnName).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_plain\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 167,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1581,
                        "startLineNumber": 184,
                        "startColumnNumber": 4,
                        "endLineNumber": 201,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "private Collection<SQLToken> getChangeColumnTokens(final String tableName,final Collection<ChangeColumnDefinitionSegment> changeColumnDefinitions){\n  Collection<SQLToken> result=new LinkedList<>();\n  for (  ChangeColumnDefinitionSegment each : changeColumnDefinitions) {\n    result.addAll(getPreviousColumnTokens(tableName,each));\n    result.addAll(getColumnTokens(tableName,each));\n    each.getColumnPosition().flatMap(columnPositionSegment -> getColumnPositionToken(tableName,columnPositionSegment)).ifPresent(result::add);\n    if (null != each.getPreviousColumn()) {\n      String previousColumnName=each.getPreviousColumn().getIdentifier().getValue();\n      getEncryptRule().findAssistedQueryColumn(tableName,previousColumnName).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_assisted\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n      getEncryptRule().findPlainColumn(tableName,previousColumnName).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_plain\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 188,
                    "astHeight": 17
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 56,
                    "startLineNumber": 187,
                    "startColumnNumber": 12,
                    "endLineNumber": 187,
                    "endColumnNumber": 68
                },
                "nodeContext": "result.addAll(getPreviousColumnTokens(tableName,each));\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 8,
                "astHeight": 4
            },
            "tokenLength": 3,
            "type": "java.util.Collection<>"
        }
    ],
    "positionList": [
        {
            "charLength": 40,
            "startLineNumber": 187,
            "startColumnNumber": 26,
            "endLineNumber": 187,
            "endColumnNumber": 66
        }
    ],
    "layoutRelationDataList": []
}