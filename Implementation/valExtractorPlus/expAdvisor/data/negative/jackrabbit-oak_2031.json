{
    "id": 2031,
    "expression": "\"Mandatory restriction \"",
    "projectName": "jackrabbit-oak",
    "commitID": "2dcb1440cc8a7fb0ce29c6253b6b50ac26a8d286",
    "filePath": "oak-core/src/main/java/org/apache/jackrabbit/oak/spi/security/authorization/restriction/CompositeRestrictionProvider.java",
    "occurrences": 1,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "\"Mandatory restriction \"",
            "nodeType": "StringLiteral",
            "nodePosition": {
                "charLength": 24,
                "startLineNumber": 114,
                "startColumnNumber": 49,
                "endLineNumber": 114,
                "endColumnNumber": 73
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
                    "nodePosition": {
                        "charLength": 57,
                        "startLineNumber": 114,
                        "startColumnNumber": 49,
                        "endLineNumber": 114,
                        "endColumnNumber": 106
                    },
                    "nodeContext": "\"Mandatory restriction \" + def.getName() + \" is missing.\"",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
                    "nodePosition": {
                        "charLength": 85,
                        "startLineNumber": 114,
                        "startColumnNumber": 22,
                        "endLineNumber": 114,
                        "endColumnNumber": 107
                    },
                    "nodeContext": "new AccessControlException(\"Mandatory restriction \" + def.getName() + \" is missing.\")",
                    "nodeType": "ClassInstanceCreation",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 92,
                        "startLineNumber": 114,
                        "startColumnNumber": 16,
                        "endLineNumber": 114,
                        "endColumnNumber": 108
                    },
                    "nodeContext": "throw new AccessControlException(\"Mandatory restriction \" + def.getName() + \" is missing.\");\n",
                    "nodeType": "ThrowStatement",
                    "astNodeNumber": 10,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 124,
                        "startLineNumber": 113,
                        "startColumnNumber": 70,
                        "endLineNumber": 115,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  throw new AccessControlException(\"Mandatory restriction \" + def.getName() + \" is missing.\");\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 11,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 182,
                        "startLineNumber": 113,
                        "startColumnNumber": 12,
                        "endLineNumber": 115,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (def.isMandatory() && !rNames.contains(def.getName())) {\n  throw new AccessControlException(\"Mandatory restriction \" + def.getName() + \" is missing.\");\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 23,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 206,
                        "startLineNumber": 112,
                        "startColumnNumber": 52,
                        "endLineNumber": 116,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (def.isMandatory() && !rNames.contains(def.getName())) {\n    throw new AccessControlException(\"Mandatory restriction \" + def.getName() + \" is missing.\");\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 24,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 250,
                        "startLineNumber": 112,
                        "startColumnNumber": 8,
                        "endLineNumber": 116,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (RestrictionDefinition def : supported) {\n  if (def.isMandatory() && !rNames.contains(def.getName())) {\n    throw new AccessControlException(\"Mandatory restriction \" + def.getName() + \" is missing.\");\n  }\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 30,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 944,
                        "startLineNumber": 95,
                        "startColumnNumber": 137,
                        "endLineNumber": 117,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  Set<RestrictionDefinition> supported=getSupportedRestrictions(oakPath);\n  Set<String> rNames=new HashSet<String>();\n  for (  Restriction r : readRestrictions(oakPath,aceTree)) {\n    String name=getName(r);\n    rNames.add(name);\n    boolean valid=false;\n    for (    RestrictionDefinition def : supported) {\n      if (name.equals(def.getName())) {\n        valid=def.equals(r.getDefinition());\n        break;\n      }\n    }\n    if (!valid) {\n      throw new AccessControlException(\"Invalid restriction: \" + r + \" at \"+ oakPath);\n    }\n  }\n  for (  RestrictionDefinition def : supported) {\n    if (def.isMandatory() && !rNames.contains(def.getName())) {\n      throw new AccessControlException(\"Mandatory restriction \" + def.getName() + \" is missing.\");\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 122,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1091,
                        "startLineNumber": 94,
                        "startColumnNumber": 4,
                        "endLineNumber": 117,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override public void validateRestrictions(@Nullable String oakPath,@Nonnull Tree aceTree) throws AccessControlException, RepositoryException {\n  Set<RestrictionDefinition> supported=getSupportedRestrictions(oakPath);\n  Set<String> rNames=new HashSet<String>();\n  for (  Restriction r : readRestrictions(oakPath,aceTree)) {\n    String name=getName(r);\n    rNames.add(name);\n    boolean valid=false;\n    for (    RestrictionDefinition def : supported) {\n      if (name.equals(def.getName())) {\n        valid=def.equals(r.getDefinition());\n        break;\n      }\n    }\n    if (!valid) {\n      throw new AccessControlException(\"Invalid restriction: \" + r + \" at \"+ oakPath);\n    }\n  }\n  for (  RestrictionDefinition def : supported) {\n    if (def.isMandatory() && !rNames.contains(def.getName())) {\n      throw new AccessControlException(\"Mandatory restriction \" + def.getName() + \" is missing.\");\n    }\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 144,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 92,
                    "startLineNumber": 114,
                    "startColumnNumber": 16,
                    "endLineNumber": 114,
                    "endColumnNumber": 108
                },
                "nodeContext": "throw new AccessControlException(\"Mandatory restriction \" + def.getName() + \" is missing.\");\n",
                "nodeType": "ThrowStatement",
                "astNodeNumber": 10,
                "astHeight": 5
            },
            "tokenLength": 2,
            "type": "java.lang.String"
        }
    ],
    "positionList": [
        {
            "charLength": 24,
            "startLineNumber": 114,
            "startColumnNumber": 49,
            "endLineNumber": 114,
            "endColumnNumber": 73
        }
    ],
    "layoutRelationDataList": []
}