{
    "id": 28,
    "expression": "line",
    "projectName": "joda-time",
    "commitID": "eb1b99814287682e3f185a3b2ef7e2c858e2728a",
    "filePath": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
    "occurrences": 6,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "line",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 468,
                "startColumnNumber": 29,
                "endLineNumber": 468,
                "endColumnNumber": 33
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 11,
                        "startLineNumber": 468,
                        "startColumnNumber": 29,
                        "endLineNumber": 468,
                        "endColumnNumber": 40
                    },
                    "nodeContext": "line.trim()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 21,
                        "startLineNumber": 468,
                        "startColumnNumber": 19,
                        "endLineNumber": 468,
                        "endColumnNumber": 40
                    },
                    "nodeContext": "trimmed=line.trim()",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 29,
                        "startLineNumber": 468,
                        "startColumnNumber": 12,
                        "endLineNumber": 468,
                        "endColumnNumber": 41
                    },
                    "nodeContext": "String trimmed=line.trim();\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
                    "nodePosition": {
                        "charLength": 1648,
                        "startLineNumber": 467,
                        "startColumnNumber": 47,
                        "endLineNumber": 515,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  String trimmed=line.trim();\n  if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n    continue;\n  }\n  int index=line.indexOf('#');\n  if (index >= 0) {\n    line=line.substring(0,index);\n  }\n  StringTokenizer st=new StringTokenizer(line,\" \\t\");\n  if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n    if (zone != null) {\n      zone.chain(st);\n    }\n    continue;\n  }\n else {\n    if (zone != null) {\n      iZones.add(zone);\n    }\n    zone=null;\n  }\n  if (st.hasMoreTokens()) {\n    String token=st.nextToken();\n    if (token.equalsIgnoreCase(\"Rule\")) {\n      Rule r=new Rule(st);\n      RuleSet rs=iRuleSets.get(r.iName);\n      if (rs == null) {\n        rs=new RuleSet(r);\n        iRuleSets.put(r.iName,rs);\n      }\n else {\n        rs.addRule(r);\n      }\n    }\n else     if (token.equalsIgnoreCase(\"Zone\")) {\n      zone=new Zone(st);\n    }\n else     if (token.equalsIgnoreCase(\"Link\")) {\n      iLinks.add(st.nextToken());\n      iLinks.add(st.nextToken());\n    }\n else {\n      System.out.println(\"Unknown line: \" + line);\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 202,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1687,
                        "startLineNumber": 467,
                        "startColumnNumber": 8,
                        "endLineNumber": 515,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "while ((line=in.readLine()) != null) {\n  String trimmed=line.trim();\n  if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n    continue;\n  }\n  int index=line.indexOf('#');\n  if (index >= 0) {\n    line=line.substring(0,index);\n  }\n  StringTokenizer st=new StringTokenizer(line,\" \\t\");\n  if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n    if (zone != null) {\n      zone.chain(st);\n    }\n    continue;\n  }\n else {\n    if (zone != null) {\n      iZones.add(zone);\n    }\n    zone=null;\n  }\n  if (st.hasMoreTokens()) {\n    String token=st.nextToken();\n    if (token.equalsIgnoreCase(\"Rule\")) {\n      Rule r=new Rule(st);\n      RuleSet rs=iRuleSets.get(r.iName);\n      if (rs == null) {\n        rs=new RuleSet(r);\n        iRuleSets.put(r.iName,rs);\n      }\n else {\n        rs.addRule(r);\n      }\n    }\n else     if (token.equalsIgnoreCase(\"Zone\")) {\n      zone=new Zone(st);\n    }\n else     if (token.equalsIgnoreCase(\"Link\")) {\n      iLinks.add(st.nextToken());\n      iLinks.add(st.nextToken());\n    }\n else {\n      System.out.println(\"Unknown line: \" + line);\n    }\n  }\n}\n",
                    "nodeType": "WhileStatement",
                    "astNodeNumber": 211,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1819,
                        "startLineNumber": 464,
                        "startColumnNumber": 68,
                        "endLineNumber": 520,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  Zone zone=null;\n  String line;\n  while ((line=in.readLine()) != null) {\n    String trimmed=line.trim();\n    if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n      continue;\n    }\n    int index=line.indexOf('#');\n    if (index >= 0) {\n      line=line.substring(0,index);\n    }\n    StringTokenizer st=new StringTokenizer(line,\" \\t\");\n    if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n      if (zone != null) {\n        zone.chain(st);\n      }\n      continue;\n    }\n else {\n      if (zone != null) {\n        iZones.add(zone);\n      }\n      zone=null;\n    }\n    if (st.hasMoreTokens()) {\n      String token=st.nextToken();\n      if (token.equalsIgnoreCase(\"Rule\")) {\n        Rule r=new Rule(st);\n        RuleSet rs=iRuleSets.get(r.iName);\n        if (rs == null) {\n          rs=new RuleSet(r);\n          iRuleSets.put(r.iName,rs);\n        }\n else {\n          rs.addRule(r);\n        }\n      }\n else       if (token.equalsIgnoreCase(\"Zone\")) {\n        zone=new Zone(st);\n      }\n else       if (token.equalsIgnoreCase(\"Link\")) {\n        iLinks.add(st.nextToken());\n        iLinks.add(st.nextToken());\n      }\n else {\n        System.out.println(\"Unknown line: \" + line);\n      }\n    }\n  }\n  if (zone != null) {\n    iZones.add(zone);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 233,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1883,
                        "startLineNumber": 464,
                        "startColumnNumber": 4,
                        "endLineNumber": 520,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "public void parseDataFile(BufferedReader in) throws IOException {\n  Zone zone=null;\n  String line;\n  while ((line=in.readLine()) != null) {\n    String trimmed=line.trim();\n    if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n      continue;\n    }\n    int index=line.indexOf('#');\n    if (index >= 0) {\n      line=line.substring(0,index);\n    }\n    StringTokenizer st=new StringTokenizer(line,\" \\t\");\n    if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n      if (zone != null) {\n        zone.chain(st);\n      }\n      continue;\n    }\n else {\n      if (zone != null) {\n        iZones.add(zone);\n      }\n      zone=null;\n    }\n    if (st.hasMoreTokens()) {\n      String token=st.nextToken();\n      if (token.equalsIgnoreCase(\"Rule\")) {\n        Rule r=new Rule(st);\n        RuleSet rs=iRuleSets.get(r.iName);\n        if (rs == null) {\n          rs=new RuleSet(r);\n          iRuleSets.put(r.iName,rs);\n        }\n else {\n          rs.addRule(r);\n        }\n      }\n else       if (token.equalsIgnoreCase(\"Zone\")) {\n        zone=new Zone(st);\n      }\n else       if (token.equalsIgnoreCase(\"Link\")) {\n        iLinks.add(st.nextToken());\n        iLinks.add(st.nextToken());\n      }\n else {\n        System.out.println(\"Unknown line: \" + line);\n      }\n    }\n  }\n  if (zone != null) {\n    iZones.add(zone);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 243,
                    "astHeight": 15
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 29,
                    "startLineNumber": 468,
                    "startColumnNumber": 12,
                    "endLineNumber": 468,
                    "endColumnNumber": 41
                },
                "nodeContext": "String trimmed=line.trim();\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 8,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        },
        {
            "nodeContext": "line",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 473,
                "startColumnNumber": 24,
                "endLineNumber": 473,
                "endColumnNumber": 28
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 17,
                        "startLineNumber": 473,
                        "startColumnNumber": 24,
                        "endLineNumber": 473,
                        "endColumnNumber": 41
                    },
                    "nodeContext": "line.indexOf('#')",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 25,
                        "startLineNumber": 473,
                        "startColumnNumber": 16,
                        "endLineNumber": 473,
                        "endColumnNumber": 41
                    },
                    "nodeContext": "index=line.indexOf('#')",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 30,
                        "startLineNumber": 473,
                        "startColumnNumber": 12,
                        "endLineNumber": 473,
                        "endColumnNumber": 42
                    },
                    "nodeContext": "int index=line.indexOf('#');\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
                    "nodePosition": {
                        "charLength": 1648,
                        "startLineNumber": 467,
                        "startColumnNumber": 47,
                        "endLineNumber": 515,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  String trimmed=line.trim();\n  if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n    continue;\n  }\n  int index=line.indexOf('#');\n  if (index >= 0) {\n    line=line.substring(0,index);\n  }\n  StringTokenizer st=new StringTokenizer(line,\" \\t\");\n  if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n    if (zone != null) {\n      zone.chain(st);\n    }\n    continue;\n  }\n else {\n    if (zone != null) {\n      iZones.add(zone);\n    }\n    zone=null;\n  }\n  if (st.hasMoreTokens()) {\n    String token=st.nextToken();\n    if (token.equalsIgnoreCase(\"Rule\")) {\n      Rule r=new Rule(st);\n      RuleSet rs=iRuleSets.get(r.iName);\n      if (rs == null) {\n        rs=new RuleSet(r);\n        iRuleSets.put(r.iName,rs);\n      }\n else {\n        rs.addRule(r);\n      }\n    }\n else     if (token.equalsIgnoreCase(\"Zone\")) {\n      zone=new Zone(st);\n    }\n else     if (token.equalsIgnoreCase(\"Link\")) {\n      iLinks.add(st.nextToken());\n      iLinks.add(st.nextToken());\n    }\n else {\n      System.out.println(\"Unknown line: \" + line);\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 202,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1687,
                        "startLineNumber": 467,
                        "startColumnNumber": 8,
                        "endLineNumber": 515,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "while ((line=in.readLine()) != null) {\n  String trimmed=line.trim();\n  if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n    continue;\n  }\n  int index=line.indexOf('#');\n  if (index >= 0) {\n    line=line.substring(0,index);\n  }\n  StringTokenizer st=new StringTokenizer(line,\" \\t\");\n  if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n    if (zone != null) {\n      zone.chain(st);\n    }\n    continue;\n  }\n else {\n    if (zone != null) {\n      iZones.add(zone);\n    }\n    zone=null;\n  }\n  if (st.hasMoreTokens()) {\n    String token=st.nextToken();\n    if (token.equalsIgnoreCase(\"Rule\")) {\n      Rule r=new Rule(st);\n      RuleSet rs=iRuleSets.get(r.iName);\n      if (rs == null) {\n        rs=new RuleSet(r);\n        iRuleSets.put(r.iName,rs);\n      }\n else {\n        rs.addRule(r);\n      }\n    }\n else     if (token.equalsIgnoreCase(\"Zone\")) {\n      zone=new Zone(st);\n    }\n else     if (token.equalsIgnoreCase(\"Link\")) {\n      iLinks.add(st.nextToken());\n      iLinks.add(st.nextToken());\n    }\n else {\n      System.out.println(\"Unknown line: \" + line);\n    }\n  }\n}\n",
                    "nodeType": "WhileStatement",
                    "astNodeNumber": 211,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1819,
                        "startLineNumber": 464,
                        "startColumnNumber": 68,
                        "endLineNumber": 520,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  Zone zone=null;\n  String line;\n  while ((line=in.readLine()) != null) {\n    String trimmed=line.trim();\n    if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n      continue;\n    }\n    int index=line.indexOf('#');\n    if (index >= 0) {\n      line=line.substring(0,index);\n    }\n    StringTokenizer st=new StringTokenizer(line,\" \\t\");\n    if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n      if (zone != null) {\n        zone.chain(st);\n      }\n      continue;\n    }\n else {\n      if (zone != null) {\n        iZones.add(zone);\n      }\n      zone=null;\n    }\n    if (st.hasMoreTokens()) {\n      String token=st.nextToken();\n      if (token.equalsIgnoreCase(\"Rule\")) {\n        Rule r=new Rule(st);\n        RuleSet rs=iRuleSets.get(r.iName);\n        if (rs == null) {\n          rs=new RuleSet(r);\n          iRuleSets.put(r.iName,rs);\n        }\n else {\n          rs.addRule(r);\n        }\n      }\n else       if (token.equalsIgnoreCase(\"Zone\")) {\n        zone=new Zone(st);\n      }\n else       if (token.equalsIgnoreCase(\"Link\")) {\n        iLinks.add(st.nextToken());\n        iLinks.add(st.nextToken());\n      }\n else {\n        System.out.println(\"Unknown line: \" + line);\n      }\n    }\n  }\n  if (zone != null) {\n    iZones.add(zone);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 233,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1883,
                        "startLineNumber": 464,
                        "startColumnNumber": 4,
                        "endLineNumber": 520,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "public void parseDataFile(BufferedReader in) throws IOException {\n  Zone zone=null;\n  String line;\n  while ((line=in.readLine()) != null) {\n    String trimmed=line.trim();\n    if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n      continue;\n    }\n    int index=line.indexOf('#');\n    if (index >= 0) {\n      line=line.substring(0,index);\n    }\n    StringTokenizer st=new StringTokenizer(line,\" \\t\");\n    if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n      if (zone != null) {\n        zone.chain(st);\n      }\n      continue;\n    }\n else {\n      if (zone != null) {\n        iZones.add(zone);\n      }\n      zone=null;\n    }\n    if (st.hasMoreTokens()) {\n      String token=st.nextToken();\n      if (token.equalsIgnoreCase(\"Rule\")) {\n        Rule r=new Rule(st);\n        RuleSet rs=iRuleSets.get(r.iName);\n        if (rs == null) {\n          rs=new RuleSet(r);\n          iRuleSets.put(r.iName,rs);\n        }\n else {\n          rs.addRule(r);\n        }\n      }\n else       if (token.equalsIgnoreCase(\"Zone\")) {\n        zone=new Zone(st);\n      }\n else       if (token.equalsIgnoreCase(\"Link\")) {\n        iLinks.add(st.nextToken());\n        iLinks.add(st.nextToken());\n      }\n else {\n        System.out.println(\"Unknown line: \" + line);\n      }\n    }\n  }\n  if (zone != null) {\n    iZones.add(zone);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 243,
                    "astHeight": 15
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 30,
                    "startLineNumber": 473,
                    "startColumnNumber": 12,
                    "endLineNumber": 473,
                    "endColumnNumber": 42
                },
                "nodeContext": "int index=line.indexOf('#');\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 8,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        },
        {
            "nodeContext": "line",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 475,
                "startColumnNumber": 23,
                "endLineNumber": 475,
                "endColumnNumber": 27
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 24,
                        "startLineNumber": 475,
                        "startColumnNumber": 23,
                        "endLineNumber": 475,
                        "endColumnNumber": 47
                    },
                    "nodeContext": "line.substring(0,index)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 31,
                        "startLineNumber": 475,
                        "startColumnNumber": 16,
                        "endLineNumber": 475,
                        "endColumnNumber": 47
                    },
                    "nodeContext": "line=line.substring(0,index)",
                    "nodeType": "Assignment",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 32,
                        "startLineNumber": 475,
                        "startColumnNumber": 16,
                        "endLineNumber": 475,
                        "endColumnNumber": 48
                    },
                    "nodeContext": "line=line.substring(0,index);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 64,
                        "startLineNumber": 474,
                        "startColumnNumber": 28,
                        "endLineNumber": 476,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  line=line.substring(0,index);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 9,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 80,
                        "startLineNumber": 474,
                        "startColumnNumber": 12,
                        "endLineNumber": 476,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (index >= 0) {\n  line=line.substring(0,index);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 13,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
                    "nodePosition": {
                        "charLength": 1648,
                        "startLineNumber": 467,
                        "startColumnNumber": 47,
                        "endLineNumber": 515,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  String trimmed=line.trim();\n  if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n    continue;\n  }\n  int index=line.indexOf('#');\n  if (index >= 0) {\n    line=line.substring(0,index);\n  }\n  StringTokenizer st=new StringTokenizer(line,\" \\t\");\n  if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n    if (zone != null) {\n      zone.chain(st);\n    }\n    continue;\n  }\n else {\n    if (zone != null) {\n      iZones.add(zone);\n    }\n    zone=null;\n  }\n  if (st.hasMoreTokens()) {\n    String token=st.nextToken();\n    if (token.equalsIgnoreCase(\"Rule\")) {\n      Rule r=new Rule(st);\n      RuleSet rs=iRuleSets.get(r.iName);\n      if (rs == null) {\n        rs=new RuleSet(r);\n        iRuleSets.put(r.iName,rs);\n      }\n else {\n        rs.addRule(r);\n      }\n    }\n else     if (token.equalsIgnoreCase(\"Zone\")) {\n      zone=new Zone(st);\n    }\n else     if (token.equalsIgnoreCase(\"Link\")) {\n      iLinks.add(st.nextToken());\n      iLinks.add(st.nextToken());\n    }\n else {\n      System.out.println(\"Unknown line: \" + line);\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 202,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1687,
                        "startLineNumber": 467,
                        "startColumnNumber": 8,
                        "endLineNumber": 515,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "while ((line=in.readLine()) != null) {\n  String trimmed=line.trim();\n  if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n    continue;\n  }\n  int index=line.indexOf('#');\n  if (index >= 0) {\n    line=line.substring(0,index);\n  }\n  StringTokenizer st=new StringTokenizer(line,\" \\t\");\n  if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n    if (zone != null) {\n      zone.chain(st);\n    }\n    continue;\n  }\n else {\n    if (zone != null) {\n      iZones.add(zone);\n    }\n    zone=null;\n  }\n  if (st.hasMoreTokens()) {\n    String token=st.nextToken();\n    if (token.equalsIgnoreCase(\"Rule\")) {\n      Rule r=new Rule(st);\n      RuleSet rs=iRuleSets.get(r.iName);\n      if (rs == null) {\n        rs=new RuleSet(r);\n        iRuleSets.put(r.iName,rs);\n      }\n else {\n        rs.addRule(r);\n      }\n    }\n else     if (token.equalsIgnoreCase(\"Zone\")) {\n      zone=new Zone(st);\n    }\n else     if (token.equalsIgnoreCase(\"Link\")) {\n      iLinks.add(st.nextToken());\n      iLinks.add(st.nextToken());\n    }\n else {\n      System.out.println(\"Unknown line: \" + line);\n    }\n  }\n}\n",
                    "nodeType": "WhileStatement",
                    "astNodeNumber": 211,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1819,
                        "startLineNumber": 464,
                        "startColumnNumber": 68,
                        "endLineNumber": 520,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  Zone zone=null;\n  String line;\n  while ((line=in.readLine()) != null) {\n    String trimmed=line.trim();\n    if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n      continue;\n    }\n    int index=line.indexOf('#');\n    if (index >= 0) {\n      line=line.substring(0,index);\n    }\n    StringTokenizer st=new StringTokenizer(line,\" \\t\");\n    if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n      if (zone != null) {\n        zone.chain(st);\n      }\n      continue;\n    }\n else {\n      if (zone != null) {\n        iZones.add(zone);\n      }\n      zone=null;\n    }\n    if (st.hasMoreTokens()) {\n      String token=st.nextToken();\n      if (token.equalsIgnoreCase(\"Rule\")) {\n        Rule r=new Rule(st);\n        RuleSet rs=iRuleSets.get(r.iName);\n        if (rs == null) {\n          rs=new RuleSet(r);\n          iRuleSets.put(r.iName,rs);\n        }\n else {\n          rs.addRule(r);\n        }\n      }\n else       if (token.equalsIgnoreCase(\"Zone\")) {\n        zone=new Zone(st);\n      }\n else       if (token.equalsIgnoreCase(\"Link\")) {\n        iLinks.add(st.nextToken());\n        iLinks.add(st.nextToken());\n      }\n else {\n        System.out.println(\"Unknown line: \" + line);\n      }\n    }\n  }\n  if (zone != null) {\n    iZones.add(zone);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 233,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1883,
                        "startLineNumber": 464,
                        "startColumnNumber": 4,
                        "endLineNumber": 520,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "public void parseDataFile(BufferedReader in) throws IOException {\n  Zone zone=null;\n  String line;\n  while ((line=in.readLine()) != null) {\n    String trimmed=line.trim();\n    if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n      continue;\n    }\n    int index=line.indexOf('#');\n    if (index >= 0) {\n      line=line.substring(0,index);\n    }\n    StringTokenizer st=new StringTokenizer(line,\" \\t\");\n    if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n      if (zone != null) {\n        zone.chain(st);\n      }\n      continue;\n    }\n else {\n      if (zone != null) {\n        iZones.add(zone);\n      }\n      zone=null;\n    }\n    if (st.hasMoreTokens()) {\n      String token=st.nextToken();\n      if (token.equalsIgnoreCase(\"Rule\")) {\n        Rule r=new Rule(st);\n        RuleSet rs=iRuleSets.get(r.iName);\n        if (rs == null) {\n          rs=new RuleSet(r);\n          iRuleSets.put(r.iName,rs);\n        }\n else {\n          rs.addRule(r);\n        }\n      }\n else       if (token.equalsIgnoreCase(\"Zone\")) {\n        zone=new Zone(st);\n      }\n else       if (token.equalsIgnoreCase(\"Link\")) {\n        iLinks.add(st.nextToken());\n        iLinks.add(st.nextToken());\n      }\n else {\n        System.out.println(\"Unknown line: \" + line);\n      }\n    }\n  }\n  if (zone != null) {\n    iZones.add(zone);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 243,
                    "astHeight": 15
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 32,
                    "startLineNumber": 475,
                    "startColumnNumber": 16,
                    "endLineNumber": 475,
                    "endColumnNumber": 48
                },
                "nodeContext": "line=line.substring(0,index);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 8,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        },
        {
            "nodeContext": "line",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 480,
                "startColumnNumber": 53,
                "endLineNumber": 480,
                "endColumnNumber": 57
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 32,
                        "startLineNumber": 480,
                        "startColumnNumber": 33,
                        "endLineNumber": 480,
                        "endColumnNumber": 65
                    },
                    "nodeContext": "new StringTokenizer(line,\" \\t\")",
                    "nodeType": "ClassInstanceCreation",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 37,
                        "startLineNumber": 480,
                        "startColumnNumber": 28,
                        "endLineNumber": 480,
                        "endColumnNumber": 65
                    },
                    "nodeContext": "st=new StringTokenizer(line,\" \\t\")",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 54,
                        "startLineNumber": 480,
                        "startColumnNumber": 12,
                        "endLineNumber": 480,
                        "endColumnNumber": 66
                    },
                    "nodeContext": "StringTokenizer st=new StringTokenizer(line,\" \\t\");\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 10,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
                    "nodePosition": {
                        "charLength": 1648,
                        "startLineNumber": 467,
                        "startColumnNumber": 47,
                        "endLineNumber": 515,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  String trimmed=line.trim();\n  if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n    continue;\n  }\n  int index=line.indexOf('#');\n  if (index >= 0) {\n    line=line.substring(0,index);\n  }\n  StringTokenizer st=new StringTokenizer(line,\" \\t\");\n  if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n    if (zone != null) {\n      zone.chain(st);\n    }\n    continue;\n  }\n else {\n    if (zone != null) {\n      iZones.add(zone);\n    }\n    zone=null;\n  }\n  if (st.hasMoreTokens()) {\n    String token=st.nextToken();\n    if (token.equalsIgnoreCase(\"Rule\")) {\n      Rule r=new Rule(st);\n      RuleSet rs=iRuleSets.get(r.iName);\n      if (rs == null) {\n        rs=new RuleSet(r);\n        iRuleSets.put(r.iName,rs);\n      }\n else {\n        rs.addRule(r);\n      }\n    }\n else     if (token.equalsIgnoreCase(\"Zone\")) {\n      zone=new Zone(st);\n    }\n else     if (token.equalsIgnoreCase(\"Link\")) {\n      iLinks.add(st.nextToken());\n      iLinks.add(st.nextToken());\n    }\n else {\n      System.out.println(\"Unknown line: \" + line);\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 202,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1687,
                        "startLineNumber": 467,
                        "startColumnNumber": 8,
                        "endLineNumber": 515,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "while ((line=in.readLine()) != null) {\n  String trimmed=line.trim();\n  if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n    continue;\n  }\n  int index=line.indexOf('#');\n  if (index >= 0) {\n    line=line.substring(0,index);\n  }\n  StringTokenizer st=new StringTokenizer(line,\" \\t\");\n  if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n    if (zone != null) {\n      zone.chain(st);\n    }\n    continue;\n  }\n else {\n    if (zone != null) {\n      iZones.add(zone);\n    }\n    zone=null;\n  }\n  if (st.hasMoreTokens()) {\n    String token=st.nextToken();\n    if (token.equalsIgnoreCase(\"Rule\")) {\n      Rule r=new Rule(st);\n      RuleSet rs=iRuleSets.get(r.iName);\n      if (rs == null) {\n        rs=new RuleSet(r);\n        iRuleSets.put(r.iName,rs);\n      }\n else {\n        rs.addRule(r);\n      }\n    }\n else     if (token.equalsIgnoreCase(\"Zone\")) {\n      zone=new Zone(st);\n    }\n else     if (token.equalsIgnoreCase(\"Link\")) {\n      iLinks.add(st.nextToken());\n      iLinks.add(st.nextToken());\n    }\n else {\n      System.out.println(\"Unknown line: \" + line);\n    }\n  }\n}\n",
                    "nodeType": "WhileStatement",
                    "astNodeNumber": 211,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1819,
                        "startLineNumber": 464,
                        "startColumnNumber": 68,
                        "endLineNumber": 520,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  Zone zone=null;\n  String line;\n  while ((line=in.readLine()) != null) {\n    String trimmed=line.trim();\n    if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n      continue;\n    }\n    int index=line.indexOf('#');\n    if (index >= 0) {\n      line=line.substring(0,index);\n    }\n    StringTokenizer st=new StringTokenizer(line,\" \\t\");\n    if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n      if (zone != null) {\n        zone.chain(st);\n      }\n      continue;\n    }\n else {\n      if (zone != null) {\n        iZones.add(zone);\n      }\n      zone=null;\n    }\n    if (st.hasMoreTokens()) {\n      String token=st.nextToken();\n      if (token.equalsIgnoreCase(\"Rule\")) {\n        Rule r=new Rule(st);\n        RuleSet rs=iRuleSets.get(r.iName);\n        if (rs == null) {\n          rs=new RuleSet(r);\n          iRuleSets.put(r.iName,rs);\n        }\n else {\n          rs.addRule(r);\n        }\n      }\n else       if (token.equalsIgnoreCase(\"Zone\")) {\n        zone=new Zone(st);\n      }\n else       if (token.equalsIgnoreCase(\"Link\")) {\n        iLinks.add(st.nextToken());\n        iLinks.add(st.nextToken());\n      }\n else {\n        System.out.println(\"Unknown line: \" + line);\n      }\n    }\n  }\n  if (zone != null) {\n    iZones.add(zone);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 233,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1883,
                        "startLineNumber": 464,
                        "startColumnNumber": 4,
                        "endLineNumber": 520,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "public void parseDataFile(BufferedReader in) throws IOException {\n  Zone zone=null;\n  String line;\n  while ((line=in.readLine()) != null) {\n    String trimmed=line.trim();\n    if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n      continue;\n    }\n    int index=line.indexOf('#');\n    if (index >= 0) {\n      line=line.substring(0,index);\n    }\n    StringTokenizer st=new StringTokenizer(line,\" \\t\");\n    if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n      if (zone != null) {\n        zone.chain(st);\n      }\n      continue;\n    }\n else {\n      if (zone != null) {\n        iZones.add(zone);\n      }\n      zone=null;\n    }\n    if (st.hasMoreTokens()) {\n      String token=st.nextToken();\n      if (token.equalsIgnoreCase(\"Rule\")) {\n        Rule r=new Rule(st);\n        RuleSet rs=iRuleSets.get(r.iName);\n        if (rs == null) {\n          rs=new RuleSet(r);\n          iRuleSets.put(r.iName,rs);\n        }\n else {\n          rs.addRule(r);\n        }\n      }\n else       if (token.equalsIgnoreCase(\"Zone\")) {\n        zone=new Zone(st);\n      }\n else       if (token.equalsIgnoreCase(\"Link\")) {\n        iLinks.add(st.nextToken());\n        iLinks.add(st.nextToken());\n      }\n else {\n        System.out.println(\"Unknown line: \" + line);\n      }\n    }\n  }\n  if (zone != null) {\n    iZones.add(zone);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 243,
                    "astHeight": 15
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 54,
                    "startLineNumber": 480,
                    "startColumnNumber": 12,
                    "endLineNumber": 480,
                    "endColumnNumber": 66
                },
                "nodeContext": "StringTokenizer st=new StringTokenizer(line,\" \\t\");\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 10,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        },
        {
            "nodeContext": "line",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 482,
                "startColumnNumber": 39,
                "endLineNumber": 482,
                "endColumnNumber": 43
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 14,
                        "startLineNumber": 482,
                        "startColumnNumber": 39,
                        "endLineNumber": 482,
                        "endColumnNumber": 53
                    },
                    "nodeContext": "line.charAt(0)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 38,
                        "startLineNumber": 482,
                        "startColumnNumber": 16,
                        "endLineNumber": 482,
                        "endColumnNumber": 54
                    },
                    "nodeContext": "Character.isWhitespace(line.charAt(0))",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 60,
                        "startLineNumber": 482,
                        "startColumnNumber": 16,
                        "endLineNumber": 482,
                        "endColumnNumber": 76
                    },
                    "nodeContext": "Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 11,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 380,
                        "startLineNumber": 482,
                        "startColumnNumber": 12,
                        "endLineNumber": 493,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n  if (zone != null) {\n    zone.chain(st);\n  }\n  continue;\n}\n else {\n  if (zone != null) {\n    iZones.add(zone);\n  }\n  zone=null;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 39,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
                    "nodePosition": {
                        "charLength": 1648,
                        "startLineNumber": 467,
                        "startColumnNumber": 47,
                        "endLineNumber": 515,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  String trimmed=line.trim();\n  if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n    continue;\n  }\n  int index=line.indexOf('#');\n  if (index >= 0) {\n    line=line.substring(0,index);\n  }\n  StringTokenizer st=new StringTokenizer(line,\" \\t\");\n  if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n    if (zone != null) {\n      zone.chain(st);\n    }\n    continue;\n  }\n else {\n    if (zone != null) {\n      iZones.add(zone);\n    }\n    zone=null;\n  }\n  if (st.hasMoreTokens()) {\n    String token=st.nextToken();\n    if (token.equalsIgnoreCase(\"Rule\")) {\n      Rule r=new Rule(st);\n      RuleSet rs=iRuleSets.get(r.iName);\n      if (rs == null) {\n        rs=new RuleSet(r);\n        iRuleSets.put(r.iName,rs);\n      }\n else {\n        rs.addRule(r);\n      }\n    }\n else     if (token.equalsIgnoreCase(\"Zone\")) {\n      zone=new Zone(st);\n    }\n else     if (token.equalsIgnoreCase(\"Link\")) {\n      iLinks.add(st.nextToken());\n      iLinks.add(st.nextToken());\n    }\n else {\n      System.out.println(\"Unknown line: \" + line);\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 202,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1687,
                        "startLineNumber": 467,
                        "startColumnNumber": 8,
                        "endLineNumber": 515,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "while ((line=in.readLine()) != null) {\n  String trimmed=line.trim();\n  if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n    continue;\n  }\n  int index=line.indexOf('#');\n  if (index >= 0) {\n    line=line.substring(0,index);\n  }\n  StringTokenizer st=new StringTokenizer(line,\" \\t\");\n  if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n    if (zone != null) {\n      zone.chain(st);\n    }\n    continue;\n  }\n else {\n    if (zone != null) {\n      iZones.add(zone);\n    }\n    zone=null;\n  }\n  if (st.hasMoreTokens()) {\n    String token=st.nextToken();\n    if (token.equalsIgnoreCase(\"Rule\")) {\n      Rule r=new Rule(st);\n      RuleSet rs=iRuleSets.get(r.iName);\n      if (rs == null) {\n        rs=new RuleSet(r);\n        iRuleSets.put(r.iName,rs);\n      }\n else {\n        rs.addRule(r);\n      }\n    }\n else     if (token.equalsIgnoreCase(\"Zone\")) {\n      zone=new Zone(st);\n    }\n else     if (token.equalsIgnoreCase(\"Link\")) {\n      iLinks.add(st.nextToken());\n      iLinks.add(st.nextToken());\n    }\n else {\n      System.out.println(\"Unknown line: \" + line);\n    }\n  }\n}\n",
                    "nodeType": "WhileStatement",
                    "astNodeNumber": 211,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1819,
                        "startLineNumber": 464,
                        "startColumnNumber": 68,
                        "endLineNumber": 520,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  Zone zone=null;\n  String line;\n  while ((line=in.readLine()) != null) {\n    String trimmed=line.trim();\n    if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n      continue;\n    }\n    int index=line.indexOf('#');\n    if (index >= 0) {\n      line=line.substring(0,index);\n    }\n    StringTokenizer st=new StringTokenizer(line,\" \\t\");\n    if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n      if (zone != null) {\n        zone.chain(st);\n      }\n      continue;\n    }\n else {\n      if (zone != null) {\n        iZones.add(zone);\n      }\n      zone=null;\n    }\n    if (st.hasMoreTokens()) {\n      String token=st.nextToken();\n      if (token.equalsIgnoreCase(\"Rule\")) {\n        Rule r=new Rule(st);\n        RuleSet rs=iRuleSets.get(r.iName);\n        if (rs == null) {\n          rs=new RuleSet(r);\n          iRuleSets.put(r.iName,rs);\n        }\n else {\n          rs.addRule(r);\n        }\n      }\n else       if (token.equalsIgnoreCase(\"Zone\")) {\n        zone=new Zone(st);\n      }\n else       if (token.equalsIgnoreCase(\"Link\")) {\n        iLinks.add(st.nextToken());\n        iLinks.add(st.nextToken());\n      }\n else {\n        System.out.println(\"Unknown line: \" + line);\n      }\n    }\n  }\n  if (zone != null) {\n    iZones.add(zone);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 233,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1883,
                        "startLineNumber": 464,
                        "startColumnNumber": 4,
                        "endLineNumber": 520,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "public void parseDataFile(BufferedReader in) throws IOException {\n  Zone zone=null;\n  String line;\n  while ((line=in.readLine()) != null) {\n    String trimmed=line.trim();\n    if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n      continue;\n    }\n    int index=line.indexOf('#');\n    if (index >= 0) {\n      line=line.substring(0,index);\n    }\n    StringTokenizer st=new StringTokenizer(line,\" \\t\");\n    if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n      if (zone != null) {\n        zone.chain(st);\n      }\n      continue;\n    }\n else {\n      if (zone != null) {\n        iZones.add(zone);\n      }\n      zone=null;\n    }\n    if (st.hasMoreTokens()) {\n      String token=st.nextToken();\n      if (token.equalsIgnoreCase(\"Rule\")) {\n        Rule r=new Rule(st);\n        RuleSet rs=iRuleSets.get(r.iName);\n        if (rs == null) {\n          rs=new RuleSet(r);\n          iRuleSets.put(r.iName,rs);\n        }\n else {\n          rs.addRule(r);\n        }\n      }\n else       if (token.equalsIgnoreCase(\"Zone\")) {\n        zone=new Zone(st);\n      }\n else       if (token.equalsIgnoreCase(\"Link\")) {\n        iLinks.add(st.nextToken());\n        iLinks.add(st.nextToken());\n      }\n else {\n        System.out.println(\"Unknown line: \" + line);\n      }\n    }\n  }\n  if (zone != null) {\n    iZones.add(zone);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 243,
                    "astHeight": 15
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 60,
                    "startLineNumber": 482,
                    "startColumnNumber": 16,
                    "endLineNumber": 482,
                    "endColumnNumber": 76
                },
                "nodeContext": "Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()",
                "nodeType": "InfixExpression",
                "astNodeNumber": 11,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        },
        {
            "nodeContext": "line",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 512,
                "startColumnNumber": 58,
                "endLineNumber": 512,
                "endColumnNumber": 62
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 23,
                        "startLineNumber": 512,
                        "startColumnNumber": 39,
                        "endLineNumber": 512,
                        "endColumnNumber": 62
                    },
                    "nodeContext": "\"Unknown line: \" + line",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 43,
                        "startLineNumber": 512,
                        "startColumnNumber": 20,
                        "endLineNumber": 512,
                        "endColumnNumber": 63
                    },
                    "nodeContext": "System.out.println(\"Unknown line: \" + line)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 8,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 44,
                        "startLineNumber": 512,
                        "startColumnNumber": 20,
                        "endLineNumber": 512,
                        "endColumnNumber": 64
                    },
                    "nodeContext": "System.out.println(\"Unknown line: \" + line);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 84,
                        "startLineNumber": 511,
                        "startColumnNumber": 23,
                        "endLineNumber": 513,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  System.out.println(\"Unknown line: \" + line);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 10,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 241,
                        "startLineNumber": 508,
                        "startColumnNumber": 23,
                        "endLineNumber": 513,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (token.equalsIgnoreCase(\"Link\")) {\n  iLinks.add(st.nextToken());\n  iLinks.add(st.nextToken());\n}\n else {\n  System.out.println(\"Unknown line: \" + line);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 30,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 343,
                        "startLineNumber": 506,
                        "startColumnNumber": 23,
                        "endLineNumber": 513,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (token.equalsIgnoreCase(\"Zone\")) {\n  zone=new Zone(st);\n}\n else if (token.equalsIgnoreCase(\"Link\")) {\n  iLinks.add(st.nextToken());\n  iLinks.add(st.nextToken());\n}\n else {\n  System.out.println(\"Unknown line: \" + line);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 43,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 729,
                        "startLineNumber": 497,
                        "startColumnNumber": 16,
                        "endLineNumber": 513,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (token.equalsIgnoreCase(\"Rule\")) {\n  Rule r=new Rule(st);\n  RuleSet rs=iRuleSets.get(r.iName);\n  if (rs == null) {\n    rs=new RuleSet(r);\n    iRuleSets.put(r.iName,rs);\n  }\n else {\n    rs.addRule(r);\n  }\n}\n else if (token.equalsIgnoreCase(\"Zone\")) {\n  zone=new Zone(st);\n}\n else if (token.equalsIgnoreCase(\"Link\")) {\n  iLinks.add(st.nextToken());\n  iLinks.add(st.nextToken());\n}\n else {\n  System.out.println(\"Unknown line: \" + line);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 95,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 808,
                        "startLineNumber": 495,
                        "startColumnNumber": 36,
                        "endLineNumber": 514,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  String token=st.nextToken();\n  if (token.equalsIgnoreCase(\"Rule\")) {\n    Rule r=new Rule(st);\n    RuleSet rs=iRuleSets.get(r.iName);\n    if (rs == null) {\n      rs=new RuleSet(r);\n      iRuleSets.put(r.iName,rs);\n    }\n else {\n      rs.addRule(r);\n    }\n  }\n else   if (token.equalsIgnoreCase(\"Zone\")) {\n    zone=new Zone(st);\n  }\n else   if (token.equalsIgnoreCase(\"Link\")) {\n    iLinks.add(st.nextToken());\n    iLinks.add(st.nextToken());\n  }\n else {\n    System.out.println(\"Unknown line: \" + line);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 104,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 832,
                        "startLineNumber": 495,
                        "startColumnNumber": 12,
                        "endLineNumber": 514,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (st.hasMoreTokens()) {\n  String token=st.nextToken();\n  if (token.equalsIgnoreCase(\"Rule\")) {\n    Rule r=new Rule(st);\n    RuleSet rs=iRuleSets.get(r.iName);\n    if (rs == null) {\n      rs=new RuleSet(r);\n      iRuleSets.put(r.iName,rs);\n    }\n else {\n      rs.addRule(r);\n    }\n  }\n else   if (token.equalsIgnoreCase(\"Zone\")) {\n    zone=new Zone(st);\n  }\n else   if (token.equalsIgnoreCase(\"Link\")) {\n    iLinks.add(st.nextToken());\n    iLinks.add(st.nextToken());\n  }\n else {\n    System.out.println(\"Unknown line: \" + line);\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 108,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
                    "nodePosition": {
                        "charLength": 1648,
                        "startLineNumber": 467,
                        "startColumnNumber": 47,
                        "endLineNumber": 515,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  String trimmed=line.trim();\n  if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n    continue;\n  }\n  int index=line.indexOf('#');\n  if (index >= 0) {\n    line=line.substring(0,index);\n  }\n  StringTokenizer st=new StringTokenizer(line,\" \\t\");\n  if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n    if (zone != null) {\n      zone.chain(st);\n    }\n    continue;\n  }\n else {\n    if (zone != null) {\n      iZones.add(zone);\n    }\n    zone=null;\n  }\n  if (st.hasMoreTokens()) {\n    String token=st.nextToken();\n    if (token.equalsIgnoreCase(\"Rule\")) {\n      Rule r=new Rule(st);\n      RuleSet rs=iRuleSets.get(r.iName);\n      if (rs == null) {\n        rs=new RuleSet(r);\n        iRuleSets.put(r.iName,rs);\n      }\n else {\n        rs.addRule(r);\n      }\n    }\n else     if (token.equalsIgnoreCase(\"Zone\")) {\n      zone=new Zone(st);\n    }\n else     if (token.equalsIgnoreCase(\"Link\")) {\n      iLinks.add(st.nextToken());\n      iLinks.add(st.nextToken());\n    }\n else {\n      System.out.println(\"Unknown line: \" + line);\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 202,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1687,
                        "startLineNumber": 467,
                        "startColumnNumber": 8,
                        "endLineNumber": 515,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "while ((line=in.readLine()) != null) {\n  String trimmed=line.trim();\n  if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n    continue;\n  }\n  int index=line.indexOf('#');\n  if (index >= 0) {\n    line=line.substring(0,index);\n  }\n  StringTokenizer st=new StringTokenizer(line,\" \\t\");\n  if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n    if (zone != null) {\n      zone.chain(st);\n    }\n    continue;\n  }\n else {\n    if (zone != null) {\n      iZones.add(zone);\n    }\n    zone=null;\n  }\n  if (st.hasMoreTokens()) {\n    String token=st.nextToken();\n    if (token.equalsIgnoreCase(\"Rule\")) {\n      Rule r=new Rule(st);\n      RuleSet rs=iRuleSets.get(r.iName);\n      if (rs == null) {\n        rs=new RuleSet(r);\n        iRuleSets.put(r.iName,rs);\n      }\n else {\n        rs.addRule(r);\n      }\n    }\n else     if (token.equalsIgnoreCase(\"Zone\")) {\n      zone=new Zone(st);\n    }\n else     if (token.equalsIgnoreCase(\"Link\")) {\n      iLinks.add(st.nextToken());\n      iLinks.add(st.nextToken());\n    }\n else {\n      System.out.println(\"Unknown line: \" + line);\n    }\n  }\n}\n",
                    "nodeType": "WhileStatement",
                    "astNodeNumber": 211,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1819,
                        "startLineNumber": 464,
                        "startColumnNumber": 68,
                        "endLineNumber": 520,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  Zone zone=null;\n  String line;\n  while ((line=in.readLine()) != null) {\n    String trimmed=line.trim();\n    if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n      continue;\n    }\n    int index=line.indexOf('#');\n    if (index >= 0) {\n      line=line.substring(0,index);\n    }\n    StringTokenizer st=new StringTokenizer(line,\" \\t\");\n    if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n      if (zone != null) {\n        zone.chain(st);\n      }\n      continue;\n    }\n else {\n      if (zone != null) {\n        iZones.add(zone);\n      }\n      zone=null;\n    }\n    if (st.hasMoreTokens()) {\n      String token=st.nextToken();\n      if (token.equalsIgnoreCase(\"Rule\")) {\n        Rule r=new Rule(st);\n        RuleSet rs=iRuleSets.get(r.iName);\n        if (rs == null) {\n          rs=new RuleSet(r);\n          iRuleSets.put(r.iName,rs);\n        }\n else {\n          rs.addRule(r);\n        }\n      }\n else       if (token.equalsIgnoreCase(\"Zone\")) {\n        zone=new Zone(st);\n      }\n else       if (token.equalsIgnoreCase(\"Link\")) {\n        iLinks.add(st.nextToken());\n        iLinks.add(st.nextToken());\n      }\n else {\n        System.out.println(\"Unknown line: \" + line);\n      }\n    }\n  }\n  if (zone != null) {\n    iZones.add(zone);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 233,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1883,
                        "startLineNumber": 464,
                        "startColumnNumber": 4,
                        "endLineNumber": 520,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "public void parseDataFile(BufferedReader in) throws IOException {\n  Zone zone=null;\n  String line;\n  while ((line=in.readLine()) != null) {\n    String trimmed=line.trim();\n    if (trimmed.length() == 0 || trimmed.charAt(0) == '#') {\n      continue;\n    }\n    int index=line.indexOf('#');\n    if (index >= 0) {\n      line=line.substring(0,index);\n    }\n    StringTokenizer st=new StringTokenizer(line,\" \\t\");\n    if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n      if (zone != null) {\n        zone.chain(st);\n      }\n      continue;\n    }\n else {\n      if (zone != null) {\n        iZones.add(zone);\n      }\n      zone=null;\n    }\n    if (st.hasMoreTokens()) {\n      String token=st.nextToken();\n      if (token.equalsIgnoreCase(\"Rule\")) {\n        Rule r=new Rule(st);\n        RuleSet rs=iRuleSets.get(r.iName);\n        if (rs == null) {\n          rs=new RuleSet(r);\n          iRuleSets.put(r.iName,rs);\n        }\n else {\n          rs.addRule(r);\n        }\n      }\n else       if (token.equalsIgnoreCase(\"Zone\")) {\n        zone=new Zone(st);\n      }\n else       if (token.equalsIgnoreCase(\"Link\")) {\n        iLinks.add(st.nextToken());\n        iLinks.add(st.nextToken());\n      }\n else {\n        System.out.println(\"Unknown line: \" + line);\n      }\n    }\n  }\n  if (zone != null) {\n    iZones.add(zone);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 243,
                    "astHeight": 15
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 44,
                    "startLineNumber": 512,
                    "startColumnNumber": 20,
                    "endLineNumber": 512,
                    "endColumnNumber": 64
                },
                "nodeContext": "System.out.println(\"Unknown line: \" + line);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 9,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        }
    ],
    "positionList": [
        {
            "charLength": 4,
            "startLineNumber": 468,
            "startColumnNumber": 29,
            "endLineNumber": 468,
            "endColumnNumber": 33
        },
        {
            "charLength": 4,
            "startLineNumber": 473,
            "startColumnNumber": 24,
            "endLineNumber": 473,
            "endColumnNumber": 28
        },
        {
            "charLength": 4,
            "startLineNumber": 475,
            "startColumnNumber": 23,
            "endLineNumber": 475,
            "endColumnNumber": 27
        },
        {
            "charLength": 4,
            "startLineNumber": 480,
            "startColumnNumber": 53,
            "endLineNumber": 480,
            "endColumnNumber": 57
        },
        {
            "charLength": 4,
            "startLineNumber": 482,
            "startColumnNumber": 39,
            "endLineNumber": 482,
            "endColumnNumber": 43
        },
        {
            "charLength": 4,
            "startLineNumber": 512,
            "startColumnNumber": 58,
            "endLineNumber": 512,
            "endColumnNumber": 62
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 3,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 4,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 5,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 3,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 3,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 3,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 3,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 4,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 1,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 2,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 3,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 5,
            "layout": 4
        },
        {
            "firstKey": 5,
            "secondKey": 0,
            "layout": 9
        },
        {
            "firstKey": 5,
            "secondKey": 1,
            "layout": 9
        },
        {
            "firstKey": 5,
            "secondKey": 2,
            "layout": 9
        },
        {
            "firstKey": 5,
            "secondKey": 3,
            "layout": 9
        },
        {
            "firstKey": 5,
            "secondKey": 4,
            "layout": 9
        }
    ]
}