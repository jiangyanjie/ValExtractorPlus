{
    "id": 165,
    "expression": "Collectors.toList()",
    "projectName": "apache@shardingsphere",
    "commitID": "ae8bf1a8962caef11b4382b3e974724b65037497",
    "filePath": "shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-core/src/main/java/org/apache/shardingsphere/data/pipeline/scenario/rulealtered/RuleAlteredJobProgressDetector.java",
    "occurrences": 1,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "Collectors.toList()",
            "nodeType": "MethodInvocation",
            "nodePosition": {
                "charLength": 19,
                "startLineNumber": 70,
                "startColumnNumber": 25,
                "endLineNumber": 70,
                "endColumnNumber": 44
            },
            "astNodeNumber": 3,
            "astHeight": 2,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 447,
                        "startLineNumber": 65,
                        "startColumnNumber": 54,
                        "endLineNumber": 70,
                        "endColumnNumber": 45
                    },
                    "nodeContext": "jobProgressMap.values().stream().flatMap(each -> each.getIncrementalTaskProgressMap().values().stream()).map(each -> {\n  long latestActiveTimeMillis=each.getIncrementalTaskDelay().getLatestActiveTimeMillis();\n  return latestActiveTimeMillis > 0 ? TimeUnit.MILLISECONDS.toMinutes(currentTimeMillis - latestActiveTimeMillis) : 0;\n}\n).collect(Collectors.toList())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 51,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 476,
                        "startLineNumber": 65,
                        "startColumnNumber": 25,
                        "endLineNumber": 70,
                        "endColumnNumber": 45
                    },
                    "nodeContext": "incrementalTaskIdleMinutes=jobProgressMap.values().stream().flatMap(each -> each.getIncrementalTaskProgressMap().values().stream()).map(each -> {\n  long latestActiveTimeMillis=each.getIncrementalTaskDelay().getLatestActiveTimeMillis();\n  return latestActiveTimeMillis > 0 ? TimeUnit.MILLISECONDS.toMinutes(currentTimeMillis - latestActiveTimeMillis) : 0;\n}\n).collect(Collectors.toList())",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 53,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 494,
                        "startLineNumber": 65,
                        "startColumnNumber": 8,
                        "endLineNumber": 70,
                        "endColumnNumber": 46
                    },
                    "nodeContext": "Collection<Long> incrementalTaskIdleMinutes=jobProgressMap.values().stream().flatMap(each -> each.getIncrementalTaskProgressMap().values().stream()).map(each -> {\n  long latestActiveTimeMillis=each.getIncrementalTaskDelay().getLatestActiveTimeMillis();\n  return latestActiveTimeMillis > 0 ? TimeUnit.MILLISECONDS.toMinutes(currentTimeMillis - latestActiveTimeMillis) : 0;\n}\n).collect(Collectors.toList());\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 59,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 838,
                        "startLineNumber": 63,
                        "startColumnNumber": 182,
                        "endLineNumber": 73,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  long currentTimeMillis=System.currentTimeMillis();\n  Collection<Long> incrementalTaskIdleMinutes=jobProgressMap.values().stream().flatMap(each -> each.getIncrementalTaskProgressMap().values().stream()).map(each -> {\n    long latestActiveTimeMillis=each.getIncrementalTaskDelay().getLatestActiveTimeMillis();\n    return latestActiveTimeMillis > 0 ? TimeUnit.MILLISECONDS.toMinutes(currentTimeMillis - latestActiveTimeMillis) : 0;\n  }\n).collect(Collectors.toList());\n  AllIncrementalTasksAlmostFinishedParameter parameter=AllIncrementalTasksAlmostFinishedParameter.builder().incrementalTaskIdleMinutes(incrementalTaskIdleMinutes).build();\n  return completionDetectAlgorithm.allIncrementalTasksAlmostFinished(parameter);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 85,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1016,
                        "startLineNumber": 63,
                        "startColumnNumber": 4,
                        "endLineNumber": 73,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "private static boolean allIncrementalTasksAlmostFinished(final Map<Integer,JobProgress> jobProgressMap,final RuleAlteredJobCompletionDetectAlgorithm completionDetectAlgorithm){\n  long currentTimeMillis=System.currentTimeMillis();\n  Collection<Long> incrementalTaskIdleMinutes=jobProgressMap.values().stream().flatMap(each -> each.getIncrementalTaskProgressMap().values().stream()).map(each -> {\n    long latestActiveTimeMillis=each.getIncrementalTaskDelay().getLatestActiveTimeMillis();\n    return latestActiveTimeMillis > 0 ? TimeUnit.MILLISECONDS.toMinutes(currentTimeMillis - latestActiveTimeMillis) : 0;\n  }\n).collect(Collectors.toList());\n  AllIncrementalTasksAlmostFinishedParameter parameter=AllIncrementalTasksAlmostFinishedParameter.builder().incrementalTaskIdleMinutes(incrementalTaskIdleMinutes).build();\n  return completionDetectAlgorithm.allIncrementalTasksAlmostFinished(parameter);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 105,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                "nodePosition": {
                    "charLength": 447,
                    "startLineNumber": 65,
                    "startColumnNumber": 54,
                    "endLineNumber": 70,
                    "endColumnNumber": 45
                },
                "nodeContext": "jobProgressMap.values().stream().flatMap(each -> each.getIncrementalTaskProgressMap().values().stream()).map(each -> {\n  long latestActiveTimeMillis=each.getIncrementalTaskDelay().getLatestActiveTimeMillis();\n  return latestActiveTimeMillis > 0 ? TimeUnit.MILLISECONDS.toMinutes(currentTimeMillis - latestActiveTimeMillis) : 0;\n}\n).collect(Collectors.toList())",
                "nodeType": "MethodInvocation",
                "astNodeNumber": 51,
                "astHeight": 9
            },
            "tokenLength": 2,
            "type": "java.util.stream.Collector<java.lang.Object,,java.util.List<java.lang.Object>>"
        }
    ],
    "positionList": [
        {
            "charLength": 19,
            "startLineNumber": 70,
            "startColumnNumber": 25,
            "endLineNumber": 70,
            "endColumnNumber": 44
        }
    ],
    "layoutRelationDataList": []
}