{
    "id": 469,
    "expression": "start",
    "projectName": "commons-compress",
    "commitID": "e3ea7b6607e7c96b9e2b6813c05bfba887c8e226",
    "filePath": "src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java",
    "occurrences": 4,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "start",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 5,
                "startLineNumber": 284,
                "startColumnNumber": 40,
                "endLineNumber": 284,
                "endColumnNumber": 45
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 101,
                        "startLineNumber": 283,
                        "startColumnNumber": 12,
                        "endLineNumber": 284,
                        "endColumnNumber": 49
                    },
                    "nodeContext": "System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 14,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 102,
                        "startLineNumber": 283,
                        "startColumnNumber": 12,
                        "endLineNumber": 284,
                        "endColumnNumber": 50
                    },
                    "nodeContext": "System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 15,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 532,
                        "startLineNumber": 282,
                        "startColumnNumber": 57,
                        "endLineNumber": 293,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n  System.arraycopy(data[i].getCentralDirectoryLength().getBytes(),0,result,start + 2,2);\n  start+=WORD;\n  final byte[] central=data[i].getCentralDirectoryData();\n  if (central != null) {\n    System.arraycopy(central,0,result,start,central.length);\n    start+=central.length;\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 71,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 581,
                        "startLineNumber": 282,
                        "startColumnNumber": 8,
                        "endLineNumber": 293,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=0; i < regularExtraFieldCount; i++) {\n  System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n  System.arraycopy(data[i].getCentralDirectoryLength().getBytes(),0,result,start + 2,2);\n  start+=WORD;\n  final byte[] central=data[i].getCentralDirectoryData();\n  if (central != null) {\n    System.arraycopy(central,0,result,start,central.length);\n    start+=central.length;\n  }\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 82,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1396,
                        "startLineNumber": 270,
                        "startColumnNumber": 79,
                        "endLineNumber": 301,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getCentralDirectoryLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getCentralDirectoryLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] central=data[i].getCentralDirectoryData();\n    if (central != null) {\n      System.arraycopy(central,0,result,start,central.length);\n      start+=central.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] central=data[data.length - 1].getCentralDirectoryData();\n    if (central != null) {\n      System.arraycopy(central,0,result,start,central.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 196,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1640,
                        "startLineNumber": 265,
                        "startColumnNumber": 4,
                        "endLineNumber": 301,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Merges the central directory fields of the given ZipExtraFields.\n * @param data an array of ExtraFields\n * @return an array of bytes\n */\npublic static byte[] mergeCentralDirectoryData(final ZipExtraField[] data){\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getCentralDirectoryLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getCentralDirectoryLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] central=data[i].getCentralDirectoryData();\n    if (central != null) {\n      System.arraycopy(central,0,result,start,central.length);\n      start+=central.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] central=data[data.length - 1].getCentralDirectoryData();\n    if (central != null) {\n      System.arraycopy(central,0,result,start,central.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 211,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                "nodePosition": {
                    "charLength": 101,
                    "startLineNumber": 283,
                    "startColumnNumber": 12,
                    "endLineNumber": 284,
                    "endColumnNumber": 49
                },
                "nodeContext": "System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2)",
                "nodeType": "MethodInvocation",
                "astNodeNumber": 14,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "int"
        },
        {
            "nodeContext": "start",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 5,
                "startLineNumber": 286,
                "startColumnNumber": 40,
                "endLineNumber": 286,
                "endColumnNumber": 45
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 9,
                        "startLineNumber": 286,
                        "startColumnNumber": 40,
                        "endLineNumber": 286,
                        "endColumnNumber": 49
                    },
                    "nodeContext": "start + 2",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 119,
                        "startLineNumber": 285,
                        "startColumnNumber": 12,
                        "endLineNumber": 286,
                        "endColumnNumber": 53
                    },
                    "nodeContext": "System.arraycopy(data[i].getCentralDirectoryLength().getBytes(),0,result,start + 2,2)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 16,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 120,
                        "startLineNumber": 285,
                        "startColumnNumber": 12,
                        "endLineNumber": 286,
                        "endColumnNumber": 54
                    },
                    "nodeContext": "System.arraycopy(data[i].getCentralDirectoryLength().getBytes(),0,result,start + 2,2);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 17,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 532,
                        "startLineNumber": 282,
                        "startColumnNumber": 57,
                        "endLineNumber": 293,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n  System.arraycopy(data[i].getCentralDirectoryLength().getBytes(),0,result,start + 2,2);\n  start+=WORD;\n  final byte[] central=data[i].getCentralDirectoryData();\n  if (central != null) {\n    System.arraycopy(central,0,result,start,central.length);\n    start+=central.length;\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 71,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 581,
                        "startLineNumber": 282,
                        "startColumnNumber": 8,
                        "endLineNumber": 293,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=0; i < regularExtraFieldCount; i++) {\n  System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n  System.arraycopy(data[i].getCentralDirectoryLength().getBytes(),0,result,start + 2,2);\n  start+=WORD;\n  final byte[] central=data[i].getCentralDirectoryData();\n  if (central != null) {\n    System.arraycopy(central,0,result,start,central.length);\n    start+=central.length;\n  }\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 82,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1396,
                        "startLineNumber": 270,
                        "startColumnNumber": 79,
                        "endLineNumber": 301,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getCentralDirectoryLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getCentralDirectoryLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] central=data[i].getCentralDirectoryData();\n    if (central != null) {\n      System.arraycopy(central,0,result,start,central.length);\n      start+=central.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] central=data[data.length - 1].getCentralDirectoryData();\n    if (central != null) {\n      System.arraycopy(central,0,result,start,central.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 196,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1640,
                        "startLineNumber": 265,
                        "startColumnNumber": 4,
                        "endLineNumber": 301,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Merges the central directory fields of the given ZipExtraFields.\n * @param data an array of ExtraFields\n * @return an array of bytes\n */\npublic static byte[] mergeCentralDirectoryData(final ZipExtraField[] data){\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getCentralDirectoryLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getCentralDirectoryLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] central=data[i].getCentralDirectoryData();\n    if (central != null) {\n      System.arraycopy(central,0,result,start,central.length);\n      start+=central.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] central=data[data.length - 1].getCentralDirectoryData();\n    if (central != null) {\n      System.arraycopy(central,0,result,start,central.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 211,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                "nodePosition": {
                    "charLength": 9,
                    "startLineNumber": 286,
                    "startColumnNumber": 40,
                    "endLineNumber": 286,
                    "endColumnNumber": 49
                },
                "nodeContext": "start + 2",
                "nodeType": "InfixExpression",
                "astNodeNumber": 3,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "int"
        },
        {
            "nodeContext": "start",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 5,
                "startLineNumber": 290,
                "startColumnNumber": 53,
                "endLineNumber": 290,
                "endColumnNumber": 58
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 59,
                        "startLineNumber": 290,
                        "startColumnNumber": 16,
                        "endLineNumber": 290,
                        "endColumnNumber": 75
                    },
                    "nodeContext": "System.arraycopy(central,0,result,start,central.length)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 10,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 60,
                        "startLineNumber": 290,
                        "startColumnNumber": 16,
                        "endLineNumber": 290,
                        "endColumnNumber": 76
                    },
                    "nodeContext": "System.arraycopy(central,0,result,start,central.length);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 11,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 136,
                        "startLineNumber": 289,
                        "startColumnNumber": 33,
                        "endLineNumber": 292,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  System.arraycopy(central,0,result,start,central.length);\n  start+=central.length;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 18,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 157,
                        "startLineNumber": 289,
                        "startColumnNumber": 12,
                        "endLineNumber": 292,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (central != null) {\n  System.arraycopy(central,0,result,start,central.length);\n  start+=central.length;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 22,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 532,
                        "startLineNumber": 282,
                        "startColumnNumber": 57,
                        "endLineNumber": 293,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n  System.arraycopy(data[i].getCentralDirectoryLength().getBytes(),0,result,start + 2,2);\n  start+=WORD;\n  final byte[] central=data[i].getCentralDirectoryData();\n  if (central != null) {\n    System.arraycopy(central,0,result,start,central.length);\n    start+=central.length;\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 71,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 581,
                        "startLineNumber": 282,
                        "startColumnNumber": 8,
                        "endLineNumber": 293,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=0; i < regularExtraFieldCount; i++) {\n  System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n  System.arraycopy(data[i].getCentralDirectoryLength().getBytes(),0,result,start + 2,2);\n  start+=WORD;\n  final byte[] central=data[i].getCentralDirectoryData();\n  if (central != null) {\n    System.arraycopy(central,0,result,start,central.length);\n    start+=central.length;\n  }\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 82,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1396,
                        "startLineNumber": 270,
                        "startColumnNumber": 79,
                        "endLineNumber": 301,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getCentralDirectoryLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getCentralDirectoryLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] central=data[i].getCentralDirectoryData();\n    if (central != null) {\n      System.arraycopy(central,0,result,start,central.length);\n      start+=central.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] central=data[data.length - 1].getCentralDirectoryData();\n    if (central != null) {\n      System.arraycopy(central,0,result,start,central.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 196,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1640,
                        "startLineNumber": 265,
                        "startColumnNumber": 4,
                        "endLineNumber": 301,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Merges the central directory fields of the given ZipExtraFields.\n * @param data an array of ExtraFields\n * @return an array of bytes\n */\npublic static byte[] mergeCentralDirectoryData(final ZipExtraField[] data){\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getCentralDirectoryLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getCentralDirectoryLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] central=data[i].getCentralDirectoryData();\n    if (central != null) {\n      System.arraycopy(central,0,result,start,central.length);\n      start+=central.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] central=data[data.length - 1].getCentralDirectoryData();\n    if (central != null) {\n      System.arraycopy(central,0,result,start,central.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 211,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 60,
                    "startLineNumber": 290,
                    "startColumnNumber": 16,
                    "endLineNumber": 290,
                    "endColumnNumber": 76
                },
                "nodeContext": "System.arraycopy(central,0,result,start,central.length);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 11,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "int"
        },
        {
            "nodeContext": "start",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 5,
                "startLineNumber": 297,
                "startColumnNumber": 53,
                "endLineNumber": 297,
                "endColumnNumber": 58
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 59,
                        "startLineNumber": 297,
                        "startColumnNumber": 16,
                        "endLineNumber": 297,
                        "endColumnNumber": 75
                    },
                    "nodeContext": "System.arraycopy(central,0,result,start,central.length)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 10,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 60,
                        "startLineNumber": 297,
                        "startColumnNumber": 16,
                        "endLineNumber": 297,
                        "endColumnNumber": 76
                    },
                    "nodeContext": "System.arraycopy(central,0,result,start,central.length);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 11,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 94,
                        "startLineNumber": 296,
                        "startColumnNumber": 33,
                        "endLineNumber": 298,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  System.arraycopy(central,0,result,start,central.length);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 12,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 115,
                        "startLineNumber": 296,
                        "startColumnNumber": 12,
                        "endLineNumber": 298,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (central != null) {\n  System.arraycopy(central,0,result,start,central.length);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 16,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 226,
                        "startLineNumber": 294,
                        "startColumnNumber": 37,
                        "endLineNumber": 299,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  final byte[] central=data[data.length - 1].getCentralDirectoryData();\n  if (central != null) {\n    System.arraycopy(central,0,result,start,central.length);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 33,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 255,
                        "startLineNumber": 294,
                        "startColumnNumber": 8,
                        "endLineNumber": 299,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (lastIsUnparseableHolder) {\n  final byte[] central=data[data.length - 1].getCentralDirectoryData();\n  if (central != null) {\n    System.arraycopy(central,0,result,start,central.length);\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 35,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1396,
                        "startLineNumber": 270,
                        "startColumnNumber": 79,
                        "endLineNumber": 301,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getCentralDirectoryLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getCentralDirectoryLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] central=data[i].getCentralDirectoryData();\n    if (central != null) {\n      System.arraycopy(central,0,result,start,central.length);\n      start+=central.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] central=data[data.length - 1].getCentralDirectoryData();\n    if (central != null) {\n      System.arraycopy(central,0,result,start,central.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 196,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1640,
                        "startLineNumber": 265,
                        "startColumnNumber": 4,
                        "endLineNumber": 301,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Merges the central directory fields of the given ZipExtraFields.\n * @param data an array of ExtraFields\n * @return an array of bytes\n */\npublic static byte[] mergeCentralDirectoryData(final ZipExtraField[] data){\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getCentralDirectoryLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getCentralDirectoryLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] central=data[i].getCentralDirectoryData();\n    if (central != null) {\n      System.arraycopy(central,0,result,start,central.length);\n      start+=central.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] central=data[data.length - 1].getCentralDirectoryData();\n    if (central != null) {\n      System.arraycopy(central,0,result,start,central.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 211,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 60,
                    "startLineNumber": 297,
                    "startColumnNumber": 16,
                    "endLineNumber": 297,
                    "endColumnNumber": 76
                },
                "nodeContext": "System.arraycopy(central,0,result,start,central.length);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 11,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "int"
        }
    ],
    "positionList": [
        {
            "charLength": 5,
            "startLineNumber": 284,
            "startColumnNumber": 40,
            "endLineNumber": 284,
            "endColumnNumber": 45
        },
        {
            "charLength": 5,
            "startLineNumber": 286,
            "startColumnNumber": 40,
            "endLineNumber": 286,
            "endColumnNumber": 45
        },
        {
            "charLength": 5,
            "startLineNumber": 290,
            "startColumnNumber": 53,
            "endLineNumber": 290,
            "endColumnNumber": 58
        },
        {
            "charLength": 5,
            "startLineNumber": 297,
            "startColumnNumber": 53,
            "endLineNumber": 297,
            "endColumnNumber": 58
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 3,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 3,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 3,
            "layout": 6
        },
        {
            "firstKey": 3,
            "secondKey": 0,
            "layout": 6
        },
        {
            "firstKey": 3,
            "secondKey": 1,
            "layout": 6
        },
        {
            "firstKey": 3,
            "secondKey": 2,
            "layout": 6
        }
    ]
}