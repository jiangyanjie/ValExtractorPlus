{
    "id": 2041,
    "expression": "false",
    "projectName": "jackrabbit-oak",
    "commitID": "42484286ce0684053027e3cfd5586ab3fdf64346",
    "filePath": "oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/mongomk/NodeDocument.java",
    "occurrences": 3,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "false",
            "nodeType": "BooleanLiteral",
            "nodePosition": {
                "charLength": 5,
                "startLineNumber": 625,
                "startColumnNumber": 19,
                "endLineNumber": 625,
                "endColumnNumber": 24
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 13,
                        "startLineNumber": 625,
                        "startColumnNumber": 12,
                        "endLineNumber": 625,
                        "endColumnNumber": 25
                    },
                    "nodeContext": "return false;\n",
                    "nodeType": "ReturnStatement",
                    "astNodeNumber": 2,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 37,
                        "startLineNumber": 624,
                        "startColumnNumber": 31,
                        "endLineNumber": 626,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  return false;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 3,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 60,
                        "startLineNumber": 624,
                        "startColumnNumber": 8,
                        "endLineNumber": 626,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (revisions == null) {\n  return false;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1070,
                        "startLineNumber": 620,
                        "startColumnNumber": 80,
                        "endLineNumber": 648,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (revision.equals(readRevision)) {\n    return true;\n  }\n  if (revisions == null) {\n    return false;\n  }\n  String value=revisions.get(revision.toString());\n  if (value == null) {\n    return false;\n  }\n  if (Utils.isCommitted(value)) {\n    revision=Utils.resolveCommitRevision(revision,value);\n    if (context.getBranches().getBranch(readRevision) == null) {\n      return !isRevisionNewer(context,revision,readRevision);\n    }\n  }\n else {\n    if (Revision.fromString(value).getClusterId() != context.getClusterId()) {\n      return false;\n    }\n  }\n  return includeRevision(context,revision,readRevision);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 86,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1876,
                        "startLineNumber": 605,
                        "startColumnNumber": 4,
                        "endLineNumber": 648,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * TODO: turn into instance method? Returns <code>true</code> if the given revision {@link Utils#isCommitted(String)} in the revisions map and is visiblefrom the <code>readRevision</code>.\n * @param revision  the revision to check.\n * @param readRevision the read revision.\n * @param revisions the revisions map, or <code>null</code> if none is set.\n * @return <code>true</code> if the revision is committed, otherwise<code>false</code>.\n */\nprivate static boolean isCommitted(@Nonnull RevisionContext context,@Nonnull Revision revision,@Nonnull Revision readRevision,@Nullable Map<String,String> revisions){\n  if (revision.equals(readRevision)) {\n    return true;\n  }\n  if (revisions == null) {\n    return false;\n  }\n  String value=revisions.get(revision.toString());\n  if (value == null) {\n    return false;\n  }\n  if (Utils.isCommitted(value)) {\n    revision=Utils.resolveCommitRevision(revision,value);\n    if (context.getBranches().getBranch(readRevision) == null) {\n      return !isRevisionNewer(context,revision,readRevision);\n    }\n  }\n else {\n    if (Revision.fromString(value).getClusterId() != context.getClusterId()) {\n      return false;\n    }\n  }\n  return includeRevision(context,revision,readRevision);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 121,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 13,
                    "startLineNumber": 625,
                    "startColumnNumber": 12,
                    "endLineNumber": 625,
                    "endColumnNumber": 25
                },
                "nodeContext": "return false;\n",
                "nodeType": "ReturnStatement",
                "astNodeNumber": 2,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "boolean"
        },
        {
            "nodeContext": "false",
            "nodeType": "BooleanLiteral",
            "nodePosition": {
                "charLength": 5,
                "startLineNumber": 629,
                "startColumnNumber": 19,
                "endLineNumber": 629,
                "endColumnNumber": 24
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 13,
                        "startLineNumber": 629,
                        "startColumnNumber": 12,
                        "endLineNumber": 629,
                        "endColumnNumber": 25
                    },
                    "nodeContext": "return false;\n",
                    "nodeType": "ReturnStatement",
                    "astNodeNumber": 2,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 37,
                        "startLineNumber": 628,
                        "startColumnNumber": 27,
                        "endLineNumber": 630,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  return false;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 3,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 56,
                        "startLineNumber": 628,
                        "startColumnNumber": 8,
                        "endLineNumber": 630,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (value == null) {\n  return false;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1070,
                        "startLineNumber": 620,
                        "startColumnNumber": 80,
                        "endLineNumber": 648,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (revision.equals(readRevision)) {\n    return true;\n  }\n  if (revisions == null) {\n    return false;\n  }\n  String value=revisions.get(revision.toString());\n  if (value == null) {\n    return false;\n  }\n  if (Utils.isCommitted(value)) {\n    revision=Utils.resolveCommitRevision(revision,value);\n    if (context.getBranches().getBranch(readRevision) == null) {\n      return !isRevisionNewer(context,revision,readRevision);\n    }\n  }\n else {\n    if (Revision.fromString(value).getClusterId() != context.getClusterId()) {\n      return false;\n    }\n  }\n  return includeRevision(context,revision,readRevision);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 86,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1876,
                        "startLineNumber": 605,
                        "startColumnNumber": 4,
                        "endLineNumber": 648,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * TODO: turn into instance method? Returns <code>true</code> if the given revision {@link Utils#isCommitted(String)} in the revisions map and is visiblefrom the <code>readRevision</code>.\n * @param revision  the revision to check.\n * @param readRevision the read revision.\n * @param revisions the revisions map, or <code>null</code> if none is set.\n * @return <code>true</code> if the revision is committed, otherwise<code>false</code>.\n */\nprivate static boolean isCommitted(@Nonnull RevisionContext context,@Nonnull Revision revision,@Nonnull Revision readRevision,@Nullable Map<String,String> revisions){\n  if (revision.equals(readRevision)) {\n    return true;\n  }\n  if (revisions == null) {\n    return false;\n  }\n  String value=revisions.get(revision.toString());\n  if (value == null) {\n    return false;\n  }\n  if (Utils.isCommitted(value)) {\n    revision=Utils.resolveCommitRevision(revision,value);\n    if (context.getBranches().getBranch(readRevision) == null) {\n      return !isRevisionNewer(context,revision,readRevision);\n    }\n  }\n else {\n    if (Revision.fromString(value).getClusterId() != context.getClusterId()) {\n      return false;\n    }\n  }\n  return includeRevision(context,revision,readRevision);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 121,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 13,
                    "startLineNumber": 629,
                    "startColumnNumber": 12,
                    "endLineNumber": 629,
                    "endColumnNumber": 25
                },
                "nodeContext": "return false;\n",
                "nodeType": "ReturnStatement",
                "astNodeNumber": 2,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "boolean"
        },
        {
            "nodeContext": "false",
            "nodeType": "BooleanLiteral",
            "nodePosition": {
                "charLength": 5,
                "startLineNumber": 644,
                "startColumnNumber": 23,
                "endLineNumber": 644,
                "endColumnNumber": 28
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 13,
                        "startLineNumber": 644,
                        "startColumnNumber": 16,
                        "endLineNumber": 644,
                        "endColumnNumber": 29
                    },
                    "nodeContext": "return false;\n",
                    "nodeType": "ReturnStatement",
                    "astNodeNumber": 2,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 170,
                        "startLineNumber": 641,
                        "startColumnNumber": 85,
                        "endLineNumber": 645,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  return false;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 3,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 243,
                        "startLineNumber": 641,
                        "startColumnNumber": 12,
                        "endLineNumber": 645,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (Revision.fromString(value).getClusterId() != context.getClusterId()) {\n  return false;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 14,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 296,
                        "startLineNumber": 639,
                        "startColumnNumber": 15,
                        "endLineNumber": 646,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (Revision.fromString(value).getClusterId() != context.getClusterId()) {\n    return false;\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 15,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 716,
                        "startLineNumber": 631,
                        "startColumnNumber": 8,
                        "endLineNumber": 646,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (Utils.isCommitted(value)) {\n  revision=Utils.resolveCommitRevision(revision,value);\n  if (context.getBranches().getBranch(readRevision) == null) {\n    return !isRevisionNewer(context,revision,readRevision);\n  }\n}\n else {\n  if (Revision.fromString(value).getClusterId() != context.getClusterId()) {\n    return false;\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 46,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1070,
                        "startLineNumber": 620,
                        "startColumnNumber": 80,
                        "endLineNumber": 648,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (revision.equals(readRevision)) {\n    return true;\n  }\n  if (revisions == null) {\n    return false;\n  }\n  String value=revisions.get(revision.toString());\n  if (value == null) {\n    return false;\n  }\n  if (Utils.isCommitted(value)) {\n    revision=Utils.resolveCommitRevision(revision,value);\n    if (context.getBranches().getBranch(readRevision) == null) {\n      return !isRevisionNewer(context,revision,readRevision);\n    }\n  }\n else {\n    if (Revision.fromString(value).getClusterId() != context.getClusterId()) {\n      return false;\n    }\n  }\n  return includeRevision(context,revision,readRevision);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 86,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1876,
                        "startLineNumber": 605,
                        "startColumnNumber": 4,
                        "endLineNumber": 648,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * TODO: turn into instance method? Returns <code>true</code> if the given revision {@link Utils#isCommitted(String)} in the revisions map and is visiblefrom the <code>readRevision</code>.\n * @param revision  the revision to check.\n * @param readRevision the read revision.\n * @param revisions the revisions map, or <code>null</code> if none is set.\n * @return <code>true</code> if the revision is committed, otherwise<code>false</code>.\n */\nprivate static boolean isCommitted(@Nonnull RevisionContext context,@Nonnull Revision revision,@Nonnull Revision readRevision,@Nullable Map<String,String> revisions){\n  if (revision.equals(readRevision)) {\n    return true;\n  }\n  if (revisions == null) {\n    return false;\n  }\n  String value=revisions.get(revision.toString());\n  if (value == null) {\n    return false;\n  }\n  if (Utils.isCommitted(value)) {\n    revision=Utils.resolveCommitRevision(revision,value);\n    if (context.getBranches().getBranch(readRevision) == null) {\n      return !isRevisionNewer(context,revision,readRevision);\n    }\n  }\n else {\n    if (Revision.fromString(value).getClusterId() != context.getClusterId()) {\n      return false;\n    }\n  }\n  return includeRevision(context,revision,readRevision);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 121,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 13,
                    "startLineNumber": 644,
                    "startColumnNumber": 16,
                    "endLineNumber": 644,
                    "endColumnNumber": 29
                },
                "nodeContext": "return false;\n",
                "nodeType": "ReturnStatement",
                "astNodeNumber": 2,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "boolean"
        }
    ],
    "positionList": [
        {
            "charLength": 5,
            "startLineNumber": 625,
            "startColumnNumber": 19,
            "endLineNumber": 625,
            "endColumnNumber": 24
        },
        {
            "charLength": 5,
            "startLineNumber": 629,
            "startColumnNumber": 19,
            "endLineNumber": 629,
            "endColumnNumber": 24
        },
        {
            "charLength": 5,
            "startLineNumber": 644,
            "startColumnNumber": 23,
            "endLineNumber": 644,
            "endColumnNumber": 28
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 5
        }
    ]
}