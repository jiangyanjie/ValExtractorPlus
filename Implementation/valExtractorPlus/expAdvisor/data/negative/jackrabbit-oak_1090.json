{
    "id": 1090,
    "expression": "to",
    "projectName": "jackrabbit-oak",
    "commitID": "9eadffafd5f9c7f77ec8b2ae9fc113b06d3f7c74",
    "filePath": "oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore.java",
    "occurrences": 6,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "to",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 2,
                "startLineNumber": 2082,
                "startColumnNumber": 33,
                "endLineNumber": 2082,
                "endColumnNumber": 35
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 26,
                        "startLineNumber": 2082,
                        "startColumnNumber": 21,
                        "endLineNumber": 2082,
                        "endColumnNumber": 47
                    },
                    "nodeContext": "getChildren(to,null,max)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 39,
                        "startLineNumber": 2082,
                        "startColumnNumber": 8,
                        "endLineNumber": 2082,
                        "endColumnNumber": 47
                    },
                    "nodeContext": "toChildren=getChildren(to,null,max)",
                    "nodeType": "Assignment",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 40,
                        "startLineNumber": 2082,
                        "startColumnNumber": 8,
                        "endLineNumber": 2082,
                        "endColumnNumber": 48
                    },
                    "nodeContext": "toChildren=getChildren(to,null,max);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1759,
                        "startLineNumber": 2071,
                        "startColumnNumber": 42,
                        "endLineNumber": 2113,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  JsopWriter w=new JsopStream();\n  int max=MANY_CHILDREN_THRESHOLD;\n  final boolean debug=LOG.isDebugEnabled();\n  final long start=debug ? now() : 0;\n  DocumentNodeState.Children fromChildren, toChildren;\n  fromChildren=getChildren(from,null,max);\n  toChildren=getChildren(to,null,max);\n  final long getChildrenDoneIn=debug ? now() : 0;\n  String diffAlgo;\n  if (!fromChildren.hasMore && !toChildren.hasMore) {\n    diffAlgo=\"diffFewChildren\";\n    diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n  }\n else {\n    if (FAST_DIFF) {\n      diffAlgo=\"diffManyChildren\";\n      diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n    }\n else {\n      diffAlgo=\"diffAllChildren\";\n      max=Integer.MAX_VALUE;\n      fromChildren=getChildren(from,null,max);\n      toChildren=getChildren(to,null,max);\n      diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n    }\n  }\n  if (debug) {\n    long end=now();\n    LOG.debug(\"Diff performed via '{}' at [{}] between revisions [{}] => [{}] took {} ms ({} ms)\",diffAlgo,from.getPath(),from.getLastRevision(),to.getLastRevision(),end - start,getChildrenDoneIn - start);\n  }\n  return w.toString();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 199,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1871,
                        "startLineNumber": 2070,
                        "startColumnNumber": 4,
                        "endLineNumber": 2113,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "private String diffImpl(DocumentNodeState from,DocumentNodeState to) throws DocumentStoreException {\n  JsopWriter w=new JsopStream();\n  int max=MANY_CHILDREN_THRESHOLD;\n  final boolean debug=LOG.isDebugEnabled();\n  final long start=debug ? now() : 0;\n  DocumentNodeState.Children fromChildren, toChildren;\n  fromChildren=getChildren(from,null,max);\n  toChildren=getChildren(to,null,max);\n  final long getChildrenDoneIn=debug ? now() : 0;\n  String diffAlgo;\n  if (!fromChildren.hasMore && !toChildren.hasMore) {\n    diffAlgo=\"diffFewChildren\";\n    diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n  }\n else {\n    if (FAST_DIFF) {\n      diffAlgo=\"diffManyChildren\";\n      diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n    }\n else {\n      diffAlgo=\"diffAllChildren\";\n      max=Integer.MAX_VALUE;\n      fromChildren=getChildren(from,null,max);\n      toChildren=getChildren(to,null,max);\n      diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n    }\n  }\n  if (debug) {\n    long end=now();\n    LOG.debug(\"Diff performed via '{}' at [{}] between revisions [{}] => [{}] took {} ms ({} ms)\",diffAlgo,from.getPath(),from.getLastRevision(),to.getLastRevision(),end - start,getChildrenDoneIn - start);\n  }\n  return w.toString();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 214,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 40,
                    "startLineNumber": 2082,
                    "startColumnNumber": 8,
                    "endLineNumber": 2082,
                    "endColumnNumber": 48
                },
                "nodeContext": "toChildren=getChildren(to,null,max);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 8,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeState"
        },
        {
            "nodeContext": "to",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 2,
                "startLineNumber": 2090,
                "startColumnNumber": 56,
                "endLineNumber": 2090,
                "endColumnNumber": 58
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 20,
                        "startLineNumber": 2090,
                        "startColumnNumber": 56,
                        "endLineNumber": 2090,
                        "endColumnNumber": 76
                    },
                    "nodeContext": "to.getLastRevision()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 126,
                        "startLineNumber": 2089,
                        "startColumnNumber": 12,
                        "endLineNumber": 2090,
                        "endColumnNumber": 77
                    },
                    "nodeContext": "diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 14,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 127,
                        "startLineNumber": 2089,
                        "startColumnNumber": 12,
                        "endLineNumber": 2090,
                        "endColumnNumber": 78
                    },
                    "nodeContext": "diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 15,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 193,
                        "startLineNumber": 2087,
                        "startColumnNumber": 58,
                        "endLineNumber": 2091,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  diffAlgo=\"diffFewChildren\";\n  diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 20,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 847,
                        "startLineNumber": 2087,
                        "startColumnNumber": 8,
                        "endLineNumber": 2104,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (!fromChildren.hasMore && !toChildren.hasMore) {\n  diffAlgo=\"diffFewChildren\";\n  diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n}\n else {\n  if (FAST_DIFF) {\n    diffAlgo=\"diffManyChildren\";\n    diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n  }\n else {\n    diffAlgo=\"diffAllChildren\";\n    max=Integer.MAX_VALUE;\n    fromChildren=getChildren(from,null,max);\n    toChildren=getChildren(to,null,max);\n    diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 93,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1759,
                        "startLineNumber": 2071,
                        "startColumnNumber": 42,
                        "endLineNumber": 2113,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  JsopWriter w=new JsopStream();\n  int max=MANY_CHILDREN_THRESHOLD;\n  final boolean debug=LOG.isDebugEnabled();\n  final long start=debug ? now() : 0;\n  DocumentNodeState.Children fromChildren, toChildren;\n  fromChildren=getChildren(from,null,max);\n  toChildren=getChildren(to,null,max);\n  final long getChildrenDoneIn=debug ? now() : 0;\n  String diffAlgo;\n  if (!fromChildren.hasMore && !toChildren.hasMore) {\n    diffAlgo=\"diffFewChildren\";\n    diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n  }\n else {\n    if (FAST_DIFF) {\n      diffAlgo=\"diffManyChildren\";\n      diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n    }\n else {\n      diffAlgo=\"diffAllChildren\";\n      max=Integer.MAX_VALUE;\n      fromChildren=getChildren(from,null,max);\n      toChildren=getChildren(to,null,max);\n      diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n    }\n  }\n  if (debug) {\n    long end=now();\n    LOG.debug(\"Diff performed via '{}' at [{}] between revisions [{}] => [{}] took {} ms ({} ms)\",diffAlgo,from.getPath(),from.getLastRevision(),to.getLastRevision(),end - start,getChildrenDoneIn - start);\n  }\n  return w.toString();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 199,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1871,
                        "startLineNumber": 2070,
                        "startColumnNumber": 4,
                        "endLineNumber": 2113,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "private String diffImpl(DocumentNodeState from,DocumentNodeState to) throws DocumentStoreException {\n  JsopWriter w=new JsopStream();\n  int max=MANY_CHILDREN_THRESHOLD;\n  final boolean debug=LOG.isDebugEnabled();\n  final long start=debug ? now() : 0;\n  DocumentNodeState.Children fromChildren, toChildren;\n  fromChildren=getChildren(from,null,max);\n  toChildren=getChildren(to,null,max);\n  final long getChildrenDoneIn=debug ? now() : 0;\n  String diffAlgo;\n  if (!fromChildren.hasMore && !toChildren.hasMore) {\n    diffAlgo=\"diffFewChildren\";\n    diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n  }\n else {\n    if (FAST_DIFF) {\n      diffAlgo=\"diffManyChildren\";\n      diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n    }\n else {\n      diffAlgo=\"diffAllChildren\";\n      max=Integer.MAX_VALUE;\n      fromChildren=getChildren(from,null,max);\n      toChildren=getChildren(to,null,max);\n      diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n    }\n  }\n  if (debug) {\n    long end=now();\n    LOG.debug(\"Diff performed via '{}' at [{}] between revisions [{}] => [{}] took {} ms ({} ms)\",diffAlgo,from.getPath(),from.getLastRevision(),to.getLastRevision(),end - start,getChildrenDoneIn - start);\n  }\n  return w.toString();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 214,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                "nodePosition": {
                    "charLength": 20,
                    "startLineNumber": 2090,
                    "startColumnNumber": 56,
                    "endLineNumber": 2090,
                    "endColumnNumber": 76
                },
                "nodeContext": "to.getLastRevision()",
                "nodeType": "MethodInvocation",
                "astNodeNumber": 3,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeState"
        },
        {
            "nodeContext": "to",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 2,
                "startLineNumber": 2095,
                "startColumnNumber": 48,
                "endLineNumber": 2095,
                "endColumnNumber": 50
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 20,
                        "startLineNumber": 2095,
                        "startColumnNumber": 48,
                        "endLineNumber": 2095,
                        "endColumnNumber": 68
                    },
                    "nodeContext": "to.getLastRevision()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 105,
                        "startLineNumber": 2094,
                        "startColumnNumber": 16,
                        "endLineNumber": 2095,
                        "endColumnNumber": 69
                    },
                    "nodeContext": "diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 12,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 106,
                        "startLineNumber": 2094,
                        "startColumnNumber": 16,
                        "endLineNumber": 2095,
                        "endColumnNumber": 70
                    },
                    "nodeContext": "diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 13,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 185,
                        "startLineNumber": 2092,
                        "startColumnNumber": 27,
                        "endLineNumber": 2096,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  diffAlgo=\"diffManyChildren\";\n  diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 18,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 574,
                        "startLineNumber": 2092,
                        "startColumnNumber": 12,
                        "endLineNumber": 2103,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (FAST_DIFF) {\n  diffAlgo=\"diffManyChildren\";\n  diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n}\n else {\n  diffAlgo=\"diffAllChildren\";\n  max=Integer.MAX_VALUE;\n  fromChildren=getChildren(from,null,max);\n  toChildren=getChildren(to,null,max);\n  diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 62,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 598,
                        "startLineNumber": 2091,
                        "startColumnNumber": 15,
                        "endLineNumber": 2104,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (FAST_DIFF) {\n    diffAlgo=\"diffManyChildren\";\n    diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n  }\n else {\n    diffAlgo=\"diffAllChildren\";\n    max=Integer.MAX_VALUE;\n    fromChildren=getChildren(from,null,max);\n    toChildren=getChildren(to,null,max);\n    diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 63,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 847,
                        "startLineNumber": 2087,
                        "startColumnNumber": 8,
                        "endLineNumber": 2104,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (!fromChildren.hasMore && !toChildren.hasMore) {\n  diffAlgo=\"diffFewChildren\";\n  diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n}\n else {\n  if (FAST_DIFF) {\n    diffAlgo=\"diffManyChildren\";\n    diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n  }\n else {\n    diffAlgo=\"diffAllChildren\";\n    max=Integer.MAX_VALUE;\n    fromChildren=getChildren(from,null,max);\n    toChildren=getChildren(to,null,max);\n    diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 93,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1759,
                        "startLineNumber": 2071,
                        "startColumnNumber": 42,
                        "endLineNumber": 2113,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  JsopWriter w=new JsopStream();\n  int max=MANY_CHILDREN_THRESHOLD;\n  final boolean debug=LOG.isDebugEnabled();\n  final long start=debug ? now() : 0;\n  DocumentNodeState.Children fromChildren, toChildren;\n  fromChildren=getChildren(from,null,max);\n  toChildren=getChildren(to,null,max);\n  final long getChildrenDoneIn=debug ? now() : 0;\n  String diffAlgo;\n  if (!fromChildren.hasMore && !toChildren.hasMore) {\n    diffAlgo=\"diffFewChildren\";\n    diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n  }\n else {\n    if (FAST_DIFF) {\n      diffAlgo=\"diffManyChildren\";\n      diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n    }\n else {\n      diffAlgo=\"diffAllChildren\";\n      max=Integer.MAX_VALUE;\n      fromChildren=getChildren(from,null,max);\n      toChildren=getChildren(to,null,max);\n      diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n    }\n  }\n  if (debug) {\n    long end=now();\n    LOG.debug(\"Diff performed via '{}' at [{}] between revisions [{}] => [{}] took {} ms ({} ms)\",diffAlgo,from.getPath(),from.getLastRevision(),to.getLastRevision(),end - start,getChildrenDoneIn - start);\n  }\n  return w.toString();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 199,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1871,
                        "startLineNumber": 2070,
                        "startColumnNumber": 4,
                        "endLineNumber": 2113,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "private String diffImpl(DocumentNodeState from,DocumentNodeState to) throws DocumentStoreException {\n  JsopWriter w=new JsopStream();\n  int max=MANY_CHILDREN_THRESHOLD;\n  final boolean debug=LOG.isDebugEnabled();\n  final long start=debug ? now() : 0;\n  DocumentNodeState.Children fromChildren, toChildren;\n  fromChildren=getChildren(from,null,max);\n  toChildren=getChildren(to,null,max);\n  final long getChildrenDoneIn=debug ? now() : 0;\n  String diffAlgo;\n  if (!fromChildren.hasMore && !toChildren.hasMore) {\n    diffAlgo=\"diffFewChildren\";\n    diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n  }\n else {\n    if (FAST_DIFF) {\n      diffAlgo=\"diffManyChildren\";\n      diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n    }\n else {\n      diffAlgo=\"diffAllChildren\";\n      max=Integer.MAX_VALUE;\n      fromChildren=getChildren(from,null,max);\n      toChildren=getChildren(to,null,max);\n      diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n    }\n  }\n  if (debug) {\n    long end=now();\n    LOG.debug(\"Diff performed via '{}' at [{}] between revisions [{}] => [{}] took {} ms ({} ms)\",diffAlgo,from.getPath(),from.getLastRevision(),to.getLastRevision(),end - start,getChildrenDoneIn - start);\n  }\n  return w.toString();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 214,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                "nodePosition": {
                    "charLength": 20,
                    "startLineNumber": 2095,
                    "startColumnNumber": 48,
                    "endLineNumber": 2095,
                    "endColumnNumber": 68
                },
                "nodeContext": "to.getLastRevision()",
                "nodeType": "MethodInvocation",
                "astNodeNumber": 3,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeState"
        },
        {
            "nodeContext": "to",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 2,
                "startLineNumber": 2100,
                "startColumnNumber": 41,
                "endLineNumber": 2100,
                "endColumnNumber": 43
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 26,
                        "startLineNumber": 2100,
                        "startColumnNumber": 29,
                        "endLineNumber": 2100,
                        "endColumnNumber": 55
                    },
                    "nodeContext": "getChildren(to,null,max)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 39,
                        "startLineNumber": 2100,
                        "startColumnNumber": 16,
                        "endLineNumber": 2100,
                        "endColumnNumber": 55
                    },
                    "nodeContext": "toChildren=getChildren(to,null,max)",
                    "nodeType": "Assignment",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 40,
                        "startLineNumber": 2100,
                        "startColumnNumber": 16,
                        "endLineNumber": 2100,
                        "endColumnNumber": 56
                    },
                    "nodeContext": "toChildren=getChildren(to,null,max);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 368,
                        "startLineNumber": 2096,
                        "startColumnNumber": 19,
                        "endLineNumber": 2103,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  diffAlgo=\"diffAllChildren\";\n  max=Integer.MAX_VALUE;\n  fromChildren=getChildren(from,null,max);\n  toChildren=getChildren(to,null,max);\n  diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 42,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 574,
                        "startLineNumber": 2092,
                        "startColumnNumber": 12,
                        "endLineNumber": 2103,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (FAST_DIFF) {\n  diffAlgo=\"diffManyChildren\";\n  diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n}\n else {\n  diffAlgo=\"diffAllChildren\";\n  max=Integer.MAX_VALUE;\n  fromChildren=getChildren(from,null,max);\n  toChildren=getChildren(to,null,max);\n  diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 62,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 598,
                        "startLineNumber": 2091,
                        "startColumnNumber": 15,
                        "endLineNumber": 2104,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (FAST_DIFF) {\n    diffAlgo=\"diffManyChildren\";\n    diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n  }\n else {\n    diffAlgo=\"diffAllChildren\";\n    max=Integer.MAX_VALUE;\n    fromChildren=getChildren(from,null,max);\n    toChildren=getChildren(to,null,max);\n    diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 63,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 847,
                        "startLineNumber": 2087,
                        "startColumnNumber": 8,
                        "endLineNumber": 2104,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (!fromChildren.hasMore && !toChildren.hasMore) {\n  diffAlgo=\"diffFewChildren\";\n  diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n}\n else {\n  if (FAST_DIFF) {\n    diffAlgo=\"diffManyChildren\";\n    diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n  }\n else {\n    diffAlgo=\"diffAllChildren\";\n    max=Integer.MAX_VALUE;\n    fromChildren=getChildren(from,null,max);\n    toChildren=getChildren(to,null,max);\n    diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 93,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1759,
                        "startLineNumber": 2071,
                        "startColumnNumber": 42,
                        "endLineNumber": 2113,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  JsopWriter w=new JsopStream();\n  int max=MANY_CHILDREN_THRESHOLD;\n  final boolean debug=LOG.isDebugEnabled();\n  final long start=debug ? now() : 0;\n  DocumentNodeState.Children fromChildren, toChildren;\n  fromChildren=getChildren(from,null,max);\n  toChildren=getChildren(to,null,max);\n  final long getChildrenDoneIn=debug ? now() : 0;\n  String diffAlgo;\n  if (!fromChildren.hasMore && !toChildren.hasMore) {\n    diffAlgo=\"diffFewChildren\";\n    diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n  }\n else {\n    if (FAST_DIFF) {\n      diffAlgo=\"diffManyChildren\";\n      diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n    }\n else {\n      diffAlgo=\"diffAllChildren\";\n      max=Integer.MAX_VALUE;\n      fromChildren=getChildren(from,null,max);\n      toChildren=getChildren(to,null,max);\n      diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n    }\n  }\n  if (debug) {\n    long end=now();\n    LOG.debug(\"Diff performed via '{}' at [{}] between revisions [{}] => [{}] took {} ms ({} ms)\",diffAlgo,from.getPath(),from.getLastRevision(),to.getLastRevision(),end - start,getChildrenDoneIn - start);\n  }\n  return w.toString();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 199,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1871,
                        "startLineNumber": 2070,
                        "startColumnNumber": 4,
                        "endLineNumber": 2113,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "private String diffImpl(DocumentNodeState from,DocumentNodeState to) throws DocumentStoreException {\n  JsopWriter w=new JsopStream();\n  int max=MANY_CHILDREN_THRESHOLD;\n  final boolean debug=LOG.isDebugEnabled();\n  final long start=debug ? now() : 0;\n  DocumentNodeState.Children fromChildren, toChildren;\n  fromChildren=getChildren(from,null,max);\n  toChildren=getChildren(to,null,max);\n  final long getChildrenDoneIn=debug ? now() : 0;\n  String diffAlgo;\n  if (!fromChildren.hasMore && !toChildren.hasMore) {\n    diffAlgo=\"diffFewChildren\";\n    diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n  }\n else {\n    if (FAST_DIFF) {\n      diffAlgo=\"diffManyChildren\";\n      diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n    }\n else {\n      diffAlgo=\"diffAllChildren\";\n      max=Integer.MAX_VALUE;\n      fromChildren=getChildren(from,null,max);\n      toChildren=getChildren(to,null,max);\n      diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n    }\n  }\n  if (debug) {\n    long end=now();\n    LOG.debug(\"Diff performed via '{}' at [{}] between revisions [{}] => [{}] took {} ms ({} ms)\",diffAlgo,from.getPath(),from.getLastRevision(),to.getLastRevision(),end - start,getChildrenDoneIn - start);\n  }\n  return w.toString();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 214,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 40,
                    "startLineNumber": 2100,
                    "startColumnNumber": 16,
                    "endLineNumber": 2100,
                    "endColumnNumber": 56
                },
                "nodeContext": "toChildren=getChildren(to,null,max);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 8,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeState"
        },
        {
            "nodeContext": "to",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 2,
                "startLineNumber": 2102,
                "startColumnNumber": 60,
                "endLineNumber": 2102,
                "endColumnNumber": 62
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 20,
                        "startLineNumber": 2102,
                        "startColumnNumber": 60,
                        "endLineNumber": 2102,
                        "endColumnNumber": 80
                    },
                    "nodeContext": "to.getLastRevision()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 130,
                        "startLineNumber": 2101,
                        "startColumnNumber": 16,
                        "endLineNumber": 2102,
                        "endColumnNumber": 81
                    },
                    "nodeContext": "diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 14,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 131,
                        "startLineNumber": 2101,
                        "startColumnNumber": 16,
                        "endLineNumber": 2102,
                        "endColumnNumber": 82
                    },
                    "nodeContext": "diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 15,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 368,
                        "startLineNumber": 2096,
                        "startColumnNumber": 19,
                        "endLineNumber": 2103,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  diffAlgo=\"diffAllChildren\";\n  max=Integer.MAX_VALUE;\n  fromChildren=getChildren(from,null,max);\n  toChildren=getChildren(to,null,max);\n  diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 42,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 574,
                        "startLineNumber": 2092,
                        "startColumnNumber": 12,
                        "endLineNumber": 2103,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (FAST_DIFF) {\n  diffAlgo=\"diffManyChildren\";\n  diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n}\n else {\n  diffAlgo=\"diffAllChildren\";\n  max=Integer.MAX_VALUE;\n  fromChildren=getChildren(from,null,max);\n  toChildren=getChildren(to,null,max);\n  diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 62,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 598,
                        "startLineNumber": 2091,
                        "startColumnNumber": 15,
                        "endLineNumber": 2104,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (FAST_DIFF) {\n    diffAlgo=\"diffManyChildren\";\n    diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n  }\n else {\n    diffAlgo=\"diffAllChildren\";\n    max=Integer.MAX_VALUE;\n    fromChildren=getChildren(from,null,max);\n    toChildren=getChildren(to,null,max);\n    diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 63,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 847,
                        "startLineNumber": 2087,
                        "startColumnNumber": 8,
                        "endLineNumber": 2104,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (!fromChildren.hasMore && !toChildren.hasMore) {\n  diffAlgo=\"diffFewChildren\";\n  diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n}\n else {\n  if (FAST_DIFF) {\n    diffAlgo=\"diffManyChildren\";\n    diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n  }\n else {\n    diffAlgo=\"diffAllChildren\";\n    max=Integer.MAX_VALUE;\n    fromChildren=getChildren(from,null,max);\n    toChildren=getChildren(to,null,max);\n    diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 93,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1759,
                        "startLineNumber": 2071,
                        "startColumnNumber": 42,
                        "endLineNumber": 2113,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  JsopWriter w=new JsopStream();\n  int max=MANY_CHILDREN_THRESHOLD;\n  final boolean debug=LOG.isDebugEnabled();\n  final long start=debug ? now() : 0;\n  DocumentNodeState.Children fromChildren, toChildren;\n  fromChildren=getChildren(from,null,max);\n  toChildren=getChildren(to,null,max);\n  final long getChildrenDoneIn=debug ? now() : 0;\n  String diffAlgo;\n  if (!fromChildren.hasMore && !toChildren.hasMore) {\n    diffAlgo=\"diffFewChildren\";\n    diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n  }\n else {\n    if (FAST_DIFF) {\n      diffAlgo=\"diffManyChildren\";\n      diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n    }\n else {\n      diffAlgo=\"diffAllChildren\";\n      max=Integer.MAX_VALUE;\n      fromChildren=getChildren(from,null,max);\n      toChildren=getChildren(to,null,max);\n      diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n    }\n  }\n  if (debug) {\n    long end=now();\n    LOG.debug(\"Diff performed via '{}' at [{}] between revisions [{}] => [{}] took {} ms ({} ms)\",diffAlgo,from.getPath(),from.getLastRevision(),to.getLastRevision(),end - start,getChildrenDoneIn - start);\n  }\n  return w.toString();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 199,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1871,
                        "startLineNumber": 2070,
                        "startColumnNumber": 4,
                        "endLineNumber": 2113,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "private String diffImpl(DocumentNodeState from,DocumentNodeState to) throws DocumentStoreException {\n  JsopWriter w=new JsopStream();\n  int max=MANY_CHILDREN_THRESHOLD;\n  final boolean debug=LOG.isDebugEnabled();\n  final long start=debug ? now() : 0;\n  DocumentNodeState.Children fromChildren, toChildren;\n  fromChildren=getChildren(from,null,max);\n  toChildren=getChildren(to,null,max);\n  final long getChildrenDoneIn=debug ? now() : 0;\n  String diffAlgo;\n  if (!fromChildren.hasMore && !toChildren.hasMore) {\n    diffAlgo=\"diffFewChildren\";\n    diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n  }\n else {\n    if (FAST_DIFF) {\n      diffAlgo=\"diffManyChildren\";\n      diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n    }\n else {\n      diffAlgo=\"diffAllChildren\";\n      max=Integer.MAX_VALUE;\n      fromChildren=getChildren(from,null,max);\n      toChildren=getChildren(to,null,max);\n      diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n    }\n  }\n  if (debug) {\n    long end=now();\n    LOG.debug(\"Diff performed via '{}' at [{}] between revisions [{}] => [{}] took {} ms ({} ms)\",diffAlgo,from.getPath(),from.getLastRevision(),to.getLastRevision(),end - start,getChildrenDoneIn - start);\n  }\n  return w.toString();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 214,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                "nodePosition": {
                    "charLength": 20,
                    "startLineNumber": 2102,
                    "startColumnNumber": 60,
                    "endLineNumber": 2102,
                    "endColumnNumber": 80
                },
                "nodeContext": "to.getLastRevision()",
                "nodeType": "MethodInvocation",
                "astNodeNumber": 3,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeState"
        },
        {
            "nodeContext": "to",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 2,
                "startLineNumber": 2109,
                "startColumnNumber": 70,
                "endLineNumber": 2109,
                "endColumnNumber": 72
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 20,
                        "startLineNumber": 2109,
                        "startColumnNumber": 70,
                        "endLineNumber": 2109,
                        "endColumnNumber": 90
                    },
                    "nodeContext": "to.getLastRevision()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 246,
                        "startLineNumber": 2108,
                        "startColumnNumber": 12,
                        "endLineNumber": 2110,
                        "endColumnNumber": 59
                    },
                    "nodeContext": "LOG.debug(\"Diff performed via '{}' at [{}] between revisions [{}] => [{}] took {} ms ({} ms)\",diffAlgo,from.getPath(),from.getLastRevision(),to.getLastRevision(),end - start,getChildrenDoneIn - start)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 20,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 247,
                        "startLineNumber": 2108,
                        "startColumnNumber": 12,
                        "endLineNumber": 2110,
                        "endColumnNumber": 60
                    },
                    "nodeContext": "LOG.debug(\"Diff performed via '{}' at [{}] between revisions [{}] => [{}] took {} ms ({} ms)\",diffAlgo,from.getPath(),from.getLastRevision(),to.getLastRevision(),end - start,getChildrenDoneIn - start);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 21,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 301,
                        "startLineNumber": 2106,
                        "startColumnNumber": 19,
                        "endLineNumber": 2111,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  long end=now();\n  LOG.debug(\"Diff performed via '{}' at [{}] between revisions [{}] => [{}] took {} ms ({} ms)\",diffAlgo,from.getPath(),from.getLastRevision(),to.getLastRevision(),end - start,getChildrenDoneIn - start);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 28,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 312,
                        "startLineNumber": 2106,
                        "startColumnNumber": 8,
                        "endLineNumber": 2111,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (debug) {\n  long end=now();\n  LOG.debug(\"Diff performed via '{}' at [{}] between revisions [{}] => [{}] took {} ms ({} ms)\",diffAlgo,from.getPath(),from.getLastRevision(),to.getLastRevision(),end - start,getChildrenDoneIn - start);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 30,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1759,
                        "startLineNumber": 2071,
                        "startColumnNumber": 42,
                        "endLineNumber": 2113,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  JsopWriter w=new JsopStream();\n  int max=MANY_CHILDREN_THRESHOLD;\n  final boolean debug=LOG.isDebugEnabled();\n  final long start=debug ? now() : 0;\n  DocumentNodeState.Children fromChildren, toChildren;\n  fromChildren=getChildren(from,null,max);\n  toChildren=getChildren(to,null,max);\n  final long getChildrenDoneIn=debug ? now() : 0;\n  String diffAlgo;\n  if (!fromChildren.hasMore && !toChildren.hasMore) {\n    diffAlgo=\"diffFewChildren\";\n    diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n  }\n else {\n    if (FAST_DIFF) {\n      diffAlgo=\"diffManyChildren\";\n      diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n    }\n else {\n      diffAlgo=\"diffAllChildren\";\n      max=Integer.MAX_VALUE;\n      fromChildren=getChildren(from,null,max);\n      toChildren=getChildren(to,null,max);\n      diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n    }\n  }\n  if (debug) {\n    long end=now();\n    LOG.debug(\"Diff performed via '{}' at [{}] between revisions [{}] => [{}] took {} ms ({} ms)\",diffAlgo,from.getPath(),from.getLastRevision(),to.getLastRevision(),end - start,getChildrenDoneIn - start);\n  }\n  return w.toString();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 199,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1871,
                        "startLineNumber": 2070,
                        "startColumnNumber": 4,
                        "endLineNumber": 2113,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "private String diffImpl(DocumentNodeState from,DocumentNodeState to) throws DocumentStoreException {\n  JsopWriter w=new JsopStream();\n  int max=MANY_CHILDREN_THRESHOLD;\n  final boolean debug=LOG.isDebugEnabled();\n  final long start=debug ? now() : 0;\n  DocumentNodeState.Children fromChildren, toChildren;\n  fromChildren=getChildren(from,null,max);\n  toChildren=getChildren(to,null,max);\n  final long getChildrenDoneIn=debug ? now() : 0;\n  String diffAlgo;\n  if (!fromChildren.hasMore && !toChildren.hasMore) {\n    diffAlgo=\"diffFewChildren\";\n    diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n  }\n else {\n    if (FAST_DIFF) {\n      diffAlgo=\"diffManyChildren\";\n      diffManyChildren(w,from.getPath(),from.getLastRevision(),to.getLastRevision());\n    }\n else {\n      diffAlgo=\"diffAllChildren\";\n      max=Integer.MAX_VALUE;\n      fromChildren=getChildren(from,null,max);\n      toChildren=getChildren(to,null,max);\n      diffFewChildren(w,from.getPath(),fromChildren,from.getLastRevision(),toChildren,to.getLastRevision());\n    }\n  }\n  if (debug) {\n    long end=now();\n    LOG.debug(\"Diff performed via '{}' at [{}] between revisions [{}] => [{}] took {} ms ({} ms)\",diffAlgo,from.getPath(),from.getLastRevision(),to.getLastRevision(),end - start,getChildrenDoneIn - start);\n  }\n  return w.toString();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 214,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                "nodePosition": {
                    "charLength": 20,
                    "startLineNumber": 2109,
                    "startColumnNumber": 70,
                    "endLineNumber": 2109,
                    "endColumnNumber": 90
                },
                "nodeContext": "to.getLastRevision()",
                "nodeType": "MethodInvocation",
                "astNodeNumber": 3,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeState"
        }
    ],
    "positionList": [
        {
            "charLength": 2,
            "startLineNumber": 2082,
            "startColumnNumber": 33,
            "endLineNumber": 2082,
            "endColumnNumber": 35
        },
        {
            "charLength": 2,
            "startLineNumber": 2090,
            "startColumnNumber": 56,
            "endLineNumber": 2090,
            "endColumnNumber": 58
        },
        {
            "charLength": 2,
            "startLineNumber": 2095,
            "startColumnNumber": 48,
            "endLineNumber": 2095,
            "endColumnNumber": 50
        },
        {
            "charLength": 2,
            "startLineNumber": 2100,
            "startColumnNumber": 41,
            "endLineNumber": 2100,
            "endColumnNumber": 43
        },
        {
            "charLength": 2,
            "startLineNumber": 2102,
            "startColumnNumber": 60,
            "endLineNumber": 2102,
            "endColumnNumber": 62
        },
        {
            "charLength": 2,
            "startLineNumber": 2109,
            "startColumnNumber": 70,
            "endLineNumber": 2109,
            "endColumnNumber": 72
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 3,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 4,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 5,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 7
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 6
        },
        {
            "firstKey": 2,
            "secondKey": 3,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 4,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 5,
            "layout": 7
        },
        {
            "firstKey": 3,
            "secondKey": 0,
            "layout": 7
        },
        {
            "firstKey": 3,
            "secondKey": 1,
            "layout": 6
        },
        {
            "firstKey": 3,
            "secondKey": 2,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 3,
            "secondKey": 5,
            "layout": 7
        },
        {
            "firstKey": 4,
            "secondKey": 0,
            "layout": 7
        },
        {
            "firstKey": 4,
            "secondKey": 1,
            "layout": 6
        },
        {
            "firstKey": 4,
            "secondKey": 2,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 4,
            "secondKey": 5,
            "layout": 7
        },
        {
            "firstKey": 5,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 5,
            "secondKey": 1,
            "layout": 5
        },
        {
            "firstKey": 5,
            "secondKey": 2,
            "layout": 5
        },
        {
            "firstKey": 5,
            "secondKey": 3,
            "layout": 5
        },
        {
            "firstKey": 5,
            "secondKey": 4,
            "layout": 5
        }
    ]
}