{
    "id": 172,
    "expression": "offsetFromStart",
    "projectName": "material-components@material-components-android",
    "commitID": "663e1cd1cb3bbe75094e9f4baaae94f44a469798",
    "filePath": "lib/src/android/support/design/chip/ChipDrawable.java",
    "occurrences": 2,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "offsetFromStart",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 15,
                "startLineNumber": 622,
                "startColumnNumber": 33,
                "endLineNumber": 622,
                "endColumnNumber": 48
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 29,
                        "startLineNumber": 622,
                        "startColumnNumber": 19,
                        "endLineNumber": 622,
                        "endColumnNumber": 48
                    },
                    "nodeContext": "bounds.left + offsetFromStart",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 40,
                        "startLineNumber": 622,
                        "startColumnNumber": 8,
                        "endLineNumber": 622,
                        "endColumnNumber": 48
                    },
                    "nodeContext": "pointF.x=bounds.left + offsetFromStart",
                    "nodeType": "Assignment",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 41,
                        "startLineNumber": 622,
                        "startColumnNumber": 8,
                        "endLineNumber": 622,
                        "endColumnNumber": 49
                    },
                    "nodeContext": "pointF.x=bounds.left + offsetFromStart;\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 10,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 87,
                        "startLineNumber": 621,
                        "startColumnNumber": 80,
                        "endLineNumber": 624,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "{\n  pointF.x=bounds.left + offsetFromStart;\n  align=Align.LEFT;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 17,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 256,
                        "startLineNumber": 621,
                        "startColumnNumber": 6,
                        "endLineNumber": 627,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "if (DrawableCompat.getLayoutDirection(this) == View.LAYOUT_DIRECTION_LTR) {\n  pointF.x=bounds.left + offsetFromStart;\n  align=Align.LEFT;\n}\n else {\n  pointF.x=bounds.right - offsetFromStart;\n  align=Align.RIGHT;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 43,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 474,
                        "startLineNumber": 617,
                        "startColumnNumber": 26,
                        "endLineNumber": 630,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  float offsetFromStart=chipStrokeWidth / 2f + chipStartPadding + calculateChipIconWidth() + textStartPadding;\n  if (DrawableCompat.getLayoutDirection(this) == View.LAYOUT_DIRECTION_LTR) {\n    pointF.x=bounds.left + offsetFromStart;\n    align=Align.LEFT;\n  }\n else {\n    pointF.x=bounds.right - offsetFromStart;\n    align=Align.RIGHT;\n  }\n  pointF.y=bounds.centerY() - calculateChipTextCenterFromBaseline();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 69,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 496,
                        "startLineNumber": 617,
                        "startColumnNumber": 4,
                        "endLineNumber": 630,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "if (chipText != null) {\n  float offsetFromStart=chipStrokeWidth / 2f + chipStartPadding + calculateChipIconWidth() + textStartPadding;\n  if (DrawableCompat.getLayoutDirection(this) == View.LAYOUT_DIRECTION_LTR) {\n    pointF.x=bounds.left + offsetFromStart;\n    align=Align.LEFT;\n  }\n else {\n    pointF.x=bounds.right - offsetFromStart;\n    align=Align.RIGHT;\n  }\n  pointF.y=bounds.centerY() - calculateChipTextCenterFromBaseline();\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 73,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 572,
                        "startLineNumber": 613,
                        "startColumnNumber": 68,
                        "endLineNumber": 633,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  pointF.set(0,0);\n  Align align=null;\n  if (chipText != null) {\n    float offsetFromStart=chipStrokeWidth / 2f + chipStartPadding + calculateChipIconWidth() + textStartPadding;\n    if (DrawableCompat.getLayoutDirection(this) == View.LAYOUT_DIRECTION_LTR) {\n      pointF.x=bounds.left + offsetFromStart;\n      align=Align.LEFT;\n    }\n else {\n      pointF.x=bounds.right - offsetFromStart;\n      align=Align.RIGHT;\n    }\n    pointF.y=bounds.centerY() - calculateChipTextCenterFromBaseline();\n  }\n  return align;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 88,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 814,
                        "startLineNumber": 609,
                        "startColumnNumber": 2,
                        "endLineNumber": 633,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "/** \n * Calculates the chip text's drawable-absolute origin point (top-left is <code>[bounds.left, bounds.top]</code>). Returns the text alignment at the origin.\n */\nprivate Align calculateChipTextOrigin(Rect bounds,PointF pointF){\n  pointF.set(0,0);\n  Align align=null;\n  if (chipText != null) {\n    float offsetFromStart=chipStrokeWidth / 2f + chipStartPadding + calculateChipIconWidth() + textStartPadding;\n    if (DrawableCompat.getLayoutDirection(this) == View.LAYOUT_DIRECTION_LTR) {\n      pointF.x=bounds.left + offsetFromStart;\n      align=Align.LEFT;\n    }\n else {\n      pointF.x=bounds.right - offsetFromStart;\n      align=Align.RIGHT;\n    }\n    pointF.y=bounds.centerY() - calculateChipTextCenterFromBaseline();\n  }\n  return align;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 102,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 41,
                    "startLineNumber": 622,
                    "startColumnNumber": 8,
                    "endLineNumber": 622,
                    "endColumnNumber": 49
                },
                "nodeContext": "pointF.x=bounds.left + offsetFromStart;\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 10,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "float"
        },
        {
            "nodeContext": "offsetFromStart",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 15,
                "startLineNumber": 625,
                "startColumnNumber": 34,
                "endLineNumber": 625,
                "endColumnNumber": 49
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 30,
                        "startLineNumber": 625,
                        "startColumnNumber": 19,
                        "endLineNumber": 625,
                        "endColumnNumber": 49
                    },
                    "nodeContext": "bounds.right - offsetFromStart",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 41,
                        "startLineNumber": 625,
                        "startColumnNumber": 8,
                        "endLineNumber": 625,
                        "endColumnNumber": 49
                    },
                    "nodeContext": "pointF.x=bounds.right - offsetFromStart",
                    "nodeType": "Assignment",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 42,
                        "startLineNumber": 625,
                        "startColumnNumber": 8,
                        "endLineNumber": 625,
                        "endColumnNumber": 50
                    },
                    "nodeContext": "pointF.x=bounds.right - offsetFromStart;\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 10,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 89,
                        "startLineNumber": 624,
                        "startColumnNumber": 13,
                        "endLineNumber": 627,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "{\n  pointF.x=bounds.right - offsetFromStart;\n  align=Align.RIGHT;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 17,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 256,
                        "startLineNumber": 621,
                        "startColumnNumber": 6,
                        "endLineNumber": 627,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "if (DrawableCompat.getLayoutDirection(this) == View.LAYOUT_DIRECTION_LTR) {\n  pointF.x=bounds.left + offsetFromStart;\n  align=Align.LEFT;\n}\n else {\n  pointF.x=bounds.right - offsetFromStart;\n  align=Align.RIGHT;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 43,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 474,
                        "startLineNumber": 617,
                        "startColumnNumber": 26,
                        "endLineNumber": 630,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  float offsetFromStart=chipStrokeWidth / 2f + chipStartPadding + calculateChipIconWidth() + textStartPadding;\n  if (DrawableCompat.getLayoutDirection(this) == View.LAYOUT_DIRECTION_LTR) {\n    pointF.x=bounds.left + offsetFromStart;\n    align=Align.LEFT;\n  }\n else {\n    pointF.x=bounds.right - offsetFromStart;\n    align=Align.RIGHT;\n  }\n  pointF.y=bounds.centerY() - calculateChipTextCenterFromBaseline();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 69,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 496,
                        "startLineNumber": 617,
                        "startColumnNumber": 4,
                        "endLineNumber": 630,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "if (chipText != null) {\n  float offsetFromStart=chipStrokeWidth / 2f + chipStartPadding + calculateChipIconWidth() + textStartPadding;\n  if (DrawableCompat.getLayoutDirection(this) == View.LAYOUT_DIRECTION_LTR) {\n    pointF.x=bounds.left + offsetFromStart;\n    align=Align.LEFT;\n  }\n else {\n    pointF.x=bounds.right - offsetFromStart;\n    align=Align.RIGHT;\n  }\n  pointF.y=bounds.centerY() - calculateChipTextCenterFromBaseline();\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 73,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 572,
                        "startLineNumber": 613,
                        "startColumnNumber": 68,
                        "endLineNumber": 633,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  pointF.set(0,0);\n  Align align=null;\n  if (chipText != null) {\n    float offsetFromStart=chipStrokeWidth / 2f + chipStartPadding + calculateChipIconWidth() + textStartPadding;\n    if (DrawableCompat.getLayoutDirection(this) == View.LAYOUT_DIRECTION_LTR) {\n      pointF.x=bounds.left + offsetFromStart;\n      align=Align.LEFT;\n    }\n else {\n      pointF.x=bounds.right - offsetFromStart;\n      align=Align.RIGHT;\n    }\n    pointF.y=bounds.centerY() - calculateChipTextCenterFromBaseline();\n  }\n  return align;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 88,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 814,
                        "startLineNumber": 609,
                        "startColumnNumber": 2,
                        "endLineNumber": 633,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "/** \n * Calculates the chip text's drawable-absolute origin point (top-left is <code>[bounds.left, bounds.top]</code>). Returns the text alignment at the origin.\n */\nprivate Align calculateChipTextOrigin(Rect bounds,PointF pointF){\n  pointF.set(0,0);\n  Align align=null;\n  if (chipText != null) {\n    float offsetFromStart=chipStrokeWidth / 2f + chipStartPadding + calculateChipIconWidth() + textStartPadding;\n    if (DrawableCompat.getLayoutDirection(this) == View.LAYOUT_DIRECTION_LTR) {\n      pointF.x=bounds.left + offsetFromStart;\n      align=Align.LEFT;\n    }\n else {\n      pointF.x=bounds.right - offsetFromStart;\n      align=Align.RIGHT;\n    }\n    pointF.y=bounds.centerY() - calculateChipTextCenterFromBaseline();\n  }\n  return align;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 102,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 42,
                    "startLineNumber": 625,
                    "startColumnNumber": 8,
                    "endLineNumber": 625,
                    "endColumnNumber": 50
                },
                "nodeContext": "pointF.x=bounds.right - offsetFromStart;\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 10,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "float"
        }
    ],
    "positionList": [
        {
            "charLength": 15,
            "startLineNumber": 622,
            "startColumnNumber": 33,
            "endLineNumber": 622,
            "endColumnNumber": 48
        },
        {
            "charLength": 15,
            "startLineNumber": 625,
            "startColumnNumber": 34,
            "endLineNumber": 625,
            "endColumnNumber": 49
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 4
        }
    ]
}