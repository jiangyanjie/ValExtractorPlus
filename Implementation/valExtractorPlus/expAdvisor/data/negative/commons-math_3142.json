{
    "id": 3142,
    "expression": "bpI",
    "projectName": "commons-math",
    "commitID": "6ef68ad4a992fa7c9caf22cac23125a7d278450b",
    "filePath": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
    "occurrences": 2,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "bpI",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 3,
                "startLineNumber": 879,
                "startColumnNumber": 20,
                "endLineNumber": 879,
                "endColumnNumber": 23
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
                    "nodePosition": {
                        "charLength": 6,
                        "startLineNumber": 879,
                        "startColumnNumber": 20,
                        "endLineNumber": 879,
                        "endColumnNumber": 26
                    },
                    "nodeContext": "bpI[j]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 31,
                        "startLineNumber": 879,
                        "startColumnNumber": 20,
                        "endLineNumber": 879,
                        "endColumnNumber": 51
                    },
                    "nodeContext": "bpI[j]-=bp[col][j] * luI[col]",
                    "nodeType": "Assignment",
                    "astNodeNumber": 13,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 32,
                        "startLineNumber": 879,
                        "startColumnNumber": 20,
                        "endLineNumber": 879,
                        "endColumnNumber": 52
                    },
                    "nodeContext": "bpI[j]-=bp[col][j] * luI[col];\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 14,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 72,
                        "startLineNumber": 878,
                        "startColumnNumber": 48,
                        "endLineNumber": 880,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  bpI[j]-=bp[col][j] * luI[col];\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 15,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 104,
                        "startLineNumber": 878,
                        "startColumnNumber": 16,
                        "endLineNumber": 880,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "for (int j=0; j < nColB; j++) {\n  bpI[j]-=bp[col][j] * luI[col];\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 26,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 224,
                        "startLineNumber": 875,
                        "startColumnNumber": 49,
                        "endLineNumber": 881,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  final double[] bpI=bp[i];\n  final double[] luI=lu[i];\n  for (int j=0; j < nColB; j++) {\n    bpI[j]-=bp[col][j] * luI[col];\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 47,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 261,
                        "startLineNumber": 875,
                        "startColumnNumber": 12,
                        "endLineNumber": 881,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "for (int i=col + 1; i < nCol; i++) {\n  final double[] bpI=bp[i];\n  final double[] luI=lu[i];\n  for (int j=0; j < nColB; j++) {\n    bpI[j]-=bp[col][j] * luI[col];\n  }\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 60,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 285,
                        "startLineNumber": 874,
                        "startColumnNumber": 45,
                        "endLineNumber": 882,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  for (int i=col + 1; i < nCol; i++) {\n    final double[] bpI=bp[i];\n    final double[] luI=lu[i];\n    for (int j=0; j < nColB; j++) {\n      bpI[j]-=bp[col][j] * luI[col];\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 61,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 322,
                        "startLineNumber": 874,
                        "startColumnNumber": 8,
                        "endLineNumber": 882,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int col=0; col < nCol; col++) {\n  for (int i=col + 1; i < nCol; i++) {\n    final double[] bpI=bp[i];\n    final double[] luI=lu[i];\n    for (int j=0; j < nColB; j++) {\n      bpI[j]-=bp[col][j] * luI[col];\n    }\n  }\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 72,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1844,
                        "startLineNumber": 849,
                        "startColumnNumber": 99,
                        "endLineNumber": 902,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (b.getRowDimension() != this.getRowDimension()) {\n    throw new IllegalArgumentException(\"Incorrect row dimension\");\n  }\n  if (!this.isSquare()) {\n    throw new InvalidMatrixException(\"coefficient matrix is not square\");\n  }\n  if (this.isSingular()) {\n    throw new InvalidMatrixException(\"Matrix is singular.\");\n  }\n  final int nCol=this.getColumnDimension();\n  final int nColB=b.getColumnDimension();\n  final int nRowB=b.getRowDimension();\n  final double[][] bp=new double[nRowB][nColB];\n  for (int row=0; row < nRowB; row++) {\n    final double[] bpRow=bp[row];\n    for (int col=0; col < nColB; col++) {\n      bpRow[col]=b.getEntry(permutation[row],col);\n    }\n  }\n  for (int col=0; col < nCol; col++) {\n    for (int i=col + 1; i < nCol; i++) {\n      final double[] bpI=bp[i];\n      final double[] luI=lu[i];\n      for (int j=0; j < nColB; j++) {\n        bpI[j]-=bp[col][j] * luI[col];\n      }\n    }\n  }\n  for (int col=nCol - 1; col >= 0; col--) {\n    final double[] bpCol=bp[col];\n    final double luDiag=lu[col][col];\n    for (int j=0; j < nColB; j++) {\n      bpCol[j]/=luDiag;\n    }\n    for (int i=0; i < col; i++) {\n      final double[] bpI=bp[i];\n      final double[] luI=lu[i];\n      for (int j=0; j < nColB; j++) {\n        bpI[j]-=bp[col][j] * luI[col];\n      }\n    }\n  }\n  return new RealMatrixImpl(bp,false);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 309,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2424,
                        "startLineNumber": 838,
                        "startColumnNumber": 4,
                        "endLineNumber": 902,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Returns a matrix of (column) solution vectors for linear systems with coefficient matrix = this and constant vectors = columns of <code>b</code>.\n * @param b  matrix of constant vectors forming RHS of linear systems toto solve\n * @return matrix of solution vectors\n * @throws IllegalArgumentException if this.rowDimension != row dimension\n * @throws InvalidMatrixException if this matrix is not square or is singular\n */\npublic RealMatrix solve(RealMatrix b) throws IllegalArgumentException, InvalidMatrixException {\n  if (b.getRowDimension() != this.getRowDimension()) {\n    throw new IllegalArgumentException(\"Incorrect row dimension\");\n  }\n  if (!this.isSquare()) {\n    throw new InvalidMatrixException(\"coefficient matrix is not square\");\n  }\n  if (this.isSingular()) {\n    throw new InvalidMatrixException(\"Matrix is singular.\");\n  }\n  final int nCol=this.getColumnDimension();\n  final int nColB=b.getColumnDimension();\n  final int nRowB=b.getRowDimension();\n  final double[][] bp=new double[nRowB][nColB];\n  for (int row=0; row < nRowB; row++) {\n    final double[] bpRow=bp[row];\n    for (int col=0; col < nColB; col++) {\n      bpRow[col]=b.getEntry(permutation[row],col);\n    }\n  }\n  for (int col=0; col < nCol; col++) {\n    for (int i=col + 1; i < nCol; i++) {\n      final double[] bpI=bp[i];\n      final double[] luI=lu[i];\n      for (int j=0; j < nColB; j++) {\n        bpI[j]-=bp[col][j] * luI[col];\n      }\n    }\n  }\n  for (int col=nCol - 1; col >= 0; col--) {\n    final double[] bpCol=bp[col];\n    final double luDiag=lu[col][col];\n    for (int j=0; j < nColB; j++) {\n      bpCol[j]/=luDiag;\n    }\n    for (int i=0; i < col; i++) {\n      final double[] bpI=bp[i];\n      final double[] luI=lu[i];\n      for (int j=0; j < nColB; j++) {\n        bpI[j]-=bp[col][j] * luI[col];\n      }\n    }\n  }\n  return new RealMatrixImpl(bp,false);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 323,
                    "astHeight": 14
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 32,
                    "startLineNumber": 879,
                    "startColumnNumber": 20,
                    "endLineNumber": 879,
                    "endColumnNumber": 52
                },
                "nodeContext": "bpI[j]-=bp[col][j] * luI[col];\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 14,
                "astHeight": 6
            },
            "tokenLength": 1,
            "type": "double[]"
        },
        {
            "nodeContext": "bpI",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 3,
                "startLineNumber": 895,
                "startColumnNumber": 20,
                "endLineNumber": 895,
                "endColumnNumber": 23
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
                    "nodePosition": {
                        "charLength": 6,
                        "startLineNumber": 895,
                        "startColumnNumber": 20,
                        "endLineNumber": 895,
                        "endColumnNumber": 26
                    },
                    "nodeContext": "bpI[j]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 31,
                        "startLineNumber": 895,
                        "startColumnNumber": 20,
                        "endLineNumber": 895,
                        "endColumnNumber": 51
                    },
                    "nodeContext": "bpI[j]-=bp[col][j] * luI[col]",
                    "nodeType": "Assignment",
                    "astNodeNumber": 13,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 32,
                        "startLineNumber": 895,
                        "startColumnNumber": 20,
                        "endLineNumber": 895,
                        "endColumnNumber": 52
                    },
                    "nodeContext": "bpI[j]-=bp[col][j] * luI[col];\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 14,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 72,
                        "startLineNumber": 894,
                        "startColumnNumber": 48,
                        "endLineNumber": 896,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  bpI[j]-=bp[col][j] * luI[col];\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 15,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 104,
                        "startLineNumber": 894,
                        "startColumnNumber": 16,
                        "endLineNumber": 896,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "for (int j=0; j < nColB; j++) {\n  bpI[j]-=bp[col][j] * luI[col];\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 26,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 224,
                        "startLineNumber": 891,
                        "startColumnNumber": 42,
                        "endLineNumber": 897,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  final double[] bpI=bp[i];\n  final double[] luI=lu[i];\n  for (int j=0; j < nColB; j++) {\n    bpI[j]-=bp[col][j] * luI[col];\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 47,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 254,
                        "startLineNumber": 891,
                        "startColumnNumber": 12,
                        "endLineNumber": 897,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "for (int i=0; i < col; i++) {\n  final double[] bpI=bp[i];\n  final double[] luI=lu[i];\n  for (int j=0; j < nColB; j++) {\n    bpI[j]-=bp[col][j] * luI[col];\n  }\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 58,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 466,
                        "startLineNumber": 885,
                        "startColumnNumber": 50,
                        "endLineNumber": 898,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  final double[] bpCol=bp[col];\n  final double luDiag=lu[col][col];\n  for (int j=0; j < nColB; j++) {\n    bpCol[j]/=luDiag;\n  }\n  for (int i=0; i < col; i++) {\n    final double[] bpI=bp[i];\n    final double[] luI=lu[i];\n    for (int j=0; j < nColB; j++) {\n      bpI[j]-=bp[col][j] * luI[col];\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 97,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 508,
                        "startLineNumber": 885,
                        "startColumnNumber": 8,
                        "endLineNumber": 898,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int col=nCol - 1; col >= 0; col--) {\n  final double[] bpCol=bp[col];\n  final double luDiag=lu[col][col];\n  for (int j=0; j < nColB; j++) {\n    bpCol[j]/=luDiag;\n  }\n  for (int i=0; i < col; i++) {\n    final double[] bpI=bp[i];\n    final double[] luI=lu[i];\n    for (int j=0; j < nColB; j++) {\n      bpI[j]-=bp[col][j] * luI[col];\n    }\n  }\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 110,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1844,
                        "startLineNumber": 849,
                        "startColumnNumber": 99,
                        "endLineNumber": 902,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (b.getRowDimension() != this.getRowDimension()) {\n    throw new IllegalArgumentException(\"Incorrect row dimension\");\n  }\n  if (!this.isSquare()) {\n    throw new InvalidMatrixException(\"coefficient matrix is not square\");\n  }\n  if (this.isSingular()) {\n    throw new InvalidMatrixException(\"Matrix is singular.\");\n  }\n  final int nCol=this.getColumnDimension();\n  final int nColB=b.getColumnDimension();\n  final int nRowB=b.getRowDimension();\n  final double[][] bp=new double[nRowB][nColB];\n  for (int row=0; row < nRowB; row++) {\n    final double[] bpRow=bp[row];\n    for (int col=0; col < nColB; col++) {\n      bpRow[col]=b.getEntry(permutation[row],col);\n    }\n  }\n  for (int col=0; col < nCol; col++) {\n    for (int i=col + 1; i < nCol; i++) {\n      final double[] bpI=bp[i];\n      final double[] luI=lu[i];\n      for (int j=0; j < nColB; j++) {\n        bpI[j]-=bp[col][j] * luI[col];\n      }\n    }\n  }\n  for (int col=nCol - 1; col >= 0; col--) {\n    final double[] bpCol=bp[col];\n    final double luDiag=lu[col][col];\n    for (int j=0; j < nColB; j++) {\n      bpCol[j]/=luDiag;\n    }\n    for (int i=0; i < col; i++) {\n      final double[] bpI=bp[i];\n      final double[] luI=lu[i];\n      for (int j=0; j < nColB; j++) {\n        bpI[j]-=bp[col][j] * luI[col];\n      }\n    }\n  }\n  return new RealMatrixImpl(bp,false);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 309,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2424,
                        "startLineNumber": 838,
                        "startColumnNumber": 4,
                        "endLineNumber": 902,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Returns a matrix of (column) solution vectors for linear systems with coefficient matrix = this and constant vectors = columns of <code>b</code>.\n * @param b  matrix of constant vectors forming RHS of linear systems toto solve\n * @return matrix of solution vectors\n * @throws IllegalArgumentException if this.rowDimension != row dimension\n * @throws InvalidMatrixException if this matrix is not square or is singular\n */\npublic RealMatrix solve(RealMatrix b) throws IllegalArgumentException, InvalidMatrixException {\n  if (b.getRowDimension() != this.getRowDimension()) {\n    throw new IllegalArgumentException(\"Incorrect row dimension\");\n  }\n  if (!this.isSquare()) {\n    throw new InvalidMatrixException(\"coefficient matrix is not square\");\n  }\n  if (this.isSingular()) {\n    throw new InvalidMatrixException(\"Matrix is singular.\");\n  }\n  final int nCol=this.getColumnDimension();\n  final int nColB=b.getColumnDimension();\n  final int nRowB=b.getRowDimension();\n  final double[][] bp=new double[nRowB][nColB];\n  for (int row=0; row < nRowB; row++) {\n    final double[] bpRow=bp[row];\n    for (int col=0; col < nColB; col++) {\n      bpRow[col]=b.getEntry(permutation[row],col);\n    }\n  }\n  for (int col=0; col < nCol; col++) {\n    for (int i=col + 1; i < nCol; i++) {\n      final double[] bpI=bp[i];\n      final double[] luI=lu[i];\n      for (int j=0; j < nColB; j++) {\n        bpI[j]-=bp[col][j] * luI[col];\n      }\n    }\n  }\n  for (int col=nCol - 1; col >= 0; col--) {\n    final double[] bpCol=bp[col];\n    final double luDiag=lu[col][col];\n    for (int j=0; j < nColB; j++) {\n      bpCol[j]/=luDiag;\n    }\n    for (int i=0; i < col; i++) {\n      final double[] bpI=bp[i];\n      final double[] luI=lu[i];\n      for (int j=0; j < nColB; j++) {\n        bpI[j]-=bp[col][j] * luI[col];\n      }\n    }\n  }\n  return new RealMatrixImpl(bp,false);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 323,
                    "astHeight": 14
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 32,
                    "startLineNumber": 895,
                    "startColumnNumber": 20,
                    "endLineNumber": 895,
                    "endColumnNumber": 52
                },
                "nodeContext": "bpI[j]-=bp[col][j] * luI[col];\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 14,
                "astHeight": 6
            },
            "tokenLength": 1,
            "type": "double[]"
        }
    ],
    "positionList": [
        {
            "charLength": 3,
            "startLineNumber": 879,
            "startColumnNumber": 20,
            "endLineNumber": 879,
            "endColumnNumber": 23
        },
        {
            "charLength": 3,
            "startLineNumber": 895,
            "startColumnNumber": 20,
            "endLineNumber": 895,
            "endColumnNumber": 23
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 9
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 9
        }
    ]
}