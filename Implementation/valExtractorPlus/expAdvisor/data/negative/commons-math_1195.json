{
    "id": 1195,
    "expression": "2",
    "projectName": "commons-math",
    "commitID": "6ab8b148472782919ca5a1c7a51e5f477e40d4fc",
    "filePath": "src/main/java/org/apache/commons/math3/util/FastMath.java",
    "occurrences": 2,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "2",
            "nodeType": "NumberLiteral",
            "nodePosition": {
                "charLength": 1,
                "startLineNumber": 2556,
                "startColumnNumber": 52,
                "endLineNumber": 2556,
                "endColumnNumber": 53
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 22,
                        "startLineNumber": 2556,
                        "startColumnNumber": 31,
                        "endLineNumber": 2556,
                        "endColumnNumber": 53
                    },
                    "nodeContext": "1.5707963267948966 * 2",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 28,
                        "startLineNumber": 2556,
                        "startColumnNumber": 25,
                        "endLineNumber": 2556,
                        "endColumnNumber": 53
                    },
                    "nodeContext": "pia=1.5707963267948966 * 2",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 42,
                        "startLineNumber": 2556,
                        "startColumnNumber": 12,
                        "endLineNumber": 2556,
                        "endColumnNumber": 54
                    },
                    "nodeContext": "final double pia=1.5707963267948966 * 2;\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 358,
                        "startLineNumber": 2553,
                        "startColumnNumber": 23,
                        "endLineNumber": 2564,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  final double resultb=-(result - za - zb);\n  final double pia=1.5707963267948966 * 2;\n  final double pib=6.123233995736766E-17 * 2;\n  za=pia - result;\n  zb=-(za - pia + result);\n  zb+=pib - resultb;\n  result=za + zb;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 56,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 373,
                        "startLineNumber": 2553,
                        "startColumnNumber": 8,
                        "endLineNumber": 2564,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (leftPlane) {\n  final double resultb=-(result - za - zb);\n  final double pia=1.5707963267948966 * 2;\n  final double pib=6.123233995736766E-17 * 2;\n  za=pia - result;\n  zb=-(za - pia + result);\n  zb+=pib - resultb;\n  result=za + zb;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 58,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 4283,
                        "startLineNumber": 2434,
                        "startColumnNumber": 72,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 629,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 4685,
                        "startLineNumber": 2428,
                        "startColumnNumber": 4,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Internal helper function to compute arctangent.\n * @param xa number from which arctangent is requested\n * @param xb extra bits for x (may be 0.0)\n * @param leftPlane if true, result angle must be put in the left half plane\n * @return atan(xa + xb) (or angle shifted by {@code PI} if leftPlane is true)\n */\nprivate static double atan(double xa,double xb,boolean leftPlane){\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 644,
                    "astHeight": 17
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 42,
                    "startLineNumber": 2556,
                    "startColumnNumber": 12,
                    "endLineNumber": 2556,
                    "endColumnNumber": 54
                },
                "nodeContext": "final double pia=1.5707963267948966 * 2;\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 8,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "int"
        },
        {
            "nodeContext": "2",
            "nodeType": "NumberLiteral",
            "nodePosition": {
                "charLength": 1,
                "startLineNumber": 2557,
                "startColumnNumber": 55,
                "endLineNumber": 2557,
                "endColumnNumber": 56
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 25,
                        "startLineNumber": 2557,
                        "startColumnNumber": 31,
                        "endLineNumber": 2557,
                        "endColumnNumber": 56
                    },
                    "nodeContext": "6.123233995736766E-17 * 2",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 31,
                        "startLineNumber": 2557,
                        "startColumnNumber": 25,
                        "endLineNumber": 2557,
                        "endColumnNumber": 56
                    },
                    "nodeContext": "pib=6.123233995736766E-17 * 2",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 45,
                        "startLineNumber": 2557,
                        "startColumnNumber": 12,
                        "endLineNumber": 2557,
                        "endColumnNumber": 57
                    },
                    "nodeContext": "final double pib=6.123233995736766E-17 * 2;\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 358,
                        "startLineNumber": 2553,
                        "startColumnNumber": 23,
                        "endLineNumber": 2564,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  final double resultb=-(result - za - zb);\n  final double pia=1.5707963267948966 * 2;\n  final double pib=6.123233995736766E-17 * 2;\n  za=pia - result;\n  zb=-(za - pia + result);\n  zb+=pib - resultb;\n  result=za + zb;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 56,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 373,
                        "startLineNumber": 2553,
                        "startColumnNumber": 8,
                        "endLineNumber": 2564,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (leftPlane) {\n  final double resultb=-(result - za - zb);\n  final double pia=1.5707963267948966 * 2;\n  final double pib=6.123233995736766E-17 * 2;\n  za=pia - result;\n  zb=-(za - pia + result);\n  zb+=pib - resultb;\n  result=za + zb;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 58,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 4283,
                        "startLineNumber": 2434,
                        "startColumnNumber": 72,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 629,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 4685,
                        "startLineNumber": 2428,
                        "startColumnNumber": 4,
                        "endLineNumber": 2572,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Internal helper function to compute arctangent.\n * @param xa number from which arctangent is requested\n * @param xb extra bits for x (may be 0.0)\n * @param leftPlane if true, result angle must be put in the left half plane\n * @return atan(xa + xb) (or angle shifted by {@code PI} if leftPlane is true)\n */\nprivate static double atan(double xa,double xb,boolean leftPlane){\n  boolean negate=false;\n  if (xa == 0.0) {\n    return leftPlane ? copySign(Math.PI,xa) : xa;\n  }\n  if (xa < 0) {\n    xa=-xa;\n    xb=-xb;\n    negate=true;\n  }\n  if (xa > 1.633123935319537E16) {\n    return (negate ^ leftPlane) ? (-Math.PI * F_1_2) : (Math.PI * F_1_2);\n  }\n  final int idx;\n  if (xa < 1) {\n    idx=(int)(((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n  }\n else {\n    final double oneOverXa=1 / xa;\n    idx=(int)(-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n  }\n  double epsA=xa - TANGENT_TABLE_A[idx];\n  double epsB=-(epsA - xa + TANGENT_TABLE_A[idx]);\n  epsB+=xb - TANGENT_TABLE_B[idx];\n  double temp=epsA + epsB;\n  epsB=-(temp - epsA - epsB);\n  epsA=temp;\n  temp=xa * HEX_40000000;\n  double ya=xa + temp - temp;\n  double yb=xb + xa - ya;\n  xa=ya;\n  xb+=yb;\n  if (idx == 0) {\n    final double denom=1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n    ya=epsA * denom;\n    yb=epsB * denom;\n  }\n else {\n    double temp2=xa * TANGENT_TABLE_A[idx];\n    double za=1d + temp2;\n    double zb=-(za - 1d - temp2);\n    temp2=xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n    temp=za + temp2;\n    zb+=-(temp - za - temp2);\n    za=temp;\n    zb+=xb * TANGENT_TABLE_B[idx];\n    ya=epsA / za;\n    temp=ya * HEX_40000000;\n    final double yaa=(ya + temp) - temp;\n    final double yab=ya - yaa;\n    temp=za * HEX_40000000;\n    final double zaa=(za + temp) - temp;\n    final double zab=za - zaa;\n    yb=(epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;\n    yb+=-epsA * zb / za / za;\n    yb+=epsB / za;\n  }\n  epsA=ya;\n  epsB=yb;\n  final double epsA2=epsA * epsA;\n  yb=0.07490822288864472;\n  yb=yb * epsA2 + -0.09088450866185192;\n  yb=yb * epsA2 + 0.11111095942313305;\n  yb=yb * epsA2 + -0.1428571423679182;\n  yb=yb * epsA2 + 0.19999999999923582;\n  yb=yb * epsA2 + -0.33333333333333287;\n  yb=yb * epsA2 * epsA;\n  ya=epsA;\n  temp=ya + yb;\n  yb=-(temp - ya - yb);\n  ya=temp;\n  yb+=epsB / (1d + epsA * epsA);\n  double za=EIGHTHS[idx] + ya;\n  double zb=-(za - EIGHTHS[idx] - ya);\n  temp=za + yb;\n  zb+=-(temp - za - yb);\n  za=temp;\n  double result=za + zb;\n  if (leftPlane) {\n    final double resultb=-(result - za - zb);\n    final double pia=1.5707963267948966 * 2;\n    final double pib=6.123233995736766E-17 * 2;\n    za=pia - result;\n    zb=-(za - pia + result);\n    zb+=pib - resultb;\n    result=za + zb;\n  }\n  if (negate ^ leftPlane) {\n    result=-result;\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 644,
                    "astHeight": 17
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 45,
                    "startLineNumber": 2557,
                    "startColumnNumber": 12,
                    "endLineNumber": 2557,
                    "endColumnNumber": 57
                },
                "nodeContext": "final double pib=6.123233995736766E-17 * 2;\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 8,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "int"
        }
    ],
    "positionList": [
        {
            "charLength": 1,
            "startLineNumber": 2556,
            "startColumnNumber": 52,
            "endLineNumber": 2556,
            "endColumnNumber": 53
        },
        {
            "charLength": 1,
            "startLineNumber": 2557,
            "startColumnNumber": 55,
            "endLineNumber": 2557,
            "endColumnNumber": 56
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 3
        }
    ]
}