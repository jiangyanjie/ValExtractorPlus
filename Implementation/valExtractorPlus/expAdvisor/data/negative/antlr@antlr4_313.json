{
    "id": 313,
    "expression": "new HashSet<String>(Arrays.asList(extraOptions))",
    "projectName": "antlr@antlr4",
    "commitID": "2cb02d9b4375f4d1752ec88070edd8acad5b7e91",
    "filePath": "runtime-testsuite/test/org/antlr/v4/test/runtime/java/BaseJavaTest.java",
    "occurrences": 1,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "new HashSet<String>(Arrays.asList(extraOptions))",
            "nodeType": "ClassInstanceCreation",
            "nodePosition": {
                "charLength": 48,
                "startLineNumber": 693,
                "startColumnNumber": 28,
                "endLineNumber": 693,
                "endColumnNumber": 76
            },
            "astNodeNumber": 10,
            "astHeight": 4,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 61,
                        "startLineNumber": 693,
                        "startColumnNumber": 15,
                        "endLineNumber": 693,
                        "endColumnNumber": 76
                    },
                    "nodeContext": "optionsSet=new HashSet<String>(Arrays.asList(extraOptions))",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 12,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 74,
                        "startLineNumber": 693,
                        "startColumnNumber": 3,
                        "endLineNumber": 693,
                        "endColumnNumber": 77
                    },
                    "nodeContext": "Set<String> optionsSet=new HashSet<String>(Arrays.asList(extraOptions));\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 18,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 498,
                        "startLineNumber": 691,
                        "startColumnNumber": 26,
                        "endLineNumber": 703,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  files.add(parserName + \".java\");\n  Set<String> optionsSet=new HashSet<String>(Arrays.asList(extraOptions));\n  String grammarName=grammarFileName.substring(0,grammarFileName.lastIndexOf('.'));\n  if (!optionsSet.contains(\"-no-listener\")) {\n    files.add(grammarName + \"Listener.java\");\n    files.add(grammarName + \"BaseListener.java\");\n  }\n  if (optionsSet.contains(\"-visitor\")) {\n    files.add(grammarName + \"Visitor.java\");\n    files.add(grammarName + \"BaseVisitor.java\");\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 80,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 522,
                        "startLineNumber": 691,
                        "startColumnNumber": 2,
                        "endLineNumber": 703,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "if (parserName != null) {\n  files.add(parserName + \".java\");\n  Set<String> optionsSet=new HashSet<String>(Arrays.asList(extraOptions));\n  String grammarName=grammarFileName.substring(0,grammarFileName.lastIndexOf('.'));\n  if (!optionsSet.contains(\"-no-listener\")) {\n    files.add(grammarName + \"Listener.java\");\n    files.add(grammarName + \"BaseListener.java\");\n  }\n  if (optionsSet.contains(\"-visitor\")) {\n    files.add(grammarName + \"Visitor.java\");\n    files.add(grammarName + \"BaseVisitor.java\");\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 84,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 895,
                        "startLineNumber": 680,
                        "startColumnNumber": 1,
                        "endLineNumber": 706,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  ErrorQueue equeue=antlr(grammarFileName,grammarStr,defaultListener,extraOptions);\n  if (!equeue.errors.isEmpty()) {\n    return false;\n  }\n  List<String> files=new ArrayList<String>();\n  if (lexerName != null) {\n    files.add(lexerName + \".java\");\n  }\n  if (parserName != null) {\n    files.add(parserName + \".java\");\n    Set<String> optionsSet=new HashSet<String>(Arrays.asList(extraOptions));\n    String grammarName=grammarFileName.substring(0,grammarFileName.lastIndexOf('.'));\n    if (!optionsSet.contains(\"-no-listener\")) {\n      files.add(grammarName + \"Listener.java\");\n      files.add(grammarName + \"BaseListener.java\");\n    }\n    if (optionsSet.contains(\"-visitor\")) {\n      files.add(grammarName + \"Visitor.java\");\n      files.add(grammarName + \"BaseVisitor.java\");\n    }\n  }\n  boolean allIsWell=compile(files.toArray(new String[files.size()]));\n  return allIsWell;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 151,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1180,
                        "startLineNumber": 673,
                        "startColumnNumber": 1,
                        "endLineNumber": 706,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "/** \n * Return true if all is well \n */\nprotected boolean rawGenerateAndBuildRecognizer(String grammarFileName,String grammarStr,String parserName,String lexerName,boolean defaultListener,String... extraOptions){\n  ErrorQueue equeue=antlr(grammarFileName,grammarStr,defaultListener,extraOptions);\n  if (!equeue.errors.isEmpty()) {\n    return false;\n  }\n  List<String> files=new ArrayList<String>();\n  if (lexerName != null) {\n    files.add(lexerName + \".java\");\n  }\n  if (parserName != null) {\n    files.add(parserName + \".java\");\n    Set<String> optionsSet=new HashSet<String>(Arrays.asList(extraOptions));\n    String grammarName=grammarFileName.substring(0,grammarFileName.lastIndexOf('.'));\n    if (!optionsSet.contains(\"-no-listener\")) {\n      files.add(grammarName + \"Listener.java\");\n      files.add(grammarName + \"BaseListener.java\");\n    }\n    if (optionsSet.contains(\"-visitor\")) {\n      files.add(grammarName + \"Visitor.java\");\n      files.add(grammarName + \"BaseVisitor.java\");\n    }\n  }\n  boolean allIsWell=compile(files.toArray(new String[files.size()]));\n  return allIsWell;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 179,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 74,
                    "startLineNumber": 693,
                    "startColumnNumber": 3,
                    "endLineNumber": 693,
                    "endColumnNumber": 77
                },
                "nodeContext": "Set<String> optionsSet=new HashSet<String>(Arrays.asList(extraOptions));\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 18,
                "astHeight": 6
            },
            "tokenLength": 4,
            "type": "java.util.HashSet<java.lang.String>"
        }
    ],
    "positionList": [
        {
            "charLength": 48,
            "startLineNumber": 693,
            "startColumnNumber": 28,
            "endLineNumber": 693,
            "endColumnNumber": 76
        }
    ],
    "layoutRelationDataList": []
}