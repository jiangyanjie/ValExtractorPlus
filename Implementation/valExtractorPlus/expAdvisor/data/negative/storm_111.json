{
    "id": 111,
    "expression": "keysToDelete.toArray(new String[0])",
    "projectName": "storm",
    "commitID": "2e2adc725ecf3c41206e93e473eb5380c023316d",
    "filePath": "external/storm-redis/src/main/java/org/apache/storm/redis/state/RedisKeyValueState.java",
    "occurrences": 1,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "keysToDelete.toArray(new String[0])",
            "nodeType": "MethodInvocation",
            "nodePosition": {
                "charLength": 35,
                "startLineNumber": 219,
                "startColumnNumber": 45,
                "endLineNumber": 219,
                "endColumnNumber": 80
            },
            "astNodeNumber": 9,
            "astHeight": 5,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 61,
                        "startLineNumber": 219,
                        "startColumnNumber": 20,
                        "endLineNumber": 219,
                        "endColumnNumber": 81
                    },
                    "nodeContext": "commands.hdel(namespace,keysToDelete.toArray(new String[0]))",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 13,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 62,
                        "startLineNumber": 219,
                        "startColumnNumber": 20,
                        "endLineNumber": 219,
                        "endColumnNumber": 82
                    },
                    "nodeContext": "commands.hdel(namespace,keysToDelete.toArray(new String[0]));\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 14,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 104,
                        "startLineNumber": 218,
                        "startColumnNumber": 45,
                        "endLineNumber": 220,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  commands.hdel(namespace,keysToDelete.toArray(new String[0]));\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 15,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 133,
                        "startLineNumber": 218,
                        "startColumnNumber": 16,
                        "endLineNumber": 220,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (!keysToDelete.isEmpty()) {\n  commands.hdel(namespace,keysToDelete.toArray(new String[0]));\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 20,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 783,
                        "startLineNumber": 205,
                        "startColumnNumber": 42,
                        "endLineNumber": 221,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  List<String> keysToDelete=new ArrayList<>();\n  Map<String,String> keysToAdd=new HashMap<>();\n  for (  Map.Entry<String,String> entry : pendingCommit.entrySet()) {\n    if (RedisEncoder.TOMBSTONE.equals(entry.getValue())) {\n      keysToDelete.add(entry.getKey());\n    }\n else {\n      keysToAdd.put(entry.getKey(),entry.getValue());\n    }\n  }\n  if (!keysToAdd.isEmpty()) {\n    commands.hmset(namespace,keysToAdd);\n  }\n  if (!keysToDelete.isEmpty()) {\n    commands.hdel(namespace,keysToDelete.toArray(new String[0]));\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 103,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 909,
                        "startLineNumber": 205,
                        "startColumnNumber": 12,
                        "endLineNumber": 223,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (!pendingCommit.isEmpty()) {\n  List<String> keysToDelete=new ArrayList<>();\n  Map<String,String> keysToAdd=new HashMap<>();\n  for (  Map.Entry<String,String> entry : pendingCommit.entrySet()) {\n    if (RedisEncoder.TOMBSTONE.equals(entry.getValue())) {\n      keysToDelete.add(entry.getKey());\n    }\n else {\n      keysToAdd.put(entry.getKey(),entry.getValue());\n    }\n  }\n  if (!keysToAdd.isEmpty()) {\n    commands.hmset(namespace,keysToAdd);\n  }\n  if (!keysToDelete.isEmpty()) {\n    commands.hdel(namespace,keysToDelete.toArray(new String[0]));\n  }\n}\n else {\n  LOG.debug(\"Nothing to save for commit, txid {}.\",txid);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 115,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 1201,
                        "startLineNumber": 203,
                        "startColumnNumber": 12,
                        "endLineNumber": 228,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  commands=jedisContainer.getInstance();\n  if (!pendingCommit.isEmpty()) {\n    List<String> keysToDelete=new ArrayList<>();\n    Map<String,String> keysToAdd=new HashMap<>();\n    for (    Map.Entry<String,String> entry : pendingCommit.entrySet()) {\n      if (RedisEncoder.TOMBSTONE.equals(entry.getValue())) {\n        keysToDelete.add(entry.getKey());\n      }\n else {\n        keysToAdd.put(entry.getKey(),entry.getValue());\n      }\n    }\n    if (!keysToAdd.isEmpty()) {\n      commands.hmset(namespace,keysToAdd);\n    }\n    if (!keysToDelete.isEmpty()) {\n      commands.hdel(namespace,keysToDelete.toArray(new String[0]));\n    }\n  }\n else {\n    LOG.debug(\"Nothing to save for commit, txid {}.\",txid);\n  }\n  txIds.put(COMMIT_TXID_KEY,String.valueOf(txid));\n  commands.hmset(txidNamespace,txIds);\n  commands.del(prepareNamespace);\n  pendingCommit=Collections.emptyMap();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 148,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1280,
                        "startLineNumber": 203,
                        "startColumnNumber": 8,
                        "endLineNumber": 230,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "try {\n  commands=jedisContainer.getInstance();\n  if (!pendingCommit.isEmpty()) {\n    List<String> keysToDelete=new ArrayList<>();\n    Map<String,String> keysToAdd=new HashMap<>();\n    for (    Map.Entry<String,String> entry : pendingCommit.entrySet()) {\n      if (RedisEncoder.TOMBSTONE.equals(entry.getValue())) {\n        keysToDelete.add(entry.getKey());\n      }\n else {\n        keysToAdd.put(entry.getKey(),entry.getValue());\n      }\n    }\n    if (!keysToAdd.isEmpty()) {\n      commands.hmset(namespace,keysToAdd);\n    }\n    if (!keysToDelete.isEmpty()) {\n      commands.hdel(namespace,keysToDelete.toArray(new String[0]));\n    }\n  }\n else {\n    LOG.debug(\"Nothing to save for commit, txid {}.\",txid);\n  }\n  txIds.put(COMMIT_TXID_KEY,String.valueOf(txid));\n  commands.hmset(txidNamespace,txIds);\n  commands.del(prepareNamespace);\n  pendingCommit=Collections.emptyMap();\n}\n  finally {\n  jedisContainer.returnInstance(commands);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 155,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1417,
                        "startLineNumber": 199,
                        "startColumnNumber": 34,
                        "endLineNumber": 231,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  LOG.debug(\"commit txid {}\",txid);\n  validateCommitTxid(txid);\n  JedisCommands commands=null;\n  try {\n    commands=jedisContainer.getInstance();\n    if (!pendingCommit.isEmpty()) {\n      List<String> keysToDelete=new ArrayList<>();\n      Map<String,String> keysToAdd=new HashMap<>();\n      for (      Map.Entry<String,String> entry : pendingCommit.entrySet()) {\n        if (RedisEncoder.TOMBSTONE.equals(entry.getValue())) {\n          keysToDelete.add(entry.getKey());\n        }\n else {\n          keysToAdd.put(entry.getKey(),entry.getValue());\n        }\n      }\n      if (!keysToAdd.isEmpty()) {\n        commands.hmset(namespace,keysToAdd);\n      }\n      if (!keysToDelete.isEmpty()) {\n        commands.hdel(namespace,keysToDelete.toArray(new String[0]));\n      }\n    }\n else {\n      LOG.debug(\"Nothing to save for commit, txid {}.\",txid);\n    }\n    txIds.put(COMMIT_TXID_KEY,String.valueOf(txid));\n    commands.hmset(txidNamespace,txIds);\n    commands.del(prepareNamespace);\n    pendingCommit=Collections.emptyMap();\n  }\n  finally {\n    jedisContainer.returnInstance(commands);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 172,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1462,
                        "startLineNumber": 198,
                        "startColumnNumber": 4,
                        "endLineNumber": 231,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override public void commit(long txid){\n  LOG.debug(\"commit txid {}\",txid);\n  validateCommitTxid(txid);\n  JedisCommands commands=null;\n  try {\n    commands=jedisContainer.getInstance();\n    if (!pendingCommit.isEmpty()) {\n      List<String> keysToDelete=new ArrayList<>();\n      Map<String,String> keysToAdd=new HashMap<>();\n      for (      Map.Entry<String,String> entry : pendingCommit.entrySet()) {\n        if (RedisEncoder.TOMBSTONE.equals(entry.getValue())) {\n          keysToDelete.add(entry.getKey());\n        }\n else {\n          keysToAdd.put(entry.getKey(),entry.getValue());\n        }\n      }\n      if (!keysToAdd.isEmpty()) {\n        commands.hmset(namespace,keysToAdd);\n      }\n      if (!keysToDelete.isEmpty()) {\n        commands.hdel(namespace,keysToDelete.toArray(new String[0]));\n      }\n    }\n else {\n      LOG.debug(\"Nothing to save for commit, txid {}.\",txid);\n    }\n    txIds.put(COMMIT_TXID_KEY,String.valueOf(txid));\n    commands.hmset(txidNamespace,txIds);\n    commands.del(prepareNamespace);\n    pendingCommit=Collections.emptyMap();\n  }\n  finally {\n    jedisContainer.returnInstance(commands);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 181,
                    "astHeight": 15
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 62,
                    "startLineNumber": 219,
                    "startColumnNumber": 20,
                    "endLineNumber": 219,
                    "endColumnNumber": 82
                },
                "nodeContext": "commands.hdel(namespace,keysToDelete.toArray(new String[0]));\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 14,
                "astHeight": 7
            },
            "tokenLength": 4,
            "type": "java.lang.String[]"
        }
    ],
    "positionList": [
        {
            "charLength": 35,
            "startLineNumber": 219,
            "startColumnNumber": 45,
            "endLineNumber": 219,
            "endColumnNumber": 80
        }
    ],
    "layoutRelationDataList": []
}