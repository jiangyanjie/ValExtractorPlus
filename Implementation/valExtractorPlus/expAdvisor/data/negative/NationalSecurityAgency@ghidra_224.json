{
    "id": 224,
    "expression": "\"double doesn't fit within 4 bytes, need 8 bytes\"",
    "projectName": "NationalSecurityAgency@ghidra",
    "commitID": "59ed3e1cc9aea1a3aeebfdf4dae108c905985dc1",
    "filePath": "Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/stackeditor/StackEditorDnDTest.java",
    "occurrences": 1,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "\"double doesn't fit within 4 bytes, need 8 bytes\"",
            "nodeType": "StringLiteral",
            "nodePosition": {
                "charLength": 49,
                "startLineNumber": 390,
                "startColumnNumber": 16,
                "endLineNumber": 390,
                "endColumnNumber": 65
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 82,
                        "startLineNumber": 390,
                        "startColumnNumber": 3,
                        "endLineNumber": 390,
                        "endColumnNumber": 85
                    },
                    "nodeContext": "assertEquals(\"double doesn't fit within 4 bytes, need 8 bytes\",model.getStatus())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 83,
                        "startLineNumber": 390,
                        "startColumnNumber": 3,
                        "endLineNumber": 390,
                        "endColumnNumber": 86
                    },
                    "nodeContext": "assertEquals(\"double doesn't fit within 4 bytes, need 8 bytes\",model.getStatus());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 688,
                        "startLineNumber": 372,
                        "startColumnNumber": 6,
                        "endLineNumber": 391,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  assertEquals(20,model.getNumComponents());\n  assertEquals(0x1e,model.getLength());\n  DataType newType=programDTM.getDataType(\"/double\");\n  assertNotNull(newType);\n  DataType existingStackType=getDataType(1);\n  DataType tableType=getDataTypeAtRow(1);\n  assertTrue(existingStackType.isEquivalent(tableType));\n  addAtPoint(newType,1,0);\n  assertEquals(20,model.getNumComponents());\n  assertEquals(0x1e,model.getLength());\n  DataType newStackType=getDataType(1);\n  assertSame(\"Type should not have been replaced\",existingStackType,newStackType);\n  assertEquals(\"double doesn't fit within 4 bytes, need 8 bytes\",model.getStatus());\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 92,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 725,
                        "startLineNumber": 372,
                        "startColumnNumber": 2,
                        "endLineNumber": 394,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "try {\n  assertEquals(20,model.getNumComponents());\n  assertEquals(0x1e,model.getLength());\n  DataType newType=programDTM.getDataType(\"/double\");\n  assertNotNull(newType);\n  DataType existingStackType=getDataType(1);\n  DataType tableType=getDataTypeAtRow(1);\n  assertTrue(existingStackType.isEquivalent(tableType));\n  addAtPoint(newType,1,0);\n  assertEquals(20,model.getNumComponents());\n  assertEquals(0x1e,model.getLength());\n  DataType newStackType=getDataType(1);\n  assertSame(\"Type should not have been replaced\",existingStackType,newStackType);\n  assertEquals(\"double doesn't fit within 4 bytes, need 8 bytes\",model.getStatus());\n}\n  finally {\n  cleanup();\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 97,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 734,
                        "startLineNumber": 371,
                        "startColumnNumber": 60,
                        "endLineNumber": 395,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  try {\n    assertEquals(20,model.getNumComponents());\n    assertEquals(0x1e,model.getLength());\n    DataType newType=programDTM.getDataType(\"/double\");\n    assertNotNull(newType);\n    DataType existingStackType=getDataType(1);\n    DataType tableType=getDataTypeAtRow(1);\n    assertTrue(existingStackType.isEquivalent(tableType));\n    addAtPoint(newType,1,0);\n    assertEquals(20,model.getNumComponents());\n    assertEquals(0x1e,model.getLength());\n    DataType newStackType=getDataType(1);\n    assertSame(\"Type should not have been replaced\",existingStackType,newStackType);\n    assertEquals(\"double doesn't fit within 4 bytes, need 8 bytes\",model.getStatus());\n  }\n  finally {\n    cleanup();\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 98,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 801,
                        "startLineNumber": 370,
                        "startColumnNumber": 1,
                        "endLineNumber": 395,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "@Test public void testDragNDropAddLargerNoFit() throws Exception {\n  try {\n    assertEquals(20,model.getNumComponents());\n    assertEquals(0x1e,model.getLength());\n    DataType newType=programDTM.getDataType(\"/double\");\n    assertNotNull(newType);\n    DataType existingStackType=getDataType(1);\n    DataType tableType=getDataTypeAtRow(1);\n    assertTrue(existingStackType.isEquivalent(tableType));\n    addAtPoint(newType,1,0);\n    assertEquals(20,model.getNumComponents());\n    assertEquals(0x1e,model.getLength());\n    DataType newStackType=getDataType(1);\n    assertSame(\"Type should not have been replaced\",existingStackType,newStackType);\n    assertEquals(\"double doesn't fit within 4 bytes, need 8 bytes\",model.getStatus());\n  }\n  finally {\n    cleanup();\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 106,
                    "astHeight": 8
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 83,
                    "startLineNumber": 390,
                    "startColumnNumber": 3,
                    "endLineNumber": 390,
                    "endColumnNumber": 86
                },
                "nodeContext": "assertEquals(\"double doesn't fit within 4 bytes, need 8 bytes\",model.getStatus());\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 7,
                "astHeight": 4
            },
            "tokenLength": 9,
            "type": "java.lang.String"
        }
    ],
    "positionList": [
        {
            "charLength": 49,
            "startLineNumber": 390,
            "startColumnNumber": 16,
            "endLineNumber": 390,
            "endColumnNumber": 65
        }
    ],
    "layoutRelationDataList": []
}