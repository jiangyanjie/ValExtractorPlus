{
    "id": 1331,
    "expression": "null",
    "projectName": "nifi",
    "commitID": "2a92747046b39d7b3f7604258c1d3bb81a9447bd",
    "filePath": "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/ProcessGroupResource.java",
    "occurrences": 6,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "null",
            "nodeType": "NullLiteral",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 580,
                "startColumnNumber": 31,
                "endLineNumber": 580,
                "endColumnNumber": 35
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 23,
                        "startLineNumber": 580,
                        "startColumnNumber": 12,
                        "endLineNumber": 580,
                        "endColumnNumber": 35
                    },
                    "nodeContext": "processorEntity == null",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 65,
                        "startLineNumber": 580,
                        "startColumnNumber": 12,
                        "endLineNumber": 580,
                        "endColumnNumber": 77
                    },
                    "nodeContext": "processorEntity == null || processorEntity.getComponent() == null",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 170,
                        "startLineNumber": 580,
                        "startColumnNumber": 8,
                        "endLineNumber": 582,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (processorEntity == null || processorEntity.getComponent() == null) {\n  throw new IllegalArgumentException(\"Processor details must be specified.\");\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 16,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2639,
                        "startLineNumber": 578,
                        "startColumnNumber": 53,
                        "endLineNumber": 630,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (processorEntity == null || processorEntity.getComponent() == null) {\n    throw new IllegalArgumentException(\"Processor details must be specified.\");\n  }\n  if (processorEntity.getRevision() == null || (processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)) {\n    throw new IllegalArgumentException(\"A revision of 0 must be specified when creating a new Processor.\");\n  }\n  if (processorEntity.getComponent().getId() != null) {\n    throw new IllegalArgumentException(\"Processor ID cannot be specified.\");\n  }\n  if (StringUtils.isBlank(processorEntity.getComponent().getType())) {\n    throw new IllegalArgumentException(\"The type of processor to create must be specified.\");\n  }\n  if (processorEntity.getComponent().getParentGroupId() != null && !groupId.equals(processorEntity.getComponent().getParentGroupId())) {\n    throw new IllegalArgumentException(String.format(\"If specified, the parent process group id %s must be the same as specified in the URI %s\",processorEntity.getComponent().getParentGroupId(),groupId));\n  }\n  processorEntity.getComponent().setParentGroupId(groupId);\n  if (isReplicateRequest()) {\n    return replicate(HttpMethod.POST,processorEntity);\n  }\n  final boolean validationPhase=isValidationPhase(httpServletRequest);\n  if (validationPhase || !isTwoPhaseRequest(httpServletRequest)) {\n    serviceFacade.authorizeAccess(lookup -> {\n      final Authorizable processGroup=lookup.getProcessGroup(groupId).getAuthorizable();\n      processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n    }\n);\n  }\n  if (validationPhase) {\n    return generateContinueResponse().build();\n  }\n  processorEntity.getComponent().setId(generateUuid());\n  final Revision revision=getRevision(processorEntity,processorEntity.getComponent().getId());\n  final ProcessorEntity entity=serviceFacade.createProcessor(revision,groupId,processorEntity.getComponent());\n  processorResource.populateRemainingProcessorEntityContent(entity);\n  String uri=entity.getUri();\n  return clusterContext(generateCreatedResponse(URI.create(uri),entity)).build();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 242,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 4427,
                        "startLineNumber": 540,
                        "startColumnNumber": 4,
                        "endLineNumber": 630,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Creates a new processor.\n * @param httpServletRequest request\n * @param groupId            The group id\n * @param processorEntity    A processorEntity.\n * @return A processorEntity.\n */\n@POST @Consumes(MediaType.APPLICATION_JSON) @Produces(MediaType.APPLICATION_JSON) @Path(\"{id}/processors\") @ApiOperation(value=\"Creates a new processor\",response=ProcessorEntity.class,authorizations={@Authorization(value=\"Write - /process-groups/{uuid}\",type=\"\")}) @ApiResponses(value={@ApiResponse(code=400,message=\"NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.\"),@ApiResponse(code=401,message=\"Client could not be authenticated.\"),@ApiResponse(code=403,message=\"Client is not authorized to make this request.\"),@ApiResponse(code=404,message=\"The specified resource could not be found.\"),@ApiResponse(code=409,message=\"The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.\")}) public Response createProcessor(@Context final HttpServletRequest httpServletRequest,@ApiParam(value=\"The process group id.\",required=true) @PathParam(\"id\") final String groupId,@ApiParam(value=\"The processor configuration details.\",required=true) final ProcessorEntity processorEntity){\n  if (processorEntity == null || processorEntity.getComponent() == null) {\n    throw new IllegalArgumentException(\"Processor details must be specified.\");\n  }\n  if (processorEntity.getRevision() == null || (processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)) {\n    throw new IllegalArgumentException(\"A revision of 0 must be specified when creating a new Processor.\");\n  }\n  if (processorEntity.getComponent().getId() != null) {\n    throw new IllegalArgumentException(\"Processor ID cannot be specified.\");\n  }\n  if (StringUtils.isBlank(processorEntity.getComponent().getType())) {\n    throw new IllegalArgumentException(\"The type of processor to create must be specified.\");\n  }\n  if (processorEntity.getComponent().getParentGroupId() != null && !groupId.equals(processorEntity.getComponent().getParentGroupId())) {\n    throw new IllegalArgumentException(String.format(\"If specified, the parent process group id %s must be the same as specified in the URI %s\",processorEntity.getComponent().getParentGroupId(),groupId));\n  }\n  processorEntity.getComponent().setParentGroupId(groupId);\n  if (isReplicateRequest()) {\n    return replicate(HttpMethod.POST,processorEntity);\n  }\n  final boolean validationPhase=isValidationPhase(httpServletRequest);\n  if (validationPhase || !isTwoPhaseRequest(httpServletRequest)) {\n    serviceFacade.authorizeAccess(lookup -> {\n      final Authorizable processGroup=lookup.getProcessGroup(groupId).getAuthorizable();\n      processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n    }\n);\n  }\n  if (validationPhase) {\n    return generateContinueResponse().build();\n  }\n  processorEntity.getComponent().setId(generateUuid());\n  final Revision revision=getRevision(processorEntity,processorEntity.getComponent().getId());\n  final ProcessorEntity entity=serviceFacade.createProcessor(revision,groupId,processorEntity.getComponent());\n  processorResource.populateRemainingProcessorEntityContent(entity);\n  String uri=entity.getUri();\n  return clusterContext(generateCreatedResponse(URI.create(uri),entity)).build();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 365,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 65,
                    "startLineNumber": 580,
                    "startColumnNumber": 12,
                    "endLineNumber": 580,
                    "endColumnNumber": 77
                },
                "nodeContext": "processorEntity == null || processorEntity.getComponent() == null",
                "nodeType": "InfixExpression",
                "astNodeNumber": 9,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "null"
        },
        {
            "nodeContext": "null",
            "nodeType": "NullLiteral",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 580,
                "startColumnNumber": 73,
                "endLineNumber": 580,
                "endColumnNumber": 77
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 38,
                        "startLineNumber": 580,
                        "startColumnNumber": 39,
                        "endLineNumber": 580,
                        "endColumnNumber": 77
                    },
                    "nodeContext": "processorEntity.getComponent() == null",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 65,
                        "startLineNumber": 580,
                        "startColumnNumber": 12,
                        "endLineNumber": 580,
                        "endColumnNumber": 77
                    },
                    "nodeContext": "processorEntity == null || processorEntity.getComponent() == null",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 170,
                        "startLineNumber": 580,
                        "startColumnNumber": 8,
                        "endLineNumber": 582,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (processorEntity == null || processorEntity.getComponent() == null) {\n  throw new IllegalArgumentException(\"Processor details must be specified.\");\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 16,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2639,
                        "startLineNumber": 578,
                        "startColumnNumber": 53,
                        "endLineNumber": 630,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (processorEntity == null || processorEntity.getComponent() == null) {\n    throw new IllegalArgumentException(\"Processor details must be specified.\");\n  }\n  if (processorEntity.getRevision() == null || (processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)) {\n    throw new IllegalArgumentException(\"A revision of 0 must be specified when creating a new Processor.\");\n  }\n  if (processorEntity.getComponent().getId() != null) {\n    throw new IllegalArgumentException(\"Processor ID cannot be specified.\");\n  }\n  if (StringUtils.isBlank(processorEntity.getComponent().getType())) {\n    throw new IllegalArgumentException(\"The type of processor to create must be specified.\");\n  }\n  if (processorEntity.getComponent().getParentGroupId() != null && !groupId.equals(processorEntity.getComponent().getParentGroupId())) {\n    throw new IllegalArgumentException(String.format(\"If specified, the parent process group id %s must be the same as specified in the URI %s\",processorEntity.getComponent().getParentGroupId(),groupId));\n  }\n  processorEntity.getComponent().setParentGroupId(groupId);\n  if (isReplicateRequest()) {\n    return replicate(HttpMethod.POST,processorEntity);\n  }\n  final boolean validationPhase=isValidationPhase(httpServletRequest);\n  if (validationPhase || !isTwoPhaseRequest(httpServletRequest)) {\n    serviceFacade.authorizeAccess(lookup -> {\n      final Authorizable processGroup=lookup.getProcessGroup(groupId).getAuthorizable();\n      processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n    }\n);\n  }\n  if (validationPhase) {\n    return generateContinueResponse().build();\n  }\n  processorEntity.getComponent().setId(generateUuid());\n  final Revision revision=getRevision(processorEntity,processorEntity.getComponent().getId());\n  final ProcessorEntity entity=serviceFacade.createProcessor(revision,groupId,processorEntity.getComponent());\n  processorResource.populateRemainingProcessorEntityContent(entity);\n  String uri=entity.getUri();\n  return clusterContext(generateCreatedResponse(URI.create(uri),entity)).build();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 242,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 4427,
                        "startLineNumber": 540,
                        "startColumnNumber": 4,
                        "endLineNumber": 630,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Creates a new processor.\n * @param httpServletRequest request\n * @param groupId            The group id\n * @param processorEntity    A processorEntity.\n * @return A processorEntity.\n */\n@POST @Consumes(MediaType.APPLICATION_JSON) @Produces(MediaType.APPLICATION_JSON) @Path(\"{id}/processors\") @ApiOperation(value=\"Creates a new processor\",response=ProcessorEntity.class,authorizations={@Authorization(value=\"Write - /process-groups/{uuid}\",type=\"\")}) @ApiResponses(value={@ApiResponse(code=400,message=\"NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.\"),@ApiResponse(code=401,message=\"Client could not be authenticated.\"),@ApiResponse(code=403,message=\"Client is not authorized to make this request.\"),@ApiResponse(code=404,message=\"The specified resource could not be found.\"),@ApiResponse(code=409,message=\"The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.\")}) public Response createProcessor(@Context final HttpServletRequest httpServletRequest,@ApiParam(value=\"The process group id.\",required=true) @PathParam(\"id\") final String groupId,@ApiParam(value=\"The processor configuration details.\",required=true) final ProcessorEntity processorEntity){\n  if (processorEntity == null || processorEntity.getComponent() == null) {\n    throw new IllegalArgumentException(\"Processor details must be specified.\");\n  }\n  if (processorEntity.getRevision() == null || (processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)) {\n    throw new IllegalArgumentException(\"A revision of 0 must be specified when creating a new Processor.\");\n  }\n  if (processorEntity.getComponent().getId() != null) {\n    throw new IllegalArgumentException(\"Processor ID cannot be specified.\");\n  }\n  if (StringUtils.isBlank(processorEntity.getComponent().getType())) {\n    throw new IllegalArgumentException(\"The type of processor to create must be specified.\");\n  }\n  if (processorEntity.getComponent().getParentGroupId() != null && !groupId.equals(processorEntity.getComponent().getParentGroupId())) {\n    throw new IllegalArgumentException(String.format(\"If specified, the parent process group id %s must be the same as specified in the URI %s\",processorEntity.getComponent().getParentGroupId(),groupId));\n  }\n  processorEntity.getComponent().setParentGroupId(groupId);\n  if (isReplicateRequest()) {\n    return replicate(HttpMethod.POST,processorEntity);\n  }\n  final boolean validationPhase=isValidationPhase(httpServletRequest);\n  if (validationPhase || !isTwoPhaseRequest(httpServletRequest)) {\n    serviceFacade.authorizeAccess(lookup -> {\n      final Authorizable processGroup=lookup.getProcessGroup(groupId).getAuthorizable();\n      processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n    }\n);\n  }\n  if (validationPhase) {\n    return generateContinueResponse().build();\n  }\n  processorEntity.getComponent().setId(generateUuid());\n  final Revision revision=getRevision(processorEntity,processorEntity.getComponent().getId());\n  final ProcessorEntity entity=serviceFacade.createProcessor(revision,groupId,processorEntity.getComponent());\n  processorResource.populateRemainingProcessorEntityContent(entity);\n  String uri=entity.getUri();\n  return clusterContext(generateCreatedResponse(URI.create(uri),entity)).build();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 365,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 65,
                    "startLineNumber": 580,
                    "startColumnNumber": 12,
                    "endLineNumber": 580,
                    "endColumnNumber": 77
                },
                "nodeContext": "processorEntity == null || processorEntity.getComponent() == null",
                "nodeType": "InfixExpression",
                "astNodeNumber": 9,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "null"
        },
        {
            "nodeContext": "null",
            "nodeType": "NullLiteral",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 584,
                "startColumnNumber": 45,
                "endLineNumber": 584,
                "endColumnNumber": 49
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 37,
                        "startLineNumber": 584,
                        "startColumnNumber": 12,
                        "endLineNumber": 584,
                        "endColumnNumber": 49
                    },
                    "nodeContext": "processorEntity.getRevision() == null",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 144,
                        "startLineNumber": 584,
                        "startColumnNumber": 12,
                        "endLineNumber": 584,
                        "endColumnNumber": 156
                    },
                    "nodeContext": "processorEntity.getRevision() == null || (processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 22,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 277,
                        "startLineNumber": 584,
                        "startColumnNumber": 8,
                        "endLineNumber": 586,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (processorEntity.getRevision() == null || (processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)) {\n  throw new IllegalArgumentException(\"A revision of 0 must be specified when creating a new Processor.\");\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 29,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2639,
                        "startLineNumber": 578,
                        "startColumnNumber": 53,
                        "endLineNumber": 630,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (processorEntity == null || processorEntity.getComponent() == null) {\n    throw new IllegalArgumentException(\"Processor details must be specified.\");\n  }\n  if (processorEntity.getRevision() == null || (processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)) {\n    throw new IllegalArgumentException(\"A revision of 0 must be specified when creating a new Processor.\");\n  }\n  if (processorEntity.getComponent().getId() != null) {\n    throw new IllegalArgumentException(\"Processor ID cannot be specified.\");\n  }\n  if (StringUtils.isBlank(processorEntity.getComponent().getType())) {\n    throw new IllegalArgumentException(\"The type of processor to create must be specified.\");\n  }\n  if (processorEntity.getComponent().getParentGroupId() != null && !groupId.equals(processorEntity.getComponent().getParentGroupId())) {\n    throw new IllegalArgumentException(String.format(\"If specified, the parent process group id %s must be the same as specified in the URI %s\",processorEntity.getComponent().getParentGroupId(),groupId));\n  }\n  processorEntity.getComponent().setParentGroupId(groupId);\n  if (isReplicateRequest()) {\n    return replicate(HttpMethod.POST,processorEntity);\n  }\n  final boolean validationPhase=isValidationPhase(httpServletRequest);\n  if (validationPhase || !isTwoPhaseRequest(httpServletRequest)) {\n    serviceFacade.authorizeAccess(lookup -> {\n      final Authorizable processGroup=lookup.getProcessGroup(groupId).getAuthorizable();\n      processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n    }\n);\n  }\n  if (validationPhase) {\n    return generateContinueResponse().build();\n  }\n  processorEntity.getComponent().setId(generateUuid());\n  final Revision revision=getRevision(processorEntity,processorEntity.getComponent().getId());\n  final ProcessorEntity entity=serviceFacade.createProcessor(revision,groupId,processorEntity.getComponent());\n  processorResource.populateRemainingProcessorEntityContent(entity);\n  String uri=entity.getUri();\n  return clusterContext(generateCreatedResponse(URI.create(uri),entity)).build();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 242,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 4427,
                        "startLineNumber": 540,
                        "startColumnNumber": 4,
                        "endLineNumber": 630,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Creates a new processor.\n * @param httpServletRequest request\n * @param groupId            The group id\n * @param processorEntity    A processorEntity.\n * @return A processorEntity.\n */\n@POST @Consumes(MediaType.APPLICATION_JSON) @Produces(MediaType.APPLICATION_JSON) @Path(\"{id}/processors\") @ApiOperation(value=\"Creates a new processor\",response=ProcessorEntity.class,authorizations={@Authorization(value=\"Write - /process-groups/{uuid}\",type=\"\")}) @ApiResponses(value={@ApiResponse(code=400,message=\"NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.\"),@ApiResponse(code=401,message=\"Client could not be authenticated.\"),@ApiResponse(code=403,message=\"Client is not authorized to make this request.\"),@ApiResponse(code=404,message=\"The specified resource could not be found.\"),@ApiResponse(code=409,message=\"The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.\")}) public Response createProcessor(@Context final HttpServletRequest httpServletRequest,@ApiParam(value=\"The process group id.\",required=true) @PathParam(\"id\") final String groupId,@ApiParam(value=\"The processor configuration details.\",required=true) final ProcessorEntity processorEntity){\n  if (processorEntity == null || processorEntity.getComponent() == null) {\n    throw new IllegalArgumentException(\"Processor details must be specified.\");\n  }\n  if (processorEntity.getRevision() == null || (processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)) {\n    throw new IllegalArgumentException(\"A revision of 0 must be specified when creating a new Processor.\");\n  }\n  if (processorEntity.getComponent().getId() != null) {\n    throw new IllegalArgumentException(\"Processor ID cannot be specified.\");\n  }\n  if (StringUtils.isBlank(processorEntity.getComponent().getType())) {\n    throw new IllegalArgumentException(\"The type of processor to create must be specified.\");\n  }\n  if (processorEntity.getComponent().getParentGroupId() != null && !groupId.equals(processorEntity.getComponent().getParentGroupId())) {\n    throw new IllegalArgumentException(String.format(\"If specified, the parent process group id %s must be the same as specified in the URI %s\",processorEntity.getComponent().getParentGroupId(),groupId));\n  }\n  processorEntity.getComponent().setParentGroupId(groupId);\n  if (isReplicateRequest()) {\n    return replicate(HttpMethod.POST,processorEntity);\n  }\n  final boolean validationPhase=isValidationPhase(httpServletRequest);\n  if (validationPhase || !isTwoPhaseRequest(httpServletRequest)) {\n    serviceFacade.authorizeAccess(lookup -> {\n      final Authorizable processGroup=lookup.getProcessGroup(groupId).getAuthorizable();\n      processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n    }\n);\n  }\n  if (validationPhase) {\n    return generateContinueResponse().build();\n  }\n  processorEntity.getComponent().setId(generateUuid());\n  final Revision revision=getRevision(processorEntity,processorEntity.getComponent().getId());\n  final ProcessorEntity entity=serviceFacade.createProcessor(revision,groupId,processorEntity.getComponent());\n  processorResource.populateRemainingProcessorEntityContent(entity);\n  String uri=entity.getUri();\n  return clusterContext(generateCreatedResponse(URI.create(uri),entity)).build();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 365,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 144,
                    "startLineNumber": 584,
                    "startColumnNumber": 12,
                    "endLineNumber": 584,
                    "endColumnNumber": 156
                },
                "nodeContext": "processorEntity.getRevision() == null || (processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)",
                "nodeType": "InfixExpression",
                "astNodeNumber": 22,
                "astHeight": 7
            },
            "tokenLength": 1,
            "type": "null"
        },
        {
            "nodeContext": "null",
            "nodeType": "NullLiteral",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 584,
                "startColumnNumber": 100,
                "endLineNumber": 584,
                "endColumnNumber": 104
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 50,
                        "startLineNumber": 584,
                        "startColumnNumber": 54,
                        "endLineNumber": 584,
                        "endColumnNumber": 104
                    },
                    "nodeContext": "processorEntity.getRevision().getVersion() == null",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
                    "nodePosition": {
                        "charLength": 101,
                        "startLineNumber": 584,
                        "startColumnNumber": 54,
                        "endLineNumber": 584,
                        "endColumnNumber": 155
                    },
                    "nodeContext": "processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 15,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 103,
                        "startLineNumber": 584,
                        "startColumnNumber": 53,
                        "endLineNumber": 584,
                        "endColumnNumber": 156
                    },
                    "nodeContext": "(processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)",
                    "nodeType": "ParenthesizedExpression",
                    "astNodeNumber": 16,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 144,
                        "startLineNumber": 584,
                        "startColumnNumber": 12,
                        "endLineNumber": 584,
                        "endColumnNumber": 156
                    },
                    "nodeContext": "processorEntity.getRevision() == null || (processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 22,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 277,
                        "startLineNumber": 584,
                        "startColumnNumber": 8,
                        "endLineNumber": 586,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (processorEntity.getRevision() == null || (processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)) {\n  throw new IllegalArgumentException(\"A revision of 0 must be specified when creating a new Processor.\");\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 29,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2639,
                        "startLineNumber": 578,
                        "startColumnNumber": 53,
                        "endLineNumber": 630,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (processorEntity == null || processorEntity.getComponent() == null) {\n    throw new IllegalArgumentException(\"Processor details must be specified.\");\n  }\n  if (processorEntity.getRevision() == null || (processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)) {\n    throw new IllegalArgumentException(\"A revision of 0 must be specified when creating a new Processor.\");\n  }\n  if (processorEntity.getComponent().getId() != null) {\n    throw new IllegalArgumentException(\"Processor ID cannot be specified.\");\n  }\n  if (StringUtils.isBlank(processorEntity.getComponent().getType())) {\n    throw new IllegalArgumentException(\"The type of processor to create must be specified.\");\n  }\n  if (processorEntity.getComponent().getParentGroupId() != null && !groupId.equals(processorEntity.getComponent().getParentGroupId())) {\n    throw new IllegalArgumentException(String.format(\"If specified, the parent process group id %s must be the same as specified in the URI %s\",processorEntity.getComponent().getParentGroupId(),groupId));\n  }\n  processorEntity.getComponent().setParentGroupId(groupId);\n  if (isReplicateRequest()) {\n    return replicate(HttpMethod.POST,processorEntity);\n  }\n  final boolean validationPhase=isValidationPhase(httpServletRequest);\n  if (validationPhase || !isTwoPhaseRequest(httpServletRequest)) {\n    serviceFacade.authorizeAccess(lookup -> {\n      final Authorizable processGroup=lookup.getProcessGroup(groupId).getAuthorizable();\n      processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n    }\n);\n  }\n  if (validationPhase) {\n    return generateContinueResponse().build();\n  }\n  processorEntity.getComponent().setId(generateUuid());\n  final Revision revision=getRevision(processorEntity,processorEntity.getComponent().getId());\n  final ProcessorEntity entity=serviceFacade.createProcessor(revision,groupId,processorEntity.getComponent());\n  processorResource.populateRemainingProcessorEntityContent(entity);\n  String uri=entity.getUri();\n  return clusterContext(generateCreatedResponse(URI.create(uri),entity)).build();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 242,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 4427,
                        "startLineNumber": 540,
                        "startColumnNumber": 4,
                        "endLineNumber": 630,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Creates a new processor.\n * @param httpServletRequest request\n * @param groupId            The group id\n * @param processorEntity    A processorEntity.\n * @return A processorEntity.\n */\n@POST @Consumes(MediaType.APPLICATION_JSON) @Produces(MediaType.APPLICATION_JSON) @Path(\"{id}/processors\") @ApiOperation(value=\"Creates a new processor\",response=ProcessorEntity.class,authorizations={@Authorization(value=\"Write - /process-groups/{uuid}\",type=\"\")}) @ApiResponses(value={@ApiResponse(code=400,message=\"NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.\"),@ApiResponse(code=401,message=\"Client could not be authenticated.\"),@ApiResponse(code=403,message=\"Client is not authorized to make this request.\"),@ApiResponse(code=404,message=\"The specified resource could not be found.\"),@ApiResponse(code=409,message=\"The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.\")}) public Response createProcessor(@Context final HttpServletRequest httpServletRequest,@ApiParam(value=\"The process group id.\",required=true) @PathParam(\"id\") final String groupId,@ApiParam(value=\"The processor configuration details.\",required=true) final ProcessorEntity processorEntity){\n  if (processorEntity == null || processorEntity.getComponent() == null) {\n    throw new IllegalArgumentException(\"Processor details must be specified.\");\n  }\n  if (processorEntity.getRevision() == null || (processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)) {\n    throw new IllegalArgumentException(\"A revision of 0 must be specified when creating a new Processor.\");\n  }\n  if (processorEntity.getComponent().getId() != null) {\n    throw new IllegalArgumentException(\"Processor ID cannot be specified.\");\n  }\n  if (StringUtils.isBlank(processorEntity.getComponent().getType())) {\n    throw new IllegalArgumentException(\"The type of processor to create must be specified.\");\n  }\n  if (processorEntity.getComponent().getParentGroupId() != null && !groupId.equals(processorEntity.getComponent().getParentGroupId())) {\n    throw new IllegalArgumentException(String.format(\"If specified, the parent process group id %s must be the same as specified in the URI %s\",processorEntity.getComponent().getParentGroupId(),groupId));\n  }\n  processorEntity.getComponent().setParentGroupId(groupId);\n  if (isReplicateRequest()) {\n    return replicate(HttpMethod.POST,processorEntity);\n  }\n  final boolean validationPhase=isValidationPhase(httpServletRequest);\n  if (validationPhase || !isTwoPhaseRequest(httpServletRequest)) {\n    serviceFacade.authorizeAccess(lookup -> {\n      final Authorizable processGroup=lookup.getProcessGroup(groupId).getAuthorizable();\n      processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n    }\n);\n  }\n  if (validationPhase) {\n    return generateContinueResponse().build();\n  }\n  processorEntity.getComponent().setId(generateUuid());\n  final Revision revision=getRevision(processorEntity,processorEntity.getComponent().getId());\n  final ProcessorEntity entity=serviceFacade.createProcessor(revision,groupId,processorEntity.getComponent());\n  processorResource.populateRemainingProcessorEntityContent(entity);\n  String uri=entity.getUri();\n  return clusterContext(generateCreatedResponse(URI.create(uri),entity)).build();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 365,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 144,
                    "startLineNumber": 584,
                    "startColumnNumber": 12,
                    "endLineNumber": 584,
                    "endColumnNumber": 156
                },
                "nodeContext": "processorEntity.getRevision() == null || (processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)",
                "nodeType": "InfixExpression",
                "astNodeNumber": 22,
                "astHeight": 7
            },
            "tokenLength": 1,
            "type": "null"
        },
        {
            "nodeContext": "null",
            "nodeType": "NullLiteral",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 588,
                "startColumnNumber": 54,
                "endLineNumber": 588,
                "endColumnNumber": 58
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 46,
                        "startLineNumber": 588,
                        "startColumnNumber": 12,
                        "endLineNumber": 588,
                        "endColumnNumber": 58
                    },
                    "nodeContext": "processorEntity.getComponent().getId() != null",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 148,
                        "startLineNumber": 588,
                        "startColumnNumber": 8,
                        "endLineNumber": 590,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (processorEntity.getComponent().getId() != null) {\n  throw new IllegalArgumentException(\"Processor ID cannot be specified.\");\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 14,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2639,
                        "startLineNumber": 578,
                        "startColumnNumber": 53,
                        "endLineNumber": 630,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (processorEntity == null || processorEntity.getComponent() == null) {\n    throw new IllegalArgumentException(\"Processor details must be specified.\");\n  }\n  if (processorEntity.getRevision() == null || (processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)) {\n    throw new IllegalArgumentException(\"A revision of 0 must be specified when creating a new Processor.\");\n  }\n  if (processorEntity.getComponent().getId() != null) {\n    throw new IllegalArgumentException(\"Processor ID cannot be specified.\");\n  }\n  if (StringUtils.isBlank(processorEntity.getComponent().getType())) {\n    throw new IllegalArgumentException(\"The type of processor to create must be specified.\");\n  }\n  if (processorEntity.getComponent().getParentGroupId() != null && !groupId.equals(processorEntity.getComponent().getParentGroupId())) {\n    throw new IllegalArgumentException(String.format(\"If specified, the parent process group id %s must be the same as specified in the URI %s\",processorEntity.getComponent().getParentGroupId(),groupId));\n  }\n  processorEntity.getComponent().setParentGroupId(groupId);\n  if (isReplicateRequest()) {\n    return replicate(HttpMethod.POST,processorEntity);\n  }\n  final boolean validationPhase=isValidationPhase(httpServletRequest);\n  if (validationPhase || !isTwoPhaseRequest(httpServletRequest)) {\n    serviceFacade.authorizeAccess(lookup -> {\n      final Authorizable processGroup=lookup.getProcessGroup(groupId).getAuthorizable();\n      processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n    }\n);\n  }\n  if (validationPhase) {\n    return generateContinueResponse().build();\n  }\n  processorEntity.getComponent().setId(generateUuid());\n  final Revision revision=getRevision(processorEntity,processorEntity.getComponent().getId());\n  final ProcessorEntity entity=serviceFacade.createProcessor(revision,groupId,processorEntity.getComponent());\n  processorResource.populateRemainingProcessorEntityContent(entity);\n  String uri=entity.getUri();\n  return clusterContext(generateCreatedResponse(URI.create(uri),entity)).build();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 242,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 4427,
                        "startLineNumber": 540,
                        "startColumnNumber": 4,
                        "endLineNumber": 630,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Creates a new processor.\n * @param httpServletRequest request\n * @param groupId            The group id\n * @param processorEntity    A processorEntity.\n * @return A processorEntity.\n */\n@POST @Consumes(MediaType.APPLICATION_JSON) @Produces(MediaType.APPLICATION_JSON) @Path(\"{id}/processors\") @ApiOperation(value=\"Creates a new processor\",response=ProcessorEntity.class,authorizations={@Authorization(value=\"Write - /process-groups/{uuid}\",type=\"\")}) @ApiResponses(value={@ApiResponse(code=400,message=\"NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.\"),@ApiResponse(code=401,message=\"Client could not be authenticated.\"),@ApiResponse(code=403,message=\"Client is not authorized to make this request.\"),@ApiResponse(code=404,message=\"The specified resource could not be found.\"),@ApiResponse(code=409,message=\"The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.\")}) public Response createProcessor(@Context final HttpServletRequest httpServletRequest,@ApiParam(value=\"The process group id.\",required=true) @PathParam(\"id\") final String groupId,@ApiParam(value=\"The processor configuration details.\",required=true) final ProcessorEntity processorEntity){\n  if (processorEntity == null || processorEntity.getComponent() == null) {\n    throw new IllegalArgumentException(\"Processor details must be specified.\");\n  }\n  if (processorEntity.getRevision() == null || (processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)) {\n    throw new IllegalArgumentException(\"A revision of 0 must be specified when creating a new Processor.\");\n  }\n  if (processorEntity.getComponent().getId() != null) {\n    throw new IllegalArgumentException(\"Processor ID cannot be specified.\");\n  }\n  if (StringUtils.isBlank(processorEntity.getComponent().getType())) {\n    throw new IllegalArgumentException(\"The type of processor to create must be specified.\");\n  }\n  if (processorEntity.getComponent().getParentGroupId() != null && !groupId.equals(processorEntity.getComponent().getParentGroupId())) {\n    throw new IllegalArgumentException(String.format(\"If specified, the parent process group id %s must be the same as specified in the URI %s\",processorEntity.getComponent().getParentGroupId(),groupId));\n  }\n  processorEntity.getComponent().setParentGroupId(groupId);\n  if (isReplicateRequest()) {\n    return replicate(HttpMethod.POST,processorEntity);\n  }\n  final boolean validationPhase=isValidationPhase(httpServletRequest);\n  if (validationPhase || !isTwoPhaseRequest(httpServletRequest)) {\n    serviceFacade.authorizeAccess(lookup -> {\n      final Authorizable processGroup=lookup.getProcessGroup(groupId).getAuthorizable();\n      processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n    }\n);\n  }\n  if (validationPhase) {\n    return generateContinueResponse().build();\n  }\n  processorEntity.getComponent().setId(generateUuid());\n  final Revision revision=getRevision(processorEntity,processorEntity.getComponent().getId());\n  final ProcessorEntity entity=serviceFacade.createProcessor(revision,groupId,processorEntity.getComponent());\n  processorResource.populateRemainingProcessorEntityContent(entity);\n  String uri=entity.getUri();\n  return clusterContext(generateCreatedResponse(URI.create(uri),entity)).build();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 365,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 46,
                    "startLineNumber": 588,
                    "startColumnNumber": 12,
                    "endLineNumber": 588,
                    "endColumnNumber": 58
                },
                "nodeContext": "processorEntity.getComponent().getId() != null",
                "nodeType": "InfixExpression",
                "astNodeNumber": 7,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "null"
        },
        {
            "nodeContext": "null",
            "nodeType": "NullLiteral",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 596,
                "startColumnNumber": 65,
                "endLineNumber": 596,
                "endColumnNumber": 69
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 57,
                        "startLineNumber": 596,
                        "startColumnNumber": 12,
                        "endLineNumber": 596,
                        "endColumnNumber": 69
                    },
                    "nodeContext": "processorEntity.getComponent().getParentGroupId() != null",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 127,
                        "startLineNumber": 596,
                        "startColumnNumber": 12,
                        "endLineNumber": 596,
                        "endColumnNumber": 139
                    },
                    "nodeContext": "processorEntity.getComponent().getParentGroupId() != null && !groupId.equals(processorEntity.getComponent().getParentGroupId())",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 17,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 379,
                        "startLineNumber": 596,
                        "startColumnNumber": 8,
                        "endLineNumber": 599,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (processorEntity.getComponent().getParentGroupId() != null && !groupId.equals(processorEntity.getComponent().getParentGroupId())) {\n  throw new IllegalArgumentException(String.format(\"If specified, the parent process group id %s must be the same as specified in the URI %s\",processorEntity.getComponent().getParentGroupId(),groupId));\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 33,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2639,
                        "startLineNumber": 578,
                        "startColumnNumber": 53,
                        "endLineNumber": 630,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (processorEntity == null || processorEntity.getComponent() == null) {\n    throw new IllegalArgumentException(\"Processor details must be specified.\");\n  }\n  if (processorEntity.getRevision() == null || (processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)) {\n    throw new IllegalArgumentException(\"A revision of 0 must be specified when creating a new Processor.\");\n  }\n  if (processorEntity.getComponent().getId() != null) {\n    throw new IllegalArgumentException(\"Processor ID cannot be specified.\");\n  }\n  if (StringUtils.isBlank(processorEntity.getComponent().getType())) {\n    throw new IllegalArgumentException(\"The type of processor to create must be specified.\");\n  }\n  if (processorEntity.getComponent().getParentGroupId() != null && !groupId.equals(processorEntity.getComponent().getParentGroupId())) {\n    throw new IllegalArgumentException(String.format(\"If specified, the parent process group id %s must be the same as specified in the URI %s\",processorEntity.getComponent().getParentGroupId(),groupId));\n  }\n  processorEntity.getComponent().setParentGroupId(groupId);\n  if (isReplicateRequest()) {\n    return replicate(HttpMethod.POST,processorEntity);\n  }\n  final boolean validationPhase=isValidationPhase(httpServletRequest);\n  if (validationPhase || !isTwoPhaseRequest(httpServletRequest)) {\n    serviceFacade.authorizeAccess(lookup -> {\n      final Authorizable processGroup=lookup.getProcessGroup(groupId).getAuthorizable();\n      processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n    }\n);\n  }\n  if (validationPhase) {\n    return generateContinueResponse().build();\n  }\n  processorEntity.getComponent().setId(generateUuid());\n  final Revision revision=getRevision(processorEntity,processorEntity.getComponent().getId());\n  final ProcessorEntity entity=serviceFacade.createProcessor(revision,groupId,processorEntity.getComponent());\n  processorResource.populateRemainingProcessorEntityContent(entity);\n  String uri=entity.getUri();\n  return clusterContext(generateCreatedResponse(URI.create(uri),entity)).build();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 242,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 4427,
                        "startLineNumber": 540,
                        "startColumnNumber": 4,
                        "endLineNumber": 630,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Creates a new processor.\n * @param httpServletRequest request\n * @param groupId            The group id\n * @param processorEntity    A processorEntity.\n * @return A processorEntity.\n */\n@POST @Consumes(MediaType.APPLICATION_JSON) @Produces(MediaType.APPLICATION_JSON) @Path(\"{id}/processors\") @ApiOperation(value=\"Creates a new processor\",response=ProcessorEntity.class,authorizations={@Authorization(value=\"Write - /process-groups/{uuid}\",type=\"\")}) @ApiResponses(value={@ApiResponse(code=400,message=\"NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.\"),@ApiResponse(code=401,message=\"Client could not be authenticated.\"),@ApiResponse(code=403,message=\"Client is not authorized to make this request.\"),@ApiResponse(code=404,message=\"The specified resource could not be found.\"),@ApiResponse(code=409,message=\"The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.\")}) public Response createProcessor(@Context final HttpServletRequest httpServletRequest,@ApiParam(value=\"The process group id.\",required=true) @PathParam(\"id\") final String groupId,@ApiParam(value=\"The processor configuration details.\",required=true) final ProcessorEntity processorEntity){\n  if (processorEntity == null || processorEntity.getComponent() == null) {\n    throw new IllegalArgumentException(\"Processor details must be specified.\");\n  }\n  if (processorEntity.getRevision() == null || (processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)) {\n    throw new IllegalArgumentException(\"A revision of 0 must be specified when creating a new Processor.\");\n  }\n  if (processorEntity.getComponent().getId() != null) {\n    throw new IllegalArgumentException(\"Processor ID cannot be specified.\");\n  }\n  if (StringUtils.isBlank(processorEntity.getComponent().getType())) {\n    throw new IllegalArgumentException(\"The type of processor to create must be specified.\");\n  }\n  if (processorEntity.getComponent().getParentGroupId() != null && !groupId.equals(processorEntity.getComponent().getParentGroupId())) {\n    throw new IllegalArgumentException(String.format(\"If specified, the parent process group id %s must be the same as specified in the URI %s\",processorEntity.getComponent().getParentGroupId(),groupId));\n  }\n  processorEntity.getComponent().setParentGroupId(groupId);\n  if (isReplicateRequest()) {\n    return replicate(HttpMethod.POST,processorEntity);\n  }\n  final boolean validationPhase=isValidationPhase(httpServletRequest);\n  if (validationPhase || !isTwoPhaseRequest(httpServletRequest)) {\n    serviceFacade.authorizeAccess(lookup -> {\n      final Authorizable processGroup=lookup.getProcessGroup(groupId).getAuthorizable();\n      processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n    }\n);\n  }\n  if (validationPhase) {\n    return generateContinueResponse().build();\n  }\n  processorEntity.getComponent().setId(generateUuid());\n  final Revision revision=getRevision(processorEntity,processorEntity.getComponent().getId());\n  final ProcessorEntity entity=serviceFacade.createProcessor(revision,groupId,processorEntity.getComponent());\n  processorResource.populateRemainingProcessorEntityContent(entity);\n  String uri=entity.getUri();\n  return clusterContext(generateCreatedResponse(URI.create(uri),entity)).build();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 365,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 127,
                    "startLineNumber": 596,
                    "startColumnNumber": 12,
                    "endLineNumber": 596,
                    "endColumnNumber": 139
                },
                "nodeContext": "processorEntity.getComponent().getParentGroupId() != null && !groupId.equals(processorEntity.getComponent().getParentGroupId())",
                "nodeType": "InfixExpression",
                "astNodeNumber": 17,
                "astHeight": 6
            },
            "tokenLength": 1,
            "type": "null"
        }
    ],
    "positionList": [
        {
            "charLength": 4,
            "startLineNumber": 580,
            "startColumnNumber": 31,
            "endLineNumber": 580,
            "endColumnNumber": 35
        },
        {
            "charLength": 4,
            "startLineNumber": 580,
            "startColumnNumber": 73,
            "endLineNumber": 580,
            "endColumnNumber": 77
        },
        {
            "charLength": 4,
            "startLineNumber": 584,
            "startColumnNumber": 45,
            "endLineNumber": 584,
            "endColumnNumber": 49
        },
        {
            "charLength": 4,
            "startLineNumber": 584,
            "startColumnNumber": 100,
            "endLineNumber": 584,
            "endColumnNumber": 104
        },
        {
            "charLength": 4,
            "startLineNumber": 588,
            "startColumnNumber": 54,
            "endLineNumber": 588,
            "endColumnNumber": 58
        },
        {
            "charLength": 4,
            "startLineNumber": 596,
            "startColumnNumber": 65,
            "endLineNumber": 596,
            "endColumnNumber": 69
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 1
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 1
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 3,
            "layout": 1
        },
        {
            "firstKey": 2,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 3,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 1,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 3,
            "secondKey": 4,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 5,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 0,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 5,
            "layout": 2
        },
        {
            "firstKey": 5,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 5,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 5,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 5,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 5,
            "secondKey": 4,
            "layout": 3
        }
    ]
}