{
    "id": 1977,
    "expression": "new TreeBasedPrincipal(principalName,userTree,getUserManager().getNamePathMapper())",
    "projectName": "jackrabbit-oak",
    "commitID": "d9a76f88e0bbdd65c8b0fb95b63da63845831fb2",
    "filePath": "oak-core/src/main/java/org/apache/jackrabbit/oak/security/user/UserImpl.java",
    "occurrences": 1,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "new TreeBasedPrincipal(principalName,userTree,getUserManager().getNamePathMapper())",
            "nodeType": "ClassInstanceCreation",
            "nodePosition": {
                "charLength": 85,
                "startLineNumber": 70,
                "startColumnNumber": 19,
                "endLineNumber": 70,
                "endColumnNumber": 104
            },
            "astNodeNumber": 9,
            "astHeight": 4,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 93,
                        "startLineNumber": 70,
                        "startColumnNumber": 12,
                        "endLineNumber": 70,
                        "endColumnNumber": 105
                    },
                    "nodeContext": "return new TreeBasedPrincipal(principalName,userTree,getUserManager().getNamePathMapper());\n",
                    "nodeType": "ReturnStatement",
                    "astNodeNumber": 10,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 117,
                        "startLineNumber": 69,
                        "startColumnNumber": 15,
                        "endLineNumber": 71,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  return new TreeBasedPrincipal(principalName,userTree,getUserManager().getNamePathMapper());\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 11,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 255,
                        "startLineNumber": 67,
                        "startColumnNumber": 8,
                        "endLineNumber": 71,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (isAdmin()) {\n  return new AdminPrincipalImpl(principalName,userTree,getUserManager().getNamePathMapper());\n}\n else {\n  return new TreeBasedPrincipal(principalName,userTree,getUserManager().getNamePathMapper());\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 25,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 357,
                        "startLineNumber": 64,
                        "startColumnNumber": 63,
                        "endLineNumber": 72,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  Tree userTree=getTree();\n  String principalName=getPrincipalName();\n  if (isAdmin()) {\n    return new AdminPrincipalImpl(principalName,userTree,getUserManager().getNamePathMapper());\n  }\n else {\n    return new TreeBasedPrincipal(principalName,userTree,getUserManager().getNamePathMapper());\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 40,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 430,
                        "startLineNumber": 63,
                        "startColumnNumber": 4,
                        "endLineNumber": 72,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override public Principal getPrincipal() throws RepositoryException {\n  Tree userTree=getTree();\n  String principalName=getPrincipalName();\n  if (isAdmin()) {\n    return new AdminPrincipalImpl(principalName,userTree,getUserManager().getNamePathMapper());\n  }\n else {\n    return new TreeBasedPrincipal(principalName,userTree,getUserManager().getNamePathMapper());\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 49,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 93,
                    "startLineNumber": 70,
                    "startColumnNumber": 12,
                    "endLineNumber": 70,
                    "endColumnNumber": 105
                },
                "nodeContext": "return new TreeBasedPrincipal(principalName,userTree,getUserManager().getNamePathMapper());\n",
                "nodeType": "ReturnStatement",
                "astNodeNumber": 10,
                "astHeight": 5
            },
            "tokenLength": 5,
            "type": "org.apache.jackrabbit.oak.security.user.TreeBasedPrincipal"
        }
    ],
    "positionList": [
        {
            "charLength": 85,
            "startLineNumber": 70,
            "startColumnNumber": 19,
            "endLineNumber": 70,
            "endColumnNumber": 104
        }
    ],
    "layoutRelationDataList": []
}