{
    "id": 411,
    "expression": "matchTraversal",
    "projectName": "tinkerpop",
    "commitID": "724f619aa74892a29c875e28f8b3936ec54619d9",
    "filePath": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/MatchStep.java",
    "occurrences": 1,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "matchTraversal",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 14,
                "startLineNumber": 368,
                "startColumnNumber": 40,
                "endLineNumber": 368,
                "endColumnNumber": 54
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 29,
                        "startLineNumber": 368,
                        "startColumnNumber": 40,
                        "endLineNumber": 368,
                        "endColumnNumber": 69
                    },
                    "nodeContext": "matchTraversal.getStartStep()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 37,
                        "startLineNumber": 368,
                        "startColumnNumber": 40,
                        "endLineNumber": 368,
                        "endColumnNumber": 77
                    },
                    "nodeContext": "matchTraversal.getStartStep().getId()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 58,
                        "startLineNumber": 368,
                        "startColumnNumber": 20,
                        "endLineNumber": 368,
                        "endColumnNumber": 78
                    },
                    "nodeContext": "traverser.setStepId(matchTraversal.getStartStep().getId())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 59,
                        "startLineNumber": 368,
                        "startColumnNumber": 20,
                        "endLineNumber": 368,
                        "endColumnNumber": 79
                    },
                    "nodeContext": "traverser.setStepId(matchTraversal.getStartStep().getId());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 9,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 377,
                        "startLineNumber": 366,
                        "startColumnNumber": 73,
                        "endLineNumber": 370,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  final Traversal.Admin<Object,Object> matchTraversal=this.getMatchAlgorithm().apply(traverser);\n  traverser.setStepId(matchTraversal.getStartStep().getId());\n  return IteratorUtils.of(traverser);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 34,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 925,
                        "startLineNumber": 366,
                        "startColumnNumber": 16,
                        "endLineNumber": 378,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (this.conjunction == ConjunctionStep.Conjunction.AND) {\n  final Traversal.Admin<Object,Object> matchTraversal=this.getMatchAlgorithm().apply(traverser);\n  traverser.setStepId(matchTraversal.getStartStep().getId());\n  return IteratorUtils.of(traverser);\n}\n else {\n  final List<Traverser<Map<String,E>>> traversers=new ArrayList<>(this.matchTraversals.size());\n  this.matchTraversals.forEach(matchTraversal -> {\n    final Traverser.Admin split=traverser.split();\n    split.setStepId(matchTraversal.getStartStep().getId());\n    traversers.add(split);\n  }\n);\n  return traversers.iterator();\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 110,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 1204,
                        "startLineNumber": 361,
                        "startColumnNumber": 46,
                        "endLineNumber": 379,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  if (hasMatched(this.conjunction,traverser)) {\n    traverser.setStepId(this.getNextStep().getId());\n    return IteratorUtils.of(traverser.split(this.getBindings(traverser),this));\n  }\n  if (this.conjunction == ConjunctionStep.Conjunction.AND) {\n    final Traversal.Admin<Object,Object> matchTraversal=this.getMatchAlgorithm().apply(traverser);\n    traverser.setStepId(matchTraversal.getStartStep().getId());\n    return IteratorUtils.of(traverser);\n  }\n else {\n    final List<Traverser<Map<String,E>>> traversers=new ArrayList<>(this.matchTraversals.size());\n    this.matchTraversals.forEach(matchTraversal -> {\n      final Traverser.Admin split=traverser.split();\n      split.setStepId(matchTraversal.getStartStep().getId());\n      traversers.add(split);\n    }\n);\n    return traversers.iterator();\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 140,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1238,
                        "startLineNumber": 361,
                        "startColumnNumber": 12,
                        "endLineNumber": 379,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (!this.isDuplicate(traverser)) {\n  if (hasMatched(this.conjunction,traverser)) {\n    traverser.setStepId(this.getNextStep().getId());\n    return IteratorUtils.of(traverser.split(this.getBindings(traverser),this));\n  }\n  if (this.conjunction == ConjunctionStep.Conjunction.AND) {\n    final Traversal.Admin<Object,Object> matchTraversal=this.getMatchAlgorithm().apply(traverser);\n    traverser.setStepId(matchTraversal.getStartStep().getId());\n    return IteratorUtils.of(traverser);\n  }\n else {\n    final List<Traverser<Map<String,E>>> traversers=new ArrayList<>(this.matchTraversals.size());\n    this.matchTraversals.forEach(matchTraversal -> {\n      final Traverser.Admin split=traverser.split();\n      split.setStepId(matchTraversal.getStartStep().getId());\n      traversers.add(split);\n    }\n);\n    return traversers.iterator();\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 146,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
                    "nodePosition": {
                        "charLength": 1504,
                        "startLineNumber": 356,
                        "startColumnNumber": 21,
                        "endLineNumber": 380,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  final Traverser.Admin traverser=this.starts.next();\n  if (!traverser.path().hasLabel(this.getId()))   traverser.path().addLabel(this.getId());\n  if (!this.isDuplicate(traverser)) {\n    if (hasMatched(this.conjunction,traverser)) {\n      traverser.setStepId(this.getNextStep().getId());\n      return IteratorUtils.of(traverser.split(this.getBindings(traverser),this));\n    }\n    if (this.conjunction == ConjunctionStep.Conjunction.AND) {\n      final Traversal.Admin<Object,Object> matchTraversal=this.getMatchAlgorithm().apply(traverser);\n      traverser.setStepId(matchTraversal.getStartStep().getId());\n      return IteratorUtils.of(traverser);\n    }\n else {\n      final List<Traverser<Map<String,E>>> traversers=new ArrayList<>(this.matchTraversals.size());\n      this.matchTraversals.forEach(matchTraversal -> {\n        final Traverser.Admin split=traverser.split();\n        split.setStepId(matchTraversal.getStartStep().getId());\n        traversers.add(split);\n      }\n);\n      return traversers.iterator();\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 179,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1517,
                        "startLineNumber": 356,
                        "startColumnNumber": 8,
                        "endLineNumber": 380,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "while (true) {\n  final Traverser.Admin traverser=this.starts.next();\n  if (!traverser.path().hasLabel(this.getId()))   traverser.path().addLabel(this.getId());\n  if (!this.isDuplicate(traverser)) {\n    if (hasMatched(this.conjunction,traverser)) {\n      traverser.setStepId(this.getNextStep().getId());\n      return IteratorUtils.of(traverser.split(this.getBindings(traverser),this));\n    }\n    if (this.conjunction == ConjunctionStep.Conjunction.AND) {\n      final Traversal.Admin<Object,Object> matchTraversal=this.getMatchAlgorithm().apply(traverser);\n      traverser.setStepId(matchTraversal.getStartStep().getId());\n      return IteratorUtils.of(traverser);\n    }\n else {\n      final List<Traverser<Map<String,E>>> traversers=new ArrayList<>(this.matchTraversals.size());\n      this.matchTraversals.forEach(matchTraversal -> {\n        final Traverser.Admin split=traverser.split();\n        split.setStepId(matchTraversal.getStartStep().getId());\n        traversers.add(split);\n      }\n);\n      return traversers.iterator();\n    }\n  }\n}\n",
                    "nodeType": "WhileStatement",
                    "astNodeNumber": 181,
                    "astHeight": 15
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1533,
                        "startLineNumber": 355,
                        "startColumnNumber": 100,
                        "endLineNumber": 381,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  while (true) {\n    final Traverser.Admin traverser=this.starts.next();\n    if (!traverser.path().hasLabel(this.getId()))     traverser.path().addLabel(this.getId());\n    if (!this.isDuplicate(traverser)) {\n      if (hasMatched(this.conjunction,traverser)) {\n        traverser.setStepId(this.getNextStep().getId());\n        return IteratorUtils.of(traverser.split(this.getBindings(traverser),this));\n      }\n      if (this.conjunction == ConjunctionStep.Conjunction.AND) {\n        final Traversal.Admin<Object,Object> matchTraversal=this.getMatchAlgorithm().apply(traverser);\n        traverser.setStepId(matchTraversal.getStartStep().getId());\n        return IteratorUtils.of(traverser);\n      }\n else {\n        final List<Traverser<Map<String,E>>> traversers=new ArrayList<>(this.matchTraversals.size());\n        this.matchTraversals.forEach(matchTraversal -> {\n          final Traverser.Admin split=traverser.split();\n          split.setStepId(matchTraversal.getStartStep().getId());\n          traversers.add(split);\n        }\n);\n        return traversers.iterator();\n      }\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 182,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1643,
                        "startLineNumber": 354,
                        "startColumnNumber": 4,
                        "endLineNumber": 381,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override protected Iterator<Traverser<Map<String,E>>> computerAlgorithm() throws NoSuchElementException {\n  while (true) {\n    final Traverser.Admin traverser=this.starts.next();\n    if (!traverser.path().hasLabel(this.getId()))     traverser.path().addLabel(this.getId());\n    if (!this.isDuplicate(traverser)) {\n      if (hasMatched(this.conjunction,traverser)) {\n        traverser.setStepId(this.getNextStep().getId());\n        return IteratorUtils.of(traverser.split(this.getBindings(traverser),this));\n      }\n      if (this.conjunction == ConjunctionStep.Conjunction.AND) {\n        final Traversal.Admin<Object,Object> matchTraversal=this.getMatchAlgorithm().apply(traverser);\n        traverser.setStepId(matchTraversal.getStartStep().getId());\n        return IteratorUtils.of(traverser);\n      }\n else {\n        final List<Traverser<Map<String,E>>> traversers=new ArrayList<>(this.matchTraversals.size());\n        this.matchTraversals.forEach(matchTraversal -> {\n          final Traverser.Admin split=traverser.split();\n          split.setStepId(matchTraversal.getStartStep().getId());\n          traversers.add(split);\n        }\n);\n        return traversers.iterator();\n      }\n    }\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 202,
                    "astHeight": 17
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 59,
                    "startLineNumber": 368,
                    "startColumnNumber": 20,
                    "endLineNumber": 368,
                    "endColumnNumber": 79
                },
                "nodeContext": "traverser.setStepId(matchTraversal.getStartStep().getId());\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 9,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "org.apache.tinkerpop.gremlin.process.traversal.Traversal.Admin<java.lang.Object,java.lang.Object>"
        }
    ],
    "positionList": [
        {
            "charLength": 14,
            "startLineNumber": 368,
            "startColumnNumber": 40,
            "endLineNumber": 368,
            "endColumnNumber": 54
        }
    ],
    "layoutRelationDataList": []
}