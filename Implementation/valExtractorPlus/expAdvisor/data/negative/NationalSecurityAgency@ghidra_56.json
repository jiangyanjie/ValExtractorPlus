{
    "id": 56,
    "expression": "bkpt.getString(\"what\")",
    "projectName": "NationalSecurityAgency@ghidra",
    "commitID": "5e324104a5f95f78f8cc945d552c1d5f56b862e6",
    "filePath": "Ghidra/Debug/Debugger-agent-gdb/src/main/java/agent/gdb/manager/breakpoint/GdbBreakpointInfo.java",
    "occurrences": 1,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "bkpt.getString(\"what\")",
            "nodeType": "MethodInvocation",
            "nodePosition": {
                "charLength": 22,
                "startLineNumber": 107,
                "startColumnNumber": 10,
                "endLineNumber": 107,
                "endColumnNumber": 32
            },
            "astNodeNumber": 4,
            "astHeight": 2,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 29,
                        "startLineNumber": 107,
                        "startColumnNumber": 3,
                        "endLineNumber": 107,
                        "endColumnNumber": 32
                    },
                    "nodeContext": "what=bkpt.getString(\"what\")",
                    "nodeType": "Assignment",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 30,
                        "startLineNumber": 107,
                        "startColumnNumber": 3,
                        "endLineNumber": 107,
                        "endColumnNumber": 33
                    },
                    "nodeContext": "what=bkpt.getString(\"what\");\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 41,
                        "startLineNumber": 106,
                        "startColumnNumber": 20,
                        "endLineNumber": 108,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  what=bkpt.getString(\"what\");\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 8,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 59,
                        "startLineNumber": 106,
                        "startColumnNumber": 2,
                        "endLineNumber": 108,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "if (what == null) {\n  what=bkpt.getString(\"what\");\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 12,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1352,
                        "startLineNumber": 97,
                        "startColumnNumber": 56,
                        "endLineNumber": 130,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  long number=Long.parseLong(bkpt.getString(\"number\"));\n  String typeName=bkpt.getString(\"type\");\n  GdbBreakpointType type=GdbBreakpointType.fromStr(typeName);\n  GdbBreakpointDisp disp=GdbBreakpointDisp.fromStr(bkpt.getString(\"disp\"));\n  boolean enabled=\"y\".equals(bkpt.getString(\"enabled\"));\n  String addr=bkpt.getString(\"addr\");\n  String what=bkpt.getString(\"at\");\n  if (what == null) {\n    what=bkpt.getString(\"what\");\n  }\n  String catchType=bkpt.getString(\"catch-type\");\n  String origLoc=bkpt.getString(\"original-location\");\n  String pending=bkpt.getString(\"pending\");\n  int times=Integer.parseInt(bkpt.getString(\"times\"));\n  List<GdbBreakpointLocation> locations=new ArrayList<>();\n  if (type == GdbBreakpointType.CATCHPOINT) {\n  }\n else   if (\"<MULTIPLE>\".equals(addr)) {\n    allLocs.stream().filter(l -> l.getNumber() == number).forEachOrdered(locations::add);\n  }\n else {\n    List<Integer> iids=parseIids(bkpt);\n    if (iids == null) {\n      iids=curIid == null ? List.of() : List.of(curIid);\n    }\n    locations.add(new GdbBreakpointLocation(number,1,true,addr,iids));\n  }\n  return new GdbBreakpointInfo(number,type,typeName,disp,addr,what,catchType,origLoc,pending,enabled,times,locations);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 224,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1755,
                        "startLineNumber": 88,
                        "startColumnNumber": 1,
                        "endLineNumber": 130,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "/** \n * Parse the usual  {@code bkpt} fields\n * @param bkpt the breakpoint field list\n * @param allLocs all (sub)locations given in the info or table body\n * @param curIid in case of missing {@code thread-ids} field, the current inferior id\n * @return the info\n */\npublic static GdbBreakpointInfo parseBkpt(GdbMiFieldList bkpt,List<GdbBreakpointLocation> allLocs,Integer curIid){\n  long number=Long.parseLong(bkpt.getString(\"number\"));\n  String typeName=bkpt.getString(\"type\");\n  GdbBreakpointType type=GdbBreakpointType.fromStr(typeName);\n  GdbBreakpointDisp disp=GdbBreakpointDisp.fromStr(bkpt.getString(\"disp\"));\n  boolean enabled=\"y\".equals(bkpt.getString(\"enabled\"));\n  String addr=bkpt.getString(\"addr\");\n  String what=bkpt.getString(\"at\");\n  if (what == null) {\n    what=bkpt.getString(\"what\");\n  }\n  String catchType=bkpt.getString(\"catch-type\");\n  String origLoc=bkpt.getString(\"original-location\");\n  String pending=bkpt.getString(\"pending\");\n  int times=Integer.parseInt(bkpt.getString(\"times\"));\n  List<GdbBreakpointLocation> locations=new ArrayList<>();\n  if (type == GdbBreakpointType.CATCHPOINT) {\n  }\n else   if (\"<MULTIPLE>\".equals(addr)) {\n    allLocs.stream().filter(l -> l.getNumber() == number).forEachOrdered(locations::add);\n  }\n else {\n    List<Integer> iids=parseIids(bkpt);\n    if (iids == null) {\n      iids=curIid == null ? List.of() : List.of(curIid);\n    }\n    locations.add(new GdbBreakpointLocation(number,1,true,addr,iids));\n  }\n  return new GdbBreakpointInfo(number,type,typeName,disp,addr,what,catchType,origLoc,pending,enabled,times,locations);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 246,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 30,
                    "startLineNumber": 107,
                    "startColumnNumber": 3,
                    "endLineNumber": 107,
                    "endColumnNumber": 33
                },
                "nodeContext": "what=bkpt.getString(\"what\");\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 7,
                "astHeight": 4
            },
            "tokenLength": 3,
            "type": "java.lang.String"
        }
    ],
    "positionList": [
        {
            "charLength": 22,
            "startLineNumber": 107,
            "startColumnNumber": 10,
            "endLineNumber": 107,
            "endColumnNumber": 32
        }
    ],
    "layoutRelationDataList": []
}