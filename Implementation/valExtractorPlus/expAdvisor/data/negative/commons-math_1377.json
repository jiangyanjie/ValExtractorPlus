{
    "id": 1377,
    "expression": "currentPoint",
    "projectName": "commons-math",
    "commitID": "e5002ce3f6a625bfd52f63fa38279c09178e8354",
    "filePath": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/GrahamScan.java",
    "occurrences": 6,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "currentPoint",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 12,
                "startLineNumber": 104,
                "startColumnNumber": 31,
                "endLineNumber": 104,
                "endColumnNumber": 43
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 20,
                        "startLineNumber": 104,
                        "startColumnNumber": 31,
                        "endLineNumber": 104,
                        "endColumnNumber": 51
                    },
                    "nodeContext": "currentPoint != null",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
                    "nodePosition": {
                        "charLength": 36,
                        "startLineNumber": 104,
                        "startColumnNumber": 15,
                        "endLineNumber": 104,
                        "endColumnNumber": 51
                    },
                    "nodeContext": "it.hasNext() || currentPoint != null",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1287,
                        "startLineNumber": 104,
                        "startColumnNumber": 8,
                        "endLineNumber": 134,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "while (it.hasNext() || currentPoint != null) {\n  final int size=hullVertices.size();\n  if (size == 1) {\n    hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n    currentPoint=null;\n    continue;\n  }\n  final Vector2D p1=hullVertices.get(size - 2);\n  final Vector2D p2=hullVertices.get(size - 1);\n  final Line line=new Line(p1,p2,tolerance);\n  if (currentPoint == null) {\n    currentPoint=it.next().point;\n  }\n  final double offset=line.getOffset(currentPoint);\n  if (offset < 0.0) {\n    hullVertices.add(currentPoint);\n    currentPoint=null;\n  }\n else {\n    hullVertices.remove(size - 1);\n  }\n}\n",
                    "nodeType": "WhileStatement",
                    "astNodeNumber": 121,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2520,
                        "startLineNumber": 72,
                        "startColumnNumber": 97,
                        "endLineNumber": 137,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  MathUtils.checkNotNull(points);\n  if (points.size() < 3) {\n    return new ConvexHull2D(points,tolerance);\n  }\n  final Vector2D referencePoint=getReferencePoint(points);\n  final List<Vertex> pointsSortedByAngle=new ArrayList<Vertex>();\n  for (  final Vector2D p : points) {\n    pointsSortedByAngle.add(new Vertex(p,getAngleBetweenPoints(p,referencePoint)));\n  }\n  Collections.sort(pointsSortedByAngle,new Comparator<Vertex>(){\n    public int compare(    final Vertex o1,    final Vertex o2){\n      return (int)FastMath.signum(o2.angle - o1.angle);\n    }\n  }\n);\n  final List<Vector2D> hullVertices=new ArrayList<Vector2D>(points.size());\n  final Iterator<Vertex> it=pointsSortedByAngle.iterator();\n  hullVertices.add(it.next().point);\n  hullVertices.add(it.next().point);\n  Vector2D currentPoint=null;\n  while (it.hasNext() || currentPoint != null) {\n    final int size=hullVertices.size();\n    if (size == 1) {\n      hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n      currentPoint=null;\n      continue;\n    }\n    final Vector2D p1=hullVertices.get(size - 2);\n    final Vector2D p2=hullVertices.get(size - 1);\n    final Line line=new Line(p1,p2,tolerance);\n    if (currentPoint == null) {\n      currentPoint=it.next().point;\n    }\n    final double offset=line.getOffset(currentPoint);\n    if (offset < 0.0) {\n      hullVertices.add(currentPoint);\n      currentPoint=null;\n    }\n else {\n      hullVertices.remove(size - 1);\n    }\n  }\n  return new ConvexHull2D(hullVertices,tolerance);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 284,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2638,
                        "startLineNumber": 71,
                        "startColumnNumber": 4,
                        "endLineNumber": 137,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * {@inheritDoc} \n */\npublic ConvexHull2D generate(final Collection<Vector2D> points) throws NullArgumentException {\n  MathUtils.checkNotNull(points);\n  if (points.size() < 3) {\n    return new ConvexHull2D(points,tolerance);\n  }\n  final Vector2D referencePoint=getReferencePoint(points);\n  final List<Vertex> pointsSortedByAngle=new ArrayList<Vertex>();\n  for (  final Vector2D p : points) {\n    pointsSortedByAngle.add(new Vertex(p,getAngleBetweenPoints(p,referencePoint)));\n  }\n  Collections.sort(pointsSortedByAngle,new Comparator<Vertex>(){\n    public int compare(    final Vertex o1,    final Vertex o2){\n      return (int)FastMath.signum(o2.angle - o1.angle);\n    }\n  }\n);\n  final List<Vector2D> hullVertices=new ArrayList<Vector2D>(points.size());\n  final Iterator<Vertex> it=pointsSortedByAngle.iterator();\n  hullVertices.add(it.next().point);\n  hullVertices.add(it.next().point);\n  Vector2D currentPoint=null;\n  while (it.hasNext() || currentPoint != null) {\n    final int size=hullVertices.size();\n    if (size == 1) {\n      hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n      currentPoint=null;\n      continue;\n    }\n    final Vector2D p1=hullVertices.get(size - 2);\n    final Vector2D p2=hullVertices.get(size - 1);\n    final Line line=new Line(p1,p2,tolerance);\n    if (currentPoint == null) {\n      currentPoint=it.next().point;\n    }\n    final double offset=line.getOffset(currentPoint);\n    if (offset < 0.0) {\n      hullVertices.add(currentPoint);\n      currentPoint=null;\n    }\n else {\n      hullVertices.remove(size - 1);\n    }\n  }\n  return new ConvexHull2D(hullVertices,tolerance);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 300,
                    "astHeight": 14
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
                "nodePosition": {
                    "charLength": 36,
                    "startLineNumber": 104,
                    "startColumnNumber": 15,
                    "endLineNumber": 104,
                    "endColumnNumber": 51
                },
                "nodeContext": "it.hasNext() || currentPoint != null",
                "nodeType": "InfixExpression",
                "astNodeNumber": 7,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "org.apache.commons.math3.geometry.euclidean.twod.Vector2D"
        },
        {
            "nodeContext": "currentPoint",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 12,
                "startLineNumber": 108,
                "startColumnNumber": 33,
                "endLineNumber": 108,
                "endColumnNumber": 45
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
                    "nodePosition": {
                        "charLength": 20,
                        "startLineNumber": 108,
                        "startColumnNumber": 33,
                        "endLineNumber": 108,
                        "endColumnNumber": 53
                    },
                    "nodeContext": "currentPoint != null",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 53,
                        "startLineNumber": 108,
                        "startColumnNumber": 33,
                        "endLineNumber": 108,
                        "endColumnNumber": 86
                    },
                    "nodeContext": "currentPoint != null ? currentPoint : it.next().point",
                    "nodeType": "ConditionalExpression",
                    "astNodeNumber": 10,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 71,
                        "startLineNumber": 108,
                        "startColumnNumber": 16,
                        "endLineNumber": 108,
                        "endColumnNumber": 87
                    },
                    "nodeContext": "hullVertices.add(currentPoint != null ? currentPoint : it.next().point)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 13,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 72,
                        "startLineNumber": 108,
                        "startColumnNumber": 16,
                        "endLineNumber": 108,
                        "endColumnNumber": 88
                    },
                    "nodeContext": "hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 14,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 167,
                        "startLineNumber": 107,
                        "startColumnNumber": 27,
                        "endLineNumber": 111,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n  currentPoint=null;\n  continue;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 20,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 182,
                        "startLineNumber": 107,
                        "startColumnNumber": 12,
                        "endLineNumber": 111,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (size == 1) {\n  hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n  currentPoint=null;\n  continue;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 24,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
                    "nodePosition": {
                        "charLength": 1242,
                        "startLineNumber": 104,
                        "startColumnNumber": 53,
                        "endLineNumber": 134,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  final int size=hullVertices.size();\n  if (size == 1) {\n    hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n    currentPoint=null;\n    continue;\n  }\n  final Vector2D p1=hullVertices.get(size - 2);\n  final Vector2D p2=hullVertices.get(size - 1);\n  final Line line=new Line(p1,p2,tolerance);\n  if (currentPoint == null) {\n    currentPoint=it.next().point;\n  }\n  final double offset=line.getOffset(currentPoint);\n  if (offset < 0.0) {\n    hullVertices.add(currentPoint);\n    currentPoint=null;\n  }\n else {\n    hullVertices.remove(size - 1);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 113,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1287,
                        "startLineNumber": 104,
                        "startColumnNumber": 8,
                        "endLineNumber": 134,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "while (it.hasNext() || currentPoint != null) {\n  final int size=hullVertices.size();\n  if (size == 1) {\n    hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n    currentPoint=null;\n    continue;\n  }\n  final Vector2D p1=hullVertices.get(size - 2);\n  final Vector2D p2=hullVertices.get(size - 1);\n  final Line line=new Line(p1,p2,tolerance);\n  if (currentPoint == null) {\n    currentPoint=it.next().point;\n  }\n  final double offset=line.getOffset(currentPoint);\n  if (offset < 0.0) {\n    hullVertices.add(currentPoint);\n    currentPoint=null;\n  }\n else {\n    hullVertices.remove(size - 1);\n  }\n}\n",
                    "nodeType": "WhileStatement",
                    "astNodeNumber": 121,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2520,
                        "startLineNumber": 72,
                        "startColumnNumber": 97,
                        "endLineNumber": 137,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  MathUtils.checkNotNull(points);\n  if (points.size() < 3) {\n    return new ConvexHull2D(points,tolerance);\n  }\n  final Vector2D referencePoint=getReferencePoint(points);\n  final List<Vertex> pointsSortedByAngle=new ArrayList<Vertex>();\n  for (  final Vector2D p : points) {\n    pointsSortedByAngle.add(new Vertex(p,getAngleBetweenPoints(p,referencePoint)));\n  }\n  Collections.sort(pointsSortedByAngle,new Comparator<Vertex>(){\n    public int compare(    final Vertex o1,    final Vertex o2){\n      return (int)FastMath.signum(o2.angle - o1.angle);\n    }\n  }\n);\n  final List<Vector2D> hullVertices=new ArrayList<Vector2D>(points.size());\n  final Iterator<Vertex> it=pointsSortedByAngle.iterator();\n  hullVertices.add(it.next().point);\n  hullVertices.add(it.next().point);\n  Vector2D currentPoint=null;\n  while (it.hasNext() || currentPoint != null) {\n    final int size=hullVertices.size();\n    if (size == 1) {\n      hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n      currentPoint=null;\n      continue;\n    }\n    final Vector2D p1=hullVertices.get(size - 2);\n    final Vector2D p2=hullVertices.get(size - 1);\n    final Line line=new Line(p1,p2,tolerance);\n    if (currentPoint == null) {\n      currentPoint=it.next().point;\n    }\n    final double offset=line.getOffset(currentPoint);\n    if (offset < 0.0) {\n      hullVertices.add(currentPoint);\n      currentPoint=null;\n    }\n else {\n      hullVertices.remove(size - 1);\n    }\n  }\n  return new ConvexHull2D(hullVertices,tolerance);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 284,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2638,
                        "startLineNumber": 71,
                        "startColumnNumber": 4,
                        "endLineNumber": 137,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * {@inheritDoc} \n */\npublic ConvexHull2D generate(final Collection<Vector2D> points) throws NullArgumentException {\n  MathUtils.checkNotNull(points);\n  if (points.size() < 3) {\n    return new ConvexHull2D(points,tolerance);\n  }\n  final Vector2D referencePoint=getReferencePoint(points);\n  final List<Vertex> pointsSortedByAngle=new ArrayList<Vertex>();\n  for (  final Vector2D p : points) {\n    pointsSortedByAngle.add(new Vertex(p,getAngleBetweenPoints(p,referencePoint)));\n  }\n  Collections.sort(pointsSortedByAngle,new Comparator<Vertex>(){\n    public int compare(    final Vertex o1,    final Vertex o2){\n      return (int)FastMath.signum(o2.angle - o1.angle);\n    }\n  }\n);\n  final List<Vector2D> hullVertices=new ArrayList<Vector2D>(points.size());\n  final Iterator<Vertex> it=pointsSortedByAngle.iterator();\n  hullVertices.add(it.next().point);\n  hullVertices.add(it.next().point);\n  Vector2D currentPoint=null;\n  while (it.hasNext() || currentPoint != null) {\n    final int size=hullVertices.size();\n    if (size == 1) {\n      hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n      currentPoint=null;\n      continue;\n    }\n    final Vector2D p1=hullVertices.get(size - 2);\n    final Vector2D p2=hullVertices.get(size - 1);\n    final Line line=new Line(p1,p2,tolerance);\n    if (currentPoint == null) {\n      currentPoint=it.next().point;\n    }\n    final double offset=line.getOffset(currentPoint);\n    if (offset < 0.0) {\n      hullVertices.add(currentPoint);\n      currentPoint=null;\n    }\n else {\n      hullVertices.remove(size - 1);\n    }\n  }\n  return new ConvexHull2D(hullVertices,tolerance);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 300,
                    "astHeight": 14
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 72,
                    "startLineNumber": 108,
                    "startColumnNumber": 16,
                    "endLineNumber": 108,
                    "endColumnNumber": 88
                },
                "nodeContext": "hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 14,
                "astHeight": 6
            },
            "tokenLength": 1,
            "type": "org.apache.commons.math3.geometry.euclidean.twod.Vector2D"
        },
        {
            "nodeContext": "currentPoint",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 12,
                "startLineNumber": 108,
                "startColumnNumber": 56,
                "endLineNumber": 108,
                "endColumnNumber": 68
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 53,
                        "startLineNumber": 108,
                        "startColumnNumber": 33,
                        "endLineNumber": 108,
                        "endColumnNumber": 86
                    },
                    "nodeContext": "currentPoint != null ? currentPoint : it.next().point",
                    "nodeType": "ConditionalExpression",
                    "astNodeNumber": 10,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 71,
                        "startLineNumber": 108,
                        "startColumnNumber": 16,
                        "endLineNumber": 108,
                        "endColumnNumber": 87
                    },
                    "nodeContext": "hullVertices.add(currentPoint != null ? currentPoint : it.next().point)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 13,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 72,
                        "startLineNumber": 108,
                        "startColumnNumber": 16,
                        "endLineNumber": 108,
                        "endColumnNumber": 88
                    },
                    "nodeContext": "hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 14,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 167,
                        "startLineNumber": 107,
                        "startColumnNumber": 27,
                        "endLineNumber": 111,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n  currentPoint=null;\n  continue;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 20,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 182,
                        "startLineNumber": 107,
                        "startColumnNumber": 12,
                        "endLineNumber": 111,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (size == 1) {\n  hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n  currentPoint=null;\n  continue;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 24,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
                    "nodePosition": {
                        "charLength": 1242,
                        "startLineNumber": 104,
                        "startColumnNumber": 53,
                        "endLineNumber": 134,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  final int size=hullVertices.size();\n  if (size == 1) {\n    hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n    currentPoint=null;\n    continue;\n  }\n  final Vector2D p1=hullVertices.get(size - 2);\n  final Vector2D p2=hullVertices.get(size - 1);\n  final Line line=new Line(p1,p2,tolerance);\n  if (currentPoint == null) {\n    currentPoint=it.next().point;\n  }\n  final double offset=line.getOffset(currentPoint);\n  if (offset < 0.0) {\n    hullVertices.add(currentPoint);\n    currentPoint=null;\n  }\n else {\n    hullVertices.remove(size - 1);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 113,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1287,
                        "startLineNumber": 104,
                        "startColumnNumber": 8,
                        "endLineNumber": 134,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "while (it.hasNext() || currentPoint != null) {\n  final int size=hullVertices.size();\n  if (size == 1) {\n    hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n    currentPoint=null;\n    continue;\n  }\n  final Vector2D p1=hullVertices.get(size - 2);\n  final Vector2D p2=hullVertices.get(size - 1);\n  final Line line=new Line(p1,p2,tolerance);\n  if (currentPoint == null) {\n    currentPoint=it.next().point;\n  }\n  final double offset=line.getOffset(currentPoint);\n  if (offset < 0.0) {\n    hullVertices.add(currentPoint);\n    currentPoint=null;\n  }\n else {\n    hullVertices.remove(size - 1);\n  }\n}\n",
                    "nodeType": "WhileStatement",
                    "astNodeNumber": 121,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2520,
                        "startLineNumber": 72,
                        "startColumnNumber": 97,
                        "endLineNumber": 137,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  MathUtils.checkNotNull(points);\n  if (points.size() < 3) {\n    return new ConvexHull2D(points,tolerance);\n  }\n  final Vector2D referencePoint=getReferencePoint(points);\n  final List<Vertex> pointsSortedByAngle=new ArrayList<Vertex>();\n  for (  final Vector2D p : points) {\n    pointsSortedByAngle.add(new Vertex(p,getAngleBetweenPoints(p,referencePoint)));\n  }\n  Collections.sort(pointsSortedByAngle,new Comparator<Vertex>(){\n    public int compare(    final Vertex o1,    final Vertex o2){\n      return (int)FastMath.signum(o2.angle - o1.angle);\n    }\n  }\n);\n  final List<Vector2D> hullVertices=new ArrayList<Vector2D>(points.size());\n  final Iterator<Vertex> it=pointsSortedByAngle.iterator();\n  hullVertices.add(it.next().point);\n  hullVertices.add(it.next().point);\n  Vector2D currentPoint=null;\n  while (it.hasNext() || currentPoint != null) {\n    final int size=hullVertices.size();\n    if (size == 1) {\n      hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n      currentPoint=null;\n      continue;\n    }\n    final Vector2D p1=hullVertices.get(size - 2);\n    final Vector2D p2=hullVertices.get(size - 1);\n    final Line line=new Line(p1,p2,tolerance);\n    if (currentPoint == null) {\n      currentPoint=it.next().point;\n    }\n    final double offset=line.getOffset(currentPoint);\n    if (offset < 0.0) {\n      hullVertices.add(currentPoint);\n      currentPoint=null;\n    }\n else {\n      hullVertices.remove(size - 1);\n    }\n  }\n  return new ConvexHull2D(hullVertices,tolerance);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 284,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2638,
                        "startLineNumber": 71,
                        "startColumnNumber": 4,
                        "endLineNumber": 137,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * {@inheritDoc} \n */\npublic ConvexHull2D generate(final Collection<Vector2D> points) throws NullArgumentException {\n  MathUtils.checkNotNull(points);\n  if (points.size() < 3) {\n    return new ConvexHull2D(points,tolerance);\n  }\n  final Vector2D referencePoint=getReferencePoint(points);\n  final List<Vertex> pointsSortedByAngle=new ArrayList<Vertex>();\n  for (  final Vector2D p : points) {\n    pointsSortedByAngle.add(new Vertex(p,getAngleBetweenPoints(p,referencePoint)));\n  }\n  Collections.sort(pointsSortedByAngle,new Comparator<Vertex>(){\n    public int compare(    final Vertex o1,    final Vertex o2){\n      return (int)FastMath.signum(o2.angle - o1.angle);\n    }\n  }\n);\n  final List<Vector2D> hullVertices=new ArrayList<Vector2D>(points.size());\n  final Iterator<Vertex> it=pointsSortedByAngle.iterator();\n  hullVertices.add(it.next().point);\n  hullVertices.add(it.next().point);\n  Vector2D currentPoint=null;\n  while (it.hasNext() || currentPoint != null) {\n    final int size=hullVertices.size();\n    if (size == 1) {\n      hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n      currentPoint=null;\n      continue;\n    }\n    final Vector2D p1=hullVertices.get(size - 2);\n    final Vector2D p2=hullVertices.get(size - 1);\n    final Line line=new Line(p1,p2,tolerance);\n    if (currentPoint == null) {\n      currentPoint=it.next().point;\n    }\n    final double offset=line.getOffset(currentPoint);\n    if (offset < 0.0) {\n      hullVertices.add(currentPoint);\n      currentPoint=null;\n    }\n else {\n      hullVertices.remove(size - 1);\n    }\n  }\n  return new ConvexHull2D(hullVertices,tolerance);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 300,
                    "astHeight": 14
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 72,
                    "startLineNumber": 108,
                    "startColumnNumber": 16,
                    "endLineNumber": 108,
                    "endColumnNumber": 88
                },
                "nodeContext": "hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 14,
                "astHeight": 6
            },
            "tokenLength": 1,
            "type": "org.apache.commons.math3.geometry.euclidean.twod.Vector2D"
        },
        {
            "nodeContext": "currentPoint",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 12,
                "startLineNumber": 118,
                "startColumnNumber": 16,
                "endLineNumber": 118,
                "endColumnNumber": 28
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 20,
                        "startLineNumber": 118,
                        "startColumnNumber": 16,
                        "endLineNumber": 118,
                        "endColumnNumber": 36
                    },
                    "nodeContext": "currentPoint == null",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 89,
                        "startLineNumber": 118,
                        "startColumnNumber": 12,
                        "endLineNumber": 120,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (currentPoint == null) {\n  currentPoint=it.next().point;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 13,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
                    "nodePosition": {
                        "charLength": 1242,
                        "startLineNumber": 104,
                        "startColumnNumber": 53,
                        "endLineNumber": 134,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  final int size=hullVertices.size();\n  if (size == 1) {\n    hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n    currentPoint=null;\n    continue;\n  }\n  final Vector2D p1=hullVertices.get(size - 2);\n  final Vector2D p2=hullVertices.get(size - 1);\n  final Line line=new Line(p1,p2,tolerance);\n  if (currentPoint == null) {\n    currentPoint=it.next().point;\n  }\n  final double offset=line.getOffset(currentPoint);\n  if (offset < 0.0) {\n    hullVertices.add(currentPoint);\n    currentPoint=null;\n  }\n else {\n    hullVertices.remove(size - 1);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 113,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1287,
                        "startLineNumber": 104,
                        "startColumnNumber": 8,
                        "endLineNumber": 134,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "while (it.hasNext() || currentPoint != null) {\n  final int size=hullVertices.size();\n  if (size == 1) {\n    hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n    currentPoint=null;\n    continue;\n  }\n  final Vector2D p1=hullVertices.get(size - 2);\n  final Vector2D p2=hullVertices.get(size - 1);\n  final Line line=new Line(p1,p2,tolerance);\n  if (currentPoint == null) {\n    currentPoint=it.next().point;\n  }\n  final double offset=line.getOffset(currentPoint);\n  if (offset < 0.0) {\n    hullVertices.add(currentPoint);\n    currentPoint=null;\n  }\n else {\n    hullVertices.remove(size - 1);\n  }\n}\n",
                    "nodeType": "WhileStatement",
                    "astNodeNumber": 121,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2520,
                        "startLineNumber": 72,
                        "startColumnNumber": 97,
                        "endLineNumber": 137,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  MathUtils.checkNotNull(points);\n  if (points.size() < 3) {\n    return new ConvexHull2D(points,tolerance);\n  }\n  final Vector2D referencePoint=getReferencePoint(points);\n  final List<Vertex> pointsSortedByAngle=new ArrayList<Vertex>();\n  for (  final Vector2D p : points) {\n    pointsSortedByAngle.add(new Vertex(p,getAngleBetweenPoints(p,referencePoint)));\n  }\n  Collections.sort(pointsSortedByAngle,new Comparator<Vertex>(){\n    public int compare(    final Vertex o1,    final Vertex o2){\n      return (int)FastMath.signum(o2.angle - o1.angle);\n    }\n  }\n);\n  final List<Vector2D> hullVertices=new ArrayList<Vector2D>(points.size());\n  final Iterator<Vertex> it=pointsSortedByAngle.iterator();\n  hullVertices.add(it.next().point);\n  hullVertices.add(it.next().point);\n  Vector2D currentPoint=null;\n  while (it.hasNext() || currentPoint != null) {\n    final int size=hullVertices.size();\n    if (size == 1) {\n      hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n      currentPoint=null;\n      continue;\n    }\n    final Vector2D p1=hullVertices.get(size - 2);\n    final Vector2D p2=hullVertices.get(size - 1);\n    final Line line=new Line(p1,p2,tolerance);\n    if (currentPoint == null) {\n      currentPoint=it.next().point;\n    }\n    final double offset=line.getOffset(currentPoint);\n    if (offset < 0.0) {\n      hullVertices.add(currentPoint);\n      currentPoint=null;\n    }\n else {\n      hullVertices.remove(size - 1);\n    }\n  }\n  return new ConvexHull2D(hullVertices,tolerance);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 284,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2638,
                        "startLineNumber": 71,
                        "startColumnNumber": 4,
                        "endLineNumber": 137,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * {@inheritDoc} \n */\npublic ConvexHull2D generate(final Collection<Vector2D> points) throws NullArgumentException {\n  MathUtils.checkNotNull(points);\n  if (points.size() < 3) {\n    return new ConvexHull2D(points,tolerance);\n  }\n  final Vector2D referencePoint=getReferencePoint(points);\n  final List<Vertex> pointsSortedByAngle=new ArrayList<Vertex>();\n  for (  final Vector2D p : points) {\n    pointsSortedByAngle.add(new Vertex(p,getAngleBetweenPoints(p,referencePoint)));\n  }\n  Collections.sort(pointsSortedByAngle,new Comparator<Vertex>(){\n    public int compare(    final Vertex o1,    final Vertex o2){\n      return (int)FastMath.signum(o2.angle - o1.angle);\n    }\n  }\n);\n  final List<Vector2D> hullVertices=new ArrayList<Vector2D>(points.size());\n  final Iterator<Vertex> it=pointsSortedByAngle.iterator();\n  hullVertices.add(it.next().point);\n  hullVertices.add(it.next().point);\n  Vector2D currentPoint=null;\n  while (it.hasNext() || currentPoint != null) {\n    final int size=hullVertices.size();\n    if (size == 1) {\n      hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n      currentPoint=null;\n      continue;\n    }\n    final Vector2D p1=hullVertices.get(size - 2);\n    final Vector2D p2=hullVertices.get(size - 1);\n    final Line line=new Line(p1,p2,tolerance);\n    if (currentPoint == null) {\n      currentPoint=it.next().point;\n    }\n    final double offset=line.getOffset(currentPoint);\n    if (offset < 0.0) {\n      hullVertices.add(currentPoint);\n      currentPoint=null;\n    }\n else {\n      hullVertices.remove(size - 1);\n    }\n  }\n  return new ConvexHull2D(hullVertices,tolerance);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 300,
                    "astHeight": 14
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 20,
                    "startLineNumber": 118,
                    "startColumnNumber": 16,
                    "endLineNumber": 118,
                    "endColumnNumber": 36
                },
                "nodeContext": "currentPoint == null",
                "nodeType": "InfixExpression",
                "astNodeNumber": 3,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "org.apache.commons.math3.geometry.euclidean.twod.Vector2D"
        },
        {
            "nodeContext": "currentPoint",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 12,
                "startLineNumber": 123,
                "startColumnNumber": 49,
                "endLineNumber": 123,
                "endColumnNumber": 61
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 28,
                        "startLineNumber": 123,
                        "startColumnNumber": 34,
                        "endLineNumber": 123,
                        "endColumnNumber": 62
                    },
                    "nodeContext": "line.getOffset(currentPoint)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 37,
                        "startLineNumber": 123,
                        "startColumnNumber": 25,
                        "endLineNumber": 123,
                        "endColumnNumber": 62
                    },
                    "nodeContext": "offset=line.getOffset(currentPoint)",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 51,
                        "startLineNumber": 123,
                        "startColumnNumber": 12,
                        "endLineNumber": 123,
                        "endColumnNumber": 63
                    },
                    "nodeContext": "final double offset=line.getOffset(currentPoint);\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
                    "nodePosition": {
                        "charLength": 1242,
                        "startLineNumber": 104,
                        "startColumnNumber": 53,
                        "endLineNumber": 134,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  final int size=hullVertices.size();\n  if (size == 1) {\n    hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n    currentPoint=null;\n    continue;\n  }\n  final Vector2D p1=hullVertices.get(size - 2);\n  final Vector2D p2=hullVertices.get(size - 1);\n  final Line line=new Line(p1,p2,tolerance);\n  if (currentPoint == null) {\n    currentPoint=it.next().point;\n  }\n  final double offset=line.getOffset(currentPoint);\n  if (offset < 0.0) {\n    hullVertices.add(currentPoint);\n    currentPoint=null;\n  }\n else {\n    hullVertices.remove(size - 1);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 113,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1287,
                        "startLineNumber": 104,
                        "startColumnNumber": 8,
                        "endLineNumber": 134,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "while (it.hasNext() || currentPoint != null) {\n  final int size=hullVertices.size();\n  if (size == 1) {\n    hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n    currentPoint=null;\n    continue;\n  }\n  final Vector2D p1=hullVertices.get(size - 2);\n  final Vector2D p2=hullVertices.get(size - 1);\n  final Line line=new Line(p1,p2,tolerance);\n  if (currentPoint == null) {\n    currentPoint=it.next().point;\n  }\n  final double offset=line.getOffset(currentPoint);\n  if (offset < 0.0) {\n    hullVertices.add(currentPoint);\n    currentPoint=null;\n  }\n else {\n    hullVertices.remove(size - 1);\n  }\n}\n",
                    "nodeType": "WhileStatement",
                    "astNodeNumber": 121,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2520,
                        "startLineNumber": 72,
                        "startColumnNumber": 97,
                        "endLineNumber": 137,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  MathUtils.checkNotNull(points);\n  if (points.size() < 3) {\n    return new ConvexHull2D(points,tolerance);\n  }\n  final Vector2D referencePoint=getReferencePoint(points);\n  final List<Vertex> pointsSortedByAngle=new ArrayList<Vertex>();\n  for (  final Vector2D p : points) {\n    pointsSortedByAngle.add(new Vertex(p,getAngleBetweenPoints(p,referencePoint)));\n  }\n  Collections.sort(pointsSortedByAngle,new Comparator<Vertex>(){\n    public int compare(    final Vertex o1,    final Vertex o2){\n      return (int)FastMath.signum(o2.angle - o1.angle);\n    }\n  }\n);\n  final List<Vector2D> hullVertices=new ArrayList<Vector2D>(points.size());\n  final Iterator<Vertex> it=pointsSortedByAngle.iterator();\n  hullVertices.add(it.next().point);\n  hullVertices.add(it.next().point);\n  Vector2D currentPoint=null;\n  while (it.hasNext() || currentPoint != null) {\n    final int size=hullVertices.size();\n    if (size == 1) {\n      hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n      currentPoint=null;\n      continue;\n    }\n    final Vector2D p1=hullVertices.get(size - 2);\n    final Vector2D p2=hullVertices.get(size - 1);\n    final Line line=new Line(p1,p2,tolerance);\n    if (currentPoint == null) {\n      currentPoint=it.next().point;\n    }\n    final double offset=line.getOffset(currentPoint);\n    if (offset < 0.0) {\n      hullVertices.add(currentPoint);\n      currentPoint=null;\n    }\n else {\n      hullVertices.remove(size - 1);\n    }\n  }\n  return new ConvexHull2D(hullVertices,tolerance);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 284,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2638,
                        "startLineNumber": 71,
                        "startColumnNumber": 4,
                        "endLineNumber": 137,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * {@inheritDoc} \n */\npublic ConvexHull2D generate(final Collection<Vector2D> points) throws NullArgumentException {\n  MathUtils.checkNotNull(points);\n  if (points.size() < 3) {\n    return new ConvexHull2D(points,tolerance);\n  }\n  final Vector2D referencePoint=getReferencePoint(points);\n  final List<Vertex> pointsSortedByAngle=new ArrayList<Vertex>();\n  for (  final Vector2D p : points) {\n    pointsSortedByAngle.add(new Vertex(p,getAngleBetweenPoints(p,referencePoint)));\n  }\n  Collections.sort(pointsSortedByAngle,new Comparator<Vertex>(){\n    public int compare(    final Vertex o1,    final Vertex o2){\n      return (int)FastMath.signum(o2.angle - o1.angle);\n    }\n  }\n);\n  final List<Vector2D> hullVertices=new ArrayList<Vector2D>(points.size());\n  final Iterator<Vertex> it=pointsSortedByAngle.iterator();\n  hullVertices.add(it.next().point);\n  hullVertices.add(it.next().point);\n  Vector2D currentPoint=null;\n  while (it.hasNext() || currentPoint != null) {\n    final int size=hullVertices.size();\n    if (size == 1) {\n      hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n      currentPoint=null;\n      continue;\n    }\n    final Vector2D p1=hullVertices.get(size - 2);\n    final Vector2D p2=hullVertices.get(size - 1);\n    final Line line=new Line(p1,p2,tolerance);\n    if (currentPoint == null) {\n      currentPoint=it.next().point;\n    }\n    final double offset=line.getOffset(currentPoint);\n    if (offset < 0.0) {\n      hullVertices.add(currentPoint);\n      currentPoint=null;\n    }\n else {\n      hullVertices.remove(size - 1);\n    }\n  }\n  return new ConvexHull2D(hullVertices,tolerance);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 300,
                    "astHeight": 14
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 51,
                    "startLineNumber": 123,
                    "startColumnNumber": 12,
                    "endLineNumber": 123,
                    "endColumnNumber": 63
                },
                "nodeContext": "final double offset=line.getOffset(currentPoint);\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 9,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.commons.math3.geometry.euclidean.twod.Vector2D"
        },
        {
            "nodeContext": "currentPoint",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 12,
                "startLineNumber": 127,
                "startColumnNumber": 33,
                "endLineNumber": 127,
                "endColumnNumber": 45
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 30,
                        "startLineNumber": 127,
                        "startColumnNumber": 16,
                        "endLineNumber": 127,
                        "endColumnNumber": 46
                    },
                    "nodeContext": "hullVertices.add(currentPoint)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 31,
                        "startLineNumber": 127,
                        "startColumnNumber": 16,
                        "endLineNumber": 127,
                        "endColumnNumber": 47
                    },
                    "nodeContext": "hullVertices.add(currentPoint);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 160,
                        "startLineNumber": 125,
                        "startColumnNumber": 30,
                        "endLineNumber": 129,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  hullVertices.add(currentPoint);\n  currentPoint=null;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 10,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 398,
                        "startLineNumber": 125,
                        "startColumnNumber": 12,
                        "endLineNumber": 133,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (offset < 0.0) {\n  hullVertices.add(currentPoint);\n  currentPoint=null;\n}\n else {\n  hullVertices.remove(size - 1);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 22,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
                    "nodePosition": {
                        "charLength": 1242,
                        "startLineNumber": 104,
                        "startColumnNumber": 53,
                        "endLineNumber": 134,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  final int size=hullVertices.size();\n  if (size == 1) {\n    hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n    currentPoint=null;\n    continue;\n  }\n  final Vector2D p1=hullVertices.get(size - 2);\n  final Vector2D p2=hullVertices.get(size - 1);\n  final Line line=new Line(p1,p2,tolerance);\n  if (currentPoint == null) {\n    currentPoint=it.next().point;\n  }\n  final double offset=line.getOffset(currentPoint);\n  if (offset < 0.0) {\n    hullVertices.add(currentPoint);\n    currentPoint=null;\n  }\n else {\n    hullVertices.remove(size - 1);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 113,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1287,
                        "startLineNumber": 104,
                        "startColumnNumber": 8,
                        "endLineNumber": 134,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "while (it.hasNext() || currentPoint != null) {\n  final int size=hullVertices.size();\n  if (size == 1) {\n    hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n    currentPoint=null;\n    continue;\n  }\n  final Vector2D p1=hullVertices.get(size - 2);\n  final Vector2D p2=hullVertices.get(size - 1);\n  final Line line=new Line(p1,p2,tolerance);\n  if (currentPoint == null) {\n    currentPoint=it.next().point;\n  }\n  final double offset=line.getOffset(currentPoint);\n  if (offset < 0.0) {\n    hullVertices.add(currentPoint);\n    currentPoint=null;\n  }\n else {\n    hullVertices.remove(size - 1);\n  }\n}\n",
                    "nodeType": "WhileStatement",
                    "astNodeNumber": 121,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2520,
                        "startLineNumber": 72,
                        "startColumnNumber": 97,
                        "endLineNumber": 137,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  MathUtils.checkNotNull(points);\n  if (points.size() < 3) {\n    return new ConvexHull2D(points,tolerance);\n  }\n  final Vector2D referencePoint=getReferencePoint(points);\n  final List<Vertex> pointsSortedByAngle=new ArrayList<Vertex>();\n  for (  final Vector2D p : points) {\n    pointsSortedByAngle.add(new Vertex(p,getAngleBetweenPoints(p,referencePoint)));\n  }\n  Collections.sort(pointsSortedByAngle,new Comparator<Vertex>(){\n    public int compare(    final Vertex o1,    final Vertex o2){\n      return (int)FastMath.signum(o2.angle - o1.angle);\n    }\n  }\n);\n  final List<Vector2D> hullVertices=new ArrayList<Vector2D>(points.size());\n  final Iterator<Vertex> it=pointsSortedByAngle.iterator();\n  hullVertices.add(it.next().point);\n  hullVertices.add(it.next().point);\n  Vector2D currentPoint=null;\n  while (it.hasNext() || currentPoint != null) {\n    final int size=hullVertices.size();\n    if (size == 1) {\n      hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n      currentPoint=null;\n      continue;\n    }\n    final Vector2D p1=hullVertices.get(size - 2);\n    final Vector2D p2=hullVertices.get(size - 1);\n    final Line line=new Line(p1,p2,tolerance);\n    if (currentPoint == null) {\n      currentPoint=it.next().point;\n    }\n    final double offset=line.getOffset(currentPoint);\n    if (offset < 0.0) {\n      hullVertices.add(currentPoint);\n      currentPoint=null;\n    }\n else {\n      hullVertices.remove(size - 1);\n    }\n  }\n  return new ConvexHull2D(hullVertices,tolerance);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 284,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2638,
                        "startLineNumber": 71,
                        "startColumnNumber": 4,
                        "endLineNumber": 137,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * {@inheritDoc} \n */\npublic ConvexHull2D generate(final Collection<Vector2D> points) throws NullArgumentException {\n  MathUtils.checkNotNull(points);\n  if (points.size() < 3) {\n    return new ConvexHull2D(points,tolerance);\n  }\n  final Vector2D referencePoint=getReferencePoint(points);\n  final List<Vertex> pointsSortedByAngle=new ArrayList<Vertex>();\n  for (  final Vector2D p : points) {\n    pointsSortedByAngle.add(new Vertex(p,getAngleBetweenPoints(p,referencePoint)));\n  }\n  Collections.sort(pointsSortedByAngle,new Comparator<Vertex>(){\n    public int compare(    final Vertex o1,    final Vertex o2){\n      return (int)FastMath.signum(o2.angle - o1.angle);\n    }\n  }\n);\n  final List<Vector2D> hullVertices=new ArrayList<Vector2D>(points.size());\n  final Iterator<Vertex> it=pointsSortedByAngle.iterator();\n  hullVertices.add(it.next().point);\n  hullVertices.add(it.next().point);\n  Vector2D currentPoint=null;\n  while (it.hasNext() || currentPoint != null) {\n    final int size=hullVertices.size();\n    if (size == 1) {\n      hullVertices.add(currentPoint != null ? currentPoint : it.next().point);\n      currentPoint=null;\n      continue;\n    }\n    final Vector2D p1=hullVertices.get(size - 2);\n    final Vector2D p2=hullVertices.get(size - 1);\n    final Line line=new Line(p1,p2,tolerance);\n    if (currentPoint == null) {\n      currentPoint=it.next().point;\n    }\n    final double offset=line.getOffset(currentPoint);\n    if (offset < 0.0) {\n      hullVertices.add(currentPoint);\n      currentPoint=null;\n    }\n else {\n      hullVertices.remove(size - 1);\n    }\n  }\n  return new ConvexHull2D(hullVertices,tolerance);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 300,
                    "astHeight": 14
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 31,
                    "startLineNumber": 127,
                    "startColumnNumber": 16,
                    "endLineNumber": 127,
                    "endColumnNumber": 47
                },
                "nodeContext": "hullVertices.add(currentPoint);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 5,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "org.apache.commons.math3.geometry.euclidean.twod.Vector2D"
        }
    ],
    "positionList": [
        {
            "charLength": 12,
            "startLineNumber": 104,
            "startColumnNumber": 31,
            "endLineNumber": 104,
            "endColumnNumber": 43
        },
        {
            "charLength": 12,
            "startLineNumber": 108,
            "startColumnNumber": 33,
            "endLineNumber": 108,
            "endColumnNumber": 45
        },
        {
            "charLength": 12,
            "startLineNumber": 108,
            "startColumnNumber": 56,
            "endLineNumber": 108,
            "endColumnNumber": 68
        },
        {
            "charLength": 12,
            "startLineNumber": 118,
            "startColumnNumber": 16,
            "endLineNumber": 118,
            "endColumnNumber": 28
        },
        {
            "charLength": 12,
            "startLineNumber": 123,
            "startColumnNumber": 49,
            "endLineNumber": 123,
            "endColumnNumber": 61
        },
        {
            "charLength": 12,
            "startLineNumber": 127,
            "startColumnNumber": 33,
            "endLineNumber": 127,
            "endColumnNumber": 45
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 4,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 5,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 7
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 1
        },
        {
            "firstKey": 1,
            "secondKey": 3,
            "layout": 6
        },
        {
            "firstKey": 1,
            "secondKey": 4,
            "layout": 6
        },
        {
            "firstKey": 1,
            "secondKey": 5,
            "layout": 6
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 6
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 0
        },
        {
            "firstKey": 2,
            "secondKey": 3,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 4,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 5,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 3,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 3,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 3,
            "secondKey": 4,
            "layout": 2
        },
        {
            "firstKey": 3,
            "secondKey": 5,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 4,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 4,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 4,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 5,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 5,
            "secondKey": 1,
            "layout": 4
        },
        {
            "firstKey": 5,
            "secondKey": 2,
            "layout": 4
        },
        {
            "firstKey": 5,
            "secondKey": 3,
            "layout": 4
        },
        {
            "firstKey": 5,
            "secondKey": 4,
            "layout": 4
        }
    ]
}