{
    "id": 750,
    "expression": "textsearch",
    "projectName": "jackrabbit-oak",
    "commitID": "0df1ea6670bae52743fed3e2313a628c99106750",
    "filePath": "oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndex.java",
    "occurrences": 8,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "textsearch",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 10,
                "startLineNumber": 1345,
                "startColumnNumber": 21,
                "endLineNumber": 1345,
                "endColumnNumber": 31
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 35,
                        "startLineNumber": 1345,
                        "startColumnNumber": 21,
                        "endLineNumber": 1345,
                        "endColumnNumber": 56
                    },
                    "nodeContext": "textsearch.replaceAll(\"AND\",\"and\")",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 48,
                        "startLineNumber": 1345,
                        "startColumnNumber": 8,
                        "endLineNumber": 1345,
                        "endColumnNumber": 56
                    },
                    "nodeContext": "textsearch=textsearch.replaceAll(\"AND\",\"and\")",
                    "nodeType": "Assignment",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 49,
                        "startLineNumber": 1345,
                        "startColumnNumber": 8,
                        "endLineNumber": 1345,
                        "endColumnNumber": 57
                    },
                    "nodeContext": "textsearch=textsearch.replaceAll(\"AND\",\"and\");\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1266,
                        "startLineNumber": 1340,
                        "startColumnNumber": 62,
                        "endLineNumber": 1373,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  StringBuilder rewritten=new StringBuilder();\n  textsearch=textsearch.replaceAll(\"AND\",\"and\");\n  textsearch=textsearch.replaceAll(\"NOT\",\"not\");\n  boolean escaped=false;\n  for (int i=0; i < textsearch.length(); i++) {\n    if (textsearch.charAt(i) == '\\\\') {\n      if (escaped) {\n        rewritten.append(\"\\\\\\\\\");\n        escaped=false;\n      }\n else {\n        escaped=true;\n      }\n    }\n else     if (textsearch.charAt(i) == '\\'') {\n      if (escaped) {\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n else     if (textsearch.charAt(i) == ':') {\n      rewritten.append(\"\\\\:\");\n    }\n else {\n      if (escaped) {\n        rewritten.append('\\\\');\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n  }\n  return rewritten.toString();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 130,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1463,
                        "startLineNumber": 1337,
                        "startColumnNumber": 4,
                        "endLineNumber": 1373,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Following logic is taken from org.apache.jackrabbit.core.query.lucene.JackrabbitQueryParser#parse(java.lang.String)\n */\nprivate static String rewriteQueryText(String textsearch){\n  StringBuilder rewritten=new StringBuilder();\n  textsearch=textsearch.replaceAll(\"AND\",\"and\");\n  textsearch=textsearch.replaceAll(\"NOT\",\"not\");\n  boolean escaped=false;\n  for (int i=0; i < textsearch.length(); i++) {\n    if (textsearch.charAt(i) == '\\\\') {\n      if (escaped) {\n        rewritten.append(\"\\\\\\\\\");\n        escaped=false;\n      }\n else {\n        escaped=true;\n      }\n    }\n else     if (textsearch.charAt(i) == '\\'') {\n      if (escaped) {\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n else     if (textsearch.charAt(i) == ':') {\n      rewritten.append(\"\\\\:\");\n    }\n else {\n      if (escaped) {\n        rewritten.append('\\\\');\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n  }\n  return rewritten.toString();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 141,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 49,
                    "startLineNumber": 1345,
                    "startColumnNumber": 8,
                    "endLineNumber": 1345,
                    "endColumnNumber": 57
                },
                "nodeContext": "textsearch=textsearch.replaceAll(\"AND\",\"and\");\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 8,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        },
        {
            "nodeContext": "textsearch",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 10,
                "startLineNumber": 1346,
                "startColumnNumber": 21,
                "endLineNumber": 1346,
                "endColumnNumber": 31
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 35,
                        "startLineNumber": 1346,
                        "startColumnNumber": 21,
                        "endLineNumber": 1346,
                        "endColumnNumber": 56
                    },
                    "nodeContext": "textsearch.replaceAll(\"NOT\",\"not\")",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 48,
                        "startLineNumber": 1346,
                        "startColumnNumber": 8,
                        "endLineNumber": 1346,
                        "endColumnNumber": 56
                    },
                    "nodeContext": "textsearch=textsearch.replaceAll(\"NOT\",\"not\")",
                    "nodeType": "Assignment",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 49,
                        "startLineNumber": 1346,
                        "startColumnNumber": 8,
                        "endLineNumber": 1346,
                        "endColumnNumber": 57
                    },
                    "nodeContext": "textsearch=textsearch.replaceAll(\"NOT\",\"not\");\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1266,
                        "startLineNumber": 1340,
                        "startColumnNumber": 62,
                        "endLineNumber": 1373,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  StringBuilder rewritten=new StringBuilder();\n  textsearch=textsearch.replaceAll(\"AND\",\"and\");\n  textsearch=textsearch.replaceAll(\"NOT\",\"not\");\n  boolean escaped=false;\n  for (int i=0; i < textsearch.length(); i++) {\n    if (textsearch.charAt(i) == '\\\\') {\n      if (escaped) {\n        rewritten.append(\"\\\\\\\\\");\n        escaped=false;\n      }\n else {\n        escaped=true;\n      }\n    }\n else     if (textsearch.charAt(i) == '\\'') {\n      if (escaped) {\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n else     if (textsearch.charAt(i) == ':') {\n      rewritten.append(\"\\\\:\");\n    }\n else {\n      if (escaped) {\n        rewritten.append('\\\\');\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n  }\n  return rewritten.toString();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 130,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1463,
                        "startLineNumber": 1337,
                        "startColumnNumber": 4,
                        "endLineNumber": 1373,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Following logic is taken from org.apache.jackrabbit.core.query.lucene.JackrabbitQueryParser#parse(java.lang.String)\n */\nprivate static String rewriteQueryText(String textsearch){\n  StringBuilder rewritten=new StringBuilder();\n  textsearch=textsearch.replaceAll(\"AND\",\"and\");\n  textsearch=textsearch.replaceAll(\"NOT\",\"not\");\n  boolean escaped=false;\n  for (int i=0; i < textsearch.length(); i++) {\n    if (textsearch.charAt(i) == '\\\\') {\n      if (escaped) {\n        rewritten.append(\"\\\\\\\\\");\n        escaped=false;\n      }\n else {\n        escaped=true;\n      }\n    }\n else     if (textsearch.charAt(i) == '\\'') {\n      if (escaped) {\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n else     if (textsearch.charAt(i) == ':') {\n      rewritten.append(\"\\\\:\");\n    }\n else {\n      if (escaped) {\n        rewritten.append('\\\\');\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n  }\n  return rewritten.toString();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 141,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 49,
                    "startLineNumber": 1346,
                    "startColumnNumber": 8,
                    "endLineNumber": 1346,
                    "endColumnNumber": 57
                },
                "nodeContext": "textsearch=textsearch.replaceAll(\"NOT\",\"not\");\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 8,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        },
        {
            "nodeContext": "textsearch",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 10,
                "startLineNumber": 1348,
                "startColumnNumber": 28,
                "endLineNumber": 1348,
                "endColumnNumber": 38
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 19,
                        "startLineNumber": 1348,
                        "startColumnNumber": 28,
                        "endLineNumber": 1348,
                        "endColumnNumber": 47
                    },
                    "nodeContext": "textsearch.length()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
                    "nodePosition": {
                        "charLength": 23,
                        "startLineNumber": 1348,
                        "startColumnNumber": 24,
                        "endLineNumber": 1348,
                        "endColumnNumber": 47
                    },
                    "nodeContext": "i < textsearch.length()",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 874,
                        "startLineNumber": 1348,
                        "startColumnNumber": 8,
                        "endLineNumber": 1371,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=0; i < textsearch.length(); i++) {\n  if (textsearch.charAt(i) == '\\\\') {\n    if (escaped) {\n      rewritten.append(\"\\\\\\\\\");\n      escaped=false;\n    }\n else {\n      escaped=true;\n    }\n  }\n else   if (textsearch.charAt(i) == '\\'') {\n    if (escaped) {\n      escaped=false;\n    }\n    rewritten.append(textsearch.charAt(i));\n  }\n else   if (textsearch.charAt(i) == ':') {\n    rewritten.append(\"\\\\:\");\n  }\n else {\n    if (escaped) {\n      rewritten.append('\\\\');\n      escaped=false;\n    }\n    rewritten.append(textsearch.charAt(i));\n  }\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 96,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1266,
                        "startLineNumber": 1340,
                        "startColumnNumber": 62,
                        "endLineNumber": 1373,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  StringBuilder rewritten=new StringBuilder();\n  textsearch=textsearch.replaceAll(\"AND\",\"and\");\n  textsearch=textsearch.replaceAll(\"NOT\",\"not\");\n  boolean escaped=false;\n  for (int i=0; i < textsearch.length(); i++) {\n    if (textsearch.charAt(i) == '\\\\') {\n      if (escaped) {\n        rewritten.append(\"\\\\\\\\\");\n        escaped=false;\n      }\n else {\n        escaped=true;\n      }\n    }\n else     if (textsearch.charAt(i) == '\\'') {\n      if (escaped) {\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n else     if (textsearch.charAt(i) == ':') {\n      rewritten.append(\"\\\\:\");\n    }\n else {\n      if (escaped) {\n        rewritten.append('\\\\');\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n  }\n  return rewritten.toString();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 130,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1463,
                        "startLineNumber": 1337,
                        "startColumnNumber": 4,
                        "endLineNumber": 1373,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Following logic is taken from org.apache.jackrabbit.core.query.lucene.JackrabbitQueryParser#parse(java.lang.String)\n */\nprivate static String rewriteQueryText(String textsearch){\n  StringBuilder rewritten=new StringBuilder();\n  textsearch=textsearch.replaceAll(\"AND\",\"and\");\n  textsearch=textsearch.replaceAll(\"NOT\",\"not\");\n  boolean escaped=false;\n  for (int i=0; i < textsearch.length(); i++) {\n    if (textsearch.charAt(i) == '\\\\') {\n      if (escaped) {\n        rewritten.append(\"\\\\\\\\\");\n        escaped=false;\n      }\n else {\n        escaped=true;\n      }\n    }\n else     if (textsearch.charAt(i) == '\\'') {\n      if (escaped) {\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n else     if (textsearch.charAt(i) == ':') {\n      rewritten.append(\"\\\\:\");\n    }\n else {\n      if (escaped) {\n        rewritten.append('\\\\');\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n  }\n  return rewritten.toString();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 141,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
                "nodePosition": {
                    "charLength": 23,
                    "startLineNumber": 1348,
                    "startColumnNumber": 24,
                    "endLineNumber": 1348,
                    "endColumnNumber": 47
                },
                "nodeContext": "i < textsearch.length()",
                "nodeType": "InfixExpression",
                "astNodeNumber": 5,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        },
        {
            "nodeContext": "textsearch",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 10,
                "startLineNumber": 1349,
                "startColumnNumber": 16,
                "endLineNumber": 1349,
                "endColumnNumber": 26
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 20,
                        "startLineNumber": 1349,
                        "startColumnNumber": 16,
                        "endLineNumber": 1349,
                        "endColumnNumber": 36
                    },
                    "nodeContext": "textsearch.charAt(i)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 28,
                        "startLineNumber": 1349,
                        "startColumnNumber": 16,
                        "endLineNumber": 1349,
                        "endColumnNumber": 44
                    },
                    "nodeContext": "textsearch.charAt(i) == '\\\\'",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 804,
                        "startLineNumber": 1349,
                        "startColumnNumber": 12,
                        "endLineNumber": 1370,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (textsearch.charAt(i) == '\\\\') {\n  if (escaped) {\n    rewritten.append(\"\\\\\\\\\");\n    escaped=false;\n  }\n else {\n    escaped=true;\n  }\n}\n else if (textsearch.charAt(i) == '\\'') {\n  if (escaped) {\n    escaped=false;\n  }\n  rewritten.append(textsearch.charAt(i));\n}\n else if (textsearch.charAt(i) == ':') {\n  rewritten.append(\"\\\\:\");\n}\n else {\n  if (escaped) {\n    rewritten.append('\\\\');\n    escaped=false;\n  }\n  rewritten.append(textsearch.charAt(i));\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 82,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 828,
                        "startLineNumber": 1348,
                        "startColumnNumber": 54,
                        "endLineNumber": 1371,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (textsearch.charAt(i) == '\\\\') {\n    if (escaped) {\n      rewritten.append(\"\\\\\\\\\");\n      escaped=false;\n    }\n else {\n      escaped=true;\n    }\n  }\n else   if (textsearch.charAt(i) == '\\'') {\n    if (escaped) {\n      escaped=false;\n    }\n    rewritten.append(textsearch.charAt(i));\n  }\n else   if (textsearch.charAt(i) == ':') {\n    rewritten.append(\"\\\\:\");\n  }\n else {\n    if (escaped) {\n      rewritten.append('\\\\');\n      escaped=false;\n    }\n    rewritten.append(textsearch.charAt(i));\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 83,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 874,
                        "startLineNumber": 1348,
                        "startColumnNumber": 8,
                        "endLineNumber": 1371,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=0; i < textsearch.length(); i++) {\n  if (textsearch.charAt(i) == '\\\\') {\n    if (escaped) {\n      rewritten.append(\"\\\\\\\\\");\n      escaped=false;\n    }\n else {\n      escaped=true;\n    }\n  }\n else   if (textsearch.charAt(i) == '\\'') {\n    if (escaped) {\n      escaped=false;\n    }\n    rewritten.append(textsearch.charAt(i));\n  }\n else   if (textsearch.charAt(i) == ':') {\n    rewritten.append(\"\\\\:\");\n  }\n else {\n    if (escaped) {\n      rewritten.append('\\\\');\n      escaped=false;\n    }\n    rewritten.append(textsearch.charAt(i));\n  }\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 96,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1266,
                        "startLineNumber": 1340,
                        "startColumnNumber": 62,
                        "endLineNumber": 1373,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  StringBuilder rewritten=new StringBuilder();\n  textsearch=textsearch.replaceAll(\"AND\",\"and\");\n  textsearch=textsearch.replaceAll(\"NOT\",\"not\");\n  boolean escaped=false;\n  for (int i=0; i < textsearch.length(); i++) {\n    if (textsearch.charAt(i) == '\\\\') {\n      if (escaped) {\n        rewritten.append(\"\\\\\\\\\");\n        escaped=false;\n      }\n else {\n        escaped=true;\n      }\n    }\n else     if (textsearch.charAt(i) == '\\'') {\n      if (escaped) {\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n else     if (textsearch.charAt(i) == ':') {\n      rewritten.append(\"\\\\:\");\n    }\n else {\n      if (escaped) {\n        rewritten.append('\\\\');\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n  }\n  return rewritten.toString();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 130,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1463,
                        "startLineNumber": 1337,
                        "startColumnNumber": 4,
                        "endLineNumber": 1373,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Following logic is taken from org.apache.jackrabbit.core.query.lucene.JackrabbitQueryParser#parse(java.lang.String)\n */\nprivate static String rewriteQueryText(String textsearch){\n  StringBuilder rewritten=new StringBuilder();\n  textsearch=textsearch.replaceAll(\"AND\",\"and\");\n  textsearch=textsearch.replaceAll(\"NOT\",\"not\");\n  boolean escaped=false;\n  for (int i=0; i < textsearch.length(); i++) {\n    if (textsearch.charAt(i) == '\\\\') {\n      if (escaped) {\n        rewritten.append(\"\\\\\\\\\");\n        escaped=false;\n      }\n else {\n        escaped=true;\n      }\n    }\n else     if (textsearch.charAt(i) == '\\'') {\n      if (escaped) {\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n else     if (textsearch.charAt(i) == ':') {\n      rewritten.append(\"\\\\:\");\n    }\n else {\n      if (escaped) {\n        rewritten.append('\\\\');\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n  }\n  return rewritten.toString();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 141,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 28,
                    "startLineNumber": 1349,
                    "startColumnNumber": 16,
                    "endLineNumber": 1349,
                    "endColumnNumber": 44
                },
                "nodeContext": "textsearch.charAt(i) == '\\\\'",
                "nodeType": "InfixExpression",
                "astNodeNumber": 6,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        },
        {
            "nodeContext": "textsearch",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 10,
                "startLineNumber": 1356,
                "startColumnNumber": 23,
                "endLineNumber": 1356,
                "endColumnNumber": 33
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 20,
                        "startLineNumber": 1356,
                        "startColumnNumber": 23,
                        "endLineNumber": 1356,
                        "endColumnNumber": 43
                    },
                    "nodeContext": "textsearch.charAt(i)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 28,
                        "startLineNumber": 1356,
                        "startColumnNumber": 23,
                        "endLineNumber": 1356,
                        "endColumnNumber": 51
                    },
                    "nodeContext": "textsearch.charAt(i) == '\\''",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 556,
                        "startLineNumber": 1356,
                        "startColumnNumber": 19,
                        "endLineNumber": 1370,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (textsearch.charAt(i) == '\\'') {\n  if (escaped) {\n    escaped=false;\n  }\n  rewritten.append(textsearch.charAt(i));\n}\n else if (textsearch.charAt(i) == ':') {\n  rewritten.append(\"\\\\:\");\n}\n else {\n  if (escaped) {\n    rewritten.append('\\\\');\n    escaped=false;\n  }\n  rewritten.append(textsearch.charAt(i));\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 57,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 804,
                        "startLineNumber": 1349,
                        "startColumnNumber": 12,
                        "endLineNumber": 1370,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (textsearch.charAt(i) == '\\\\') {\n  if (escaped) {\n    rewritten.append(\"\\\\\\\\\");\n    escaped=false;\n  }\n else {\n    escaped=true;\n  }\n}\n else if (textsearch.charAt(i) == '\\'') {\n  if (escaped) {\n    escaped=false;\n  }\n  rewritten.append(textsearch.charAt(i));\n}\n else if (textsearch.charAt(i) == ':') {\n  rewritten.append(\"\\\\:\");\n}\n else {\n  if (escaped) {\n    rewritten.append('\\\\');\n    escaped=false;\n  }\n  rewritten.append(textsearch.charAt(i));\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 82,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 828,
                        "startLineNumber": 1348,
                        "startColumnNumber": 54,
                        "endLineNumber": 1371,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (textsearch.charAt(i) == '\\\\') {\n    if (escaped) {\n      rewritten.append(\"\\\\\\\\\");\n      escaped=false;\n    }\n else {\n      escaped=true;\n    }\n  }\n else   if (textsearch.charAt(i) == '\\'') {\n    if (escaped) {\n      escaped=false;\n    }\n    rewritten.append(textsearch.charAt(i));\n  }\n else   if (textsearch.charAt(i) == ':') {\n    rewritten.append(\"\\\\:\");\n  }\n else {\n    if (escaped) {\n      rewritten.append('\\\\');\n      escaped=false;\n    }\n    rewritten.append(textsearch.charAt(i));\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 83,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 874,
                        "startLineNumber": 1348,
                        "startColumnNumber": 8,
                        "endLineNumber": 1371,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=0; i < textsearch.length(); i++) {\n  if (textsearch.charAt(i) == '\\\\') {\n    if (escaped) {\n      rewritten.append(\"\\\\\\\\\");\n      escaped=false;\n    }\n else {\n      escaped=true;\n    }\n  }\n else   if (textsearch.charAt(i) == '\\'') {\n    if (escaped) {\n      escaped=false;\n    }\n    rewritten.append(textsearch.charAt(i));\n  }\n else   if (textsearch.charAt(i) == ':') {\n    rewritten.append(\"\\\\:\");\n  }\n else {\n    if (escaped) {\n      rewritten.append('\\\\');\n      escaped=false;\n    }\n    rewritten.append(textsearch.charAt(i));\n  }\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 96,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1266,
                        "startLineNumber": 1340,
                        "startColumnNumber": 62,
                        "endLineNumber": 1373,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  StringBuilder rewritten=new StringBuilder();\n  textsearch=textsearch.replaceAll(\"AND\",\"and\");\n  textsearch=textsearch.replaceAll(\"NOT\",\"not\");\n  boolean escaped=false;\n  for (int i=0; i < textsearch.length(); i++) {\n    if (textsearch.charAt(i) == '\\\\') {\n      if (escaped) {\n        rewritten.append(\"\\\\\\\\\");\n        escaped=false;\n      }\n else {\n        escaped=true;\n      }\n    }\n else     if (textsearch.charAt(i) == '\\'') {\n      if (escaped) {\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n else     if (textsearch.charAt(i) == ':') {\n      rewritten.append(\"\\\\:\");\n    }\n else {\n      if (escaped) {\n        rewritten.append('\\\\');\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n  }\n  return rewritten.toString();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 130,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1463,
                        "startLineNumber": 1337,
                        "startColumnNumber": 4,
                        "endLineNumber": 1373,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Following logic is taken from org.apache.jackrabbit.core.query.lucene.JackrabbitQueryParser#parse(java.lang.String)\n */\nprivate static String rewriteQueryText(String textsearch){\n  StringBuilder rewritten=new StringBuilder();\n  textsearch=textsearch.replaceAll(\"AND\",\"and\");\n  textsearch=textsearch.replaceAll(\"NOT\",\"not\");\n  boolean escaped=false;\n  for (int i=0; i < textsearch.length(); i++) {\n    if (textsearch.charAt(i) == '\\\\') {\n      if (escaped) {\n        rewritten.append(\"\\\\\\\\\");\n        escaped=false;\n      }\n else {\n        escaped=true;\n      }\n    }\n else     if (textsearch.charAt(i) == '\\'') {\n      if (escaped) {\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n else     if (textsearch.charAt(i) == ':') {\n      rewritten.append(\"\\\\:\");\n    }\n else {\n      if (escaped) {\n        rewritten.append('\\\\');\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n  }\n  return rewritten.toString();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 141,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 28,
                    "startLineNumber": 1356,
                    "startColumnNumber": 23,
                    "endLineNumber": 1356,
                    "endColumnNumber": 51
                },
                "nodeContext": "textsearch.charAt(i) == '\\''",
                "nodeType": "InfixExpression",
                "astNodeNumber": 6,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        },
        {
            "nodeContext": "textsearch",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 10,
                "startLineNumber": 1360,
                "startColumnNumber": 33,
                "endLineNumber": 1360,
                "endColumnNumber": 43
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 20,
                        "startLineNumber": 1360,
                        "startColumnNumber": 33,
                        "endLineNumber": 1360,
                        "endColumnNumber": 53
                    },
                    "nodeContext": "textsearch.charAt(i)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 38,
                        "startLineNumber": 1360,
                        "startColumnNumber": 16,
                        "endLineNumber": 1360,
                        "endColumnNumber": 54
                    },
                    "nodeContext": "rewritten.append(textsearch.charAt(i))",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 39,
                        "startLineNumber": 1360,
                        "startColumnNumber": 16,
                        "endLineNumber": 1360,
                        "endColumnNumber": 55
                    },
                    "nodeContext": "rewritten.append(textsearch.charAt(i));\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 157,
                        "startLineNumber": 1356,
                        "startColumnNumber": 53,
                        "endLineNumber": 1361,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  if (escaped) {\n    escaped=false;\n  }\n  rewritten.append(textsearch.charAt(i));\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 16,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 556,
                        "startLineNumber": 1356,
                        "startColumnNumber": 19,
                        "endLineNumber": 1370,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (textsearch.charAt(i) == '\\'') {\n  if (escaped) {\n    escaped=false;\n  }\n  rewritten.append(textsearch.charAt(i));\n}\n else if (textsearch.charAt(i) == ':') {\n  rewritten.append(\"\\\\:\");\n}\n else {\n  if (escaped) {\n    rewritten.append('\\\\');\n    escaped=false;\n  }\n  rewritten.append(textsearch.charAt(i));\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 57,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 804,
                        "startLineNumber": 1349,
                        "startColumnNumber": 12,
                        "endLineNumber": 1370,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (textsearch.charAt(i) == '\\\\') {\n  if (escaped) {\n    rewritten.append(\"\\\\\\\\\");\n    escaped=false;\n  }\n else {\n    escaped=true;\n  }\n}\n else if (textsearch.charAt(i) == '\\'') {\n  if (escaped) {\n    escaped=false;\n  }\n  rewritten.append(textsearch.charAt(i));\n}\n else if (textsearch.charAt(i) == ':') {\n  rewritten.append(\"\\\\:\");\n}\n else {\n  if (escaped) {\n    rewritten.append('\\\\');\n    escaped=false;\n  }\n  rewritten.append(textsearch.charAt(i));\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 82,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 828,
                        "startLineNumber": 1348,
                        "startColumnNumber": 54,
                        "endLineNumber": 1371,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (textsearch.charAt(i) == '\\\\') {\n    if (escaped) {\n      rewritten.append(\"\\\\\\\\\");\n      escaped=false;\n    }\n else {\n      escaped=true;\n    }\n  }\n else   if (textsearch.charAt(i) == '\\'') {\n    if (escaped) {\n      escaped=false;\n    }\n    rewritten.append(textsearch.charAt(i));\n  }\n else   if (textsearch.charAt(i) == ':') {\n    rewritten.append(\"\\\\:\");\n  }\n else {\n    if (escaped) {\n      rewritten.append('\\\\');\n      escaped=false;\n    }\n    rewritten.append(textsearch.charAt(i));\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 83,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 874,
                        "startLineNumber": 1348,
                        "startColumnNumber": 8,
                        "endLineNumber": 1371,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=0; i < textsearch.length(); i++) {\n  if (textsearch.charAt(i) == '\\\\') {\n    if (escaped) {\n      rewritten.append(\"\\\\\\\\\");\n      escaped=false;\n    }\n else {\n      escaped=true;\n    }\n  }\n else   if (textsearch.charAt(i) == '\\'') {\n    if (escaped) {\n      escaped=false;\n    }\n    rewritten.append(textsearch.charAt(i));\n  }\n else   if (textsearch.charAt(i) == ':') {\n    rewritten.append(\"\\\\:\");\n  }\n else {\n    if (escaped) {\n      rewritten.append('\\\\');\n      escaped=false;\n    }\n    rewritten.append(textsearch.charAt(i));\n  }\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 96,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1266,
                        "startLineNumber": 1340,
                        "startColumnNumber": 62,
                        "endLineNumber": 1373,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  StringBuilder rewritten=new StringBuilder();\n  textsearch=textsearch.replaceAll(\"AND\",\"and\");\n  textsearch=textsearch.replaceAll(\"NOT\",\"not\");\n  boolean escaped=false;\n  for (int i=0; i < textsearch.length(); i++) {\n    if (textsearch.charAt(i) == '\\\\') {\n      if (escaped) {\n        rewritten.append(\"\\\\\\\\\");\n        escaped=false;\n      }\n else {\n        escaped=true;\n      }\n    }\n else     if (textsearch.charAt(i) == '\\'') {\n      if (escaped) {\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n else     if (textsearch.charAt(i) == ':') {\n      rewritten.append(\"\\\\:\");\n    }\n else {\n      if (escaped) {\n        rewritten.append('\\\\');\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n  }\n  return rewritten.toString();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 130,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1463,
                        "startLineNumber": 1337,
                        "startColumnNumber": 4,
                        "endLineNumber": 1373,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Following logic is taken from org.apache.jackrabbit.core.query.lucene.JackrabbitQueryParser#parse(java.lang.String)\n */\nprivate static String rewriteQueryText(String textsearch){\n  StringBuilder rewritten=new StringBuilder();\n  textsearch=textsearch.replaceAll(\"AND\",\"and\");\n  textsearch=textsearch.replaceAll(\"NOT\",\"not\");\n  boolean escaped=false;\n  for (int i=0; i < textsearch.length(); i++) {\n    if (textsearch.charAt(i) == '\\\\') {\n      if (escaped) {\n        rewritten.append(\"\\\\\\\\\");\n        escaped=false;\n      }\n else {\n        escaped=true;\n      }\n    }\n else     if (textsearch.charAt(i) == '\\'') {\n      if (escaped) {\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n else     if (textsearch.charAt(i) == ':') {\n      rewritten.append(\"\\\\:\");\n    }\n else {\n      if (escaped) {\n        rewritten.append('\\\\');\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n  }\n  return rewritten.toString();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 141,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 39,
                    "startLineNumber": 1360,
                    "startColumnNumber": 16,
                    "endLineNumber": 1360,
                    "endColumnNumber": 55
                },
                "nodeContext": "rewritten.append(textsearch.charAt(i));\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 8,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        },
        {
            "nodeContext": "textsearch",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 10,
                "startLineNumber": 1361,
                "startColumnNumber": 23,
                "endLineNumber": 1361,
                "endColumnNumber": 33
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 20,
                        "startLineNumber": 1361,
                        "startColumnNumber": 23,
                        "endLineNumber": 1361,
                        "endColumnNumber": 43
                    },
                    "nodeContext": "textsearch.charAt(i)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 27,
                        "startLineNumber": 1361,
                        "startColumnNumber": 23,
                        "endLineNumber": 1361,
                        "endColumnNumber": 50
                    },
                    "nodeContext": "textsearch.charAt(i) == ':'",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 359,
                        "startLineNumber": 1361,
                        "startColumnNumber": 19,
                        "endLineNumber": 1370,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (textsearch.charAt(i) == ':') {\n  rewritten.append(\"\\\\:\");\n}\n else {\n  if (escaped) {\n    rewritten.append('\\\\');\n    escaped=false;\n  }\n  rewritten.append(textsearch.charAt(i));\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 34,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 556,
                        "startLineNumber": 1356,
                        "startColumnNumber": 19,
                        "endLineNumber": 1370,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (textsearch.charAt(i) == '\\'') {\n  if (escaped) {\n    escaped=false;\n  }\n  rewritten.append(textsearch.charAt(i));\n}\n else if (textsearch.charAt(i) == ':') {\n  rewritten.append(\"\\\\:\");\n}\n else {\n  if (escaped) {\n    rewritten.append('\\\\');\n    escaped=false;\n  }\n  rewritten.append(textsearch.charAt(i));\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 57,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 804,
                        "startLineNumber": 1349,
                        "startColumnNumber": 12,
                        "endLineNumber": 1370,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (textsearch.charAt(i) == '\\\\') {\n  if (escaped) {\n    rewritten.append(\"\\\\\\\\\");\n    escaped=false;\n  }\n else {\n    escaped=true;\n  }\n}\n else if (textsearch.charAt(i) == '\\'') {\n  if (escaped) {\n    escaped=false;\n  }\n  rewritten.append(textsearch.charAt(i));\n}\n else if (textsearch.charAt(i) == ':') {\n  rewritten.append(\"\\\\:\");\n}\n else {\n  if (escaped) {\n    rewritten.append('\\\\');\n    escaped=false;\n  }\n  rewritten.append(textsearch.charAt(i));\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 82,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 828,
                        "startLineNumber": 1348,
                        "startColumnNumber": 54,
                        "endLineNumber": 1371,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (textsearch.charAt(i) == '\\\\') {\n    if (escaped) {\n      rewritten.append(\"\\\\\\\\\");\n      escaped=false;\n    }\n else {\n      escaped=true;\n    }\n  }\n else   if (textsearch.charAt(i) == '\\'') {\n    if (escaped) {\n      escaped=false;\n    }\n    rewritten.append(textsearch.charAt(i));\n  }\n else   if (textsearch.charAt(i) == ':') {\n    rewritten.append(\"\\\\:\");\n  }\n else {\n    if (escaped) {\n      rewritten.append('\\\\');\n      escaped=false;\n    }\n    rewritten.append(textsearch.charAt(i));\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 83,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 874,
                        "startLineNumber": 1348,
                        "startColumnNumber": 8,
                        "endLineNumber": 1371,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=0; i < textsearch.length(); i++) {\n  if (textsearch.charAt(i) == '\\\\') {\n    if (escaped) {\n      rewritten.append(\"\\\\\\\\\");\n      escaped=false;\n    }\n else {\n      escaped=true;\n    }\n  }\n else   if (textsearch.charAt(i) == '\\'') {\n    if (escaped) {\n      escaped=false;\n    }\n    rewritten.append(textsearch.charAt(i));\n  }\n else   if (textsearch.charAt(i) == ':') {\n    rewritten.append(\"\\\\:\");\n  }\n else {\n    if (escaped) {\n      rewritten.append('\\\\');\n      escaped=false;\n    }\n    rewritten.append(textsearch.charAt(i));\n  }\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 96,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1266,
                        "startLineNumber": 1340,
                        "startColumnNumber": 62,
                        "endLineNumber": 1373,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  StringBuilder rewritten=new StringBuilder();\n  textsearch=textsearch.replaceAll(\"AND\",\"and\");\n  textsearch=textsearch.replaceAll(\"NOT\",\"not\");\n  boolean escaped=false;\n  for (int i=0; i < textsearch.length(); i++) {\n    if (textsearch.charAt(i) == '\\\\') {\n      if (escaped) {\n        rewritten.append(\"\\\\\\\\\");\n        escaped=false;\n      }\n else {\n        escaped=true;\n      }\n    }\n else     if (textsearch.charAt(i) == '\\'') {\n      if (escaped) {\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n else     if (textsearch.charAt(i) == ':') {\n      rewritten.append(\"\\\\:\");\n    }\n else {\n      if (escaped) {\n        rewritten.append('\\\\');\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n  }\n  return rewritten.toString();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 130,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1463,
                        "startLineNumber": 1337,
                        "startColumnNumber": 4,
                        "endLineNumber": 1373,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Following logic is taken from org.apache.jackrabbit.core.query.lucene.JackrabbitQueryParser#parse(java.lang.String)\n */\nprivate static String rewriteQueryText(String textsearch){\n  StringBuilder rewritten=new StringBuilder();\n  textsearch=textsearch.replaceAll(\"AND\",\"and\");\n  textsearch=textsearch.replaceAll(\"NOT\",\"not\");\n  boolean escaped=false;\n  for (int i=0; i < textsearch.length(); i++) {\n    if (textsearch.charAt(i) == '\\\\') {\n      if (escaped) {\n        rewritten.append(\"\\\\\\\\\");\n        escaped=false;\n      }\n else {\n        escaped=true;\n      }\n    }\n else     if (textsearch.charAt(i) == '\\'') {\n      if (escaped) {\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n else     if (textsearch.charAt(i) == ':') {\n      rewritten.append(\"\\\\:\");\n    }\n else {\n      if (escaped) {\n        rewritten.append('\\\\');\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n  }\n  return rewritten.toString();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 141,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 27,
                    "startLineNumber": 1361,
                    "startColumnNumber": 23,
                    "endLineNumber": 1361,
                    "endColumnNumber": 50
                },
                "nodeContext": "textsearch.charAt(i) == ':'",
                "nodeType": "InfixExpression",
                "astNodeNumber": 6,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        },
        {
            "nodeContext": "textsearch",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 10,
                "startLineNumber": 1369,
                "startColumnNumber": 33,
                "endLineNumber": 1369,
                "endColumnNumber": 43
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 20,
                        "startLineNumber": 1369,
                        "startColumnNumber": 33,
                        "endLineNumber": 1369,
                        "endColumnNumber": 53
                    },
                    "nodeContext": "textsearch.charAt(i)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 38,
                        "startLineNumber": 1369,
                        "startColumnNumber": 16,
                        "endLineNumber": 1369,
                        "endColumnNumber": 54
                    },
                    "nodeContext": "rewritten.append(textsearch.charAt(i))",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 39,
                        "startLineNumber": 1369,
                        "startColumnNumber": 16,
                        "endLineNumber": 1369,
                        "endColumnNumber": 55
                    },
                    "nodeContext": "rewritten.append(textsearch.charAt(i));\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 201,
                        "startLineNumber": 1364,
                        "startColumnNumber": 19,
                        "endLineNumber": 1370,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  if (escaped) {\n    rewritten.append('\\\\');\n    escaped=false;\n  }\n  rewritten.append(textsearch.charAt(i));\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 21,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 359,
                        "startLineNumber": 1361,
                        "startColumnNumber": 19,
                        "endLineNumber": 1370,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (textsearch.charAt(i) == ':') {\n  rewritten.append(\"\\\\:\");\n}\n else {\n  if (escaped) {\n    rewritten.append('\\\\');\n    escaped=false;\n  }\n  rewritten.append(textsearch.charAt(i));\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 34,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 556,
                        "startLineNumber": 1356,
                        "startColumnNumber": 19,
                        "endLineNumber": 1370,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (textsearch.charAt(i) == '\\'') {\n  if (escaped) {\n    escaped=false;\n  }\n  rewritten.append(textsearch.charAt(i));\n}\n else if (textsearch.charAt(i) == ':') {\n  rewritten.append(\"\\\\:\");\n}\n else {\n  if (escaped) {\n    rewritten.append('\\\\');\n    escaped=false;\n  }\n  rewritten.append(textsearch.charAt(i));\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 57,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 804,
                        "startLineNumber": 1349,
                        "startColumnNumber": 12,
                        "endLineNumber": 1370,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (textsearch.charAt(i) == '\\\\') {\n  if (escaped) {\n    rewritten.append(\"\\\\\\\\\");\n    escaped=false;\n  }\n else {\n    escaped=true;\n  }\n}\n else if (textsearch.charAt(i) == '\\'') {\n  if (escaped) {\n    escaped=false;\n  }\n  rewritten.append(textsearch.charAt(i));\n}\n else if (textsearch.charAt(i) == ':') {\n  rewritten.append(\"\\\\:\");\n}\n else {\n  if (escaped) {\n    rewritten.append('\\\\');\n    escaped=false;\n  }\n  rewritten.append(textsearch.charAt(i));\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 82,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 828,
                        "startLineNumber": 1348,
                        "startColumnNumber": 54,
                        "endLineNumber": 1371,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (textsearch.charAt(i) == '\\\\') {\n    if (escaped) {\n      rewritten.append(\"\\\\\\\\\");\n      escaped=false;\n    }\n else {\n      escaped=true;\n    }\n  }\n else   if (textsearch.charAt(i) == '\\'') {\n    if (escaped) {\n      escaped=false;\n    }\n    rewritten.append(textsearch.charAt(i));\n  }\n else   if (textsearch.charAt(i) == ':') {\n    rewritten.append(\"\\\\:\");\n  }\n else {\n    if (escaped) {\n      rewritten.append('\\\\');\n      escaped=false;\n    }\n    rewritten.append(textsearch.charAt(i));\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 83,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 874,
                        "startLineNumber": 1348,
                        "startColumnNumber": 8,
                        "endLineNumber": 1371,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=0; i < textsearch.length(); i++) {\n  if (textsearch.charAt(i) == '\\\\') {\n    if (escaped) {\n      rewritten.append(\"\\\\\\\\\");\n      escaped=false;\n    }\n else {\n      escaped=true;\n    }\n  }\n else   if (textsearch.charAt(i) == '\\'') {\n    if (escaped) {\n      escaped=false;\n    }\n    rewritten.append(textsearch.charAt(i));\n  }\n else   if (textsearch.charAt(i) == ':') {\n    rewritten.append(\"\\\\:\");\n  }\n else {\n    if (escaped) {\n      rewritten.append('\\\\');\n      escaped=false;\n    }\n    rewritten.append(textsearch.charAt(i));\n  }\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 96,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1266,
                        "startLineNumber": 1340,
                        "startColumnNumber": 62,
                        "endLineNumber": 1373,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  StringBuilder rewritten=new StringBuilder();\n  textsearch=textsearch.replaceAll(\"AND\",\"and\");\n  textsearch=textsearch.replaceAll(\"NOT\",\"not\");\n  boolean escaped=false;\n  for (int i=0; i < textsearch.length(); i++) {\n    if (textsearch.charAt(i) == '\\\\') {\n      if (escaped) {\n        rewritten.append(\"\\\\\\\\\");\n        escaped=false;\n      }\n else {\n        escaped=true;\n      }\n    }\n else     if (textsearch.charAt(i) == '\\'') {\n      if (escaped) {\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n else     if (textsearch.charAt(i) == ':') {\n      rewritten.append(\"\\\\:\");\n    }\n else {\n      if (escaped) {\n        rewritten.append('\\\\');\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n  }\n  return rewritten.toString();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 130,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1463,
                        "startLineNumber": 1337,
                        "startColumnNumber": 4,
                        "endLineNumber": 1373,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Following logic is taken from org.apache.jackrabbit.core.query.lucene.JackrabbitQueryParser#parse(java.lang.String)\n */\nprivate static String rewriteQueryText(String textsearch){\n  StringBuilder rewritten=new StringBuilder();\n  textsearch=textsearch.replaceAll(\"AND\",\"and\");\n  textsearch=textsearch.replaceAll(\"NOT\",\"not\");\n  boolean escaped=false;\n  for (int i=0; i < textsearch.length(); i++) {\n    if (textsearch.charAt(i) == '\\\\') {\n      if (escaped) {\n        rewritten.append(\"\\\\\\\\\");\n        escaped=false;\n      }\n else {\n        escaped=true;\n      }\n    }\n else     if (textsearch.charAt(i) == '\\'') {\n      if (escaped) {\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n else     if (textsearch.charAt(i) == ':') {\n      rewritten.append(\"\\\\:\");\n    }\n else {\n      if (escaped) {\n        rewritten.append('\\\\');\n        escaped=false;\n      }\n      rewritten.append(textsearch.charAt(i));\n    }\n  }\n  return rewritten.toString();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 141,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 39,
                    "startLineNumber": 1369,
                    "startColumnNumber": 16,
                    "endLineNumber": 1369,
                    "endColumnNumber": 55
                },
                "nodeContext": "rewritten.append(textsearch.charAt(i));\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 8,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        }
    ],
    "positionList": [
        {
            "charLength": 10,
            "startLineNumber": 1345,
            "startColumnNumber": 21,
            "endLineNumber": 1345,
            "endColumnNumber": 31
        },
        {
            "charLength": 10,
            "startLineNumber": 1346,
            "startColumnNumber": 21,
            "endLineNumber": 1346,
            "endColumnNumber": 31
        },
        {
            "charLength": 10,
            "startLineNumber": 1348,
            "startColumnNumber": 28,
            "endLineNumber": 1348,
            "endColumnNumber": 38
        },
        {
            "charLength": 10,
            "startLineNumber": 1349,
            "startColumnNumber": 16,
            "endLineNumber": 1349,
            "endColumnNumber": 26
        },
        {
            "charLength": 10,
            "startLineNumber": 1356,
            "startColumnNumber": 23,
            "endLineNumber": 1356,
            "endColumnNumber": 33
        },
        {
            "charLength": 10,
            "startLineNumber": 1360,
            "startColumnNumber": 33,
            "endLineNumber": 1360,
            "endColumnNumber": 43
        },
        {
            "charLength": 10,
            "startLineNumber": 1361,
            "startColumnNumber": 23,
            "endLineNumber": 1361,
            "endColumnNumber": 33
        },
        {
            "charLength": 10,
            "startLineNumber": 1369,
            "startColumnNumber": 33,
            "endLineNumber": 1369,
            "endColumnNumber": 43
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 6,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 7,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 6,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 7,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 2,
            "secondKey": 4,
            "layout": 2
        },
        {
            "firstKey": 2,
            "secondKey": 5,
            "layout": 2
        },
        {
            "firstKey": 2,
            "secondKey": 6,
            "layout": 2
        },
        {
            "firstKey": 2,
            "secondKey": 7,
            "layout": 2
        },
        {
            "firstKey": 3,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 1,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 2,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 4,
            "layout": 2
        },
        {
            "firstKey": 3,
            "secondKey": 5,
            "layout": 2
        },
        {
            "firstKey": 3,
            "secondKey": 6,
            "layout": 2
        },
        {
            "firstKey": 3,
            "secondKey": 7,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 0,
            "layout": 6
        },
        {
            "firstKey": 4,
            "secondKey": 1,
            "layout": 6
        },
        {
            "firstKey": 4,
            "secondKey": 2,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 4,
            "secondKey": 5,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 6,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 7,
            "layout": 2
        },
        {
            "firstKey": 5,
            "secondKey": 0,
            "layout": 8
        },
        {
            "firstKey": 5,
            "secondKey": 1,
            "layout": 8
        },
        {
            "firstKey": 5,
            "secondKey": 2,
            "layout": 7
        },
        {
            "firstKey": 5,
            "secondKey": 3,
            "layout": 5
        },
        {
            "firstKey": 5,
            "secondKey": 4,
            "layout": 4
        },
        {
            "firstKey": 5,
            "secondKey": 6,
            "layout": 4
        },
        {
            "firstKey": 5,
            "secondKey": 7,
            "layout": 4
        },
        {
            "firstKey": 6,
            "secondKey": 0,
            "layout": 7
        },
        {
            "firstKey": 6,
            "secondKey": 1,
            "layout": 7
        },
        {
            "firstKey": 6,
            "secondKey": 2,
            "layout": 6
        },
        {
            "firstKey": 6,
            "secondKey": 3,
            "layout": 4
        },
        {
            "firstKey": 6,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 6,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 6,
            "secondKey": 7,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 0,
            "layout": 9
        },
        {
            "firstKey": 7,
            "secondKey": 1,
            "layout": 9
        },
        {
            "firstKey": 7,
            "secondKey": 2,
            "layout": 8
        },
        {
            "firstKey": 7,
            "secondKey": 3,
            "layout": 6
        },
        {
            "firstKey": 7,
            "secondKey": 4,
            "layout": 5
        },
        {
            "firstKey": 7,
            "secondKey": 5,
            "layout": 5
        },
        {
            "firstKey": 7,
            "secondKey": 6,
            "layout": 4
        }
    ]
}