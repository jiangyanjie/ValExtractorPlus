{
    "id": 71,
    "expression": "headers",
    "projectName": "square@retrofit",
    "commitID": "5795931d159f0a591e5dad3d9de6f8d0e9785413",
    "filePath": "retrofit/src/main/java/retrofit/mime/MultipartTypedOutput.java",
    "occurrences": 11,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "headers",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 174,
                "startColumnNumber": 6,
                "endLineNumber": 174,
                "endColumnNumber": 13
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 57,
                        "startLineNumber": 174,
                        "startColumnNumber": 6,
                        "endLineNumber": 174,
                        "endColumnNumber": 63
                    },
                    "nodeContext": "headers.append(\"Content-Disposition: form-data; name=\\\"\")",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 58,
                        "startLineNumber": 174,
                        "startColumnNumber": 6,
                        "endLineNumber": 174,
                        "endColumnNumber": 64
                    },
                    "nodeContext": "headers.append(\"Content-Disposition: form-data; name=\\\"\");\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 813,
                        "startLineNumber": 170,
                        "startColumnNumber": 8,
                        "endLineNumber": 196,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 98,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 922,
                        "startLineNumber": 170,
                        "startColumnNumber": 4,
                        "endLineNumber": 198,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "try {\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n catch (IOException ex) {\n  throw new RuntimeException(\"Unable to write multipart header\",ex);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 111,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 932,
                        "startLineNumber": 169,
                        "startColumnNumber": 93,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 112,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1023,
                        "startLineNumber": 169,
                        "startColumnNumber": 2,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "private static byte[] buildHeader(String name,String transferEncoding,TypedOutput value){\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 131,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 58,
                    "startLineNumber": 174,
                    "startColumnNumber": 6,
                    "endLineNumber": 174,
                    "endColumnNumber": 64
                },
                "nodeContext": "headers.append(\"Content-Disposition: form-data; name=\\\"\");\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 5,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "java.lang.StringBuilder"
        },
        {
            "nodeContext": "headers",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 175,
                "startColumnNumber": 6,
                "endLineNumber": 175,
                "endColumnNumber": 13
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 20,
                        "startLineNumber": 175,
                        "startColumnNumber": 6,
                        "endLineNumber": 175,
                        "endColumnNumber": 26
                    },
                    "nodeContext": "headers.append(name)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 21,
                        "startLineNumber": 175,
                        "startColumnNumber": 6,
                        "endLineNumber": 175,
                        "endColumnNumber": 27
                    },
                    "nodeContext": "headers.append(name);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 813,
                        "startLineNumber": 170,
                        "startColumnNumber": 8,
                        "endLineNumber": 196,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 98,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 922,
                        "startLineNumber": 170,
                        "startColumnNumber": 4,
                        "endLineNumber": 198,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "try {\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n catch (IOException ex) {\n  throw new RuntimeException(\"Unable to write multipart header\",ex);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 111,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 932,
                        "startLineNumber": 169,
                        "startColumnNumber": 93,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 112,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1023,
                        "startLineNumber": 169,
                        "startColumnNumber": 2,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "private static byte[] buildHeader(String name,String transferEncoding,TypedOutput value){\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 131,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 21,
                    "startLineNumber": 175,
                    "startColumnNumber": 6,
                    "endLineNumber": 175,
                    "endColumnNumber": 27
                },
                "nodeContext": "headers.append(name);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 5,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "java.lang.StringBuilder"
        },
        {
            "nodeContext": "headers",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 179,
                "startColumnNumber": 8,
                "endLineNumber": 179,
                "endColumnNumber": 15
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 33,
                        "startLineNumber": 179,
                        "startColumnNumber": 8,
                        "endLineNumber": 179,
                        "endColumnNumber": 41
                    },
                    "nodeContext": "headers.append(\"\\\"; filename=\\\"\")",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 34,
                        "startLineNumber": 179,
                        "startColumnNumber": 8,
                        "endLineNumber": 179,
                        "endColumnNumber": 42
                    },
                    "nodeContext": "headers.append(\"\\\"; filename=\\\"\");\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 86,
                        "startLineNumber": 178,
                        "startColumnNumber": 28,
                        "endLineNumber": 181,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "{\n  headers.append(\"\\\"; filename=\\\"\");\n  headers.append(fileName);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 11,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 108,
                        "startLineNumber": 178,
                        "startColumnNumber": 6,
                        "endLineNumber": 181,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "if (fileName != null) {\n  headers.append(\"\\\"; filename=\\\"\");\n  headers.append(fileName);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 15,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 813,
                        "startLineNumber": 170,
                        "startColumnNumber": 8,
                        "endLineNumber": 196,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 98,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 922,
                        "startLineNumber": 170,
                        "startColumnNumber": 4,
                        "endLineNumber": 198,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "try {\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n catch (IOException ex) {\n  throw new RuntimeException(\"Unable to write multipart header\",ex);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 111,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 932,
                        "startLineNumber": 169,
                        "startColumnNumber": 93,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 112,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1023,
                        "startLineNumber": 169,
                        "startColumnNumber": 2,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "private static byte[] buildHeader(String name,String transferEncoding,TypedOutput value){\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 131,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 34,
                    "startLineNumber": 179,
                    "startColumnNumber": 8,
                    "endLineNumber": 179,
                    "endColumnNumber": 42
                },
                "nodeContext": "headers.append(\"\\\"; filename=\\\"\");\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 5,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "java.lang.StringBuilder"
        },
        {
            "nodeContext": "headers",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 180,
                "startColumnNumber": 8,
                "endLineNumber": 180,
                "endColumnNumber": 15
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 24,
                        "startLineNumber": 180,
                        "startColumnNumber": 8,
                        "endLineNumber": 180,
                        "endColumnNumber": 32
                    },
                    "nodeContext": "headers.append(fileName)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 25,
                        "startLineNumber": 180,
                        "startColumnNumber": 8,
                        "endLineNumber": 180,
                        "endColumnNumber": 33
                    },
                    "nodeContext": "headers.append(fileName);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 86,
                        "startLineNumber": 178,
                        "startColumnNumber": 28,
                        "endLineNumber": 181,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "{\n  headers.append(\"\\\"; filename=\\\"\");\n  headers.append(fileName);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 11,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 108,
                        "startLineNumber": 178,
                        "startColumnNumber": 6,
                        "endLineNumber": 181,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "if (fileName != null) {\n  headers.append(\"\\\"; filename=\\\"\");\n  headers.append(fileName);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 15,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 813,
                        "startLineNumber": 170,
                        "startColumnNumber": 8,
                        "endLineNumber": 196,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 98,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 922,
                        "startLineNumber": 170,
                        "startColumnNumber": 4,
                        "endLineNumber": 198,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "try {\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n catch (IOException ex) {\n  throw new RuntimeException(\"Unable to write multipart header\",ex);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 111,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 932,
                        "startLineNumber": 169,
                        "startColumnNumber": 93,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 112,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1023,
                        "startLineNumber": 169,
                        "startColumnNumber": 2,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "private static byte[] buildHeader(String name,String transferEncoding,TypedOutput value){\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 131,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 25,
                    "startLineNumber": 180,
                    "startColumnNumber": 8,
                    "endLineNumber": 180,
                    "endColumnNumber": 33
                },
                "nodeContext": "headers.append(fileName);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 5,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "java.lang.StringBuilder"
        },
        {
            "nodeContext": "headers",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 183,
                "startColumnNumber": 6,
                "endLineNumber": 183,
                "endColumnNumber": 13
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 38,
                        "startLineNumber": 183,
                        "startColumnNumber": 6,
                        "endLineNumber": 183,
                        "endColumnNumber": 44
                    },
                    "nodeContext": "headers.append(\"\\\"\\r\\nContent-Type: \")",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 39,
                        "startLineNumber": 183,
                        "startColumnNumber": 6,
                        "endLineNumber": 183,
                        "endColumnNumber": 45
                    },
                    "nodeContext": "headers.append(\"\\\"\\r\\nContent-Type: \");\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 813,
                        "startLineNumber": 170,
                        "startColumnNumber": 8,
                        "endLineNumber": 196,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 98,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 922,
                        "startLineNumber": 170,
                        "startColumnNumber": 4,
                        "endLineNumber": 198,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "try {\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n catch (IOException ex) {\n  throw new RuntimeException(\"Unable to write multipart header\",ex);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 111,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 932,
                        "startLineNumber": 169,
                        "startColumnNumber": 93,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 112,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1023,
                        "startLineNumber": 169,
                        "startColumnNumber": 2,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "private static byte[] buildHeader(String name,String transferEncoding,TypedOutput value){\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 131,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 39,
                    "startLineNumber": 183,
                    "startColumnNumber": 6,
                    "endLineNumber": 183,
                    "endColumnNumber": 45
                },
                "nodeContext": "headers.append(\"\\\"\\r\\nContent-Type: \");\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 5,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "java.lang.StringBuilder"
        },
        {
            "nodeContext": "headers",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 184,
                "startColumnNumber": 6,
                "endLineNumber": 184,
                "endColumnNumber": 13
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 32,
                        "startLineNumber": 184,
                        "startColumnNumber": 6,
                        "endLineNumber": 184,
                        "endColumnNumber": 38
                    },
                    "nodeContext": "headers.append(value.mimeType())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 33,
                        "startLineNumber": 184,
                        "startColumnNumber": 6,
                        "endLineNumber": 184,
                        "endColumnNumber": 39
                    },
                    "nodeContext": "headers.append(value.mimeType());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 813,
                        "startLineNumber": 170,
                        "startColumnNumber": 8,
                        "endLineNumber": 196,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 98,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 922,
                        "startLineNumber": 170,
                        "startColumnNumber": 4,
                        "endLineNumber": 198,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "try {\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n catch (IOException ex) {\n  throw new RuntimeException(\"Unable to write multipart header\",ex);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 111,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 932,
                        "startLineNumber": 169,
                        "startColumnNumber": 93,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 112,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1023,
                        "startLineNumber": 169,
                        "startColumnNumber": 2,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "private static byte[] buildHeader(String name,String transferEncoding,TypedOutput value){\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 131,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 33,
                    "startLineNumber": 184,
                    "startColumnNumber": 6,
                    "endLineNumber": 184,
                    "endColumnNumber": 39
                },
                "nodeContext": "headers.append(value.mimeType());\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 7,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.lang.StringBuilder"
        },
        {
            "nodeContext": "headers",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 188,
                "startColumnNumber": 8,
                "endLineNumber": 188,
                "endColumnNumber": 15
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 38,
                        "startLineNumber": 188,
                        "startColumnNumber": 8,
                        "endLineNumber": 188,
                        "endColumnNumber": 46
                    },
                    "nodeContext": "headers.append(\"\\r\\nContent-Length: \")",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 53,
                        "startLineNumber": 188,
                        "startColumnNumber": 8,
                        "endLineNumber": 188,
                        "endColumnNumber": 61
                    },
                    "nodeContext": "headers.append(\"\\r\\nContent-Length: \").append(length)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 54,
                        "startLineNumber": 188,
                        "startColumnNumber": 8,
                        "endLineNumber": 188,
                        "endColumnNumber": 62
                    },
                    "nodeContext": "headers.append(\"\\r\\nContent-Length: \").append(length);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 72,
                        "startLineNumber": 187,
                        "startColumnNumber": 24,
                        "endLineNumber": 189,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "{\n  headers.append(\"\\r\\nContent-Length: \").append(length);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 9,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 90,
                        "startLineNumber": 187,
                        "startColumnNumber": 6,
                        "endLineNumber": 189,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "if (length != -1) {\n  headers.append(\"\\r\\nContent-Length: \").append(length);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 14,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 813,
                        "startLineNumber": 170,
                        "startColumnNumber": 8,
                        "endLineNumber": 196,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 98,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 922,
                        "startLineNumber": 170,
                        "startColumnNumber": 4,
                        "endLineNumber": 198,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "try {\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n catch (IOException ex) {\n  throw new RuntimeException(\"Unable to write multipart header\",ex);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 111,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 932,
                        "startLineNumber": 169,
                        "startColumnNumber": 93,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 112,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1023,
                        "startLineNumber": 169,
                        "startColumnNumber": 2,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "private static byte[] buildHeader(String name,String transferEncoding,TypedOutput value){\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 131,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 54,
                    "startLineNumber": 188,
                    "startColumnNumber": 8,
                    "endLineNumber": 188,
                    "endColumnNumber": 62
                },
                "nodeContext": "headers.append(\"\\r\\nContent-Length: \").append(length);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 8,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.lang.StringBuilder"
        },
        {
            "nodeContext": "headers",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 191,
                "startColumnNumber": 6,
                "endLineNumber": 191,
                "endColumnNumber": 13
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 49,
                        "startLineNumber": 191,
                        "startColumnNumber": 6,
                        "endLineNumber": 191,
                        "endColumnNumber": 55
                    },
                    "nodeContext": "headers.append(\"\\r\\nContent-Transfer-Encoding: \")",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 50,
                        "startLineNumber": 191,
                        "startColumnNumber": 6,
                        "endLineNumber": 191,
                        "endColumnNumber": 56
                    },
                    "nodeContext": "headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 813,
                        "startLineNumber": 170,
                        "startColumnNumber": 8,
                        "endLineNumber": 196,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 98,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 922,
                        "startLineNumber": 170,
                        "startColumnNumber": 4,
                        "endLineNumber": 198,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "try {\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n catch (IOException ex) {\n  throw new RuntimeException(\"Unable to write multipart header\",ex);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 111,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 932,
                        "startLineNumber": 169,
                        "startColumnNumber": 93,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 112,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1023,
                        "startLineNumber": 169,
                        "startColumnNumber": 2,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "private static byte[] buildHeader(String name,String transferEncoding,TypedOutput value){\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 131,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 50,
                    "startLineNumber": 191,
                    "startColumnNumber": 6,
                    "endLineNumber": 191,
                    "endColumnNumber": 56
                },
                "nodeContext": "headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 5,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "java.lang.StringBuilder"
        },
        {
            "nodeContext": "headers",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 192,
                "startColumnNumber": 6,
                "endLineNumber": 192,
                "endColumnNumber": 13
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 32,
                        "startLineNumber": 192,
                        "startColumnNumber": 6,
                        "endLineNumber": 192,
                        "endColumnNumber": 38
                    },
                    "nodeContext": "headers.append(transferEncoding)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 33,
                        "startLineNumber": 192,
                        "startColumnNumber": 6,
                        "endLineNumber": 192,
                        "endColumnNumber": 39
                    },
                    "nodeContext": "headers.append(transferEncoding);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 813,
                        "startLineNumber": 170,
                        "startColumnNumber": 8,
                        "endLineNumber": 196,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 98,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 922,
                        "startLineNumber": 170,
                        "startColumnNumber": 4,
                        "endLineNumber": 198,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "try {\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n catch (IOException ex) {\n  throw new RuntimeException(\"Unable to write multipart header\",ex);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 111,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 932,
                        "startLineNumber": 169,
                        "startColumnNumber": 93,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 112,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1023,
                        "startLineNumber": 169,
                        "startColumnNumber": 2,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "private static byte[] buildHeader(String name,String transferEncoding,TypedOutput value){\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 131,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 33,
                    "startLineNumber": 192,
                    "startColumnNumber": 6,
                    "endLineNumber": 192,
                    "endColumnNumber": 39
                },
                "nodeContext": "headers.append(transferEncoding);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 5,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "java.lang.StringBuilder"
        },
        {
            "nodeContext": "headers",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 193,
                "startColumnNumber": 6,
                "endLineNumber": 193,
                "endColumnNumber": 13
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 26,
                        "startLineNumber": 193,
                        "startColumnNumber": 6,
                        "endLineNumber": 193,
                        "endColumnNumber": 32
                    },
                    "nodeContext": "headers.append(\"\\r\\n\\r\\n\")",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 27,
                        "startLineNumber": 193,
                        "startColumnNumber": 6,
                        "endLineNumber": 193,
                        "endColumnNumber": 33
                    },
                    "nodeContext": "headers.append(\"\\r\\n\\r\\n\");\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 813,
                        "startLineNumber": 170,
                        "startColumnNumber": 8,
                        "endLineNumber": 196,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 98,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 922,
                        "startLineNumber": 170,
                        "startColumnNumber": 4,
                        "endLineNumber": 198,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "try {\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n catch (IOException ex) {\n  throw new RuntimeException(\"Unable to write multipart header\",ex);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 111,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 932,
                        "startLineNumber": 169,
                        "startColumnNumber": 93,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 112,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1023,
                        "startLineNumber": 169,
                        "startColumnNumber": 2,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "private static byte[] buildHeader(String name,String transferEncoding,TypedOutput value){\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 131,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 27,
                    "startLineNumber": 193,
                    "startColumnNumber": 6,
                    "endLineNumber": 193,
                    "endColumnNumber": 33
                },
                "nodeContext": "headers.append(\"\\r\\n\\r\\n\");\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 5,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "java.lang.StringBuilder"
        },
        {
            "nodeContext": "headers",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 195,
                "startColumnNumber": 13,
                "endLineNumber": 195,
                "endColumnNumber": 20
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 18,
                        "startLineNumber": 195,
                        "startColumnNumber": 13,
                        "endLineNumber": 195,
                        "endColumnNumber": 31
                    },
                    "nodeContext": "headers.toString()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
                    "nodePosition": {
                        "charLength": 36,
                        "startLineNumber": 195,
                        "startColumnNumber": 13,
                        "endLineNumber": 195,
                        "endColumnNumber": 49
                    },
                    "nodeContext": "headers.toString().getBytes(\"UTF-8\")",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 44,
                        "startLineNumber": 195,
                        "startColumnNumber": 6,
                        "endLineNumber": 195,
                        "endColumnNumber": 50
                    },
                    "nodeContext": "return headers.toString().getBytes(\"UTF-8\");\n",
                    "nodeType": "ReturnStatement",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 813,
                        "startLineNumber": 170,
                        "startColumnNumber": 8,
                        "endLineNumber": 196,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 98,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 922,
                        "startLineNumber": 170,
                        "startColumnNumber": 4,
                        "endLineNumber": 198,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "try {\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n catch (IOException ex) {\n  throw new RuntimeException(\"Unable to write multipart header\",ex);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 111,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 932,
                        "startLineNumber": 169,
                        "startColumnNumber": 93,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 112,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1023,
                        "startLineNumber": 169,
                        "startColumnNumber": 2,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "private static byte[] buildHeader(String name,String transferEncoding,TypedOutput value){\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 131,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 44,
                    "startLineNumber": 195,
                    "startColumnNumber": 6,
                    "endLineNumber": 195,
                    "endColumnNumber": 50
                },
                "nodeContext": "return headers.toString().getBytes(\"UTF-8\");\n",
                "nodeType": "ReturnStatement",
                "astNodeNumber": 7,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.lang.StringBuilder"
        }
    ],
    "positionList": [
        {
            "charLength": 7,
            "startLineNumber": 174,
            "startColumnNumber": 6,
            "endLineNumber": 174,
            "endColumnNumber": 13
        },
        {
            "charLength": 7,
            "startLineNumber": 175,
            "startColumnNumber": 6,
            "endLineNumber": 175,
            "endColumnNumber": 13
        },
        {
            "charLength": 7,
            "startLineNumber": 179,
            "startColumnNumber": 8,
            "endLineNumber": 179,
            "endColumnNumber": 15
        },
        {
            "charLength": 7,
            "startLineNumber": 180,
            "startColumnNumber": 8,
            "endLineNumber": 180,
            "endColumnNumber": 15
        },
        {
            "charLength": 7,
            "startLineNumber": 183,
            "startColumnNumber": 6,
            "endLineNumber": 183,
            "endColumnNumber": 13
        },
        {
            "charLength": 7,
            "startLineNumber": 184,
            "startColumnNumber": 6,
            "endLineNumber": 184,
            "endColumnNumber": 13
        },
        {
            "charLength": 7,
            "startLineNumber": 188,
            "startColumnNumber": 8,
            "endLineNumber": 188,
            "endColumnNumber": 15
        },
        {
            "charLength": 7,
            "startLineNumber": 191,
            "startColumnNumber": 6,
            "endLineNumber": 191,
            "endColumnNumber": 13
        },
        {
            "charLength": 7,
            "startLineNumber": 192,
            "startColumnNumber": 6,
            "endLineNumber": 192,
            "endColumnNumber": 13
        },
        {
            "charLength": 7,
            "startLineNumber": 193,
            "startColumnNumber": 6,
            "endLineNumber": 193,
            "endColumnNumber": 13
        },
        {
            "charLength": 7,
            "startLineNumber": 195,
            "startColumnNumber": 13,
            "endLineNumber": 195,
            "endColumnNumber": 20
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 4,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 5,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 6,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 7,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 8,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 9,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 10,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 4,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 5,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 6,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 7,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 8,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 9,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 10,
            "layout": 2
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 2,
            "secondKey": 4,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 5,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 6,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 7,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 8,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 9,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 10,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 1,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 3,
            "secondKey": 4,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 5,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 6,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 7,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 8,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 9,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 10,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 0,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 5,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 6,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 7,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 8,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 9,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 10,
            "layout": 2
        },
        {
            "firstKey": 5,
            "secondKey": 0,
            "layout": 2
        },
        {
            "firstKey": 5,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 5,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 5,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 5,
            "secondKey": 4,
            "layout": 2
        },
        {
            "firstKey": 5,
            "secondKey": 6,
            "layout": 2
        },
        {
            "firstKey": 5,
            "secondKey": 7,
            "layout": 2
        },
        {
            "firstKey": 5,
            "secondKey": 8,
            "layout": 2
        },
        {
            "firstKey": 5,
            "secondKey": 9,
            "layout": 2
        },
        {
            "firstKey": 5,
            "secondKey": 10,
            "layout": 2
        },
        {
            "firstKey": 6,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 6,
            "secondKey": 1,
            "layout": 5
        },
        {
            "firstKey": 6,
            "secondKey": 2,
            "layout": 5
        },
        {
            "firstKey": 6,
            "secondKey": 3,
            "layout": 5
        },
        {
            "firstKey": 6,
            "secondKey": 4,
            "layout": 5
        },
        {
            "firstKey": 6,
            "secondKey": 5,
            "layout": 5
        },
        {
            "firstKey": 6,
            "secondKey": 7,
            "layout": 5
        },
        {
            "firstKey": 6,
            "secondKey": 8,
            "layout": 5
        },
        {
            "firstKey": 6,
            "secondKey": 9,
            "layout": 5
        },
        {
            "firstKey": 6,
            "secondKey": 10,
            "layout": 5
        },
        {
            "firstKey": 7,
            "secondKey": 0,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 4,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 5,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 6,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 8,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 9,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 10,
            "layout": 2
        },
        {
            "firstKey": 8,
            "secondKey": 0,
            "layout": 2
        },
        {
            "firstKey": 8,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 8,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 8,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 8,
            "secondKey": 4,
            "layout": 2
        },
        {
            "firstKey": 8,
            "secondKey": 5,
            "layout": 2
        },
        {
            "firstKey": 8,
            "secondKey": 6,
            "layout": 2
        },
        {
            "firstKey": 8,
            "secondKey": 7,
            "layout": 2
        },
        {
            "firstKey": 8,
            "secondKey": 9,
            "layout": 2
        },
        {
            "firstKey": 8,
            "secondKey": 10,
            "layout": 2
        },
        {
            "firstKey": 9,
            "secondKey": 0,
            "layout": 2
        },
        {
            "firstKey": 9,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 9,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 9,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 9,
            "secondKey": 4,
            "layout": 2
        },
        {
            "firstKey": 9,
            "secondKey": 5,
            "layout": 2
        },
        {
            "firstKey": 9,
            "secondKey": 6,
            "layout": 2
        },
        {
            "firstKey": 9,
            "secondKey": 7,
            "layout": 2
        },
        {
            "firstKey": 9,
            "secondKey": 8,
            "layout": 2
        },
        {
            "firstKey": 9,
            "secondKey": 10,
            "layout": 2
        },
        {
            "firstKey": 10,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 10,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 10,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 10,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 10,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 10,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 10,
            "secondKey": 6,
            "layout": 3
        },
        {
            "firstKey": 10,
            "secondKey": 7,
            "layout": 3
        },
        {
            "firstKey": 10,
            "secondKey": 8,
            "layout": 3
        },
        {
            "firstKey": 10,
            "secondKey": 9,
            "layout": 3
        }
    ]
}