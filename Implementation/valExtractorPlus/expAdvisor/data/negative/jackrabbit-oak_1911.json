{
    "id": 1911,
    "expression": "e",
    "projectName": "jackrabbit-oak",
    "commitID": "df329053d25c4af50ee801f36d8c7a9d6f4d8cd6",
    "filePath": "oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/observation/ChangeProcessor.java",
    "occurrences": 1,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "e",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 1,
                "startLineNumber": 182,
                "startColumnNumber": 71,
                "endLineNumber": 182,
                "endColumnNumber": 72
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 57,
                        "startLineNumber": 182,
                        "startColumnNumber": 16,
                        "endLineNumber": 182,
                        "endColumnNumber": 73
                    },
                    "nodeContext": "log.warn(\"Error while dispatching observation events\",e)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 58,
                        "startLineNumber": 182,
                        "startColumnNumber": 16,
                        "endLineNumber": 182,
                        "endColumnNumber": 74
                    },
                    "nodeContext": "log.warn(\"Error while dispatching observation events\",e);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
                    "nodePosition": {
                        "charLength": 90,
                        "startLineNumber": 181,
                        "startColumnNumber": 34,
                        "endLineNumber": 183,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  log.warn(\"Error while dispatching observation events\",e);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
                    "nodePosition": {
                        "charLength": 110,
                        "startLineNumber": 181,
                        "startColumnNumber": 14,
                        "endLineNumber": 183,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "catch (Exception e) {\n  log.warn(\"Error while dispatching observation events\",e);\n}\n",
                    "nodeType": "CatchClause",
                    "astNodeNumber": 12,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1429,
                        "startLineNumber": 160,
                        "startColumnNumber": 12,
                        "endLineNumber": 183,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "try {\n  FilterProvider provider=filterProvider.get();\n  if (provider.includeCommit(contentSession.toString(),info)) {\n    ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n    ImmutableTree afterTree=getTree(root,provider.getPath());\n    Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n    Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n    EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n    if (events.hasNext() && runningMonitor.enterIf(running)) {\n      try {\n        eventListener.onEvent(new EventIteratorAdapter(events));\n      }\n  finally {\n        runningMonitor.leave();\n      }\n    }\n  }\n}\n catch (Exception e) {\n  log.warn(\"Error while dispatching observation events\",e);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 137,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 1453,
                        "startLineNumber": 159,
                        "startColumnNumber": 34,
                        "endLineNumber": 184,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  try {\n    FilterProvider provider=filterProvider.get();\n    if (provider.includeCommit(contentSession.toString(),info)) {\n      ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n      ImmutableTree afterTree=getTree(root,provider.getPath());\n      Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n      Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n      EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n      if (events.hasNext() && runningMonitor.enterIf(running)) {\n        try {\n          eventListener.onEvent(new EventIteratorAdapter(events));\n        }\n  finally {\n          runningMonitor.leave();\n        }\n      }\n    }\n  }\n catch (  Exception e) {\n    log.warn(\"Error while dispatching observation events\",e);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 138,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1479,
                        "startLineNumber": 159,
                        "startColumnNumber": 8,
                        "endLineNumber": 184,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (previousRoot != null) {\n  try {\n    FilterProvider provider=filterProvider.get();\n    if (provider.includeCommit(contentSession.toString(),info)) {\n      ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n      ImmutableTree afterTree=getTree(root,provider.getPath());\n      Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n      Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n      EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n      if (events.hasNext() && runningMonitor.enterIf(running)) {\n        try {\n          eventListener.onEvent(new EventIteratorAdapter(events));\n        }\n  finally {\n          runningMonitor.leave();\n        }\n      }\n    }\n  }\n catch (  Exception e) {\n    log.warn(\"Error while dispatching observation events\",e);\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 142,
                    "astHeight": 15
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1524,
                        "startLineNumber": 158,
                        "startColumnNumber": 83,
                        "endLineNumber": 186,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (previousRoot != null) {\n    try {\n      FilterProvider provider=filterProvider.get();\n      if (provider.includeCommit(contentSession.toString(),info)) {\n        ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n        ImmutableTree afterTree=getTree(root,provider.getPath());\n        Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n        Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n        EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n        if (events.hasNext() && runningMonitor.enterIf(running)) {\n          try {\n            eventListener.onEvent(new EventIteratorAdapter(events));\n          }\n  finally {\n            runningMonitor.leave();\n          }\n        }\n      }\n    }\n catch (    Exception e) {\n      log.warn(\"Error while dispatching observation events\",e);\n    }\n  }\n  previousRoot=root;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 147,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1617,
                        "startLineNumber": 157,
                        "startColumnNumber": 4,
                        "endLineNumber": 186,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override public void contentChanged(@Nonnull NodeState root,@Nullable CommitInfo info){\n  if (previousRoot != null) {\n    try {\n      FilterProvider provider=filterProvider.get();\n      if (provider.includeCommit(contentSession.toString(),info)) {\n        ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n        ImmutableTree afterTree=getTree(root,provider.getPath());\n        Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n        Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n        EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n        if (events.hasNext() && runningMonitor.enterIf(running)) {\n          try {\n            eventListener.onEvent(new EventIteratorAdapter(events));\n          }\n  finally {\n            runningMonitor.leave();\n          }\n        }\n      }\n    }\n catch (    Exception e) {\n      log.warn(\"Error while dispatching observation events\",e);\n    }\n  }\n  previousRoot=root;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 165,
                    "astHeight": 17
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 58,
                    "startLineNumber": 182,
                    "startColumnNumber": 16,
                    "endLineNumber": 182,
                    "endColumnNumber": 74
                },
                "nodeContext": "log.warn(\"Error while dispatching observation events\",e);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 6,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "java.lang.Exception"
        }
    ],
    "positionList": [
        {
            "charLength": 1,
            "startLineNumber": 182,
            "startColumnNumber": 71,
            "endLineNumber": 182,
            "endColumnNumber": 72
        }
    ],
    "layoutRelationDataList": []
}