{
    "id": 1941,
    "expression": "json",
    "projectName": "jackrabbit-oak",
    "commitID": "ad18bab27f8ee2bca71a8cb4370f422d71d33d88",
    "filePath": "oak-core/src/main/java/org/apache/jackrabbit/oak/kernel/JsonSerializer.java",
    "occurrences": 8,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "json",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 79,
                "startColumnNumber": 8,
                "endLineNumber": 79,
                "endColumnNumber": 12
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 13,
                        "startLineNumber": 79,
                        "startColumnNumber": 8,
                        "endLineNumber": 79,
                        "endColumnNumber": 21
                    },
                    "nodeContext": "json.object()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 14,
                        "startLineNumber": 79,
                        "startColumnNumber": 8,
                        "endLineNumber": 79,
                        "endColumnNumber": 22
                    },
                    "nodeContext": "json.object();\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 4,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 895,
                        "startLineNumber": 78,
                        "startColumnNumber": 35,
                        "endLineNumber": 110,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  json.object();\n  for (  PropertyState property : node.getProperties()) {\n    json.key(property.getName());\n    serialize(property);\n  }\n  if (includeChildNodeCount) {\n    json.key(\":childNodeCount\");\n    json.value(node.getChildNodeCount(Integer.MAX_VALUE));\n  }\n  int index=0;\n  int count=0;\n  for (  ChildNodeEntry child : node.getChildNodeEntries()) {\n    if (index++ >= offset) {\n      if (count++ >= maxChildNodes) {\n        break;\n      }\n      json.key(child.getName());\n      if (depth > 0) {\n        getChildSerializer().serialize(child.getNodeState());\n      }\n else {\n        json.object();\n        json.endObject();\n      }\n    }\n  }\n  json.endObject();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 108,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 926,
                        "startLineNumber": 78,
                        "startColumnNumber": 4,
                        "endLineNumber": 110,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "void serialize(NodeState node){\n  json.object();\n  for (  PropertyState property : node.getProperties()) {\n    json.key(property.getName());\n    serialize(property);\n  }\n  if (includeChildNodeCount) {\n    json.key(\":childNodeCount\");\n    json.value(node.getChildNodeCount(Integer.MAX_VALUE));\n  }\n  int index=0;\n  int count=0;\n  for (  ChildNodeEntry child : node.getChildNodeEntries()) {\n    if (index++ >= offset) {\n      if (count++ >= maxChildNodes) {\n        break;\n      }\n      json.key(child.getName());\n      if (depth > 0) {\n        getChildSerializer().serialize(child.getNodeState());\n      }\n else {\n        json.object();\n        json.endObject();\n      }\n    }\n  }\n  json.endObject();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 115,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 14,
                    "startLineNumber": 79,
                    "startColumnNumber": 8,
                    "endLineNumber": 79,
                    "endColumnNumber": 22
                },
                "nodeContext": "json.object();\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 4,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.mk.json.JsopBuilder"
        },
        {
            "nodeContext": "json",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 82,
                "startColumnNumber": 12,
                "endLineNumber": 82,
                "endColumnNumber": 16
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 28,
                        "startLineNumber": 82,
                        "startColumnNumber": 12,
                        "endLineNumber": 82,
                        "endColumnNumber": 40
                    },
                    "nodeContext": "json.key(property.getName())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 29,
                        "startLineNumber": 82,
                        "startColumnNumber": 12,
                        "endLineNumber": 82,
                        "endColumnNumber": 41
                    },
                    "nodeContext": "json.key(property.getName());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 86,
                        "startLineNumber": 81,
                        "startColumnNumber": 60,
                        "endLineNumber": 84,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  json.key(property.getName());\n  serialize(property);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 12,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 138,
                        "startLineNumber": 81,
                        "startColumnNumber": 8,
                        "endLineNumber": 84,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (PropertyState property : node.getProperties()) {\n  json.key(property.getName());\n  serialize(property);\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 20,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 895,
                        "startLineNumber": 78,
                        "startColumnNumber": 35,
                        "endLineNumber": 110,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  json.object();\n  for (  PropertyState property : node.getProperties()) {\n    json.key(property.getName());\n    serialize(property);\n  }\n  if (includeChildNodeCount) {\n    json.key(\":childNodeCount\");\n    json.value(node.getChildNodeCount(Integer.MAX_VALUE));\n  }\n  int index=0;\n  int count=0;\n  for (  ChildNodeEntry child : node.getChildNodeEntries()) {\n    if (index++ >= offset) {\n      if (count++ >= maxChildNodes) {\n        break;\n      }\n      json.key(child.getName());\n      if (depth > 0) {\n        getChildSerializer().serialize(child.getNodeState());\n      }\n else {\n        json.object();\n        json.endObject();\n      }\n    }\n  }\n  json.endObject();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 108,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 926,
                        "startLineNumber": 78,
                        "startColumnNumber": 4,
                        "endLineNumber": 110,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "void serialize(NodeState node){\n  json.object();\n  for (  PropertyState property : node.getProperties()) {\n    json.key(property.getName());\n    serialize(property);\n  }\n  if (includeChildNodeCount) {\n    json.key(\":childNodeCount\");\n    json.value(node.getChildNodeCount(Integer.MAX_VALUE));\n  }\n  int index=0;\n  int count=0;\n  for (  ChildNodeEntry child : node.getChildNodeEntries()) {\n    if (index++ >= offset) {\n      if (count++ >= maxChildNodes) {\n        break;\n      }\n      json.key(child.getName());\n      if (depth > 0) {\n        getChildSerializer().serialize(child.getNodeState());\n      }\n else {\n        json.object();\n        json.endObject();\n      }\n    }\n  }\n  json.endObject();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 115,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 29,
                    "startLineNumber": 82,
                    "startColumnNumber": 12,
                    "endLineNumber": 82,
                    "endColumnNumber": 41
                },
                "nodeContext": "json.key(property.getName());\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 7,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.mk.json.JsopBuilder"
        },
        {
            "nodeContext": "json",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 87,
                "startColumnNumber": 12,
                "endLineNumber": 87,
                "endColumnNumber": 16
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 27,
                        "startLineNumber": 87,
                        "startColumnNumber": 12,
                        "endLineNumber": 87,
                        "endColumnNumber": 39
                    },
                    "nodeContext": "json.key(\":childNodeCount\")",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 28,
                        "startLineNumber": 87,
                        "startColumnNumber": 12,
                        "endLineNumber": 87,
                        "endColumnNumber": 40
                    },
                    "nodeContext": "json.key(\":childNodeCount\");\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 119,
                        "startLineNumber": 86,
                        "startColumnNumber": 35,
                        "endLineNumber": 89,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  json.key(\":childNodeCount\");\n  json.value(node.getChildNodeCount(Integer.MAX_VALUE));\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 16,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 146,
                        "startLineNumber": 86,
                        "startColumnNumber": 8,
                        "endLineNumber": 89,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (includeChildNodeCount) {\n  json.key(\":childNodeCount\");\n  json.value(node.getChildNodeCount(Integer.MAX_VALUE));\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 18,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 895,
                        "startLineNumber": 78,
                        "startColumnNumber": 35,
                        "endLineNumber": 110,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  json.object();\n  for (  PropertyState property : node.getProperties()) {\n    json.key(property.getName());\n    serialize(property);\n  }\n  if (includeChildNodeCount) {\n    json.key(\":childNodeCount\");\n    json.value(node.getChildNodeCount(Integer.MAX_VALUE));\n  }\n  int index=0;\n  int count=0;\n  for (  ChildNodeEntry child : node.getChildNodeEntries()) {\n    if (index++ >= offset) {\n      if (count++ >= maxChildNodes) {\n        break;\n      }\n      json.key(child.getName());\n      if (depth > 0) {\n        getChildSerializer().serialize(child.getNodeState());\n      }\n else {\n        json.object();\n        json.endObject();\n      }\n    }\n  }\n  json.endObject();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 108,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 926,
                        "startLineNumber": 78,
                        "startColumnNumber": 4,
                        "endLineNumber": 110,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "void serialize(NodeState node){\n  json.object();\n  for (  PropertyState property : node.getProperties()) {\n    json.key(property.getName());\n    serialize(property);\n  }\n  if (includeChildNodeCount) {\n    json.key(\":childNodeCount\");\n    json.value(node.getChildNodeCount(Integer.MAX_VALUE));\n  }\n  int index=0;\n  int count=0;\n  for (  ChildNodeEntry child : node.getChildNodeEntries()) {\n    if (index++ >= offset) {\n      if (count++ >= maxChildNodes) {\n        break;\n      }\n      json.key(child.getName());\n      if (depth > 0) {\n        getChildSerializer().serialize(child.getNodeState());\n      }\n else {\n        json.object();\n        json.endObject();\n      }\n    }\n  }\n  json.endObject();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 115,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 28,
                    "startLineNumber": 87,
                    "startColumnNumber": 12,
                    "endLineNumber": 87,
                    "endColumnNumber": 40
                },
                "nodeContext": "json.key(\":childNodeCount\");\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 5,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.mk.json.JsopBuilder"
        },
        {
            "nodeContext": "json",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 88,
                "startColumnNumber": 12,
                "endLineNumber": 88,
                "endColumnNumber": 16
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 53,
                        "startLineNumber": 88,
                        "startColumnNumber": 12,
                        "endLineNumber": 88,
                        "endColumnNumber": 65
                    },
                    "nodeContext": "json.value(node.getChildNodeCount(Integer.MAX_VALUE))",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 54,
                        "startLineNumber": 88,
                        "startColumnNumber": 12,
                        "endLineNumber": 88,
                        "endColumnNumber": 66
                    },
                    "nodeContext": "json.value(node.getChildNodeCount(Integer.MAX_VALUE));\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 10,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 119,
                        "startLineNumber": 86,
                        "startColumnNumber": 35,
                        "endLineNumber": 89,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  json.key(\":childNodeCount\");\n  json.value(node.getChildNodeCount(Integer.MAX_VALUE));\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 16,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 146,
                        "startLineNumber": 86,
                        "startColumnNumber": 8,
                        "endLineNumber": 89,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (includeChildNodeCount) {\n  json.key(\":childNodeCount\");\n  json.value(node.getChildNodeCount(Integer.MAX_VALUE));\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 18,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 895,
                        "startLineNumber": 78,
                        "startColumnNumber": 35,
                        "endLineNumber": 110,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  json.object();\n  for (  PropertyState property : node.getProperties()) {\n    json.key(property.getName());\n    serialize(property);\n  }\n  if (includeChildNodeCount) {\n    json.key(\":childNodeCount\");\n    json.value(node.getChildNodeCount(Integer.MAX_VALUE));\n  }\n  int index=0;\n  int count=0;\n  for (  ChildNodeEntry child : node.getChildNodeEntries()) {\n    if (index++ >= offset) {\n      if (count++ >= maxChildNodes) {\n        break;\n      }\n      json.key(child.getName());\n      if (depth > 0) {\n        getChildSerializer().serialize(child.getNodeState());\n      }\n else {\n        json.object();\n        json.endObject();\n      }\n    }\n  }\n  json.endObject();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 108,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 926,
                        "startLineNumber": 78,
                        "startColumnNumber": 4,
                        "endLineNumber": 110,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "void serialize(NodeState node){\n  json.object();\n  for (  PropertyState property : node.getProperties()) {\n    json.key(property.getName());\n    serialize(property);\n  }\n  if (includeChildNodeCount) {\n    json.key(\":childNodeCount\");\n    json.value(node.getChildNodeCount(Integer.MAX_VALUE));\n  }\n  int index=0;\n  int count=0;\n  for (  ChildNodeEntry child : node.getChildNodeEntries()) {\n    if (index++ >= offset) {\n      if (count++ >= maxChildNodes) {\n        break;\n      }\n      json.key(child.getName());\n      if (depth > 0) {\n        getChildSerializer().serialize(child.getNodeState());\n      }\n else {\n        json.object();\n        json.endObject();\n      }\n    }\n  }\n  json.endObject();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 115,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 54,
                    "startLineNumber": 88,
                    "startColumnNumber": 12,
                    "endLineNumber": 88,
                    "endColumnNumber": 66
                },
                "nodeContext": "json.value(node.getChildNodeCount(Integer.MAX_VALUE));\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 10,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.mk.json.JsopBuilder"
        },
        {
            "nodeContext": "json",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 99,
                "startColumnNumber": 16,
                "endLineNumber": 99,
                "endColumnNumber": 20
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 25,
                        "startLineNumber": 99,
                        "startColumnNumber": 16,
                        "endLineNumber": 99,
                        "endColumnNumber": 41
                    },
                    "nodeContext": "json.key(child.getName())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 26,
                        "startLineNumber": 99,
                        "startColumnNumber": 16,
                        "endLineNumber": 99,
                        "endColumnNumber": 42
                    },
                    "nodeContext": "json.key(child.getName());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 375,
                        "startLineNumber": 94,
                        "startColumnNumber": 35,
                        "endLineNumber": 106,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  if (count++ >= maxChildNodes) {\n    break;\n  }\n  json.key(child.getName());\n  if (depth > 0) {\n    getChildSerializer().serialize(child.getNodeState());\n  }\n else {\n    json.object();\n    json.endObject();\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 37,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 398,
                        "startLineNumber": 94,
                        "startColumnNumber": 12,
                        "endLineNumber": 106,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (index++ >= offset) {\n  if (count++ >= maxChildNodes) {\n    break;\n  }\n  json.key(child.getName());\n  if (depth > 0) {\n    getChildSerializer().serialize(child.getNodeState());\n  }\n else {\n    json.object();\n    json.endObject();\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 42,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 422,
                        "startLineNumber": 93,
                        "startColumnNumber": 64,
                        "endLineNumber": 107,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (index++ >= offset) {\n    if (count++ >= maxChildNodes) {\n      break;\n    }\n    json.key(child.getName());\n    if (depth > 0) {\n      getChildSerializer().serialize(child.getNodeState());\n    }\n else {\n      json.object();\n      json.endObject();\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 43,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 478,
                        "startLineNumber": 93,
                        "startColumnNumber": 8,
                        "endLineNumber": 107,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (ChildNodeEntry child : node.getChildNodeEntries()) {\n  if (index++ >= offset) {\n    if (count++ >= maxChildNodes) {\n      break;\n    }\n    json.key(child.getName());\n    if (depth > 0) {\n      getChildSerializer().serialize(child.getNodeState());\n    }\n else {\n      json.object();\n      json.endObject();\n    }\n  }\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 51,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 895,
                        "startLineNumber": 78,
                        "startColumnNumber": 35,
                        "endLineNumber": 110,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  json.object();\n  for (  PropertyState property : node.getProperties()) {\n    json.key(property.getName());\n    serialize(property);\n  }\n  if (includeChildNodeCount) {\n    json.key(\":childNodeCount\");\n    json.value(node.getChildNodeCount(Integer.MAX_VALUE));\n  }\n  int index=0;\n  int count=0;\n  for (  ChildNodeEntry child : node.getChildNodeEntries()) {\n    if (index++ >= offset) {\n      if (count++ >= maxChildNodes) {\n        break;\n      }\n      json.key(child.getName());\n      if (depth > 0) {\n        getChildSerializer().serialize(child.getNodeState());\n      }\n else {\n        json.object();\n        json.endObject();\n      }\n    }\n  }\n  json.endObject();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 108,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 926,
                        "startLineNumber": 78,
                        "startColumnNumber": 4,
                        "endLineNumber": 110,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "void serialize(NodeState node){\n  json.object();\n  for (  PropertyState property : node.getProperties()) {\n    json.key(property.getName());\n    serialize(property);\n  }\n  if (includeChildNodeCount) {\n    json.key(\":childNodeCount\");\n    json.value(node.getChildNodeCount(Integer.MAX_VALUE));\n  }\n  int index=0;\n  int count=0;\n  for (  ChildNodeEntry child : node.getChildNodeEntries()) {\n    if (index++ >= offset) {\n      if (count++ >= maxChildNodes) {\n        break;\n      }\n      json.key(child.getName());\n      if (depth > 0) {\n        getChildSerializer().serialize(child.getNodeState());\n      }\n else {\n        json.object();\n        json.endObject();\n      }\n    }\n  }\n  json.endObject();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 115,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 26,
                    "startLineNumber": 99,
                    "startColumnNumber": 16,
                    "endLineNumber": 99,
                    "endColumnNumber": 42
                },
                "nodeContext": "json.key(child.getName());\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 7,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.mk.json.JsopBuilder"
        },
        {
            "nodeContext": "json",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 103,
                "startColumnNumber": 20,
                "endLineNumber": 103,
                "endColumnNumber": 24
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 13,
                        "startLineNumber": 103,
                        "startColumnNumber": 20,
                        "endLineNumber": 103,
                        "endColumnNumber": 33
                    },
                    "nodeContext": "json.object()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 14,
                        "startLineNumber": 103,
                        "startColumnNumber": 20,
                        "endLineNumber": 103,
                        "endColumnNumber": 34
                    },
                    "nodeContext": "json.object();\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 4,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 92,
                        "startLineNumber": 102,
                        "startColumnNumber": 23,
                        "endLineNumber": 105,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  json.object();\n  json.endObject();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 206,
                        "startLineNumber": 100,
                        "startColumnNumber": 16,
                        "endLineNumber": 105,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (depth > 0) {\n  getChildSerializer().serialize(child.getNodeState());\n}\n else {\n  json.object();\n  json.endObject();\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 22,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 375,
                        "startLineNumber": 94,
                        "startColumnNumber": 35,
                        "endLineNumber": 106,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  if (count++ >= maxChildNodes) {\n    break;\n  }\n  json.key(child.getName());\n  if (depth > 0) {\n    getChildSerializer().serialize(child.getNodeState());\n  }\n else {\n    json.object();\n    json.endObject();\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 37,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 398,
                        "startLineNumber": 94,
                        "startColumnNumber": 12,
                        "endLineNumber": 106,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (index++ >= offset) {\n  if (count++ >= maxChildNodes) {\n    break;\n  }\n  json.key(child.getName());\n  if (depth > 0) {\n    getChildSerializer().serialize(child.getNodeState());\n  }\n else {\n    json.object();\n    json.endObject();\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 42,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 422,
                        "startLineNumber": 93,
                        "startColumnNumber": 64,
                        "endLineNumber": 107,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (index++ >= offset) {\n    if (count++ >= maxChildNodes) {\n      break;\n    }\n    json.key(child.getName());\n    if (depth > 0) {\n      getChildSerializer().serialize(child.getNodeState());\n    }\n else {\n      json.object();\n      json.endObject();\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 43,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 478,
                        "startLineNumber": 93,
                        "startColumnNumber": 8,
                        "endLineNumber": 107,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (ChildNodeEntry child : node.getChildNodeEntries()) {\n  if (index++ >= offset) {\n    if (count++ >= maxChildNodes) {\n      break;\n    }\n    json.key(child.getName());\n    if (depth > 0) {\n      getChildSerializer().serialize(child.getNodeState());\n    }\n else {\n      json.object();\n      json.endObject();\n    }\n  }\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 51,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 895,
                        "startLineNumber": 78,
                        "startColumnNumber": 35,
                        "endLineNumber": 110,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  json.object();\n  for (  PropertyState property : node.getProperties()) {\n    json.key(property.getName());\n    serialize(property);\n  }\n  if (includeChildNodeCount) {\n    json.key(\":childNodeCount\");\n    json.value(node.getChildNodeCount(Integer.MAX_VALUE));\n  }\n  int index=0;\n  int count=0;\n  for (  ChildNodeEntry child : node.getChildNodeEntries()) {\n    if (index++ >= offset) {\n      if (count++ >= maxChildNodes) {\n        break;\n      }\n      json.key(child.getName());\n      if (depth > 0) {\n        getChildSerializer().serialize(child.getNodeState());\n      }\n else {\n        json.object();\n        json.endObject();\n      }\n    }\n  }\n  json.endObject();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 108,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 926,
                        "startLineNumber": 78,
                        "startColumnNumber": 4,
                        "endLineNumber": 110,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "void serialize(NodeState node){\n  json.object();\n  for (  PropertyState property : node.getProperties()) {\n    json.key(property.getName());\n    serialize(property);\n  }\n  if (includeChildNodeCount) {\n    json.key(\":childNodeCount\");\n    json.value(node.getChildNodeCount(Integer.MAX_VALUE));\n  }\n  int index=0;\n  int count=0;\n  for (  ChildNodeEntry child : node.getChildNodeEntries()) {\n    if (index++ >= offset) {\n      if (count++ >= maxChildNodes) {\n        break;\n      }\n      json.key(child.getName());\n      if (depth > 0) {\n        getChildSerializer().serialize(child.getNodeState());\n      }\n else {\n        json.object();\n        json.endObject();\n      }\n    }\n  }\n  json.endObject();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 115,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 14,
                    "startLineNumber": 103,
                    "startColumnNumber": 20,
                    "endLineNumber": 103,
                    "endColumnNumber": 34
                },
                "nodeContext": "json.object();\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 4,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.mk.json.JsopBuilder"
        },
        {
            "nodeContext": "json",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 104,
                "startColumnNumber": 20,
                "endLineNumber": 104,
                "endColumnNumber": 24
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 16,
                        "startLineNumber": 104,
                        "startColumnNumber": 20,
                        "endLineNumber": 104,
                        "endColumnNumber": 36
                    },
                    "nodeContext": "json.endObject()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 17,
                        "startLineNumber": 104,
                        "startColumnNumber": 20,
                        "endLineNumber": 104,
                        "endColumnNumber": 37
                    },
                    "nodeContext": "json.endObject();\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 4,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 92,
                        "startLineNumber": 102,
                        "startColumnNumber": 23,
                        "endLineNumber": 105,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  json.object();\n  json.endObject();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 206,
                        "startLineNumber": 100,
                        "startColumnNumber": 16,
                        "endLineNumber": 105,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (depth > 0) {\n  getChildSerializer().serialize(child.getNodeState());\n}\n else {\n  json.object();\n  json.endObject();\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 22,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 375,
                        "startLineNumber": 94,
                        "startColumnNumber": 35,
                        "endLineNumber": 106,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  if (count++ >= maxChildNodes) {\n    break;\n  }\n  json.key(child.getName());\n  if (depth > 0) {\n    getChildSerializer().serialize(child.getNodeState());\n  }\n else {\n    json.object();\n    json.endObject();\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 37,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 398,
                        "startLineNumber": 94,
                        "startColumnNumber": 12,
                        "endLineNumber": 106,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (index++ >= offset) {\n  if (count++ >= maxChildNodes) {\n    break;\n  }\n  json.key(child.getName());\n  if (depth > 0) {\n    getChildSerializer().serialize(child.getNodeState());\n  }\n else {\n    json.object();\n    json.endObject();\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 42,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 422,
                        "startLineNumber": 93,
                        "startColumnNumber": 64,
                        "endLineNumber": 107,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (index++ >= offset) {\n    if (count++ >= maxChildNodes) {\n      break;\n    }\n    json.key(child.getName());\n    if (depth > 0) {\n      getChildSerializer().serialize(child.getNodeState());\n    }\n else {\n      json.object();\n      json.endObject();\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 43,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 478,
                        "startLineNumber": 93,
                        "startColumnNumber": 8,
                        "endLineNumber": 107,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (ChildNodeEntry child : node.getChildNodeEntries()) {\n  if (index++ >= offset) {\n    if (count++ >= maxChildNodes) {\n      break;\n    }\n    json.key(child.getName());\n    if (depth > 0) {\n      getChildSerializer().serialize(child.getNodeState());\n    }\n else {\n      json.object();\n      json.endObject();\n    }\n  }\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 51,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 895,
                        "startLineNumber": 78,
                        "startColumnNumber": 35,
                        "endLineNumber": 110,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  json.object();\n  for (  PropertyState property : node.getProperties()) {\n    json.key(property.getName());\n    serialize(property);\n  }\n  if (includeChildNodeCount) {\n    json.key(\":childNodeCount\");\n    json.value(node.getChildNodeCount(Integer.MAX_VALUE));\n  }\n  int index=0;\n  int count=0;\n  for (  ChildNodeEntry child : node.getChildNodeEntries()) {\n    if (index++ >= offset) {\n      if (count++ >= maxChildNodes) {\n        break;\n      }\n      json.key(child.getName());\n      if (depth > 0) {\n        getChildSerializer().serialize(child.getNodeState());\n      }\n else {\n        json.object();\n        json.endObject();\n      }\n    }\n  }\n  json.endObject();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 108,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 926,
                        "startLineNumber": 78,
                        "startColumnNumber": 4,
                        "endLineNumber": 110,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "void serialize(NodeState node){\n  json.object();\n  for (  PropertyState property : node.getProperties()) {\n    json.key(property.getName());\n    serialize(property);\n  }\n  if (includeChildNodeCount) {\n    json.key(\":childNodeCount\");\n    json.value(node.getChildNodeCount(Integer.MAX_VALUE));\n  }\n  int index=0;\n  int count=0;\n  for (  ChildNodeEntry child : node.getChildNodeEntries()) {\n    if (index++ >= offset) {\n      if (count++ >= maxChildNodes) {\n        break;\n      }\n      json.key(child.getName());\n      if (depth > 0) {\n        getChildSerializer().serialize(child.getNodeState());\n      }\n else {\n        json.object();\n        json.endObject();\n      }\n    }\n  }\n  json.endObject();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 115,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 17,
                    "startLineNumber": 104,
                    "startColumnNumber": 20,
                    "endLineNumber": 104,
                    "endColumnNumber": 37
                },
                "nodeContext": "json.endObject();\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 4,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.mk.json.JsopBuilder"
        },
        {
            "nodeContext": "json",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 109,
                "startColumnNumber": 8,
                "endLineNumber": 109,
                "endColumnNumber": 12
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 16,
                        "startLineNumber": 109,
                        "startColumnNumber": 8,
                        "endLineNumber": 109,
                        "endColumnNumber": 24
                    },
                    "nodeContext": "json.endObject()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 17,
                        "startLineNumber": 109,
                        "startColumnNumber": 8,
                        "endLineNumber": 109,
                        "endColumnNumber": 25
                    },
                    "nodeContext": "json.endObject();\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 4,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 895,
                        "startLineNumber": 78,
                        "startColumnNumber": 35,
                        "endLineNumber": 110,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  json.object();\n  for (  PropertyState property : node.getProperties()) {\n    json.key(property.getName());\n    serialize(property);\n  }\n  if (includeChildNodeCount) {\n    json.key(\":childNodeCount\");\n    json.value(node.getChildNodeCount(Integer.MAX_VALUE));\n  }\n  int index=0;\n  int count=0;\n  for (  ChildNodeEntry child : node.getChildNodeEntries()) {\n    if (index++ >= offset) {\n      if (count++ >= maxChildNodes) {\n        break;\n      }\n      json.key(child.getName());\n      if (depth > 0) {\n        getChildSerializer().serialize(child.getNodeState());\n      }\n else {\n        json.object();\n        json.endObject();\n      }\n    }\n  }\n  json.endObject();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 108,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 926,
                        "startLineNumber": 78,
                        "startColumnNumber": 4,
                        "endLineNumber": 110,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "void serialize(NodeState node){\n  json.object();\n  for (  PropertyState property : node.getProperties()) {\n    json.key(property.getName());\n    serialize(property);\n  }\n  if (includeChildNodeCount) {\n    json.key(\":childNodeCount\");\n    json.value(node.getChildNodeCount(Integer.MAX_VALUE));\n  }\n  int index=0;\n  int count=0;\n  for (  ChildNodeEntry child : node.getChildNodeEntries()) {\n    if (index++ >= offset) {\n      if (count++ >= maxChildNodes) {\n        break;\n      }\n      json.key(child.getName());\n      if (depth > 0) {\n        getChildSerializer().serialize(child.getNodeState());\n      }\n else {\n        json.object();\n        json.endObject();\n      }\n    }\n  }\n  json.endObject();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 115,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 17,
                    "startLineNumber": 109,
                    "startColumnNumber": 8,
                    "endLineNumber": 109,
                    "endColumnNumber": 25
                },
                "nodeContext": "json.endObject();\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 4,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.mk.json.JsopBuilder"
        }
    ],
    "positionList": [
        {
            "charLength": 4,
            "startLineNumber": 79,
            "startColumnNumber": 8,
            "endLineNumber": 79,
            "endColumnNumber": 12
        },
        {
            "charLength": 4,
            "startLineNumber": 82,
            "startColumnNumber": 12,
            "endLineNumber": 82,
            "endColumnNumber": 16
        },
        {
            "charLength": 4,
            "startLineNumber": 87,
            "startColumnNumber": 12,
            "endLineNumber": 87,
            "endColumnNumber": 16
        },
        {
            "charLength": 4,
            "startLineNumber": 88,
            "startColumnNumber": 12,
            "endLineNumber": 88,
            "endColumnNumber": 16
        },
        {
            "charLength": 4,
            "startLineNumber": 99,
            "startColumnNumber": 16,
            "endLineNumber": 99,
            "endColumnNumber": 20
        },
        {
            "charLength": 4,
            "startLineNumber": 103,
            "startColumnNumber": 20,
            "endLineNumber": 103,
            "endColumnNumber": 24
        },
        {
            "charLength": 4,
            "startLineNumber": 104,
            "startColumnNumber": 20,
            "endLineNumber": 104,
            "endColumnNumber": 24
        },
        {
            "charLength": 4,
            "startLineNumber": 109,
            "startColumnNumber": 8,
            "endLineNumber": 109,
            "endColumnNumber": 12
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 4,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 5,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 6,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 7,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 3,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 4,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 5,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 6,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 7,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 2,
            "secondKey": 4,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 5,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 6,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 7,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 1,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 3,
            "secondKey": 4,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 5,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 6,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 7,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 0,
            "layout": 6
        },
        {
            "firstKey": 4,
            "secondKey": 1,
            "layout": 6
        },
        {
            "firstKey": 4,
            "secondKey": 2,
            "layout": 6
        },
        {
            "firstKey": 4,
            "secondKey": 3,
            "layout": 6
        },
        {
            "firstKey": 4,
            "secondKey": 5,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 6,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 7,
            "layout": 6
        },
        {
            "firstKey": 5,
            "secondKey": 0,
            "layout": 8
        },
        {
            "firstKey": 5,
            "secondKey": 1,
            "layout": 8
        },
        {
            "firstKey": 5,
            "secondKey": 2,
            "layout": 8
        },
        {
            "firstKey": 5,
            "secondKey": 3,
            "layout": 8
        },
        {
            "firstKey": 5,
            "secondKey": 4,
            "layout": 4
        },
        {
            "firstKey": 5,
            "secondKey": 6,
            "layout": 2
        },
        {
            "firstKey": 5,
            "secondKey": 7,
            "layout": 8
        },
        {
            "firstKey": 6,
            "secondKey": 0,
            "layout": 8
        },
        {
            "firstKey": 6,
            "secondKey": 1,
            "layout": 8
        },
        {
            "firstKey": 6,
            "secondKey": 2,
            "layout": 8
        },
        {
            "firstKey": 6,
            "secondKey": 3,
            "layout": 8
        },
        {
            "firstKey": 6,
            "secondKey": 4,
            "layout": 4
        },
        {
            "firstKey": 6,
            "secondKey": 5,
            "layout": 2
        },
        {
            "firstKey": 6,
            "secondKey": 7,
            "layout": 8
        },
        {
            "firstKey": 7,
            "secondKey": 0,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 4,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 5,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 6,
            "layout": 2
        }
    ]
}