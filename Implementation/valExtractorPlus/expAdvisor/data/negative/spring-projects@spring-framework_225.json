{
    "id": 225,
    "expression": "\"DataBuffer List must not be empty\"",
    "projectName": "spring-projects@spring-framework",
    "commitID": "d5dab129097f98ed3148473422eb706c20fd10c9",
    "filePath": "spring-core/src/main/java/org/springframework/core/io/buffer/NettyDataBufferFactory.java",
    "occurrences": 1,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "\"DataBuffer List must not be empty\"",
            "nodeType": "StringLiteral",
            "nodePosition": {
                "charLength": 35,
                "startLineNumber": 101,
                "startColumnNumber": 31,
                "endLineNumber": 101,
                "endColumnNumber": 66
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 65,
                        "startLineNumber": 101,
                        "startColumnNumber": 2,
                        "endLineNumber": 101,
                        "endColumnNumber": 67
                    },
                    "nodeContext": "Assert.notEmpty(dataBuffers,\"DataBuffer List must not be empty\")",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 66,
                        "startLineNumber": 101,
                        "startColumnNumber": 2,
                        "endLineNumber": 101,
                        "endColumnNumber": 68
                    },
                    "nodeContext": "Assert.notEmpty(dataBuffers,\"DataBuffer List must not be empty\");\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 495,
                        "startLineNumber": 100,
                        "startColumnNumber": 64,
                        "endLineNumber": 112,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  Assert.notEmpty(dataBuffers,\"DataBuffer List must not be empty\");\n  int bufferCount=dataBuffers.size();\n  if (bufferCount == 1) {\n    return dataBuffers.get(0);\n  }\n  CompositeByteBuf composite=this.byteBufAllocator.compositeBuffer(bufferCount);\n  for (  DataBuffer dataBuffer : dataBuffers) {\n    Assert.isInstanceOf(NettyDataBuffer.class,dataBuffer);\n    composite.addComponent(true,((NettyDataBuffer)dataBuffer).getNativeBuffer());\n  }\n  return new NettyDataBuffer(composite,this);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 68,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 663,
                        "startLineNumber": 95,
                        "startColumnNumber": 1,
                        "endLineNumber": 112,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "/** \n * {@inheritDoc}<p>This implementation uses Netty's  {@link CompositeByteBuf}.\n */\n@Override public DataBuffer join(List<? extends DataBuffer> dataBuffers){\n  Assert.notEmpty(dataBuffers,\"DataBuffer List must not be empty\");\n  int bufferCount=dataBuffers.size();\n  if (bufferCount == 1) {\n    return dataBuffers.get(0);\n  }\n  CompositeByteBuf composite=this.byteBufAllocator.compositeBuffer(bufferCount);\n  for (  DataBuffer dataBuffer : dataBuffers) {\n    Assert.isInstanceOf(NettyDataBuffer.class,dataBuffer);\n    composite.addComponent(true,((NettyDataBuffer)dataBuffer).getNativeBuffer());\n  }\n  return new NettyDataBuffer(composite,this);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 84,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 66,
                    "startLineNumber": 101,
                    "startColumnNumber": 2,
                    "endLineNumber": 101,
                    "endColumnNumber": 68
                },
                "nodeContext": "Assert.notEmpty(dataBuffers,\"DataBuffer List must not be empty\");\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 6,
                "astHeight": 3
            },
            "tokenLength": 6,
            "type": "java.lang.String"
        }
    ],
    "positionList": [
        {
            "charLength": 35,
            "startLineNumber": 101,
            "startColumnNumber": 31,
            "endLineNumber": 101,
            "endColumnNumber": 66
        }
    ],
    "layoutRelationDataList": []
}