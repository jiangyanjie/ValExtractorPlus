{
    "id": 1898,
    "expression": "provider",
    "projectName": "jackrabbit-oak",
    "commitID": "df329053d25c4af50ee801f36d8c7a9d6f4d8cd6",
    "filePath": "oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/observation/ChangeProcessor.java",
    "occurrences": 4,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "provider",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 8,
                "startLineNumber": 163,
                "startColumnNumber": 20,
                "endLineNumber": 163,
                "endColumnNumber": 28
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 55,
                        "startLineNumber": 163,
                        "startColumnNumber": 20,
                        "endLineNumber": 163,
                        "endColumnNumber": 75
                    },
                    "nodeContext": "provider.includeCommit(contentSession.toString(),info)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1155,
                        "startLineNumber": 163,
                        "startColumnNumber": 16,
                        "endLineNumber": 180,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (provider.includeCommit(contentSession.toString(),info)) {\n  ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n  ImmutableTree afterTree=getTree(root,provider.getPath());\n  Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n  Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n  EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n  if (events.hasNext() && runningMonitor.enterIf(running)) {\n    try {\n      eventListener.onEvent(new EventIteratorAdapter(events));\n    }\n  finally {\n      runningMonitor.leave();\n    }\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 115,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 1314,
                        "startLineNumber": 160,
                        "startColumnNumber": 16,
                        "endLineNumber": 181,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  FilterProvider provider=filterProvider.get();\n  if (provider.includeCommit(contentSession.toString(),info)) {\n    ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n    ImmutableTree afterTree=getTree(root,provider.getPath());\n    Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n    Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n    EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n    if (events.hasNext() && runningMonitor.enterIf(running)) {\n      try {\n        eventListener.onEvent(new EventIteratorAdapter(events));\n      }\n  finally {\n        runningMonitor.leave();\n      }\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 124,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1429,
                        "startLineNumber": 160,
                        "startColumnNumber": 12,
                        "endLineNumber": 183,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "try {\n  FilterProvider provider=filterProvider.get();\n  if (provider.includeCommit(contentSession.toString(),info)) {\n    ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n    ImmutableTree afterTree=getTree(root,provider.getPath());\n    Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n    Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n    EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n    if (events.hasNext() && runningMonitor.enterIf(running)) {\n      try {\n        eventListener.onEvent(new EventIteratorAdapter(events));\n      }\n  finally {\n        runningMonitor.leave();\n      }\n    }\n  }\n}\n catch (Exception e) {\n  log.warn(\"Error while dispatching observation events\",e);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 137,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 1453,
                        "startLineNumber": 159,
                        "startColumnNumber": 34,
                        "endLineNumber": 184,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  try {\n    FilterProvider provider=filterProvider.get();\n    if (provider.includeCommit(contentSession.toString(),info)) {\n      ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n      ImmutableTree afterTree=getTree(root,provider.getPath());\n      Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n      Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n      EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n      if (events.hasNext() && runningMonitor.enterIf(running)) {\n        try {\n          eventListener.onEvent(new EventIteratorAdapter(events));\n        }\n  finally {\n          runningMonitor.leave();\n        }\n      }\n    }\n  }\n catch (  Exception e) {\n    log.warn(\"Error while dispatching observation events\",e);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 138,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1479,
                        "startLineNumber": 159,
                        "startColumnNumber": 8,
                        "endLineNumber": 184,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (previousRoot != null) {\n  try {\n    FilterProvider provider=filterProvider.get();\n    if (provider.includeCommit(contentSession.toString(),info)) {\n      ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n      ImmutableTree afterTree=getTree(root,provider.getPath());\n      Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n      Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n      EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n      if (events.hasNext() && runningMonitor.enterIf(running)) {\n        try {\n          eventListener.onEvent(new EventIteratorAdapter(events));\n        }\n  finally {\n          runningMonitor.leave();\n        }\n      }\n    }\n  }\n catch (  Exception e) {\n    log.warn(\"Error while dispatching observation events\",e);\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 142,
                    "astHeight": 15
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1524,
                        "startLineNumber": 158,
                        "startColumnNumber": 83,
                        "endLineNumber": 186,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (previousRoot != null) {\n    try {\n      FilterProvider provider=filterProvider.get();\n      if (provider.includeCommit(contentSession.toString(),info)) {\n        ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n        ImmutableTree afterTree=getTree(root,provider.getPath());\n        Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n        Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n        EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n        if (events.hasNext() && runningMonitor.enterIf(running)) {\n          try {\n            eventListener.onEvent(new EventIteratorAdapter(events));\n          }\n  finally {\n            runningMonitor.leave();\n          }\n        }\n      }\n    }\n catch (    Exception e) {\n      log.warn(\"Error while dispatching observation events\",e);\n    }\n  }\n  previousRoot=root;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 147,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1617,
                        "startLineNumber": 157,
                        "startColumnNumber": 4,
                        "endLineNumber": 186,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override public void contentChanged(@Nonnull NodeState root,@Nullable CommitInfo info){\n  if (previousRoot != null) {\n    try {\n      FilterProvider provider=filterProvider.get();\n      if (provider.includeCommit(contentSession.toString(),info)) {\n        ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n        ImmutableTree afterTree=getTree(root,provider.getPath());\n        Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n        Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n        EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n        if (events.hasNext() && runningMonitor.enterIf(running)) {\n          try {\n            eventListener.onEvent(new EventIteratorAdapter(events));\n          }\n  finally {\n            runningMonitor.leave();\n          }\n        }\n      }\n    }\n catch (    Exception e) {\n      log.warn(\"Error while dispatching observation events\",e);\n    }\n  }\n  previousRoot=root;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 165,
                    "astHeight": 17
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 55,
                    "startLineNumber": 163,
                    "startColumnNumber": 20,
                    "endLineNumber": 163,
                    "endColumnNumber": 75
                },
                "nodeContext": "provider.includeCommit(contentSession.toString(),info)",
                "nodeType": "MethodInvocation",
                "astNodeNumber": 7,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.oak.plugins.observation.filter.FilterProvider"
        },
        {
            "nodeContext": "provider",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 8,
                "startLineNumber": 164,
                "startColumnNumber": 69,
                "endLineNumber": 164,
                "endColumnNumber": 77
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 18,
                        "startLineNumber": 164,
                        "startColumnNumber": 69,
                        "endLineNumber": 164,
                        "endColumnNumber": 87
                    },
                    "nodeContext": "provider.getPath()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 41,
                        "startLineNumber": 164,
                        "startColumnNumber": 47,
                        "endLineNumber": 164,
                        "endColumnNumber": 88
                    },
                    "nodeContext": "getTree(previousRoot,provider.getPath())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 54,
                        "startLineNumber": 164,
                        "startColumnNumber": 34,
                        "endLineNumber": 164,
                        "endColumnNumber": 88
                    },
                    "nodeContext": "beforeTree=getTree(previousRoot,provider.getPath())",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 69,
                        "startLineNumber": 164,
                        "startColumnNumber": 20,
                        "endLineNumber": 164,
                        "endColumnNumber": 89
                    },
                    "nodeContext": "ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 11,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 1094,
                        "startLineNumber": 163,
                        "startColumnNumber": 77,
                        "endLineNumber": 180,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n  ImmutableTree afterTree=getTree(root,provider.getPath());\n  Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n  Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n  EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n  if (events.hasNext() && runningMonitor.enterIf(running)) {\n    try {\n      eventListener.onEvent(new EventIteratorAdapter(events));\n    }\n  finally {\n      runningMonitor.leave();\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 107,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1155,
                        "startLineNumber": 163,
                        "startColumnNumber": 16,
                        "endLineNumber": 180,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (provider.includeCommit(contentSession.toString(),info)) {\n  ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n  ImmutableTree afterTree=getTree(root,provider.getPath());\n  Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n  Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n  EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n  if (events.hasNext() && runningMonitor.enterIf(running)) {\n    try {\n      eventListener.onEvent(new EventIteratorAdapter(events));\n    }\n  finally {\n      runningMonitor.leave();\n    }\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 115,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 1314,
                        "startLineNumber": 160,
                        "startColumnNumber": 16,
                        "endLineNumber": 181,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  FilterProvider provider=filterProvider.get();\n  if (provider.includeCommit(contentSession.toString(),info)) {\n    ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n    ImmutableTree afterTree=getTree(root,provider.getPath());\n    Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n    Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n    EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n    if (events.hasNext() && runningMonitor.enterIf(running)) {\n      try {\n        eventListener.onEvent(new EventIteratorAdapter(events));\n      }\n  finally {\n        runningMonitor.leave();\n      }\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 124,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1429,
                        "startLineNumber": 160,
                        "startColumnNumber": 12,
                        "endLineNumber": 183,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "try {\n  FilterProvider provider=filterProvider.get();\n  if (provider.includeCommit(contentSession.toString(),info)) {\n    ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n    ImmutableTree afterTree=getTree(root,provider.getPath());\n    Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n    Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n    EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n    if (events.hasNext() && runningMonitor.enterIf(running)) {\n      try {\n        eventListener.onEvent(new EventIteratorAdapter(events));\n      }\n  finally {\n        runningMonitor.leave();\n      }\n    }\n  }\n}\n catch (Exception e) {\n  log.warn(\"Error while dispatching observation events\",e);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 137,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 1453,
                        "startLineNumber": 159,
                        "startColumnNumber": 34,
                        "endLineNumber": 184,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  try {\n    FilterProvider provider=filterProvider.get();\n    if (provider.includeCommit(contentSession.toString(),info)) {\n      ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n      ImmutableTree afterTree=getTree(root,provider.getPath());\n      Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n      Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n      EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n      if (events.hasNext() && runningMonitor.enterIf(running)) {\n        try {\n          eventListener.onEvent(new EventIteratorAdapter(events));\n        }\n  finally {\n          runningMonitor.leave();\n        }\n      }\n    }\n  }\n catch (  Exception e) {\n    log.warn(\"Error while dispatching observation events\",e);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 138,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1479,
                        "startLineNumber": 159,
                        "startColumnNumber": 8,
                        "endLineNumber": 184,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (previousRoot != null) {\n  try {\n    FilterProvider provider=filterProvider.get();\n    if (provider.includeCommit(contentSession.toString(),info)) {\n      ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n      ImmutableTree afterTree=getTree(root,provider.getPath());\n      Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n      Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n      EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n      if (events.hasNext() && runningMonitor.enterIf(running)) {\n        try {\n          eventListener.onEvent(new EventIteratorAdapter(events));\n        }\n  finally {\n          runningMonitor.leave();\n        }\n      }\n    }\n  }\n catch (  Exception e) {\n    log.warn(\"Error while dispatching observation events\",e);\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 142,
                    "astHeight": 15
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1524,
                        "startLineNumber": 158,
                        "startColumnNumber": 83,
                        "endLineNumber": 186,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (previousRoot != null) {\n    try {\n      FilterProvider provider=filterProvider.get();\n      if (provider.includeCommit(contentSession.toString(),info)) {\n        ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n        ImmutableTree afterTree=getTree(root,provider.getPath());\n        Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n        Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n        EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n        if (events.hasNext() && runningMonitor.enterIf(running)) {\n          try {\n            eventListener.onEvent(new EventIteratorAdapter(events));\n          }\n  finally {\n            runningMonitor.leave();\n          }\n        }\n      }\n    }\n catch (    Exception e) {\n      log.warn(\"Error while dispatching observation events\",e);\n    }\n  }\n  previousRoot=root;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 147,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1617,
                        "startLineNumber": 157,
                        "startColumnNumber": 4,
                        "endLineNumber": 186,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override public void contentChanged(@Nonnull NodeState root,@Nullable CommitInfo info){\n  if (previousRoot != null) {\n    try {\n      FilterProvider provider=filterProvider.get();\n      if (provider.includeCommit(contentSession.toString(),info)) {\n        ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n        ImmutableTree afterTree=getTree(root,provider.getPath());\n        Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n        Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n        EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n        if (events.hasNext() && runningMonitor.enterIf(running)) {\n          try {\n            eventListener.onEvent(new EventIteratorAdapter(events));\n          }\n  finally {\n            runningMonitor.leave();\n          }\n        }\n      }\n    }\n catch (    Exception e) {\n      log.warn(\"Error while dispatching observation events\",e);\n    }\n  }\n  previousRoot=root;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 165,
                    "astHeight": 17
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 69,
                    "startLineNumber": 164,
                    "startColumnNumber": 20,
                    "endLineNumber": 164,
                    "endColumnNumber": 89
                },
                "nodeContext": "ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 11,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.oak.plugins.observation.filter.FilterProvider"
        },
        {
            "nodeContext": "provider",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 8,
                "startLineNumber": 165,
                "startColumnNumber": 60,
                "endLineNumber": 165,
                "endColumnNumber": 68
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 18,
                        "startLineNumber": 165,
                        "startColumnNumber": 60,
                        "endLineNumber": 165,
                        "endColumnNumber": 78
                    },
                    "nodeContext": "provider.getPath()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 33,
                        "startLineNumber": 165,
                        "startColumnNumber": 46,
                        "endLineNumber": 165,
                        "endColumnNumber": 79
                    },
                    "nodeContext": "getTree(root,provider.getPath())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 45,
                        "startLineNumber": 165,
                        "startColumnNumber": 34,
                        "endLineNumber": 165,
                        "endColumnNumber": 79
                    },
                    "nodeContext": "afterTree=getTree(root,provider.getPath())",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 60,
                        "startLineNumber": 165,
                        "startColumnNumber": 20,
                        "endLineNumber": 165,
                        "endColumnNumber": 80
                    },
                    "nodeContext": "ImmutableTree afterTree=getTree(root,provider.getPath());\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 11,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 1094,
                        "startLineNumber": 163,
                        "startColumnNumber": 77,
                        "endLineNumber": 180,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n  ImmutableTree afterTree=getTree(root,provider.getPath());\n  Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n  Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n  EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n  if (events.hasNext() && runningMonitor.enterIf(running)) {\n    try {\n      eventListener.onEvent(new EventIteratorAdapter(events));\n    }\n  finally {\n      runningMonitor.leave();\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 107,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1155,
                        "startLineNumber": 163,
                        "startColumnNumber": 16,
                        "endLineNumber": 180,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (provider.includeCommit(contentSession.toString(),info)) {\n  ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n  ImmutableTree afterTree=getTree(root,provider.getPath());\n  Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n  Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n  EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n  if (events.hasNext() && runningMonitor.enterIf(running)) {\n    try {\n      eventListener.onEvent(new EventIteratorAdapter(events));\n    }\n  finally {\n      runningMonitor.leave();\n    }\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 115,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 1314,
                        "startLineNumber": 160,
                        "startColumnNumber": 16,
                        "endLineNumber": 181,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  FilterProvider provider=filterProvider.get();\n  if (provider.includeCommit(contentSession.toString(),info)) {\n    ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n    ImmutableTree afterTree=getTree(root,provider.getPath());\n    Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n    Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n    EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n    if (events.hasNext() && runningMonitor.enterIf(running)) {\n      try {\n        eventListener.onEvent(new EventIteratorAdapter(events));\n      }\n  finally {\n        runningMonitor.leave();\n      }\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 124,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1429,
                        "startLineNumber": 160,
                        "startColumnNumber": 12,
                        "endLineNumber": 183,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "try {\n  FilterProvider provider=filterProvider.get();\n  if (provider.includeCommit(contentSession.toString(),info)) {\n    ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n    ImmutableTree afterTree=getTree(root,provider.getPath());\n    Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n    Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n    EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n    if (events.hasNext() && runningMonitor.enterIf(running)) {\n      try {\n        eventListener.onEvent(new EventIteratorAdapter(events));\n      }\n  finally {\n        runningMonitor.leave();\n      }\n    }\n  }\n}\n catch (Exception e) {\n  log.warn(\"Error while dispatching observation events\",e);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 137,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 1453,
                        "startLineNumber": 159,
                        "startColumnNumber": 34,
                        "endLineNumber": 184,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  try {\n    FilterProvider provider=filterProvider.get();\n    if (provider.includeCommit(contentSession.toString(),info)) {\n      ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n      ImmutableTree afterTree=getTree(root,provider.getPath());\n      Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n      Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n      EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n      if (events.hasNext() && runningMonitor.enterIf(running)) {\n        try {\n          eventListener.onEvent(new EventIteratorAdapter(events));\n        }\n  finally {\n          runningMonitor.leave();\n        }\n      }\n    }\n  }\n catch (  Exception e) {\n    log.warn(\"Error while dispatching observation events\",e);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 138,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1479,
                        "startLineNumber": 159,
                        "startColumnNumber": 8,
                        "endLineNumber": 184,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (previousRoot != null) {\n  try {\n    FilterProvider provider=filterProvider.get();\n    if (provider.includeCommit(contentSession.toString(),info)) {\n      ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n      ImmutableTree afterTree=getTree(root,provider.getPath());\n      Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n      Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n      EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n      if (events.hasNext() && runningMonitor.enterIf(running)) {\n        try {\n          eventListener.onEvent(new EventIteratorAdapter(events));\n        }\n  finally {\n          runningMonitor.leave();\n        }\n      }\n    }\n  }\n catch (  Exception e) {\n    log.warn(\"Error while dispatching observation events\",e);\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 142,
                    "astHeight": 15
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1524,
                        "startLineNumber": 158,
                        "startColumnNumber": 83,
                        "endLineNumber": 186,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (previousRoot != null) {\n    try {\n      FilterProvider provider=filterProvider.get();\n      if (provider.includeCommit(contentSession.toString(),info)) {\n        ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n        ImmutableTree afterTree=getTree(root,provider.getPath());\n        Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n        Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n        EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n        if (events.hasNext() && runningMonitor.enterIf(running)) {\n          try {\n            eventListener.onEvent(new EventIteratorAdapter(events));\n          }\n  finally {\n            runningMonitor.leave();\n          }\n        }\n      }\n    }\n catch (    Exception e) {\n      log.warn(\"Error while dispatching observation events\",e);\n    }\n  }\n  previousRoot=root;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 147,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1617,
                        "startLineNumber": 157,
                        "startColumnNumber": 4,
                        "endLineNumber": 186,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override public void contentChanged(@Nonnull NodeState root,@Nullable CommitInfo info){\n  if (previousRoot != null) {\n    try {\n      FilterProvider provider=filterProvider.get();\n      if (provider.includeCommit(contentSession.toString(),info)) {\n        ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n        ImmutableTree afterTree=getTree(root,provider.getPath());\n        Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n        Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n        EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n        if (events.hasNext() && runningMonitor.enterIf(running)) {\n          try {\n            eventListener.onEvent(new EventIteratorAdapter(events));\n          }\n  finally {\n            runningMonitor.leave();\n          }\n        }\n      }\n    }\n catch (    Exception e) {\n      log.warn(\"Error while dispatching observation events\",e);\n    }\n  }\n  previousRoot=root;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 165,
                    "astHeight": 17
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 60,
                    "startLineNumber": 165,
                    "startColumnNumber": 20,
                    "endLineNumber": 165,
                    "endColumnNumber": 80
                },
                "nodeContext": "ImmutableTree afterTree=getTree(root,provider.getPath());\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 11,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.oak.plugins.observation.filter.FilterProvider"
        },
        {
            "nodeContext": "provider",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 8,
                "startLineNumber": 166,
                "startColumnNumber": 40,
                "endLineNumber": 166,
                "endColumnNumber": 48
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 52,
                        "startLineNumber": 166,
                        "startColumnNumber": 40,
                        "endLineNumber": 166,
                        "endColumnNumber": 92
                    },
                    "nodeContext": "provider.getFilter(beforeTree,afterTree,ntManager)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 6,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 65,
                        "startLineNumber": 166,
                        "startColumnNumber": 27,
                        "endLineNumber": 166,
                        "endColumnNumber": 92
                    },
                    "nodeContext": "userFilter=provider.getFilter(beforeTree,afterTree,ntManager)",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 8,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 73,
                        "startLineNumber": 166,
                        "startColumnNumber": 20,
                        "endLineNumber": 166,
                        "endColumnNumber": 93
                    },
                    "nodeContext": "Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 11,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 1094,
                        "startLineNumber": 163,
                        "startColumnNumber": 77,
                        "endLineNumber": 180,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n  ImmutableTree afterTree=getTree(root,provider.getPath());\n  Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n  Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n  EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n  if (events.hasNext() && runningMonitor.enterIf(running)) {\n    try {\n      eventListener.onEvent(new EventIteratorAdapter(events));\n    }\n  finally {\n      runningMonitor.leave();\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 107,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1155,
                        "startLineNumber": 163,
                        "startColumnNumber": 16,
                        "endLineNumber": 180,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (provider.includeCommit(contentSession.toString(),info)) {\n  ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n  ImmutableTree afterTree=getTree(root,provider.getPath());\n  Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n  Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n  EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n  if (events.hasNext() && runningMonitor.enterIf(running)) {\n    try {\n      eventListener.onEvent(new EventIteratorAdapter(events));\n    }\n  finally {\n      runningMonitor.leave();\n    }\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 115,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 1314,
                        "startLineNumber": 160,
                        "startColumnNumber": 16,
                        "endLineNumber": 181,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  FilterProvider provider=filterProvider.get();\n  if (provider.includeCommit(contentSession.toString(),info)) {\n    ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n    ImmutableTree afterTree=getTree(root,provider.getPath());\n    Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n    Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n    EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n    if (events.hasNext() && runningMonitor.enterIf(running)) {\n      try {\n        eventListener.onEvent(new EventIteratorAdapter(events));\n      }\n  finally {\n        runningMonitor.leave();\n      }\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 124,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1429,
                        "startLineNumber": 160,
                        "startColumnNumber": 12,
                        "endLineNumber": 183,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "try {\n  FilterProvider provider=filterProvider.get();\n  if (provider.includeCommit(contentSession.toString(),info)) {\n    ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n    ImmutableTree afterTree=getTree(root,provider.getPath());\n    Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n    Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n    EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n    if (events.hasNext() && runningMonitor.enterIf(running)) {\n      try {\n        eventListener.onEvent(new EventIteratorAdapter(events));\n      }\n  finally {\n        runningMonitor.leave();\n      }\n    }\n  }\n}\n catch (Exception e) {\n  log.warn(\"Error while dispatching observation events\",e);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 137,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 1453,
                        "startLineNumber": 159,
                        "startColumnNumber": 34,
                        "endLineNumber": 184,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  try {\n    FilterProvider provider=filterProvider.get();\n    if (provider.includeCommit(contentSession.toString(),info)) {\n      ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n      ImmutableTree afterTree=getTree(root,provider.getPath());\n      Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n      Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n      EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n      if (events.hasNext() && runningMonitor.enterIf(running)) {\n        try {\n          eventListener.onEvent(new EventIteratorAdapter(events));\n        }\n  finally {\n          runningMonitor.leave();\n        }\n      }\n    }\n  }\n catch (  Exception e) {\n    log.warn(\"Error while dispatching observation events\",e);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 138,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1479,
                        "startLineNumber": 159,
                        "startColumnNumber": 8,
                        "endLineNumber": 184,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (previousRoot != null) {\n  try {\n    FilterProvider provider=filterProvider.get();\n    if (provider.includeCommit(contentSession.toString(),info)) {\n      ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n      ImmutableTree afterTree=getTree(root,provider.getPath());\n      Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n      Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n      EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n      if (events.hasNext() && runningMonitor.enterIf(running)) {\n        try {\n          eventListener.onEvent(new EventIteratorAdapter(events));\n        }\n  finally {\n          runningMonitor.leave();\n        }\n      }\n    }\n  }\n catch (  Exception e) {\n    log.warn(\"Error while dispatching observation events\",e);\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 142,
                    "astHeight": 15
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1524,
                        "startLineNumber": 158,
                        "startColumnNumber": 83,
                        "endLineNumber": 186,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (previousRoot != null) {\n    try {\n      FilterProvider provider=filterProvider.get();\n      if (provider.includeCommit(contentSession.toString(),info)) {\n        ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n        ImmutableTree afterTree=getTree(root,provider.getPath());\n        Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n        Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n        EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n        if (events.hasNext() && runningMonitor.enterIf(running)) {\n          try {\n            eventListener.onEvent(new EventIteratorAdapter(events));\n          }\n  finally {\n            runningMonitor.leave();\n          }\n        }\n      }\n    }\n catch (    Exception e) {\n      log.warn(\"Error while dispatching observation events\",e);\n    }\n  }\n  previousRoot=root;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 147,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1617,
                        "startLineNumber": 157,
                        "startColumnNumber": 4,
                        "endLineNumber": 186,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override public void contentChanged(@Nonnull NodeState root,@Nullable CommitInfo info){\n  if (previousRoot != null) {\n    try {\n      FilterProvider provider=filterProvider.get();\n      if (provider.includeCommit(contentSession.toString(),info)) {\n        ImmutableTree beforeTree=getTree(previousRoot,provider.getPath());\n        ImmutableTree afterTree=getTree(root,provider.getPath());\n        Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n        Filter acFilter=new FilterBuilder().accessControl(permissionProvider).createFilter(beforeTree,afterTree,ntManager);\n        EventIterator<Event> events=new EventIterator<Event>(beforeTree.getNodeState(),afterTree.getNodeState(),Filters.all(userFilter,acFilter),new JcrListener(beforeTree,afterTree,namePathMapper,info));\n        if (events.hasNext() && runningMonitor.enterIf(running)) {\n          try {\n            eventListener.onEvent(new EventIteratorAdapter(events));\n          }\n  finally {\n            runningMonitor.leave();\n          }\n        }\n      }\n    }\n catch (    Exception e) {\n      log.warn(\"Error while dispatching observation events\",e);\n    }\n  }\n  previousRoot=root;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 165,
                    "astHeight": 17
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 73,
                    "startLineNumber": 166,
                    "startColumnNumber": 20,
                    "endLineNumber": 166,
                    "endColumnNumber": 93
                },
                "nodeContext": "Filter userFilter=provider.getFilter(beforeTree,afterTree,ntManager);\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 11,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.oak.plugins.observation.filter.FilterProvider"
        }
    ],
    "positionList": [
        {
            "charLength": 8,
            "startLineNumber": 163,
            "startColumnNumber": 20,
            "endLineNumber": 163,
            "endColumnNumber": 28
        },
        {
            "charLength": 8,
            "startLineNumber": 164,
            "startColumnNumber": 69,
            "endLineNumber": 164,
            "endColumnNumber": 77
        },
        {
            "charLength": 8,
            "startLineNumber": 165,
            "startColumnNumber": 60,
            "endLineNumber": 165,
            "endColumnNumber": 68
        },
        {
            "charLength": 8,
            "startLineNumber": 166,
            "startColumnNumber": 40,
            "endLineNumber": 166,
            "endColumnNumber": 48
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 1
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 1
        },
        {
            "firstKey": 0,
            "secondKey": 3,
            "layout": 1
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 3,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 3,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 3,
            "secondKey": 2,
            "layout": 3
        }
    ]
}