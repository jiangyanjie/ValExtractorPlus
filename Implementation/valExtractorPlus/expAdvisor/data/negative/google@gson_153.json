{
    "id": 153,
    "expression": "Modifier.isStatic(rawTypeAsClass.getModifiers()) || rawTypeAsClass.getEnclosingClass() == null",
    "projectName": "google@gson",
    "commitID": "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
    "filePath": "gson/src/main/java/com/google/gson/internal/$Gson$Types.java",
    "occurrences": 1,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "Modifier.isStatic(rawTypeAsClass.getModifiers()) || rawTypeAsClass.getEnclosingClass() == null",
            "nodeType": "InfixExpression",
            "nodePosition": {
                "charLength": 106,
                "startLineNumber": 444,
                "startColumnNumber": 42,
                "endLineNumber": 445,
                "endColumnNumber": 57
            },
            "astNodeNumber": 12,
            "astHeight": 4,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 132,
                        "startLineNumber": 444,
                        "startColumnNumber": 16,
                        "endLineNumber": 445,
                        "endColumnNumber": 57
                    },
                    "nodeContext": "isStaticOrTopLevelClass=Modifier.isStatic(rawTypeAsClass.getModifiers()) || rawTypeAsClass.getEnclosingClass() == null",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 14,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 141,
                        "startLineNumber": 444,
                        "startColumnNumber": 8,
                        "endLineNumber": 445,
                        "endColumnNumber": 58
                    },
                    "nodeContext": "boolean isStaticOrTopLevelClass=Modifier.isStatic(rawTypeAsClass.getModifiers()) || rawTypeAsClass.getEnclosingClass() == null;\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 16,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 352,
                        "startLineNumber": 442,
                        "startColumnNumber": 39,
                        "endLineNumber": 448,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "{\n  Class<?> rawTypeAsClass=(Class<?>)rawType;\n  boolean isStaticOrTopLevelClass=Modifier.isStatic(rawTypeAsClass.getModifiers()) || rawTypeAsClass.getEnclosingClass() == null;\n  checkArgument(ownerType != null || isStaticOrTopLevelClass);\n  checkArgument(ownerType == null || !isStaticOrTopLevelClass);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 47,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 385,
                        "startLineNumber": 442,
                        "startColumnNumber": 6,
                        "endLineNumber": 448,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "if (rawType instanceof Class<?>) {\n  Class<?> rawTypeAsClass=(Class<?>)rawType;\n  boolean isStaticOrTopLevelClass=Modifier.isStatic(rawTypeAsClass.getModifiers()) || rawTypeAsClass.getEnclosingClass() == null;\n  checkArgument(ownerType != null || isStaticOrTopLevelClass);\n  checkArgument(ownerType == null || !isStaticOrTopLevelClass);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 54,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 857,
                        "startLineNumber": 440,
                        "startColumnNumber": 86,
                        "endLineNumber": 458,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (rawType instanceof Class<?>) {\n    Class<?> rawTypeAsClass=(Class<?>)rawType;\n    boolean isStaticOrTopLevelClass=Modifier.isStatic(rawTypeAsClass.getModifiers()) || rawTypeAsClass.getEnclosingClass() == null;\n    checkArgument(ownerType != null || isStaticOrTopLevelClass);\n    checkArgument(ownerType == null || !isStaticOrTopLevelClass);\n  }\n  this.ownerType=ownerType == null ? null : canonicalize(ownerType);\n  this.rawType=canonicalize(rawType);\n  this.typeArguments=typeArguments.clone();\n  for (int t=0; t < this.typeArguments.length; t++) {\n    checkNotNull(this.typeArguments[t]);\n    checkNotPrimitive(this.typeArguments[t]);\n    this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 130,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 939,
                        "startLineNumber": 440,
                        "startColumnNumber": 4,
                        "endLineNumber": 458,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "public ParameterizedTypeImpl(Type ownerType,Type rawType,Type... typeArguments){\n  if (rawType instanceof Class<?>) {\n    Class<?> rawTypeAsClass=(Class<?>)rawType;\n    boolean isStaticOrTopLevelClass=Modifier.isStatic(rawTypeAsClass.getModifiers()) || rawTypeAsClass.getEnclosingClass() == null;\n    checkArgument(ownerType != null || isStaticOrTopLevelClass);\n    checkArgument(ownerType == null || !isStaticOrTopLevelClass);\n  }\n  this.ownerType=ownerType == null ? null : canonicalize(ownerType);\n  this.rawType=canonicalize(rawType);\n  this.typeArguments=typeArguments.clone();\n  for (int t=0; t < this.typeArguments.length; t++) {\n    checkNotNull(this.typeArguments[t]);\n    checkNotPrimitive(this.typeArguments[t]);\n    this.typeArguments[t]=canonicalize(this.typeArguments[t]);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 145,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 141,
                    "startLineNumber": 444,
                    "startColumnNumber": 8,
                    "endLineNumber": 445,
                    "endColumnNumber": 58
                },
                "nodeContext": "boolean isStaticOrTopLevelClass=Modifier.isStatic(rawTypeAsClass.getModifiers()) || rawTypeAsClass.getEnclosingClass() == null;\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 16,
                "astHeight": 6
            },
            "tokenLength": 9,
            "type": "boolean"
        }
    ],
    "positionList": [
        {
            "charLength": 106,
            "startLineNumber": 444,
            "startColumnNumber": 42,
            "endLineNumber": 445,
            "endColumnNumber": 57
        }
    ],
    "layoutRelationDataList": []
}