{
    "id": 132,
    "expression": "leftRecursive",
    "projectName": "antlr@antlr4",
    "commitID": "86980fae9060675309cf747160cb605cdb24483d",
    "filePath": "tool-testsuite/test/org/antlr/v4/test/tool/TestPerformance.java",
    "occurrences": 4,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "leftRecursive",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 13,
                "startLineNumber": 1111,
                "startColumnNumber": 33,
                "endLineNumber": 1111,
                "endColumnNumber": 46
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 42,
                        "startLineNumber": 1111,
                        "startColumnNumber": 33,
                        "endLineNumber": 1111,
                        "endColumnNumber": 75
                    },
                    "nodeContext": "leftRecursive ? \"JavaLR.g4\" : \"Java.g4\"",
                    "nodeType": "ConditionalExpression",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 60,
                        "startLineNumber": 1111,
                        "startColumnNumber": 15,
                        "endLineNumber": 1111,
                        "endColumnNumber": 75
                    },
                    "nodeContext": "grammarFileName=leftRecursive ? \"JavaLR.g4\" : \"Java.g4\"",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 68,
                        "startLineNumber": 1111,
                        "startColumnNumber": 8,
                        "endLineNumber": 1111,
                        "endColumnNumber": 76
                    },
                    "nodeContext": "String grammarFileName=leftRecursive ? \"JavaLR.g4\" : \"Java.g4\";\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1058,
                        "startLineNumber": 1110,
                        "startColumnNumber": 79,
                        "endLineNumber": 1134,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  String grammarFileName=leftRecursive ? \"JavaLR.g4\" : \"Java.g4\";\n  String sourceName=leftRecursive ? \"JavaLR.g4\" : \"Java.g4\";\n  String parserName=leftRecursive ? \"JavaLRParser\" : \"JavaParser\";\n  String lexerName=leftRecursive ? \"JavaLRLexer\" : \"JavaLexer\";\n  String body=load(sourceName,null);\n  List<String> extraOptions=new ArrayList<String>();\n  extraOptions.add(\"-Werror\");\n  if (FORCE_ATN) {\n    extraOptions.add(\"-Xforce-atn\");\n  }\n  if (EXPORT_ATN_GRAPHS) {\n    extraOptions.add(\"-atn\");\n  }\n  if (DEBUG_TEMPLATES) {\n    extraOptions.add(\"-XdbgST\");\n    if (DEBUG_TEMPLATES_WAIT) {\n      extraOptions.add(\"-XdbgSTWait\");\n    }\n  }\n  extraOptions.add(\"-visitor\");\n  String[] extraOptionsArray=extraOptions.toArray(new String[extraOptions.size()]);\n  boolean success=rawGenerateAndBuildRecognizer(grammarFileName,body,parserName,lexerName,true,extraOptionsArray);\n  assertTrue(success);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 136,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1133,
                        "startLineNumber": 1110,
                        "startColumnNumber": 4,
                        "endLineNumber": 1134,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "protected void compileJavaParser(boolean leftRecursive) throws IOException {\n  String grammarFileName=leftRecursive ? \"JavaLR.g4\" : \"Java.g4\";\n  String sourceName=leftRecursive ? \"JavaLR.g4\" : \"Java.g4\";\n  String parserName=leftRecursive ? \"JavaLRParser\" : \"JavaParser\";\n  String lexerName=leftRecursive ? \"JavaLRLexer\" : \"JavaLexer\";\n  String body=load(sourceName,null);\n  List<String> extraOptions=new ArrayList<String>();\n  extraOptions.add(\"-Werror\");\n  if (FORCE_ATN) {\n    extraOptions.add(\"-Xforce-atn\");\n  }\n  if (EXPORT_ATN_GRAPHS) {\n    extraOptions.add(\"-atn\");\n  }\n  if (DEBUG_TEMPLATES) {\n    extraOptions.add(\"-XdbgST\");\n    if (DEBUG_TEMPLATES_WAIT) {\n      extraOptions.add(\"-XdbgSTWait\");\n    }\n  }\n  extraOptions.add(\"-visitor\");\n  String[] extraOptionsArray=extraOptions.toArray(new String[extraOptions.size()]);\n  boolean success=rawGenerateAndBuildRecognizer(grammarFileName,body,parserName,lexerName,true,extraOptionsArray);\n  assertTrue(success);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 145,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 68,
                    "startLineNumber": 1111,
                    "startColumnNumber": 8,
                    "endLineNumber": 1111,
                    "endColumnNumber": 76
                },
                "nodeContext": "String grammarFileName=leftRecursive ? \"JavaLR.g4\" : \"Java.g4\";\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 9,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "boolean"
        },
        {
            "nodeContext": "leftRecursive",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 13,
                "startLineNumber": 1112,
                "startColumnNumber": 33,
                "endLineNumber": 1112,
                "endColumnNumber": 46
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 42,
                        "startLineNumber": 1112,
                        "startColumnNumber": 33,
                        "endLineNumber": 1112,
                        "endColumnNumber": 75
                    },
                    "nodeContext": "leftRecursive ? \"JavaLR.g4\" : \"Java.g4\"",
                    "nodeType": "ConditionalExpression",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 60,
                        "startLineNumber": 1112,
                        "startColumnNumber": 15,
                        "endLineNumber": 1112,
                        "endColumnNumber": 75
                    },
                    "nodeContext": "sourceName=leftRecursive ? \"JavaLR.g4\" : \"Java.g4\"",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 68,
                        "startLineNumber": 1112,
                        "startColumnNumber": 8,
                        "endLineNumber": 1112,
                        "endColumnNumber": 76
                    },
                    "nodeContext": "String sourceName=leftRecursive ? \"JavaLR.g4\" : \"Java.g4\";\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1058,
                        "startLineNumber": 1110,
                        "startColumnNumber": 79,
                        "endLineNumber": 1134,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  String grammarFileName=leftRecursive ? \"JavaLR.g4\" : \"Java.g4\";\n  String sourceName=leftRecursive ? \"JavaLR.g4\" : \"Java.g4\";\n  String parserName=leftRecursive ? \"JavaLRParser\" : \"JavaParser\";\n  String lexerName=leftRecursive ? \"JavaLRLexer\" : \"JavaLexer\";\n  String body=load(sourceName,null);\n  List<String> extraOptions=new ArrayList<String>();\n  extraOptions.add(\"-Werror\");\n  if (FORCE_ATN) {\n    extraOptions.add(\"-Xforce-atn\");\n  }\n  if (EXPORT_ATN_GRAPHS) {\n    extraOptions.add(\"-atn\");\n  }\n  if (DEBUG_TEMPLATES) {\n    extraOptions.add(\"-XdbgST\");\n    if (DEBUG_TEMPLATES_WAIT) {\n      extraOptions.add(\"-XdbgSTWait\");\n    }\n  }\n  extraOptions.add(\"-visitor\");\n  String[] extraOptionsArray=extraOptions.toArray(new String[extraOptions.size()]);\n  boolean success=rawGenerateAndBuildRecognizer(grammarFileName,body,parserName,lexerName,true,extraOptionsArray);\n  assertTrue(success);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 136,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1133,
                        "startLineNumber": 1110,
                        "startColumnNumber": 4,
                        "endLineNumber": 1134,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "protected void compileJavaParser(boolean leftRecursive) throws IOException {\n  String grammarFileName=leftRecursive ? \"JavaLR.g4\" : \"Java.g4\";\n  String sourceName=leftRecursive ? \"JavaLR.g4\" : \"Java.g4\";\n  String parserName=leftRecursive ? \"JavaLRParser\" : \"JavaParser\";\n  String lexerName=leftRecursive ? \"JavaLRLexer\" : \"JavaLexer\";\n  String body=load(sourceName,null);\n  List<String> extraOptions=new ArrayList<String>();\n  extraOptions.add(\"-Werror\");\n  if (FORCE_ATN) {\n    extraOptions.add(\"-Xforce-atn\");\n  }\n  if (EXPORT_ATN_GRAPHS) {\n    extraOptions.add(\"-atn\");\n  }\n  if (DEBUG_TEMPLATES) {\n    extraOptions.add(\"-XdbgST\");\n    if (DEBUG_TEMPLATES_WAIT) {\n      extraOptions.add(\"-XdbgSTWait\");\n    }\n  }\n  extraOptions.add(\"-visitor\");\n  String[] extraOptionsArray=extraOptions.toArray(new String[extraOptions.size()]);\n  boolean success=rawGenerateAndBuildRecognizer(grammarFileName,body,parserName,lexerName,true,extraOptionsArray);\n  assertTrue(success);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 145,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 68,
                    "startLineNumber": 1112,
                    "startColumnNumber": 8,
                    "endLineNumber": 1112,
                    "endColumnNumber": 76
                },
                "nodeContext": "String sourceName=leftRecursive ? \"JavaLR.g4\" : \"Java.g4\";\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 9,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "boolean"
        },
        {
            "nodeContext": "leftRecursive",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 13,
                "startLineNumber": 1113,
                "startColumnNumber": 33,
                "endLineNumber": 1113,
                "endColumnNumber": 46
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 45,
                        "startLineNumber": 1113,
                        "startColumnNumber": 33,
                        "endLineNumber": 1113,
                        "endColumnNumber": 78
                    },
                    "nodeContext": "leftRecursive ? \"JavaLRParser\" : \"JavaParser\"",
                    "nodeType": "ConditionalExpression",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 63,
                        "startLineNumber": 1113,
                        "startColumnNumber": 15,
                        "endLineNumber": 1113,
                        "endColumnNumber": 78
                    },
                    "nodeContext": "parserName=leftRecursive ? \"JavaLRParser\" : \"JavaParser\"",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 71,
                        "startLineNumber": 1113,
                        "startColumnNumber": 8,
                        "endLineNumber": 1113,
                        "endColumnNumber": 79
                    },
                    "nodeContext": "String parserName=leftRecursive ? \"JavaLRParser\" : \"JavaParser\";\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1058,
                        "startLineNumber": 1110,
                        "startColumnNumber": 79,
                        "endLineNumber": 1134,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  String grammarFileName=leftRecursive ? \"JavaLR.g4\" : \"Java.g4\";\n  String sourceName=leftRecursive ? \"JavaLR.g4\" : \"Java.g4\";\n  String parserName=leftRecursive ? \"JavaLRParser\" : \"JavaParser\";\n  String lexerName=leftRecursive ? \"JavaLRLexer\" : \"JavaLexer\";\n  String body=load(sourceName,null);\n  List<String> extraOptions=new ArrayList<String>();\n  extraOptions.add(\"-Werror\");\n  if (FORCE_ATN) {\n    extraOptions.add(\"-Xforce-atn\");\n  }\n  if (EXPORT_ATN_GRAPHS) {\n    extraOptions.add(\"-atn\");\n  }\n  if (DEBUG_TEMPLATES) {\n    extraOptions.add(\"-XdbgST\");\n    if (DEBUG_TEMPLATES_WAIT) {\n      extraOptions.add(\"-XdbgSTWait\");\n    }\n  }\n  extraOptions.add(\"-visitor\");\n  String[] extraOptionsArray=extraOptions.toArray(new String[extraOptions.size()]);\n  boolean success=rawGenerateAndBuildRecognizer(grammarFileName,body,parserName,lexerName,true,extraOptionsArray);\n  assertTrue(success);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 136,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1133,
                        "startLineNumber": 1110,
                        "startColumnNumber": 4,
                        "endLineNumber": 1134,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "protected void compileJavaParser(boolean leftRecursive) throws IOException {\n  String grammarFileName=leftRecursive ? \"JavaLR.g4\" : \"Java.g4\";\n  String sourceName=leftRecursive ? \"JavaLR.g4\" : \"Java.g4\";\n  String parserName=leftRecursive ? \"JavaLRParser\" : \"JavaParser\";\n  String lexerName=leftRecursive ? \"JavaLRLexer\" : \"JavaLexer\";\n  String body=load(sourceName,null);\n  List<String> extraOptions=new ArrayList<String>();\n  extraOptions.add(\"-Werror\");\n  if (FORCE_ATN) {\n    extraOptions.add(\"-Xforce-atn\");\n  }\n  if (EXPORT_ATN_GRAPHS) {\n    extraOptions.add(\"-atn\");\n  }\n  if (DEBUG_TEMPLATES) {\n    extraOptions.add(\"-XdbgST\");\n    if (DEBUG_TEMPLATES_WAIT) {\n      extraOptions.add(\"-XdbgSTWait\");\n    }\n  }\n  extraOptions.add(\"-visitor\");\n  String[] extraOptionsArray=extraOptions.toArray(new String[extraOptions.size()]);\n  boolean success=rawGenerateAndBuildRecognizer(grammarFileName,body,parserName,lexerName,true,extraOptionsArray);\n  assertTrue(success);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 145,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 71,
                    "startLineNumber": 1113,
                    "startColumnNumber": 8,
                    "endLineNumber": 1113,
                    "endColumnNumber": 79
                },
                "nodeContext": "String parserName=leftRecursive ? \"JavaLRParser\" : \"JavaParser\";\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 9,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "boolean"
        },
        {
            "nodeContext": "leftRecursive",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 13,
                "startLineNumber": 1114,
                "startColumnNumber": 33,
                "endLineNumber": 1114,
                "endColumnNumber": 46
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 44,
                        "startLineNumber": 1114,
                        "startColumnNumber": 33,
                        "endLineNumber": 1114,
                        "endColumnNumber": 77
                    },
                    "nodeContext": "leftRecursive ? \"JavaLRLexer\" : \"JavaLexer\"",
                    "nodeType": "ConditionalExpression",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 62,
                        "startLineNumber": 1114,
                        "startColumnNumber": 15,
                        "endLineNumber": 1114,
                        "endColumnNumber": 77
                    },
                    "nodeContext": "lexerName=leftRecursive ? \"JavaLRLexer\" : \"JavaLexer\"",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 70,
                        "startLineNumber": 1114,
                        "startColumnNumber": 8,
                        "endLineNumber": 1114,
                        "endColumnNumber": 78
                    },
                    "nodeContext": "String lexerName=leftRecursive ? \"JavaLRLexer\" : \"JavaLexer\";\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1058,
                        "startLineNumber": 1110,
                        "startColumnNumber": 79,
                        "endLineNumber": 1134,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  String grammarFileName=leftRecursive ? \"JavaLR.g4\" : \"Java.g4\";\n  String sourceName=leftRecursive ? \"JavaLR.g4\" : \"Java.g4\";\n  String parserName=leftRecursive ? \"JavaLRParser\" : \"JavaParser\";\n  String lexerName=leftRecursive ? \"JavaLRLexer\" : \"JavaLexer\";\n  String body=load(sourceName,null);\n  List<String> extraOptions=new ArrayList<String>();\n  extraOptions.add(\"-Werror\");\n  if (FORCE_ATN) {\n    extraOptions.add(\"-Xforce-atn\");\n  }\n  if (EXPORT_ATN_GRAPHS) {\n    extraOptions.add(\"-atn\");\n  }\n  if (DEBUG_TEMPLATES) {\n    extraOptions.add(\"-XdbgST\");\n    if (DEBUG_TEMPLATES_WAIT) {\n      extraOptions.add(\"-XdbgSTWait\");\n    }\n  }\n  extraOptions.add(\"-visitor\");\n  String[] extraOptionsArray=extraOptions.toArray(new String[extraOptions.size()]);\n  boolean success=rawGenerateAndBuildRecognizer(grammarFileName,body,parserName,lexerName,true,extraOptionsArray);\n  assertTrue(success);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 136,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1133,
                        "startLineNumber": 1110,
                        "startColumnNumber": 4,
                        "endLineNumber": 1134,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "protected void compileJavaParser(boolean leftRecursive) throws IOException {\n  String grammarFileName=leftRecursive ? \"JavaLR.g4\" : \"Java.g4\";\n  String sourceName=leftRecursive ? \"JavaLR.g4\" : \"Java.g4\";\n  String parserName=leftRecursive ? \"JavaLRParser\" : \"JavaParser\";\n  String lexerName=leftRecursive ? \"JavaLRLexer\" : \"JavaLexer\";\n  String body=load(sourceName,null);\n  List<String> extraOptions=new ArrayList<String>();\n  extraOptions.add(\"-Werror\");\n  if (FORCE_ATN) {\n    extraOptions.add(\"-Xforce-atn\");\n  }\n  if (EXPORT_ATN_GRAPHS) {\n    extraOptions.add(\"-atn\");\n  }\n  if (DEBUG_TEMPLATES) {\n    extraOptions.add(\"-XdbgST\");\n    if (DEBUG_TEMPLATES_WAIT) {\n      extraOptions.add(\"-XdbgSTWait\");\n    }\n  }\n  extraOptions.add(\"-visitor\");\n  String[] extraOptionsArray=extraOptions.toArray(new String[extraOptions.size()]);\n  boolean success=rawGenerateAndBuildRecognizer(grammarFileName,body,parserName,lexerName,true,extraOptionsArray);\n  assertTrue(success);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 145,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 70,
                    "startLineNumber": 1114,
                    "startColumnNumber": 8,
                    "endLineNumber": 1114,
                    "endColumnNumber": 78
                },
                "nodeContext": "String lexerName=leftRecursive ? \"JavaLRLexer\" : \"JavaLexer\";\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 9,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "boolean"
        }
    ],
    "positionList": [
        {
            "charLength": 13,
            "startLineNumber": 1111,
            "startColumnNumber": 33,
            "endLineNumber": 1111,
            "endColumnNumber": 46
        },
        {
            "charLength": 13,
            "startLineNumber": 1112,
            "startColumnNumber": 33,
            "endLineNumber": 1112,
            "endColumnNumber": 46
        },
        {
            "charLength": 13,
            "startLineNumber": 1113,
            "startColumnNumber": 33,
            "endLineNumber": 1113,
            "endColumnNumber": 46
        },
        {
            "charLength": 13,
            "startLineNumber": 1114,
            "startColumnNumber": 33,
            "endLineNumber": 1114,
            "endColumnNumber": 46
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 3,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 3,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 3,
            "secondKey": 2,
            "layout": 3
        }
    ]
}