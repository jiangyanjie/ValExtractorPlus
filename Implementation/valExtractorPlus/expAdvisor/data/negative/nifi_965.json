{
    "id": 965,
    "expression": "DisconnectionCode",
    "projectName": "nifi",
    "commitID": "a1b07b1e9c388d8642699b1d8b101a606dc5bd6a",
    "filePath": "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster/src/main/java/org/apache/nifi/cluster/coordination/heartbeat/AbstractHeartbeatMonitor.java",
    "occurrences": 1,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "DisconnectionCode",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 17,
                "startLineNumber": 162,
                "startColumnNumber": 95,
                "endLineNumber": 162,
                "endColumnNumber": 112
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 35,
                        "startLineNumber": 162,
                        "startColumnNumber": 95,
                        "endLineNumber": 162,
                        "endColumnNumber": 130
                    },
                    "nodeContext": "DisconnectionCode.LACK_OF_HEARTBEAT",
                    "nodeType": "QualifiedName",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 227,
                        "startLineNumber": 162,
                        "startColumnNumber": 16,
                        "endLineNumber": 163,
                        "endColumnNumber": 111
                    },
                    "nodeContext": "clusterCoordinator.disconnectionRequestedByNode(heartbeat.getNodeIdentifier(),DisconnectionCode.LACK_OF_HEARTBEAT,\"Have not received a heartbeat from node in \" + secondsSinceLastHeartbeat + \" seconds\")",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 13,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 228,
                        "startLineNumber": 162,
                        "startColumnNumber": 16,
                        "endLineNumber": 163,
                        "endColumnNumber": 112
                    },
                    "nodeContext": "clusterCoordinator.disconnectionRequestedByNode(heartbeat.getNodeIdentifier(),DisconnectionCode.LACK_OF_HEARTBEAT,\"Have not received a heartbeat from node in \" + secondsSinceLastHeartbeat + \" seconds\");\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 14,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 724,
                        "startLineNumber": 159,
                        "startColumnNumber": 54,
                        "endLineNumber": 171,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  final long secondsSinceLastHeartbeat=TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis() - heartbeat.getTimestamp());\n  clusterCoordinator.disconnectionRequestedByNode(heartbeat.getNodeIdentifier(),DisconnectionCode.LACK_OF_HEARTBEAT,\"Have not received a heartbeat from node in \" + secondsSinceLastHeartbeat + \" seconds\");\n  try {\n    removeHeartbeat(heartbeat.getNodeIdentifier());\n  }\n catch (  final Exception e) {\n    logger.warn(\"Failed to remove heartbeat for {} due to {}\",heartbeat.getNodeIdentifier(),e.toString());\n    logger.warn(\"\",e);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 64,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 766,
                        "startLineNumber": 159,
                        "startColumnNumber": 12,
                        "endLineNumber": 171,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (heartbeat.getTimestamp() < threshold) {\n  final long secondsSinceLastHeartbeat=TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis() - heartbeat.getTimestamp());\n  clusterCoordinator.disconnectionRequestedByNode(heartbeat.getNodeIdentifier(),DisconnectionCode.LACK_OF_HEARTBEAT,\"Have not received a heartbeat from node in \" + secondsSinceLastHeartbeat + \" seconds\");\n  try {\n    removeHeartbeat(heartbeat.getNodeIdentifier());\n  }\n catch (  final Exception e) {\n    logger.warn(\"Failed to remove heartbeat for {} due to {}\",heartbeat.getNodeIdentifier(),e.toString());\n    logger.warn(\"\",e);\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 70,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 790,
                        "startLineNumber": 158,
                        "startColumnNumber": 72,
                        "endLineNumber": 172,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (heartbeat.getTimestamp() < threshold) {\n    final long secondsSinceLastHeartbeat=TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis() - heartbeat.getTimestamp());\n    clusterCoordinator.disconnectionRequestedByNode(heartbeat.getNodeIdentifier(),DisconnectionCode.LACK_OF_HEARTBEAT,\"Have not received a heartbeat from node in \" + secondsSinceLastHeartbeat + \" seconds\");\n    try {\n      removeHeartbeat(heartbeat.getNodeIdentifier());\n    }\n catch (    final Exception e) {\n      logger.warn(\"Failed to remove heartbeat for {} due to {}\",heartbeat.getNodeIdentifier(),e.toString());\n      logger.warn(\"\",e);\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 71,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 854,
                        "startLineNumber": 158,
                        "startColumnNumber": 8,
                        "endLineNumber": 172,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (final NodeHeartbeat heartbeat : latestHeartbeats.values()) {\n  if (heartbeat.getTimestamp() < threshold) {\n    final long secondsSinceLastHeartbeat=TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis() - heartbeat.getTimestamp());\n    clusterCoordinator.disconnectionRequestedByNode(heartbeat.getNodeIdentifier(),DisconnectionCode.LACK_OF_HEARTBEAT,\"Have not received a heartbeat from node in \" + secondsSinceLastHeartbeat + \" seconds\");\n    try {\n      removeHeartbeat(heartbeat.getNodeIdentifier());\n    }\n catch (    final Exception e) {\n      logger.warn(\"Failed to remove heartbeat for {} due to {}\",heartbeat.getNodeIdentifier(),e.toString());\n      logger.warn(\"\",e);\n    }\n  }\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 80,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2981,
                        "startLineNumber": 123,
                        "startColumnNumber": 52,
                        "endLineNumber": 173,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final NodeIdentifier activeCoordinator=clusterCoordinator.getElectedActiveCoordinatorNode();\n  if (activeCoordinator != null && !activeCoordinator.equals(clusterCoordinator.getLocalNodeIdentifier())) {\n    logger.debug(\"It appears that this node is no longer the actively elected cluster coordinator. Will not request that node disconnect.\");\n    return;\n  }\n  final Map<NodeIdentifier,NodeHeartbeat> latestHeartbeats=getLatestHeartbeats();\n  if (latestHeartbeats == null || latestHeartbeats.isEmpty()) {\n    logger.debug(\"Received no new heartbeats. Will not disconnect any nodes due to lack of heartbeat\");\n    return;\n  }\n  final StopWatch procStopWatch=new StopWatch(true);\n  for (  final NodeHeartbeat heartbeat : latestHeartbeats.values()) {\n    try {\n      processHeartbeat(heartbeat);\n    }\n catch (    final Exception e) {\n      clusterCoordinator.reportEvent(null,Severity.ERROR,\"Received heartbeat from \" + heartbeat.getNodeIdentifier() + \" but failed to process heartbeat due to \"+ e);\n      logger.error(\"Failed to process heartbeat from {} due to {}\",heartbeat.getNodeIdentifier(),e.toString());\n      logger.error(\"\",e);\n    }\n  }\n  procStopWatch.stop();\n  logger.info(\"Finished processing {} heartbeats in {}\",latestHeartbeats.size(),procStopWatch.getDuration());\n  final long maxMillis=heartbeatIntervalMillis * 8;\n  final long threshold=System.currentTimeMillis() - maxMillis;\n  for (  final NodeHeartbeat heartbeat : latestHeartbeats.values()) {\n    if (heartbeat.getTimestamp() < threshold) {\n      final long secondsSinceLastHeartbeat=TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis() - heartbeat.getTimestamp());\n      clusterCoordinator.disconnectionRequestedByNode(heartbeat.getNodeIdentifier(),DisconnectionCode.LACK_OF_HEARTBEAT,\"Have not received a heartbeat from node in \" + secondsSinceLastHeartbeat + \" seconds\");\n      try {\n        removeHeartbeat(heartbeat.getNodeIdentifier());\n      }\n catch (      final Exception e) {\n        logger.warn(\"Failed to remove heartbeat for {} due to {}\",heartbeat.getNodeIdentifier(),e.toString());\n        logger.warn(\"\",e);\n      }\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 235,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 3217,
                        "startLineNumber": 117,
                        "startColumnNumber": 4,
                        "endLineNumber": 173,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Fetches all of the latest heartbeats and updates the Cluster Coordinator as appropriate, based on the heartbeats received. Visible for testing.\n */\nprotected synchronized void monitorHeartbeats(){\n  final NodeIdentifier activeCoordinator=clusterCoordinator.getElectedActiveCoordinatorNode();\n  if (activeCoordinator != null && !activeCoordinator.equals(clusterCoordinator.getLocalNodeIdentifier())) {\n    logger.debug(\"It appears that this node is no longer the actively elected cluster coordinator. Will not request that node disconnect.\");\n    return;\n  }\n  final Map<NodeIdentifier,NodeHeartbeat> latestHeartbeats=getLatestHeartbeats();\n  if (latestHeartbeats == null || latestHeartbeats.isEmpty()) {\n    logger.debug(\"Received no new heartbeats. Will not disconnect any nodes due to lack of heartbeat\");\n    return;\n  }\n  final StopWatch procStopWatch=new StopWatch(true);\n  for (  final NodeHeartbeat heartbeat : latestHeartbeats.values()) {\n    try {\n      processHeartbeat(heartbeat);\n    }\n catch (    final Exception e) {\n      clusterCoordinator.reportEvent(null,Severity.ERROR,\"Received heartbeat from \" + heartbeat.getNodeIdentifier() + \" but failed to process heartbeat due to \"+ e);\n      logger.error(\"Failed to process heartbeat from {} due to {}\",heartbeat.getNodeIdentifier(),e.toString());\n      logger.error(\"\",e);\n    }\n  }\n  procStopWatch.stop();\n  logger.info(\"Finished processing {} heartbeats in {}\",latestHeartbeats.size(),procStopWatch.getDuration());\n  final long maxMillis=heartbeatIntervalMillis * 8;\n  final long threshold=System.currentTimeMillis() - maxMillis;\n  for (  final NodeHeartbeat heartbeat : latestHeartbeats.values()) {\n    if (heartbeat.getTimestamp() < threshold) {\n      final long secondsSinceLastHeartbeat=TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis() - heartbeat.getTimestamp());\n      clusterCoordinator.disconnectionRequestedByNode(heartbeat.getNodeIdentifier(),DisconnectionCode.LACK_OF_HEARTBEAT,\"Have not received a heartbeat from node in \" + secondsSinceLastHeartbeat + \" seconds\");\n      try {\n        removeHeartbeat(heartbeat.getNodeIdentifier());\n      }\n catch (      final Exception e) {\n        logger.warn(\"Failed to remove heartbeat for {} due to {}\",heartbeat.getNodeIdentifier(),e.toString());\n        logger.warn(\"\",e);\n      }\n    }\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 241,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                "nodePosition": {
                    "charLength": 35,
                    "startLineNumber": 162,
                    "startColumnNumber": 95,
                    "endLineNumber": 162,
                    "endColumnNumber": 130
                },
                "nodeContext": "DisconnectionCode.LACK_OF_HEARTBEAT",
                "nodeType": "QualifiedName",
                "astNodeNumber": 3,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "org.apache.nifi.cluster.coordination.node.DisconnectionCode"
        }
    ],
    "positionList": [
        {
            "charLength": 17,
            "startLineNumber": 162,
            "startColumnNumber": 95,
            "endLineNumber": 162,
            "endColumnNumber": 112
        }
    ],
    "layoutRelationDataList": []
}