{
    "id": 1122,
    "expression": "config",
    "projectName": "jackrabbit-oak",
    "commitID": "dccadcd80d920fb1582927c4d9349b25a48cd7e7",
    "filePath": "oak-auth-ldap/src/main/java/org/apache/jackrabbit/oak/security/authentication/ldap/impl/LdapIdentityProvider.java",
    "occurrences": 8,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "config",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 6,
                "startLineNumber": 153,
                "startColumnNumber": 13,
                "endLineNumber": 153,
                "endColumnNumber": 19
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 18,
                        "startLineNumber": 153,
                        "startColumnNumber": 13,
                        "endLineNumber": 153,
                        "endColumnNumber": 31
                    },
                    "nodeContext": "config.getBindDN()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
                    "nodePosition": {
                        "charLength": 28,
                        "startLineNumber": 153,
                        "startColumnNumber": 13,
                        "endLineNumber": 153,
                        "endColumnNumber": 41
                    },
                    "nodeContext": "config.getBindDN().isEmpty()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 29,
                        "startLineNumber": 153,
                        "startColumnNumber": 12,
                        "endLineNumber": 153,
                        "endColumnNumber": 41
                    },
                    "nodeContext": "!config.getBindDN().isEmpty()",
                    "nodeType": "PrefixExpression",
                    "astNodeNumber": 6,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 147,
                        "startLineNumber": 153,
                        "startColumnNumber": 8,
                        "endLineNumber": 156,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (!config.getBindDN().isEmpty()) {\n  cc.setName(config.getBindDN());\n  cc.setCredentials(config.getBindPassword());\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 22,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1447,
                        "startLineNumber": 146,
                        "startColumnNumber": 24,
                        "endLineNumber": 178,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (adminConnectionFactory != null) {\n    throw new IllegalStateException(\"Provider already initialized.\");\n  }\n  LdapConnectionConfig cc=createConnectionConfig();\n  if (!config.getBindDN().isEmpty()) {\n    cc.setName(config.getBindDN());\n    cc.setCredentials(config.getBindPassword());\n  }\n  adminConnectionFactory=new PoolableLdapConnectionFactory(cc);\n  if (config.getAdminPoolConfig().getMaxActive() != 0) {\n    adminPool=new LdapConnectionPool(adminConnectionFactory);\n    adminPool.setTestOnBorrow(true);\n    adminPool.setMaxActive(config.getAdminPoolConfig().getMaxActive());\n    adminPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  cc=createConnectionConfig();\n  userConnectionFactory=new PoolableUnboundConnectionFactory(cc);\n  if (config.getUserPoolConfig().getMaxActive() != 0) {\n    userPool=new UnboundLdapConnectionPool(userConnectionFactory);\n    userPool.setTestOnBorrow(true);\n    userPool.setMaxActive(config.getUserPoolConfig().getMaxActive());\n    userPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  log.info(\"LdapIdentityProvider initialized: {}\",config);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 139,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1530,
                        "startLineNumber": 143,
                        "startColumnNumber": 4,
                        "endLineNumber": 178,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Initializes the ldap identity provider.\n */\nprivate void init(){\n  if (adminConnectionFactory != null) {\n    throw new IllegalStateException(\"Provider already initialized.\");\n  }\n  LdapConnectionConfig cc=createConnectionConfig();\n  if (!config.getBindDN().isEmpty()) {\n    cc.setName(config.getBindDN());\n    cc.setCredentials(config.getBindPassword());\n  }\n  adminConnectionFactory=new PoolableLdapConnectionFactory(cc);\n  if (config.getAdminPoolConfig().getMaxActive() != 0) {\n    adminPool=new LdapConnectionPool(adminConnectionFactory);\n    adminPool.setTestOnBorrow(true);\n    adminPool.setMaxActive(config.getAdminPoolConfig().getMaxActive());\n    adminPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  cc=createConnectionConfig();\n  userConnectionFactory=new PoolableUnboundConnectionFactory(cc);\n  if (config.getUserPoolConfig().getMaxActive() != 0) {\n    userPool=new UnboundLdapConnectionPool(userConnectionFactory);\n    userPool.setTestOnBorrow(true);\n    userPool.setMaxActive(config.getUserPoolConfig().getMaxActive());\n    userPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  log.info(\"LdapIdentityProvider initialized: {}\",config);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 144,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 29,
                    "startLineNumber": 153,
                    "startColumnNumber": 12,
                    "endLineNumber": 153,
                    "endColumnNumber": 41
                },
                "nodeContext": "!config.getBindDN().isEmpty()",
                "nodeType": "PrefixExpression",
                "astNodeNumber": 6,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.oak.security.authentication.ldap.impl.LdapProviderConfig"
        },
        {
            "nodeContext": "config",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 6,
                "startLineNumber": 154,
                "startColumnNumber": 23,
                "endLineNumber": 154,
                "endColumnNumber": 29
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 18,
                        "startLineNumber": 154,
                        "startColumnNumber": 23,
                        "endLineNumber": 154,
                        "endColumnNumber": 41
                    },
                    "nodeContext": "config.getBindDN()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 30,
                        "startLineNumber": 154,
                        "startColumnNumber": 12,
                        "endLineNumber": 154,
                        "endColumnNumber": 42
                    },
                    "nodeContext": "cc.setName(config.getBindDN())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 31,
                        "startLineNumber": 154,
                        "startColumnNumber": 12,
                        "endLineNumber": 154,
                        "endColumnNumber": 43
                    },
                    "nodeContext": "cc.setName(config.getBindDN());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 112,
                        "startLineNumber": 153,
                        "startColumnNumber": 43,
                        "endLineNumber": 156,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  cc.setName(config.getBindDN());\n  cc.setCredentials(config.getBindPassword());\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 15,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 147,
                        "startLineNumber": 153,
                        "startColumnNumber": 8,
                        "endLineNumber": 156,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (!config.getBindDN().isEmpty()) {\n  cc.setName(config.getBindDN());\n  cc.setCredentials(config.getBindPassword());\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 22,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1447,
                        "startLineNumber": 146,
                        "startColumnNumber": 24,
                        "endLineNumber": 178,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (adminConnectionFactory != null) {\n    throw new IllegalStateException(\"Provider already initialized.\");\n  }\n  LdapConnectionConfig cc=createConnectionConfig();\n  if (!config.getBindDN().isEmpty()) {\n    cc.setName(config.getBindDN());\n    cc.setCredentials(config.getBindPassword());\n  }\n  adminConnectionFactory=new PoolableLdapConnectionFactory(cc);\n  if (config.getAdminPoolConfig().getMaxActive() != 0) {\n    adminPool=new LdapConnectionPool(adminConnectionFactory);\n    adminPool.setTestOnBorrow(true);\n    adminPool.setMaxActive(config.getAdminPoolConfig().getMaxActive());\n    adminPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  cc=createConnectionConfig();\n  userConnectionFactory=new PoolableUnboundConnectionFactory(cc);\n  if (config.getUserPoolConfig().getMaxActive() != 0) {\n    userPool=new UnboundLdapConnectionPool(userConnectionFactory);\n    userPool.setTestOnBorrow(true);\n    userPool.setMaxActive(config.getUserPoolConfig().getMaxActive());\n    userPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  log.info(\"LdapIdentityProvider initialized: {}\",config);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 139,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1530,
                        "startLineNumber": 143,
                        "startColumnNumber": 4,
                        "endLineNumber": 178,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Initializes the ldap identity provider.\n */\nprivate void init(){\n  if (adminConnectionFactory != null) {\n    throw new IllegalStateException(\"Provider already initialized.\");\n  }\n  LdapConnectionConfig cc=createConnectionConfig();\n  if (!config.getBindDN().isEmpty()) {\n    cc.setName(config.getBindDN());\n    cc.setCredentials(config.getBindPassword());\n  }\n  adminConnectionFactory=new PoolableLdapConnectionFactory(cc);\n  if (config.getAdminPoolConfig().getMaxActive() != 0) {\n    adminPool=new LdapConnectionPool(adminConnectionFactory);\n    adminPool.setTestOnBorrow(true);\n    adminPool.setMaxActive(config.getAdminPoolConfig().getMaxActive());\n    adminPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  cc=createConnectionConfig();\n  userConnectionFactory=new PoolableUnboundConnectionFactory(cc);\n  if (config.getUserPoolConfig().getMaxActive() != 0) {\n    userPool=new UnboundLdapConnectionPool(userConnectionFactory);\n    userPool.setTestOnBorrow(true);\n    userPool.setMaxActive(config.getUserPoolConfig().getMaxActive());\n    userPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  log.info(\"LdapIdentityProvider initialized: {}\",config);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 144,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 31,
                    "startLineNumber": 154,
                    "startColumnNumber": 12,
                    "endLineNumber": 154,
                    "endColumnNumber": 43
                },
                "nodeContext": "cc.setName(config.getBindDN());\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 7,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.oak.security.authentication.ldap.impl.LdapProviderConfig"
        },
        {
            "nodeContext": "config",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 6,
                "startLineNumber": 155,
                "startColumnNumber": 30,
                "endLineNumber": 155,
                "endColumnNumber": 36
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 24,
                        "startLineNumber": 155,
                        "startColumnNumber": 30,
                        "endLineNumber": 155,
                        "endColumnNumber": 54
                    },
                    "nodeContext": "config.getBindPassword()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 43,
                        "startLineNumber": 155,
                        "startColumnNumber": 12,
                        "endLineNumber": 155,
                        "endColumnNumber": 55
                    },
                    "nodeContext": "cc.setCredentials(config.getBindPassword())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 44,
                        "startLineNumber": 155,
                        "startColumnNumber": 12,
                        "endLineNumber": 155,
                        "endColumnNumber": 56
                    },
                    "nodeContext": "cc.setCredentials(config.getBindPassword());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 112,
                        "startLineNumber": 153,
                        "startColumnNumber": 43,
                        "endLineNumber": 156,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  cc.setName(config.getBindDN());\n  cc.setCredentials(config.getBindPassword());\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 15,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 147,
                        "startLineNumber": 153,
                        "startColumnNumber": 8,
                        "endLineNumber": 156,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (!config.getBindDN().isEmpty()) {\n  cc.setName(config.getBindDN());\n  cc.setCredentials(config.getBindPassword());\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 22,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1447,
                        "startLineNumber": 146,
                        "startColumnNumber": 24,
                        "endLineNumber": 178,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (adminConnectionFactory != null) {\n    throw new IllegalStateException(\"Provider already initialized.\");\n  }\n  LdapConnectionConfig cc=createConnectionConfig();\n  if (!config.getBindDN().isEmpty()) {\n    cc.setName(config.getBindDN());\n    cc.setCredentials(config.getBindPassword());\n  }\n  adminConnectionFactory=new PoolableLdapConnectionFactory(cc);\n  if (config.getAdminPoolConfig().getMaxActive() != 0) {\n    adminPool=new LdapConnectionPool(adminConnectionFactory);\n    adminPool.setTestOnBorrow(true);\n    adminPool.setMaxActive(config.getAdminPoolConfig().getMaxActive());\n    adminPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  cc=createConnectionConfig();\n  userConnectionFactory=new PoolableUnboundConnectionFactory(cc);\n  if (config.getUserPoolConfig().getMaxActive() != 0) {\n    userPool=new UnboundLdapConnectionPool(userConnectionFactory);\n    userPool.setTestOnBorrow(true);\n    userPool.setMaxActive(config.getUserPoolConfig().getMaxActive());\n    userPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  log.info(\"LdapIdentityProvider initialized: {}\",config);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 139,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1530,
                        "startLineNumber": 143,
                        "startColumnNumber": 4,
                        "endLineNumber": 178,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Initializes the ldap identity provider.\n */\nprivate void init(){\n  if (adminConnectionFactory != null) {\n    throw new IllegalStateException(\"Provider already initialized.\");\n  }\n  LdapConnectionConfig cc=createConnectionConfig();\n  if (!config.getBindDN().isEmpty()) {\n    cc.setName(config.getBindDN());\n    cc.setCredentials(config.getBindPassword());\n  }\n  adminConnectionFactory=new PoolableLdapConnectionFactory(cc);\n  if (config.getAdminPoolConfig().getMaxActive() != 0) {\n    adminPool=new LdapConnectionPool(adminConnectionFactory);\n    adminPool.setTestOnBorrow(true);\n    adminPool.setMaxActive(config.getAdminPoolConfig().getMaxActive());\n    adminPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  cc=createConnectionConfig();\n  userConnectionFactory=new PoolableUnboundConnectionFactory(cc);\n  if (config.getUserPoolConfig().getMaxActive() != 0) {\n    userPool=new UnboundLdapConnectionPool(userConnectionFactory);\n    userPool.setTestOnBorrow(true);\n    userPool.setMaxActive(config.getUserPoolConfig().getMaxActive());\n    userPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  log.info(\"LdapIdentityProvider initialized: {}\",config);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 144,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 44,
                    "startLineNumber": 155,
                    "startColumnNumber": 12,
                    "endLineNumber": 155,
                    "endColumnNumber": 56
                },
                "nodeContext": "cc.setCredentials(config.getBindPassword());\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 7,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.oak.security.authentication.ldap.impl.LdapProviderConfig"
        },
        {
            "nodeContext": "config",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 6,
                "startLineNumber": 159,
                "startColumnNumber": 12,
                "endLineNumber": 159,
                "endColumnNumber": 18
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 27,
                        "startLineNumber": 159,
                        "startColumnNumber": 12,
                        "endLineNumber": 159,
                        "endColumnNumber": 39
                    },
                    "nodeContext": "config.getAdminPoolConfig()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 42,
                        "startLineNumber": 159,
                        "startColumnNumber": 12,
                        "endLineNumber": 159,
                        "endColumnNumber": 54
                    },
                    "nodeContext": "config.getAdminPoolConfig().getMaxActive()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 47,
                        "startLineNumber": 159,
                        "startColumnNumber": 12,
                        "endLineNumber": 159,
                        "endColumnNumber": 59
                    },
                    "nodeContext": "config.getAdminPoolConfig().getMaxActive() != 0",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 347,
                        "startLineNumber": 159,
                        "startColumnNumber": 8,
                        "endLineNumber": 164,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (config.getAdminPoolConfig().getMaxActive() != 0) {\n  adminPool=new LdapConnectionPool(adminConnectionFactory);\n  adminPool.setTestOnBorrow(true);\n  adminPool.setMaxActive(config.getAdminPoolConfig().getMaxActive());\n  adminPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 37,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1447,
                        "startLineNumber": 146,
                        "startColumnNumber": 24,
                        "endLineNumber": 178,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (adminConnectionFactory != null) {\n    throw new IllegalStateException(\"Provider already initialized.\");\n  }\n  LdapConnectionConfig cc=createConnectionConfig();\n  if (!config.getBindDN().isEmpty()) {\n    cc.setName(config.getBindDN());\n    cc.setCredentials(config.getBindPassword());\n  }\n  adminConnectionFactory=new PoolableLdapConnectionFactory(cc);\n  if (config.getAdminPoolConfig().getMaxActive() != 0) {\n    adminPool=new LdapConnectionPool(adminConnectionFactory);\n    adminPool.setTestOnBorrow(true);\n    adminPool.setMaxActive(config.getAdminPoolConfig().getMaxActive());\n    adminPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  cc=createConnectionConfig();\n  userConnectionFactory=new PoolableUnboundConnectionFactory(cc);\n  if (config.getUserPoolConfig().getMaxActive() != 0) {\n    userPool=new UnboundLdapConnectionPool(userConnectionFactory);\n    userPool.setTestOnBorrow(true);\n    userPool.setMaxActive(config.getUserPoolConfig().getMaxActive());\n    userPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  log.info(\"LdapIdentityProvider initialized: {}\",config);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 139,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1530,
                        "startLineNumber": 143,
                        "startColumnNumber": 4,
                        "endLineNumber": 178,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Initializes the ldap identity provider.\n */\nprivate void init(){\n  if (adminConnectionFactory != null) {\n    throw new IllegalStateException(\"Provider already initialized.\");\n  }\n  LdapConnectionConfig cc=createConnectionConfig();\n  if (!config.getBindDN().isEmpty()) {\n    cc.setName(config.getBindDN());\n    cc.setCredentials(config.getBindPassword());\n  }\n  adminConnectionFactory=new PoolableLdapConnectionFactory(cc);\n  if (config.getAdminPoolConfig().getMaxActive() != 0) {\n    adminPool=new LdapConnectionPool(adminConnectionFactory);\n    adminPool.setTestOnBorrow(true);\n    adminPool.setMaxActive(config.getAdminPoolConfig().getMaxActive());\n    adminPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  cc=createConnectionConfig();\n  userConnectionFactory=new PoolableUnboundConnectionFactory(cc);\n  if (config.getUserPoolConfig().getMaxActive() != 0) {\n    userPool=new UnboundLdapConnectionPool(userConnectionFactory);\n    userPool.setTestOnBorrow(true);\n    userPool.setMaxActive(config.getUserPoolConfig().getMaxActive());\n    userPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  log.info(\"LdapIdentityProvider initialized: {}\",config);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 144,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 47,
                    "startLineNumber": 159,
                    "startColumnNumber": 12,
                    "endLineNumber": 159,
                    "endColumnNumber": 59
                },
                "nodeContext": "config.getAdminPoolConfig().getMaxActive() != 0",
                "nodeType": "InfixExpression",
                "astNodeNumber": 7,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.oak.security.authentication.ldap.impl.LdapProviderConfig"
        },
        {
            "nodeContext": "config",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 6,
                "startLineNumber": 162,
                "startColumnNumber": 35,
                "endLineNumber": 162,
                "endColumnNumber": 41
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 27,
                        "startLineNumber": 162,
                        "startColumnNumber": 35,
                        "endLineNumber": 162,
                        "endColumnNumber": 62
                    },
                    "nodeContext": "config.getAdminPoolConfig()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 42,
                        "startLineNumber": 162,
                        "startColumnNumber": 35,
                        "endLineNumber": 162,
                        "endColumnNumber": 77
                    },
                    "nodeContext": "config.getAdminPoolConfig().getMaxActive()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 66,
                        "startLineNumber": 162,
                        "startColumnNumber": 12,
                        "endLineNumber": 162,
                        "endColumnNumber": 78
                    },
                    "nodeContext": "adminPool.setMaxActive(config.getAdminPoolConfig().getMaxActive())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 67,
                        "startLineNumber": 162,
                        "startColumnNumber": 12,
                        "endLineNumber": 162,
                        "endColumnNumber": 79
                    },
                    "nodeContext": "adminPool.setMaxActive(config.getAdminPoolConfig().getMaxActive());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 9,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 294,
                        "startLineNumber": 159,
                        "startColumnNumber": 61,
                        "endLineNumber": 164,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  adminPool=new LdapConnectionPool(adminConnectionFactory);\n  adminPool.setTestOnBorrow(true);\n  adminPool.setMaxActive(config.getAdminPoolConfig().getMaxActive());\n  adminPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 29,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 347,
                        "startLineNumber": 159,
                        "startColumnNumber": 8,
                        "endLineNumber": 164,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (config.getAdminPoolConfig().getMaxActive() != 0) {\n  adminPool=new LdapConnectionPool(adminConnectionFactory);\n  adminPool.setTestOnBorrow(true);\n  adminPool.setMaxActive(config.getAdminPoolConfig().getMaxActive());\n  adminPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 37,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1447,
                        "startLineNumber": 146,
                        "startColumnNumber": 24,
                        "endLineNumber": 178,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (adminConnectionFactory != null) {\n    throw new IllegalStateException(\"Provider already initialized.\");\n  }\n  LdapConnectionConfig cc=createConnectionConfig();\n  if (!config.getBindDN().isEmpty()) {\n    cc.setName(config.getBindDN());\n    cc.setCredentials(config.getBindPassword());\n  }\n  adminConnectionFactory=new PoolableLdapConnectionFactory(cc);\n  if (config.getAdminPoolConfig().getMaxActive() != 0) {\n    adminPool=new LdapConnectionPool(adminConnectionFactory);\n    adminPool.setTestOnBorrow(true);\n    adminPool.setMaxActive(config.getAdminPoolConfig().getMaxActive());\n    adminPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  cc=createConnectionConfig();\n  userConnectionFactory=new PoolableUnboundConnectionFactory(cc);\n  if (config.getUserPoolConfig().getMaxActive() != 0) {\n    userPool=new UnboundLdapConnectionPool(userConnectionFactory);\n    userPool.setTestOnBorrow(true);\n    userPool.setMaxActive(config.getUserPoolConfig().getMaxActive());\n    userPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  log.info(\"LdapIdentityProvider initialized: {}\",config);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 139,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1530,
                        "startLineNumber": 143,
                        "startColumnNumber": 4,
                        "endLineNumber": 178,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Initializes the ldap identity provider.\n */\nprivate void init(){\n  if (adminConnectionFactory != null) {\n    throw new IllegalStateException(\"Provider already initialized.\");\n  }\n  LdapConnectionConfig cc=createConnectionConfig();\n  if (!config.getBindDN().isEmpty()) {\n    cc.setName(config.getBindDN());\n    cc.setCredentials(config.getBindPassword());\n  }\n  adminConnectionFactory=new PoolableLdapConnectionFactory(cc);\n  if (config.getAdminPoolConfig().getMaxActive() != 0) {\n    adminPool=new LdapConnectionPool(adminConnectionFactory);\n    adminPool.setTestOnBorrow(true);\n    adminPool.setMaxActive(config.getAdminPoolConfig().getMaxActive());\n    adminPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  cc=createConnectionConfig();\n  userConnectionFactory=new PoolableUnboundConnectionFactory(cc);\n  if (config.getUserPoolConfig().getMaxActive() != 0) {\n    userPool=new UnboundLdapConnectionPool(userConnectionFactory);\n    userPool.setTestOnBorrow(true);\n    userPool.setMaxActive(config.getUserPoolConfig().getMaxActive());\n    userPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  log.info(\"LdapIdentityProvider initialized: {}\",config);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 144,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 67,
                    "startLineNumber": 162,
                    "startColumnNumber": 12,
                    "endLineNumber": 162,
                    "endColumnNumber": 79
                },
                "nodeContext": "adminPool.setMaxActive(config.getAdminPoolConfig().getMaxActive());\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 9,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.oak.security.authentication.ldap.impl.LdapProviderConfig"
        },
        {
            "nodeContext": "config",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 6,
                "startLineNumber": 170,
                "startColumnNumber": 12,
                "endLineNumber": 170,
                "endColumnNumber": 18
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 26,
                        "startLineNumber": 170,
                        "startColumnNumber": 12,
                        "endLineNumber": 170,
                        "endColumnNumber": 38
                    },
                    "nodeContext": "config.getUserPoolConfig()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 41,
                        "startLineNumber": 170,
                        "startColumnNumber": 12,
                        "endLineNumber": 170,
                        "endColumnNumber": 53
                    },
                    "nodeContext": "config.getUserPoolConfig().getMaxActive()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 46,
                        "startLineNumber": 170,
                        "startColumnNumber": 12,
                        "endLineNumber": 170,
                        "endColumnNumber": 58
                    },
                    "nodeContext": "config.getUserPoolConfig().getMaxActive() != 0",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 347,
                        "startLineNumber": 170,
                        "startColumnNumber": 8,
                        "endLineNumber": 175,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (config.getUserPoolConfig().getMaxActive() != 0) {\n  userPool=new UnboundLdapConnectionPool(userConnectionFactory);\n  userPool.setTestOnBorrow(true);\n  userPool.setMaxActive(config.getUserPoolConfig().getMaxActive());\n  userPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 37,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1447,
                        "startLineNumber": 146,
                        "startColumnNumber": 24,
                        "endLineNumber": 178,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (adminConnectionFactory != null) {\n    throw new IllegalStateException(\"Provider already initialized.\");\n  }\n  LdapConnectionConfig cc=createConnectionConfig();\n  if (!config.getBindDN().isEmpty()) {\n    cc.setName(config.getBindDN());\n    cc.setCredentials(config.getBindPassword());\n  }\n  adminConnectionFactory=new PoolableLdapConnectionFactory(cc);\n  if (config.getAdminPoolConfig().getMaxActive() != 0) {\n    adminPool=new LdapConnectionPool(adminConnectionFactory);\n    adminPool.setTestOnBorrow(true);\n    adminPool.setMaxActive(config.getAdminPoolConfig().getMaxActive());\n    adminPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  cc=createConnectionConfig();\n  userConnectionFactory=new PoolableUnboundConnectionFactory(cc);\n  if (config.getUserPoolConfig().getMaxActive() != 0) {\n    userPool=new UnboundLdapConnectionPool(userConnectionFactory);\n    userPool.setTestOnBorrow(true);\n    userPool.setMaxActive(config.getUserPoolConfig().getMaxActive());\n    userPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  log.info(\"LdapIdentityProvider initialized: {}\",config);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 139,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1530,
                        "startLineNumber": 143,
                        "startColumnNumber": 4,
                        "endLineNumber": 178,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Initializes the ldap identity provider.\n */\nprivate void init(){\n  if (adminConnectionFactory != null) {\n    throw new IllegalStateException(\"Provider already initialized.\");\n  }\n  LdapConnectionConfig cc=createConnectionConfig();\n  if (!config.getBindDN().isEmpty()) {\n    cc.setName(config.getBindDN());\n    cc.setCredentials(config.getBindPassword());\n  }\n  adminConnectionFactory=new PoolableLdapConnectionFactory(cc);\n  if (config.getAdminPoolConfig().getMaxActive() != 0) {\n    adminPool=new LdapConnectionPool(adminConnectionFactory);\n    adminPool.setTestOnBorrow(true);\n    adminPool.setMaxActive(config.getAdminPoolConfig().getMaxActive());\n    adminPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  cc=createConnectionConfig();\n  userConnectionFactory=new PoolableUnboundConnectionFactory(cc);\n  if (config.getUserPoolConfig().getMaxActive() != 0) {\n    userPool=new UnboundLdapConnectionPool(userConnectionFactory);\n    userPool.setTestOnBorrow(true);\n    userPool.setMaxActive(config.getUserPoolConfig().getMaxActive());\n    userPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  log.info(\"LdapIdentityProvider initialized: {}\",config);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 144,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 46,
                    "startLineNumber": 170,
                    "startColumnNumber": 12,
                    "endLineNumber": 170,
                    "endColumnNumber": 58
                },
                "nodeContext": "config.getUserPoolConfig().getMaxActive() != 0",
                "nodeType": "InfixExpression",
                "astNodeNumber": 7,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.oak.security.authentication.ldap.impl.LdapProviderConfig"
        },
        {
            "nodeContext": "config",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 6,
                "startLineNumber": 173,
                "startColumnNumber": 34,
                "endLineNumber": 173,
                "endColumnNumber": 40
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 26,
                        "startLineNumber": 173,
                        "startColumnNumber": 34,
                        "endLineNumber": 173,
                        "endColumnNumber": 60
                    },
                    "nodeContext": "config.getUserPoolConfig()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 41,
                        "startLineNumber": 173,
                        "startColumnNumber": 34,
                        "endLineNumber": 173,
                        "endColumnNumber": 75
                    },
                    "nodeContext": "config.getUserPoolConfig().getMaxActive()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 64,
                        "startLineNumber": 173,
                        "startColumnNumber": 12,
                        "endLineNumber": 173,
                        "endColumnNumber": 76
                    },
                    "nodeContext": "userPool.setMaxActive(config.getUserPoolConfig().getMaxActive())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 65,
                        "startLineNumber": 173,
                        "startColumnNumber": 12,
                        "endLineNumber": 173,
                        "endColumnNumber": 77
                    },
                    "nodeContext": "userPool.setMaxActive(config.getUserPoolConfig().getMaxActive());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 9,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 295,
                        "startLineNumber": 170,
                        "startColumnNumber": 60,
                        "endLineNumber": 175,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  userPool=new UnboundLdapConnectionPool(userConnectionFactory);\n  userPool.setTestOnBorrow(true);\n  userPool.setMaxActive(config.getUserPoolConfig().getMaxActive());\n  userPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 29,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 347,
                        "startLineNumber": 170,
                        "startColumnNumber": 8,
                        "endLineNumber": 175,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (config.getUserPoolConfig().getMaxActive() != 0) {\n  userPool=new UnboundLdapConnectionPool(userConnectionFactory);\n  userPool.setTestOnBorrow(true);\n  userPool.setMaxActive(config.getUserPoolConfig().getMaxActive());\n  userPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 37,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1447,
                        "startLineNumber": 146,
                        "startColumnNumber": 24,
                        "endLineNumber": 178,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (adminConnectionFactory != null) {\n    throw new IllegalStateException(\"Provider already initialized.\");\n  }\n  LdapConnectionConfig cc=createConnectionConfig();\n  if (!config.getBindDN().isEmpty()) {\n    cc.setName(config.getBindDN());\n    cc.setCredentials(config.getBindPassword());\n  }\n  adminConnectionFactory=new PoolableLdapConnectionFactory(cc);\n  if (config.getAdminPoolConfig().getMaxActive() != 0) {\n    adminPool=new LdapConnectionPool(adminConnectionFactory);\n    adminPool.setTestOnBorrow(true);\n    adminPool.setMaxActive(config.getAdminPoolConfig().getMaxActive());\n    adminPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  cc=createConnectionConfig();\n  userConnectionFactory=new PoolableUnboundConnectionFactory(cc);\n  if (config.getUserPoolConfig().getMaxActive() != 0) {\n    userPool=new UnboundLdapConnectionPool(userConnectionFactory);\n    userPool.setTestOnBorrow(true);\n    userPool.setMaxActive(config.getUserPoolConfig().getMaxActive());\n    userPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  log.info(\"LdapIdentityProvider initialized: {}\",config);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 139,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1530,
                        "startLineNumber": 143,
                        "startColumnNumber": 4,
                        "endLineNumber": 178,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Initializes the ldap identity provider.\n */\nprivate void init(){\n  if (adminConnectionFactory != null) {\n    throw new IllegalStateException(\"Provider already initialized.\");\n  }\n  LdapConnectionConfig cc=createConnectionConfig();\n  if (!config.getBindDN().isEmpty()) {\n    cc.setName(config.getBindDN());\n    cc.setCredentials(config.getBindPassword());\n  }\n  adminConnectionFactory=new PoolableLdapConnectionFactory(cc);\n  if (config.getAdminPoolConfig().getMaxActive() != 0) {\n    adminPool=new LdapConnectionPool(adminConnectionFactory);\n    adminPool.setTestOnBorrow(true);\n    adminPool.setMaxActive(config.getAdminPoolConfig().getMaxActive());\n    adminPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  cc=createConnectionConfig();\n  userConnectionFactory=new PoolableUnboundConnectionFactory(cc);\n  if (config.getUserPoolConfig().getMaxActive() != 0) {\n    userPool=new UnboundLdapConnectionPool(userConnectionFactory);\n    userPool.setTestOnBorrow(true);\n    userPool.setMaxActive(config.getUserPoolConfig().getMaxActive());\n    userPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  log.info(\"LdapIdentityProvider initialized: {}\",config);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 144,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 65,
                    "startLineNumber": 173,
                    "startColumnNumber": 12,
                    "endLineNumber": 173,
                    "endColumnNumber": 77
                },
                "nodeContext": "userPool.setMaxActive(config.getUserPoolConfig().getMaxActive());\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 9,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.oak.security.authentication.ldap.impl.LdapProviderConfig"
        },
        {
            "nodeContext": "config",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 6,
                "startLineNumber": 177,
                "startColumnNumber": 57,
                "endLineNumber": 177,
                "endColumnNumber": 63
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 56,
                        "startLineNumber": 177,
                        "startColumnNumber": 8,
                        "endLineNumber": 177,
                        "endColumnNumber": 64
                    },
                    "nodeContext": "log.info(\"LdapIdentityProvider initialized: {}\",config)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 57,
                        "startLineNumber": 177,
                        "startColumnNumber": 8,
                        "endLineNumber": 177,
                        "endColumnNumber": 65
                    },
                    "nodeContext": "log.info(\"LdapIdentityProvider initialized: {}\",config);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1447,
                        "startLineNumber": 146,
                        "startColumnNumber": 24,
                        "endLineNumber": 178,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (adminConnectionFactory != null) {\n    throw new IllegalStateException(\"Provider already initialized.\");\n  }\n  LdapConnectionConfig cc=createConnectionConfig();\n  if (!config.getBindDN().isEmpty()) {\n    cc.setName(config.getBindDN());\n    cc.setCredentials(config.getBindPassword());\n  }\n  adminConnectionFactory=new PoolableLdapConnectionFactory(cc);\n  if (config.getAdminPoolConfig().getMaxActive() != 0) {\n    adminPool=new LdapConnectionPool(adminConnectionFactory);\n    adminPool.setTestOnBorrow(true);\n    adminPool.setMaxActive(config.getAdminPoolConfig().getMaxActive());\n    adminPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  cc=createConnectionConfig();\n  userConnectionFactory=new PoolableUnboundConnectionFactory(cc);\n  if (config.getUserPoolConfig().getMaxActive() != 0) {\n    userPool=new UnboundLdapConnectionPool(userConnectionFactory);\n    userPool.setTestOnBorrow(true);\n    userPool.setMaxActive(config.getUserPoolConfig().getMaxActive());\n    userPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  log.info(\"LdapIdentityProvider initialized: {}\",config);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 139,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1530,
                        "startLineNumber": 143,
                        "startColumnNumber": 4,
                        "endLineNumber": 178,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Initializes the ldap identity provider.\n */\nprivate void init(){\n  if (adminConnectionFactory != null) {\n    throw new IllegalStateException(\"Provider already initialized.\");\n  }\n  LdapConnectionConfig cc=createConnectionConfig();\n  if (!config.getBindDN().isEmpty()) {\n    cc.setName(config.getBindDN());\n    cc.setCredentials(config.getBindPassword());\n  }\n  adminConnectionFactory=new PoolableLdapConnectionFactory(cc);\n  if (config.getAdminPoolConfig().getMaxActive() != 0) {\n    adminPool=new LdapConnectionPool(adminConnectionFactory);\n    adminPool.setTestOnBorrow(true);\n    adminPool.setMaxActive(config.getAdminPoolConfig().getMaxActive());\n    adminPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  cc=createConnectionConfig();\n  userConnectionFactory=new PoolableUnboundConnectionFactory(cc);\n  if (config.getUserPoolConfig().getMaxActive() != 0) {\n    userPool=new UnboundLdapConnectionPool(userConnectionFactory);\n    userPool.setTestOnBorrow(true);\n    userPool.setMaxActive(config.getUserPoolConfig().getMaxActive());\n    userPool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_BLOCK);\n  }\n  log.info(\"LdapIdentityProvider initialized: {}\",config);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 144,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 57,
                    "startLineNumber": 177,
                    "startColumnNumber": 8,
                    "endLineNumber": 177,
                    "endColumnNumber": 65
                },
                "nodeContext": "log.info(\"LdapIdentityProvider initialized: {}\",config);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 6,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.oak.security.authentication.ldap.impl.LdapProviderConfig"
        }
    ],
    "positionList": [
        {
            "charLength": 6,
            "startLineNumber": 153,
            "startColumnNumber": 13,
            "endLineNumber": 153,
            "endColumnNumber": 19
        },
        {
            "charLength": 6,
            "startLineNumber": 154,
            "startColumnNumber": 23,
            "endLineNumber": 154,
            "endColumnNumber": 29
        },
        {
            "charLength": 6,
            "startLineNumber": 155,
            "startColumnNumber": 30,
            "endLineNumber": 155,
            "endColumnNumber": 36
        },
        {
            "charLength": 6,
            "startLineNumber": 159,
            "startColumnNumber": 12,
            "endLineNumber": 159,
            "endColumnNumber": 18
        },
        {
            "charLength": 6,
            "startLineNumber": 162,
            "startColumnNumber": 35,
            "endLineNumber": 162,
            "endColumnNumber": 41
        },
        {
            "charLength": 6,
            "startLineNumber": 170,
            "startColumnNumber": 12,
            "endLineNumber": 170,
            "endColumnNumber": 18
        },
        {
            "charLength": 6,
            "startLineNumber": 173,
            "startColumnNumber": 34,
            "endLineNumber": 173,
            "endColumnNumber": 40
        },
        {
            "charLength": 6,
            "startLineNumber": 177,
            "startColumnNumber": 57,
            "endLineNumber": 177,
            "endColumnNumber": 63
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 3,
            "layout": 4
        },
        {
            "firstKey": 0,
            "secondKey": 4,
            "layout": 4
        },
        {
            "firstKey": 0,
            "secondKey": 5,
            "layout": 4
        },
        {
            "firstKey": 0,
            "secondKey": 6,
            "layout": 4
        },
        {
            "firstKey": 0,
            "secondKey": 7,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 3,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 4,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 5,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 6,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 7,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 3,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 4,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 5,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 6,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 7,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 1,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 2,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 3,
            "secondKey": 5,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 6,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 7,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 0,
            "layout": 6
        },
        {
            "firstKey": 4,
            "secondKey": 1,
            "layout": 6
        },
        {
            "firstKey": 4,
            "secondKey": 2,
            "layout": 6
        },
        {
            "firstKey": 4,
            "secondKey": 3,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 5,
            "layout": 6
        },
        {
            "firstKey": 4,
            "secondKey": 6,
            "layout": 6
        },
        {
            "firstKey": 4,
            "secondKey": 7,
            "layout": 6
        },
        {
            "firstKey": 5,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 5,
            "secondKey": 1,
            "layout": 4
        },
        {
            "firstKey": 5,
            "secondKey": 2,
            "layout": 4
        },
        {
            "firstKey": 5,
            "secondKey": 3,
            "layout": 4
        },
        {
            "firstKey": 5,
            "secondKey": 4,
            "layout": 4
        },
        {
            "firstKey": 5,
            "secondKey": 6,
            "layout": 3
        },
        {
            "firstKey": 5,
            "secondKey": 7,
            "layout": 4
        },
        {
            "firstKey": 6,
            "secondKey": 0,
            "layout": 6
        },
        {
            "firstKey": 6,
            "secondKey": 1,
            "layout": 6
        },
        {
            "firstKey": 6,
            "secondKey": 2,
            "layout": 6
        },
        {
            "firstKey": 6,
            "secondKey": 3,
            "layout": 6
        },
        {
            "firstKey": 6,
            "secondKey": 4,
            "layout": 6
        },
        {
            "firstKey": 6,
            "secondKey": 5,
            "layout": 5
        },
        {
            "firstKey": 6,
            "secondKey": 7,
            "layout": 6
        },
        {
            "firstKey": 7,
            "secondKey": 0,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 4,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 5,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 6,
            "layout": 2
        }
    ]
}