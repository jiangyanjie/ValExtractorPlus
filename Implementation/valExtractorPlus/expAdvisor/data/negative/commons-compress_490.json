{
    "id": 490,
    "expression": "current",
    "projectName": "commons-compress",
    "commitID": "e3ea7b6607e7c96b9e2b6813c05bfba887c8e226",
    "filePath": "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java",
    "occurrences": 7,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "current",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 422,
                "startColumnNumber": 12,
                "endLineNumber": 422,
                "endColumnNumber": 19
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 13,
                        "startLineNumber": 422,
                        "startColumnNumber": 12,
                        "endLineNumber": 422,
                        "endColumnNumber": 25
                    },
                    "nodeContext": "current.entry",
                    "nodeType": "QualifiedName",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 73,
                        "startLineNumber": 422,
                        "startColumnNumber": 12,
                        "endLineNumber": 422,
                        "endColumnNumber": 85
                    },
                    "nodeContext": "current.entry.getExtraField(Zip64ExtendedInformationExtraField.HEADER_ID)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 8,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 94,
                        "startLineNumber": 421,
                        "startColumnNumber": 28,
                        "endLineNumber": 422,
                        "endColumnNumber": 85
                    },
                    "nodeContext": "extra=current.entry.getExtraField(Zip64ExtendedInformationExtraField.HEADER_ID)",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 10,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 115,
                        "startLineNumber": 421,
                        "startColumnNumber": 8,
                        "endLineNumber": 422,
                        "endColumnNumber": 86
                    },
                    "nodeContext": "final ZipExtraField extra=current.entry.getExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 14,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1327,
                        "startLineNumber": 420,
                        "startColumnNumber": 96,
                        "endLineNumber": 444,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final ZipExtraField extra=current.entry.getExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);\n  if (extra != null && !(extra instanceof Zip64ExtendedInformationExtraField)) {\n    throw new ZipException(\"archive contains unparseable zip64 extra field\");\n  }\n  final Zip64ExtendedInformationExtraField z64=(Zip64ExtendedInformationExtraField)extra;\n  current.usesZip64=z64 != null;\n  if (!current.hasDataDescriptor) {\n    if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n      if (z64.getCompressedSize() == null || z64.getSize() == null) {\n        throw new ZipException(\"archive contains corrupted zip64 extra field\");\n      }\n      current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n      current.entry.setSize(z64.getSize().getLongValue());\n    }\n else     if (cSize != null && size != null) {\n      current.entry.setCompressedSize(cSize.getValue());\n      current.entry.setSize(size.getValue());\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 143,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1609,
                        "startLineNumber": 415,
                        "startColumnNumber": 4,
                        "endLineNumber": 444,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Records whether a Zip64 extra is present and sets the size information from it if sizes are 0xFFFFFFFF and the entry doesn't use a data descriptor.\n */\nprivate void processZip64Extra(final ZipLong size,final ZipLong cSize) throws ZipException {\n  final ZipExtraField extra=current.entry.getExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);\n  if (extra != null && !(extra instanceof Zip64ExtendedInformationExtraField)) {\n    throw new ZipException(\"archive contains unparseable zip64 extra field\");\n  }\n  final Zip64ExtendedInformationExtraField z64=(Zip64ExtendedInformationExtraField)extra;\n  current.usesZip64=z64 != null;\n  if (!current.hasDataDescriptor) {\n    if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n      if (z64.getCompressedSize() == null || z64.getSize() == null) {\n        throw new ZipException(\"archive contains corrupted zip64 extra field\");\n      }\n      current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n      current.entry.setSize(z64.getSize().getLongValue());\n    }\n else     if (cSize != null && size != null) {\n      current.entry.setCompressedSize(cSize.getValue());\n      current.entry.setSize(size.getValue());\n    }\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 160,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                "nodePosition": {
                    "charLength": 73,
                    "startLineNumber": 422,
                    "startColumnNumber": 12,
                    "endLineNumber": 422,
                    "endColumnNumber": 85
                },
                "nodeContext": "current.entry.getExtraField(Zip64ExtendedInformationExtraField.HEADER_ID)",
                "nodeType": "MethodInvocation",
                "astNodeNumber": 8,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.CurrentEntry"
        },
        {
            "nodeContext": "current",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 428,
                "startColumnNumber": 8,
                "endLineNumber": 428,
                "endColumnNumber": 15
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
                    "nodePosition": {
                        "charLength": 17,
                        "startLineNumber": 428,
                        "startColumnNumber": 8,
                        "endLineNumber": 428,
                        "endColumnNumber": 25
                    },
                    "nodeContext": "current.usesZip64",
                    "nodeType": "QualifiedName",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 31,
                        "startLineNumber": 428,
                        "startColumnNumber": 8,
                        "endLineNumber": 428,
                        "endColumnNumber": 39
                    },
                    "nodeContext": "current.usesZip64=z64 != null",
                    "nodeType": "Assignment",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 32,
                        "startLineNumber": 428,
                        "startColumnNumber": 8,
                        "endLineNumber": 428,
                        "endColumnNumber": 40
                    },
                    "nodeContext": "current.usesZip64=z64 != null;\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1327,
                        "startLineNumber": 420,
                        "startColumnNumber": 96,
                        "endLineNumber": 444,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final ZipExtraField extra=current.entry.getExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);\n  if (extra != null && !(extra instanceof Zip64ExtendedInformationExtraField)) {\n    throw new ZipException(\"archive contains unparseable zip64 extra field\");\n  }\n  final Zip64ExtendedInformationExtraField z64=(Zip64ExtendedInformationExtraField)extra;\n  current.usesZip64=z64 != null;\n  if (!current.hasDataDescriptor) {\n    if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n      if (z64.getCompressedSize() == null || z64.getSize() == null) {\n        throw new ZipException(\"archive contains corrupted zip64 extra field\");\n      }\n      current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n      current.entry.setSize(z64.getSize().getLongValue());\n    }\n else     if (cSize != null && size != null) {\n      current.entry.setCompressedSize(cSize.getValue());\n      current.entry.setSize(size.getValue());\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 143,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1609,
                        "startLineNumber": 415,
                        "startColumnNumber": 4,
                        "endLineNumber": 444,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Records whether a Zip64 extra is present and sets the size information from it if sizes are 0xFFFFFFFF and the entry doesn't use a data descriptor.\n */\nprivate void processZip64Extra(final ZipLong size,final ZipLong cSize) throws ZipException {\n  final ZipExtraField extra=current.entry.getExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);\n  if (extra != null && !(extra instanceof Zip64ExtendedInformationExtraField)) {\n    throw new ZipException(\"archive contains unparseable zip64 extra field\");\n  }\n  final Zip64ExtendedInformationExtraField z64=(Zip64ExtendedInformationExtraField)extra;\n  current.usesZip64=z64 != null;\n  if (!current.hasDataDescriptor) {\n    if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n      if (z64.getCompressedSize() == null || z64.getSize() == null) {\n        throw new ZipException(\"archive contains corrupted zip64 extra field\");\n      }\n      current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n      current.entry.setSize(z64.getSize().getLongValue());\n    }\n else     if (cSize != null && size != null) {\n      current.entry.setCompressedSize(cSize.getValue());\n      current.entry.setSize(size.getValue());\n    }\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 160,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 32,
                    "startLineNumber": 428,
                    "startColumnNumber": 8,
                    "endLineNumber": 428,
                    "endColumnNumber": 40
                },
                "nodeContext": "current.usesZip64=z64 != null;\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 8,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.CurrentEntry"
        },
        {
            "nodeContext": "current",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 429,
                "startColumnNumber": 13,
                "endLineNumber": 429,
                "endColumnNumber": 20
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
                    "nodePosition": {
                        "charLength": 25,
                        "startLineNumber": 429,
                        "startColumnNumber": 13,
                        "endLineNumber": 429,
                        "endColumnNumber": 38
                    },
                    "nodeContext": "current.hasDataDescriptor",
                    "nodeType": "QualifiedName",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 26,
                        "startLineNumber": 429,
                        "startColumnNumber": 12,
                        "endLineNumber": 429,
                        "endColumnNumber": 38
                    },
                    "nodeContext": "!current.hasDataDescriptor",
                    "nodeType": "PrefixExpression",
                    "astNodeNumber": 4,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 843,
                        "startLineNumber": 429,
                        "startColumnNumber": 8,
                        "endLineNumber": 443,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (!current.hasDataDescriptor) {\n  if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n    if (z64.getCompressedSize() == null || z64.getSize() == null) {\n      throw new ZipException(\"archive contains corrupted zip64 extra field\");\n    }\n    current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n    current.entry.setSize(z64.getSize().getLongValue());\n  }\n else   if (cSize != null && size != null) {\n    current.entry.setCompressedSize(cSize.getValue());\n    current.entry.setSize(size.getValue());\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 93,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1327,
                        "startLineNumber": 420,
                        "startColumnNumber": 96,
                        "endLineNumber": 444,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final ZipExtraField extra=current.entry.getExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);\n  if (extra != null && !(extra instanceof Zip64ExtendedInformationExtraField)) {\n    throw new ZipException(\"archive contains unparseable zip64 extra field\");\n  }\n  final Zip64ExtendedInformationExtraField z64=(Zip64ExtendedInformationExtraField)extra;\n  current.usesZip64=z64 != null;\n  if (!current.hasDataDescriptor) {\n    if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n      if (z64.getCompressedSize() == null || z64.getSize() == null) {\n        throw new ZipException(\"archive contains corrupted zip64 extra field\");\n      }\n      current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n      current.entry.setSize(z64.getSize().getLongValue());\n    }\n else     if (cSize != null && size != null) {\n      current.entry.setCompressedSize(cSize.getValue());\n      current.entry.setSize(size.getValue());\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 143,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1609,
                        "startLineNumber": 415,
                        "startColumnNumber": 4,
                        "endLineNumber": 444,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Records whether a Zip64 extra is present and sets the size information from it if sizes are 0xFFFFFFFF and the entry doesn't use a data descriptor.\n */\nprivate void processZip64Extra(final ZipLong size,final ZipLong cSize) throws ZipException {\n  final ZipExtraField extra=current.entry.getExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);\n  if (extra != null && !(extra instanceof Zip64ExtendedInformationExtraField)) {\n    throw new ZipException(\"archive contains unparseable zip64 extra field\");\n  }\n  final Zip64ExtendedInformationExtraField z64=(Zip64ExtendedInformationExtraField)extra;\n  current.usesZip64=z64 != null;\n  if (!current.hasDataDescriptor) {\n    if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n      if (z64.getCompressedSize() == null || z64.getSize() == null) {\n        throw new ZipException(\"archive contains corrupted zip64 extra field\");\n      }\n      current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n      current.entry.setSize(z64.getSize().getLongValue());\n    }\n else     if (cSize != null && size != null) {\n      current.entry.setCompressedSize(cSize.getValue());\n      current.entry.setSize(size.getValue());\n    }\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 160,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 26,
                    "startLineNumber": 429,
                    "startColumnNumber": 12,
                    "endLineNumber": 429,
                    "endColumnNumber": 38
                },
                "nodeContext": "!current.hasDataDescriptor",
                "nodeType": "PrefixExpression",
                "astNodeNumber": 4,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.CurrentEntry"
        },
        {
            "nodeContext": "current",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 437,
                "startColumnNumber": 16,
                "endLineNumber": 437,
                "endColumnNumber": 23
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 13,
                        "startLineNumber": 437,
                        "startColumnNumber": 16,
                        "endLineNumber": 437,
                        "endColumnNumber": 29
                    },
                    "nodeContext": "current.entry",
                    "nodeType": "QualifiedName",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 71,
                        "startLineNumber": 437,
                        "startColumnNumber": 16,
                        "endLineNumber": 437,
                        "endColumnNumber": 87
                    },
                    "nodeContext": "current.entry.setCompressedSize(z64.getCompressedSize().getLongValue())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 10,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 72,
                        "startLineNumber": 437,
                        "startColumnNumber": 16,
                        "endLineNumber": 437,
                        "endColumnNumber": 88
                    },
                    "nodeContext": "current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 11,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 437,
                        "startLineNumber": 431,
                        "startColumnNumber": 97,
                        "endLineNumber": 439,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  if (z64.getCompressedSize() == null || z64.getSize() == null) {\n    throw new ZipException(\"archive contains corrupted zip64 extra field\");\n  }\n  current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n  current.entry.setSize(z64.getSize().getLongValue());\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 41,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 785,
                        "startLineNumber": 430,
                        "startColumnNumber": 12,
                        "endLineNumber": 442,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n  if (z64.getCompressedSize() == null || z64.getSize() == null) {\n    throw new ZipException(\"archive contains corrupted zip64 extra field\");\n  }\n  current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n  current.entry.setSize(z64.getSize().getLongValue());\n}\n else if (cSize != null && size != null) {\n  current.entry.setCompressedSize(cSize.getValue());\n  current.entry.setSize(size.getValue());\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 87,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 811,
                        "startLineNumber": 429,
                        "startColumnNumber": 40,
                        "endLineNumber": 443,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n    if (z64.getCompressedSize() == null || z64.getSize() == null) {\n      throw new ZipException(\"archive contains corrupted zip64 extra field\");\n    }\n    current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n    current.entry.setSize(z64.getSize().getLongValue());\n  }\n else   if (cSize != null && size != null) {\n    current.entry.setCompressedSize(cSize.getValue());\n    current.entry.setSize(size.getValue());\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 88,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 843,
                        "startLineNumber": 429,
                        "startColumnNumber": 8,
                        "endLineNumber": 443,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (!current.hasDataDescriptor) {\n  if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n    if (z64.getCompressedSize() == null || z64.getSize() == null) {\n      throw new ZipException(\"archive contains corrupted zip64 extra field\");\n    }\n    current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n    current.entry.setSize(z64.getSize().getLongValue());\n  }\n else   if (cSize != null && size != null) {\n    current.entry.setCompressedSize(cSize.getValue());\n    current.entry.setSize(size.getValue());\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 93,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1327,
                        "startLineNumber": 420,
                        "startColumnNumber": 96,
                        "endLineNumber": 444,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final ZipExtraField extra=current.entry.getExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);\n  if (extra != null && !(extra instanceof Zip64ExtendedInformationExtraField)) {\n    throw new ZipException(\"archive contains unparseable zip64 extra field\");\n  }\n  final Zip64ExtendedInformationExtraField z64=(Zip64ExtendedInformationExtraField)extra;\n  current.usesZip64=z64 != null;\n  if (!current.hasDataDescriptor) {\n    if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n      if (z64.getCompressedSize() == null || z64.getSize() == null) {\n        throw new ZipException(\"archive contains corrupted zip64 extra field\");\n      }\n      current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n      current.entry.setSize(z64.getSize().getLongValue());\n    }\n else     if (cSize != null && size != null) {\n      current.entry.setCompressedSize(cSize.getValue());\n      current.entry.setSize(size.getValue());\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 143,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1609,
                        "startLineNumber": 415,
                        "startColumnNumber": 4,
                        "endLineNumber": 444,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Records whether a Zip64 extra is present and sets the size information from it if sizes are 0xFFFFFFFF and the entry doesn't use a data descriptor.\n */\nprivate void processZip64Extra(final ZipLong size,final ZipLong cSize) throws ZipException {\n  final ZipExtraField extra=current.entry.getExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);\n  if (extra != null && !(extra instanceof Zip64ExtendedInformationExtraField)) {\n    throw new ZipException(\"archive contains unparseable zip64 extra field\");\n  }\n  final Zip64ExtendedInformationExtraField z64=(Zip64ExtendedInformationExtraField)extra;\n  current.usesZip64=z64 != null;\n  if (!current.hasDataDescriptor) {\n    if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n      if (z64.getCompressedSize() == null || z64.getSize() == null) {\n        throw new ZipException(\"archive contains corrupted zip64 extra field\");\n      }\n      current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n      current.entry.setSize(z64.getSize().getLongValue());\n    }\n else     if (cSize != null && size != null) {\n      current.entry.setCompressedSize(cSize.getValue());\n      current.entry.setSize(size.getValue());\n    }\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 160,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 72,
                    "startLineNumber": 437,
                    "startColumnNumber": 16,
                    "endLineNumber": 437,
                    "endColumnNumber": 88
                },
                "nodeContext": "current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 11,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.CurrentEntry"
        },
        {
            "nodeContext": "current",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 438,
                "startColumnNumber": 16,
                "endLineNumber": 438,
                "endColumnNumber": 23
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 13,
                        "startLineNumber": 438,
                        "startColumnNumber": 16,
                        "endLineNumber": 438,
                        "endColumnNumber": 29
                    },
                    "nodeContext": "current.entry",
                    "nodeType": "QualifiedName",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 51,
                        "startLineNumber": 438,
                        "startColumnNumber": 16,
                        "endLineNumber": 438,
                        "endColumnNumber": 67
                    },
                    "nodeContext": "current.entry.setSize(z64.getSize().getLongValue())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 10,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 52,
                        "startLineNumber": 438,
                        "startColumnNumber": 16,
                        "endLineNumber": 438,
                        "endColumnNumber": 68
                    },
                    "nodeContext": "current.entry.setSize(z64.getSize().getLongValue());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 11,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 437,
                        "startLineNumber": 431,
                        "startColumnNumber": 97,
                        "endLineNumber": 439,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  if (z64.getCompressedSize() == null || z64.getSize() == null) {\n    throw new ZipException(\"archive contains corrupted zip64 extra field\");\n  }\n  current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n  current.entry.setSize(z64.getSize().getLongValue());\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 41,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 785,
                        "startLineNumber": 430,
                        "startColumnNumber": 12,
                        "endLineNumber": 442,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n  if (z64.getCompressedSize() == null || z64.getSize() == null) {\n    throw new ZipException(\"archive contains corrupted zip64 extra field\");\n  }\n  current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n  current.entry.setSize(z64.getSize().getLongValue());\n}\n else if (cSize != null && size != null) {\n  current.entry.setCompressedSize(cSize.getValue());\n  current.entry.setSize(size.getValue());\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 87,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 811,
                        "startLineNumber": 429,
                        "startColumnNumber": 40,
                        "endLineNumber": 443,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n    if (z64.getCompressedSize() == null || z64.getSize() == null) {\n      throw new ZipException(\"archive contains corrupted zip64 extra field\");\n    }\n    current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n    current.entry.setSize(z64.getSize().getLongValue());\n  }\n else   if (cSize != null && size != null) {\n    current.entry.setCompressedSize(cSize.getValue());\n    current.entry.setSize(size.getValue());\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 88,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 843,
                        "startLineNumber": 429,
                        "startColumnNumber": 8,
                        "endLineNumber": 443,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (!current.hasDataDescriptor) {\n  if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n    if (z64.getCompressedSize() == null || z64.getSize() == null) {\n      throw new ZipException(\"archive contains corrupted zip64 extra field\");\n    }\n    current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n    current.entry.setSize(z64.getSize().getLongValue());\n  }\n else   if (cSize != null && size != null) {\n    current.entry.setCompressedSize(cSize.getValue());\n    current.entry.setSize(size.getValue());\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 93,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1327,
                        "startLineNumber": 420,
                        "startColumnNumber": 96,
                        "endLineNumber": 444,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final ZipExtraField extra=current.entry.getExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);\n  if (extra != null && !(extra instanceof Zip64ExtendedInformationExtraField)) {\n    throw new ZipException(\"archive contains unparseable zip64 extra field\");\n  }\n  final Zip64ExtendedInformationExtraField z64=(Zip64ExtendedInformationExtraField)extra;\n  current.usesZip64=z64 != null;\n  if (!current.hasDataDescriptor) {\n    if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n      if (z64.getCompressedSize() == null || z64.getSize() == null) {\n        throw new ZipException(\"archive contains corrupted zip64 extra field\");\n      }\n      current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n      current.entry.setSize(z64.getSize().getLongValue());\n    }\n else     if (cSize != null && size != null) {\n      current.entry.setCompressedSize(cSize.getValue());\n      current.entry.setSize(size.getValue());\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 143,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1609,
                        "startLineNumber": 415,
                        "startColumnNumber": 4,
                        "endLineNumber": 444,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Records whether a Zip64 extra is present and sets the size information from it if sizes are 0xFFFFFFFF and the entry doesn't use a data descriptor.\n */\nprivate void processZip64Extra(final ZipLong size,final ZipLong cSize) throws ZipException {\n  final ZipExtraField extra=current.entry.getExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);\n  if (extra != null && !(extra instanceof Zip64ExtendedInformationExtraField)) {\n    throw new ZipException(\"archive contains unparseable zip64 extra field\");\n  }\n  final Zip64ExtendedInformationExtraField z64=(Zip64ExtendedInformationExtraField)extra;\n  current.usesZip64=z64 != null;\n  if (!current.hasDataDescriptor) {\n    if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n      if (z64.getCompressedSize() == null || z64.getSize() == null) {\n        throw new ZipException(\"archive contains corrupted zip64 extra field\");\n      }\n      current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n      current.entry.setSize(z64.getSize().getLongValue());\n    }\n else     if (cSize != null && size != null) {\n      current.entry.setCompressedSize(cSize.getValue());\n      current.entry.setSize(size.getValue());\n    }\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 160,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 52,
                    "startLineNumber": 438,
                    "startColumnNumber": 16,
                    "endLineNumber": 438,
                    "endColumnNumber": 68
                },
                "nodeContext": "current.entry.setSize(z64.getSize().getLongValue());\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 11,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.CurrentEntry"
        },
        {
            "nodeContext": "current",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 440,
                "startColumnNumber": 16,
                "endLineNumber": 440,
                "endColumnNumber": 23
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 13,
                        "startLineNumber": 440,
                        "startColumnNumber": 16,
                        "endLineNumber": 440,
                        "endColumnNumber": 29
                    },
                    "nodeContext": "current.entry",
                    "nodeType": "QualifiedName",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 49,
                        "startLineNumber": 440,
                        "startColumnNumber": 16,
                        "endLineNumber": 440,
                        "endColumnNumber": 65
                    },
                    "nodeContext": "current.entry.setCompressedSize(cSize.getValue())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 8,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 50,
                        "startLineNumber": 440,
                        "startColumnNumber": 16,
                        "endLineNumber": 440,
                        "endColumnNumber": 66
                    },
                    "nodeContext": "current.entry.setCompressedSize(cSize.getValue());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 141,
                        "startLineNumber": 439,
                        "startColumnNumber": 54,
                        "endLineNumber": 442,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  current.entry.setCompressedSize(cSize.getValue());\n  current.entry.setSize(size.getValue());\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 19,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 176,
                        "startLineNumber": 439,
                        "startColumnNumber": 19,
                        "endLineNumber": 442,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (cSize != null && size != null) {\n  current.entry.setCompressedSize(cSize.getValue());\n  current.entry.setSize(size.getValue());\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 27,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 785,
                        "startLineNumber": 430,
                        "startColumnNumber": 12,
                        "endLineNumber": 442,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n  if (z64.getCompressedSize() == null || z64.getSize() == null) {\n    throw new ZipException(\"archive contains corrupted zip64 extra field\");\n  }\n  current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n  current.entry.setSize(z64.getSize().getLongValue());\n}\n else if (cSize != null && size != null) {\n  current.entry.setCompressedSize(cSize.getValue());\n  current.entry.setSize(size.getValue());\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 87,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 811,
                        "startLineNumber": 429,
                        "startColumnNumber": 40,
                        "endLineNumber": 443,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n    if (z64.getCompressedSize() == null || z64.getSize() == null) {\n      throw new ZipException(\"archive contains corrupted zip64 extra field\");\n    }\n    current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n    current.entry.setSize(z64.getSize().getLongValue());\n  }\n else   if (cSize != null && size != null) {\n    current.entry.setCompressedSize(cSize.getValue());\n    current.entry.setSize(size.getValue());\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 88,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 843,
                        "startLineNumber": 429,
                        "startColumnNumber": 8,
                        "endLineNumber": 443,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (!current.hasDataDescriptor) {\n  if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n    if (z64.getCompressedSize() == null || z64.getSize() == null) {\n      throw new ZipException(\"archive contains corrupted zip64 extra field\");\n    }\n    current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n    current.entry.setSize(z64.getSize().getLongValue());\n  }\n else   if (cSize != null && size != null) {\n    current.entry.setCompressedSize(cSize.getValue());\n    current.entry.setSize(size.getValue());\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 93,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1327,
                        "startLineNumber": 420,
                        "startColumnNumber": 96,
                        "endLineNumber": 444,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final ZipExtraField extra=current.entry.getExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);\n  if (extra != null && !(extra instanceof Zip64ExtendedInformationExtraField)) {\n    throw new ZipException(\"archive contains unparseable zip64 extra field\");\n  }\n  final Zip64ExtendedInformationExtraField z64=(Zip64ExtendedInformationExtraField)extra;\n  current.usesZip64=z64 != null;\n  if (!current.hasDataDescriptor) {\n    if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n      if (z64.getCompressedSize() == null || z64.getSize() == null) {\n        throw new ZipException(\"archive contains corrupted zip64 extra field\");\n      }\n      current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n      current.entry.setSize(z64.getSize().getLongValue());\n    }\n else     if (cSize != null && size != null) {\n      current.entry.setCompressedSize(cSize.getValue());\n      current.entry.setSize(size.getValue());\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 143,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1609,
                        "startLineNumber": 415,
                        "startColumnNumber": 4,
                        "endLineNumber": 444,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Records whether a Zip64 extra is present and sets the size information from it if sizes are 0xFFFFFFFF and the entry doesn't use a data descriptor.\n */\nprivate void processZip64Extra(final ZipLong size,final ZipLong cSize) throws ZipException {\n  final ZipExtraField extra=current.entry.getExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);\n  if (extra != null && !(extra instanceof Zip64ExtendedInformationExtraField)) {\n    throw new ZipException(\"archive contains unparseable zip64 extra field\");\n  }\n  final Zip64ExtendedInformationExtraField z64=(Zip64ExtendedInformationExtraField)extra;\n  current.usesZip64=z64 != null;\n  if (!current.hasDataDescriptor) {\n    if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n      if (z64.getCompressedSize() == null || z64.getSize() == null) {\n        throw new ZipException(\"archive contains corrupted zip64 extra field\");\n      }\n      current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n      current.entry.setSize(z64.getSize().getLongValue());\n    }\n else     if (cSize != null && size != null) {\n      current.entry.setCompressedSize(cSize.getValue());\n      current.entry.setSize(size.getValue());\n    }\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 160,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 50,
                    "startLineNumber": 440,
                    "startColumnNumber": 16,
                    "endLineNumber": 440,
                    "endColumnNumber": 66
                },
                "nodeContext": "current.entry.setCompressedSize(cSize.getValue());\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 9,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.CurrentEntry"
        },
        {
            "nodeContext": "current",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 441,
                "startColumnNumber": 16,
                "endLineNumber": 441,
                "endColumnNumber": 23
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 13,
                        "startLineNumber": 441,
                        "startColumnNumber": 16,
                        "endLineNumber": 441,
                        "endColumnNumber": 29
                    },
                    "nodeContext": "current.entry",
                    "nodeType": "QualifiedName",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 38,
                        "startLineNumber": 441,
                        "startColumnNumber": 16,
                        "endLineNumber": 441,
                        "endColumnNumber": 54
                    },
                    "nodeContext": "current.entry.setSize(size.getValue())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 8,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 39,
                        "startLineNumber": 441,
                        "startColumnNumber": 16,
                        "endLineNumber": 441,
                        "endColumnNumber": 55
                    },
                    "nodeContext": "current.entry.setSize(size.getValue());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 141,
                        "startLineNumber": 439,
                        "startColumnNumber": 54,
                        "endLineNumber": 442,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  current.entry.setCompressedSize(cSize.getValue());\n  current.entry.setSize(size.getValue());\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 19,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 176,
                        "startLineNumber": 439,
                        "startColumnNumber": 19,
                        "endLineNumber": 442,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (cSize != null && size != null) {\n  current.entry.setCompressedSize(cSize.getValue());\n  current.entry.setSize(size.getValue());\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 27,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 785,
                        "startLineNumber": 430,
                        "startColumnNumber": 12,
                        "endLineNumber": 442,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n  if (z64.getCompressedSize() == null || z64.getSize() == null) {\n    throw new ZipException(\"archive contains corrupted zip64 extra field\");\n  }\n  current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n  current.entry.setSize(z64.getSize().getLongValue());\n}\n else if (cSize != null && size != null) {\n  current.entry.setCompressedSize(cSize.getValue());\n  current.entry.setSize(size.getValue());\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 87,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 811,
                        "startLineNumber": 429,
                        "startColumnNumber": 40,
                        "endLineNumber": 443,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n    if (z64.getCompressedSize() == null || z64.getSize() == null) {\n      throw new ZipException(\"archive contains corrupted zip64 extra field\");\n    }\n    current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n    current.entry.setSize(z64.getSize().getLongValue());\n  }\n else   if (cSize != null && size != null) {\n    current.entry.setCompressedSize(cSize.getValue());\n    current.entry.setSize(size.getValue());\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 88,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 843,
                        "startLineNumber": 429,
                        "startColumnNumber": 8,
                        "endLineNumber": 443,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (!current.hasDataDescriptor) {\n  if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n    if (z64.getCompressedSize() == null || z64.getSize() == null) {\n      throw new ZipException(\"archive contains corrupted zip64 extra field\");\n    }\n    current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n    current.entry.setSize(z64.getSize().getLongValue());\n  }\n else   if (cSize != null && size != null) {\n    current.entry.setCompressedSize(cSize.getValue());\n    current.entry.setSize(size.getValue());\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 93,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1327,
                        "startLineNumber": 420,
                        "startColumnNumber": 96,
                        "endLineNumber": 444,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final ZipExtraField extra=current.entry.getExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);\n  if (extra != null && !(extra instanceof Zip64ExtendedInformationExtraField)) {\n    throw new ZipException(\"archive contains unparseable zip64 extra field\");\n  }\n  final Zip64ExtendedInformationExtraField z64=(Zip64ExtendedInformationExtraField)extra;\n  current.usesZip64=z64 != null;\n  if (!current.hasDataDescriptor) {\n    if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n      if (z64.getCompressedSize() == null || z64.getSize() == null) {\n        throw new ZipException(\"archive contains corrupted zip64 extra field\");\n      }\n      current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n      current.entry.setSize(z64.getSize().getLongValue());\n    }\n else     if (cSize != null && size != null) {\n      current.entry.setCompressedSize(cSize.getValue());\n      current.entry.setSize(size.getValue());\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 143,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1609,
                        "startLineNumber": 415,
                        "startColumnNumber": 4,
                        "endLineNumber": 444,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Records whether a Zip64 extra is present and sets the size information from it if sizes are 0xFFFFFFFF and the entry doesn't use a data descriptor.\n */\nprivate void processZip64Extra(final ZipLong size,final ZipLong cSize) throws ZipException {\n  final ZipExtraField extra=current.entry.getExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);\n  if (extra != null && !(extra instanceof Zip64ExtendedInformationExtraField)) {\n    throw new ZipException(\"archive contains unparseable zip64 extra field\");\n  }\n  final Zip64ExtendedInformationExtraField z64=(Zip64ExtendedInformationExtraField)extra;\n  current.usesZip64=z64 != null;\n  if (!current.hasDataDescriptor) {\n    if (z64 != null && (ZipLong.ZIP64_MAGIC.equals(cSize) || ZipLong.ZIP64_MAGIC.equals(size))) {\n      if (z64.getCompressedSize() == null || z64.getSize() == null) {\n        throw new ZipException(\"archive contains corrupted zip64 extra field\");\n      }\n      current.entry.setCompressedSize(z64.getCompressedSize().getLongValue());\n      current.entry.setSize(z64.getSize().getLongValue());\n    }\n else     if (cSize != null && size != null) {\n      current.entry.setCompressedSize(cSize.getValue());\n      current.entry.setSize(size.getValue());\n    }\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 160,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 39,
                    "startLineNumber": 441,
                    "startColumnNumber": 16,
                    "endLineNumber": 441,
                    "endColumnNumber": 55
                },
                "nodeContext": "current.entry.setSize(size.getValue());\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 9,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.CurrentEntry"
        }
    ],
    "positionList": [
        {
            "charLength": 7,
            "startLineNumber": 422,
            "startColumnNumber": 12,
            "endLineNumber": 422,
            "endColumnNumber": 19
        },
        {
            "charLength": 7,
            "startLineNumber": 428,
            "startColumnNumber": 8,
            "endLineNumber": 428,
            "endColumnNumber": 15
        },
        {
            "charLength": 7,
            "startLineNumber": 429,
            "startColumnNumber": 13,
            "endLineNumber": 429,
            "endColumnNumber": 20
        },
        {
            "charLength": 7,
            "startLineNumber": 437,
            "startColumnNumber": 16,
            "endLineNumber": 437,
            "endColumnNumber": 23
        },
        {
            "charLength": 7,
            "startLineNumber": 438,
            "startColumnNumber": 16,
            "endLineNumber": 438,
            "endColumnNumber": 23
        },
        {
            "charLength": 7,
            "startLineNumber": 440,
            "startColumnNumber": 16,
            "endLineNumber": 440,
            "endColumnNumber": 23
        },
        {
            "charLength": 7,
            "startLineNumber": 441,
            "startColumnNumber": 16,
            "endLineNumber": 441,
            "endColumnNumber": 23
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 4
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 4
        },
        {
            "firstKey": 0,
            "secondKey": 3,
            "layout": 4
        },
        {
            "firstKey": 0,
            "secondKey": 4,
            "layout": 4
        },
        {
            "firstKey": 0,
            "secondKey": 5,
            "layout": 4
        },
        {
            "firstKey": 0,
            "secondKey": 6,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 6,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 2,
            "secondKey": 4,
            "layout": 2
        },
        {
            "firstKey": 2,
            "secondKey": 5,
            "layout": 2
        },
        {
            "firstKey": 2,
            "secondKey": 6,
            "layout": 2
        },
        {
            "firstKey": 3,
            "secondKey": 0,
            "layout": 7
        },
        {
            "firstKey": 3,
            "secondKey": 1,
            "layout": 7
        },
        {
            "firstKey": 3,
            "secondKey": 2,
            "layout": 6
        },
        {
            "firstKey": 3,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 3,
            "secondKey": 5,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 6,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 0,
            "layout": 7
        },
        {
            "firstKey": 4,
            "secondKey": 1,
            "layout": 7
        },
        {
            "firstKey": 4,
            "secondKey": 2,
            "layout": 6
        },
        {
            "firstKey": 4,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 4,
            "secondKey": 5,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 6,
            "layout": 4
        },
        {
            "firstKey": 5,
            "secondKey": 0,
            "layout": 8
        },
        {
            "firstKey": 5,
            "secondKey": 1,
            "layout": 8
        },
        {
            "firstKey": 5,
            "secondKey": 2,
            "layout": 7
        },
        {
            "firstKey": 5,
            "secondKey": 3,
            "layout": 5
        },
        {
            "firstKey": 5,
            "secondKey": 4,
            "layout": 5
        },
        {
            "firstKey": 5,
            "secondKey": 6,
            "layout": 3
        },
        {
            "firstKey": 6,
            "secondKey": 0,
            "layout": 8
        },
        {
            "firstKey": 6,
            "secondKey": 1,
            "layout": 8
        },
        {
            "firstKey": 6,
            "secondKey": 2,
            "layout": 7
        },
        {
            "firstKey": 6,
            "secondKey": 3,
            "layout": 5
        },
        {
            "firstKey": 6,
            "secondKey": 4,
            "layout": 5
        },
        {
            "firstKey": 6,
            "secondKey": 5,
            "layout": 3
        }
    ]
}