{
    "id": 20,
    "expression": "match(\"fn:coalesce(\")",
    "projectName": "jackrabbit-oak",
    "commitID": "49099157f6a3c562912fd03c5ba6c59d75e8393d",
    "filePath": "oak-search/src/main/java/org/apache/jackrabbit/oak/plugins/index/search/util/FunctionIndexProcessor.java",
    "occurrences": 1,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "match(\"fn:coalesce(\")",
            "nodeType": "MethodInvocation",
            "nodePosition": {
                "charLength": 21,
                "startLineNumber": 220,
                "startColumnNumber": 12,
                "endLineNumber": 220,
                "endColumnNumber": 33
            },
            "astNodeNumber": 3,
            "astHeight": 2,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 43,
                        "startLineNumber": 220,
                        "startColumnNumber": 12,
                        "endLineNumber": 220,
                        "endColumnNumber": 55
                    },
                    "nodeContext": "match(\"fn:coalesce(\") || match(\"coalesce(\")",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 151,
                        "startLineNumber": 220,
                        "startColumnNumber": 8,
                        "endLineNumber": 222,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (match(\"fn:coalesce(\") || match(\"coalesce(\")) {\n  return \"coalesce*\" + parse() + readCommaAndWhitespace()+ parse()+ read(\")\");\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 21,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1671,
                        "startLineNumber": 207,
                        "startColumnNumber": 19,
                        "endLineNumber": 251,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (match(\"fn:local-name()\") || match(\"localname()\")) {\n    return \"@:localname\";\n  }\n  if (match(\"fn:name()\") || match(\"name()\")) {\n    return \"@:name\";\n  }\n  if (match(\"fn:upper-case(\") || match(\"upper(\")) {\n    return \"upper*\" + parse() + read(\")\");\n  }\n  if (match(\"fn:lower-case(\") || match(\"lower(\")) {\n    return \"lower*\" + parse() + read(\")\");\n  }\n  if (match(\"fn:coalesce(\") || match(\"coalesce(\")) {\n    return \"coalesce*\" + parse() + readCommaAndWhitespace()+ parse()+ read(\")\");\n  }\n  if (match(\"fn:string-length(\") || match(\"length(\")) {\n    return \"length*\" + parse() + read(\")\");\n  }\n  if (match(\"[\")) {\n    String prop=remaining;\n    int indexOfComma=remaining.indexOf(\",\");\n    if (indexOfComma > 0) {\n      prop=remaining.substring(0,indexOfComma);\n    }\n    prop=prop.substring(0,prop.lastIndexOf(']'));\n    remaining=remaining.substring(prop.length() + 1);\n    return property(prop.replaceAll(\"]]\",\"]\"));\n  }\n else {\n    String prop=remaining;\n    int paren=remaining.indexOf(')');\n    int comma=remaining.indexOf(',');\n    int end=comma;\n    if (paren >= 0) {\n      end=(end < 0) ? paren : Math.min(end,paren);\n    }\n    if (end >= 0) {\n      prop=remaining.substring(0,end);\n    }\n    remaining=remaining.substring(prop.length());\n    return property(prop.replaceAll(\"@\",\"\"));\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 234,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1686,
                        "startLineNumber": 207,
                        "startColumnNumber": 4,
                        "endLineNumber": 251,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "String parse(){\n  if (match(\"fn:local-name()\") || match(\"localname()\")) {\n    return \"@:localname\";\n  }\n  if (match(\"fn:name()\") || match(\"name()\")) {\n    return \"@:name\";\n  }\n  if (match(\"fn:upper-case(\") || match(\"upper(\")) {\n    return \"upper*\" + parse() + read(\")\");\n  }\n  if (match(\"fn:lower-case(\") || match(\"lower(\")) {\n    return \"lower*\" + parse() + read(\")\");\n  }\n  if (match(\"fn:coalesce(\") || match(\"coalesce(\")) {\n    return \"coalesce*\" + parse() + readCommaAndWhitespace()+ parse()+ read(\")\");\n  }\n  if (match(\"fn:string-length(\") || match(\"length(\")) {\n    return \"length*\" + parse() + read(\")\");\n  }\n  if (match(\"[\")) {\n    String prop=remaining;\n    int indexOfComma=remaining.indexOf(\",\");\n    if (indexOfComma > 0) {\n      prop=remaining.substring(0,indexOfComma);\n    }\n    prop=prop.substring(0,prop.lastIndexOf(']'));\n    remaining=remaining.substring(prop.length() + 1);\n    return property(prop.replaceAll(\"]]\",\"]\"));\n  }\n else {\n    String prop=remaining;\n    int paren=remaining.indexOf(')');\n    int comma=remaining.indexOf(',');\n    int end=comma;\n    if (paren >= 0) {\n      end=(end < 0) ? paren : Math.min(end,paren);\n    }\n    if (end >= 0) {\n      prop=remaining.substring(0,end);\n    }\n    remaining=remaining.substring(prop.length());\n    return property(prop.replaceAll(\"@\",\"\"));\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 238,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 43,
                    "startLineNumber": 220,
                    "startColumnNumber": 12,
                    "endLineNumber": 220,
                    "endColumnNumber": 55
                },
                "nodeContext": "match(\"fn:coalesce(\") || match(\"coalesce(\")",
                "nodeType": "InfixExpression",
                "astNodeNumber": 7,
                "astHeight": 3
            },
            "tokenLength": 3,
            "type": "boolean"
        }
    ],
    "positionList": [
        {
            "charLength": 21,
            "startLineNumber": 220,
            "startColumnNumber": 12,
            "endLineNumber": 220,
            "endColumnNumber": 33
        }
    ],
    "layoutRelationDataList": []
}