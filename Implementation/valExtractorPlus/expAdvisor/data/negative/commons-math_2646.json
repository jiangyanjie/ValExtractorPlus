{
    "id": 2646,
    "expression": "0",
    "projectName": "commons-math",
    "commitID": "d60149c7f8a840f9a21556aabfbc0d33e1d58eb5",
    "filePath": "src/java/org/apache/commons/math/linear/decomposition/LUDecompositionImpl.java",
    "occurrences": 4,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "0",
            "nodeType": "NumberLiteral",
            "nodePosition": {
                "charLength": 1,
                "startLineNumber": 285,
                "startColumnNumber": 27,
                "endLineNumber": 285,
                "endColumnNumber": 28
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
                    "nodePosition": {
                        "charLength": 7,
                        "startLineNumber": 285,
                        "startColumnNumber": 21,
                        "endLineNumber": 285,
                        "endColumnNumber": 28
                    },
                    "nodeContext": "row=0",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
                    "nodePosition": {
                        "charLength": 11,
                        "startLineNumber": 285,
                        "startColumnNumber": 17,
                        "endLineNumber": 285,
                        "endColumnNumber": 28
                    },
                    "nodeContext": "int row=0",
                    "nodeType": "VariableDeclarationExpression",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 90,
                        "startLineNumber": 285,
                        "startColumnNumber": 12,
                        "endLineNumber": 287,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "for (int row=0; row < m; row++) {\n  bp[row]=b[pivot[row]];\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 22,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1065,
                        "startLineNumber": 270,
                        "startColumnNumber": 68,
                        "endLineNumber": 306,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  final int m=pivot.length;\n  if (b.length != m) {\n    throw MathRuntimeException.createIllegalArgumentException(\"vector length mismatch: got {0} but expected {1}\",b.length,m);\n  }\n  if (singular) {\n    throw new SingularMatrixException();\n  }\n  final double[] bp=new double[m];\n  for (int row=0; row < m; row++) {\n    bp[row]=b[pivot[row]];\n  }\n  for (int col=0; col < m; col++) {\n    for (int i=col + 1; i < m; i++) {\n      bp[i]-=bp[col] * lu[i][col];\n    }\n  }\n  for (int col=m - 1; col >= 0; col--) {\n    bp[col]/=lu[col][col];\n    for (int i=0; i < col; i++) {\n      bp[i]-=bp[col] * lu[i][col];\n    }\n  }\n  return bp;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 158,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1196,
                        "startLineNumber": 268,
                        "startColumnNumber": 8,
                        "endLineNumber": 306,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "/** \n * {@inheritDoc} \n */\npublic double[] solve(double[] b) throws IllegalArgumentException, InvalidMatrixException {\n  final int m=pivot.length;\n  if (b.length != m) {\n    throw MathRuntimeException.createIllegalArgumentException(\"vector length mismatch: got {0} but expected {1}\",b.length,m);\n  }\n  if (singular) {\n    throw new SingularMatrixException();\n  }\n  final double[] bp=new double[m];\n  for (int row=0; row < m; row++) {\n    bp[row]=b[pivot[row]];\n  }\n  for (int col=0; col < m; col++) {\n    for (int i=col + 1; i < m; i++) {\n      bp[i]-=bp[col] * lu[i][col];\n    }\n  }\n  for (int col=m - 1; col >= 0; col--) {\n    bp[col]/=lu[col][col];\n    for (int i=0; i < col; i++) {\n      bp[i]-=bp[col] * lu[i][col];\n    }\n  }\n  return bp;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 174,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
                "nodePosition": {
                    "charLength": 11,
                    "startLineNumber": 285,
                    "startColumnNumber": 17,
                    "endLineNumber": 285,
                    "endColumnNumber": 28
                },
                "nodeContext": "int row=0",
                "nodeType": "VariableDeclarationExpression",
                "astNodeNumber": 5,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "int"
        },
        {
            "nodeContext": "0",
            "nodeType": "NumberLiteral",
            "nodePosition": {
                "charLength": 1,
                "startLineNumber": 290,
                "startColumnNumber": 27,
                "endLineNumber": 290,
                "endColumnNumber": 28
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
                    "nodePosition": {
                        "charLength": 7,
                        "startLineNumber": 290,
                        "startColumnNumber": 21,
                        "endLineNumber": 290,
                        "endColumnNumber": 28
                    },
                    "nodeContext": "col=0",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
                    "nodePosition": {
                        "charLength": 11,
                        "startLineNumber": 290,
                        "startColumnNumber": 17,
                        "endLineNumber": 290,
                        "endColumnNumber": 28
                    },
                    "nodeContext": "int col=0",
                    "nodeType": "VariableDeclarationExpression",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 170,
                        "startLineNumber": 290,
                        "startColumnNumber": 12,
                        "endLineNumber": 294,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "for (int col=0; col < m; col++) {\n  for (int i=col + 1; i < m; i++) {\n    bp[i]-=bp[col] * lu[i][col];\n  }\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 40,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1065,
                        "startLineNumber": 270,
                        "startColumnNumber": 68,
                        "endLineNumber": 306,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  final int m=pivot.length;\n  if (b.length != m) {\n    throw MathRuntimeException.createIllegalArgumentException(\"vector length mismatch: got {0} but expected {1}\",b.length,m);\n  }\n  if (singular) {\n    throw new SingularMatrixException();\n  }\n  final double[] bp=new double[m];\n  for (int row=0; row < m; row++) {\n    bp[row]=b[pivot[row]];\n  }\n  for (int col=0; col < m; col++) {\n    for (int i=col + 1; i < m; i++) {\n      bp[i]-=bp[col] * lu[i][col];\n    }\n  }\n  for (int col=m - 1; col >= 0; col--) {\n    bp[col]/=lu[col][col];\n    for (int i=0; i < col; i++) {\n      bp[i]-=bp[col] * lu[i][col];\n    }\n  }\n  return bp;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 158,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1196,
                        "startLineNumber": 268,
                        "startColumnNumber": 8,
                        "endLineNumber": 306,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "/** \n * {@inheritDoc} \n */\npublic double[] solve(double[] b) throws IllegalArgumentException, InvalidMatrixException {\n  final int m=pivot.length;\n  if (b.length != m) {\n    throw MathRuntimeException.createIllegalArgumentException(\"vector length mismatch: got {0} but expected {1}\",b.length,m);\n  }\n  if (singular) {\n    throw new SingularMatrixException();\n  }\n  final double[] bp=new double[m];\n  for (int row=0; row < m; row++) {\n    bp[row]=b[pivot[row]];\n  }\n  for (int col=0; col < m; col++) {\n    for (int i=col + 1; i < m; i++) {\n      bp[i]-=bp[col] * lu[i][col];\n    }\n  }\n  for (int col=m - 1; col >= 0; col--) {\n    bp[col]/=lu[col][col];\n    for (int i=0; i < col; i++) {\n      bp[i]-=bp[col] * lu[i][col];\n    }\n  }\n  return bp;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 174,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
                "nodePosition": {
                    "charLength": 11,
                    "startLineNumber": 290,
                    "startColumnNumber": 17,
                    "endLineNumber": 290,
                    "endColumnNumber": 28
                },
                "nodeContext": "int col=0",
                "nodeType": "VariableDeclarationExpression",
                "astNodeNumber": 5,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "int"
        },
        {
            "nodeContext": "0",
            "nodeType": "NumberLiteral",
            "nodePosition": {
                "charLength": 1,
                "startLineNumber": 297,
                "startColumnNumber": 41,
                "endLineNumber": 297,
                "endColumnNumber": 42
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
                    "nodePosition": {
                        "charLength": 8,
                        "startLineNumber": 297,
                        "startColumnNumber": 34,
                        "endLineNumber": 297,
                        "endColumnNumber": 42
                    },
                    "nodeContext": "col >= 0",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 212,
                        "startLineNumber": 297,
                        "startColumnNumber": 12,
                        "endLineNumber": 302,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "for (int col=m - 1; col >= 0; col--) {\n  bp[col]/=lu[col][col];\n  for (int i=0; i < col; i++) {\n    bp[i]-=bp[col] * lu[i][col];\n  }\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 50,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1065,
                        "startLineNumber": 270,
                        "startColumnNumber": 68,
                        "endLineNumber": 306,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  final int m=pivot.length;\n  if (b.length != m) {\n    throw MathRuntimeException.createIllegalArgumentException(\"vector length mismatch: got {0} but expected {1}\",b.length,m);\n  }\n  if (singular) {\n    throw new SingularMatrixException();\n  }\n  final double[] bp=new double[m];\n  for (int row=0; row < m; row++) {\n    bp[row]=b[pivot[row]];\n  }\n  for (int col=0; col < m; col++) {\n    for (int i=col + 1; i < m; i++) {\n      bp[i]-=bp[col] * lu[i][col];\n    }\n  }\n  for (int col=m - 1; col >= 0; col--) {\n    bp[col]/=lu[col][col];\n    for (int i=0; i < col; i++) {\n      bp[i]-=bp[col] * lu[i][col];\n    }\n  }\n  return bp;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 158,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1196,
                        "startLineNumber": 268,
                        "startColumnNumber": 8,
                        "endLineNumber": 306,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "/** \n * {@inheritDoc} \n */\npublic double[] solve(double[] b) throws IllegalArgumentException, InvalidMatrixException {\n  final int m=pivot.length;\n  if (b.length != m) {\n    throw MathRuntimeException.createIllegalArgumentException(\"vector length mismatch: got {0} but expected {1}\",b.length,m);\n  }\n  if (singular) {\n    throw new SingularMatrixException();\n  }\n  final double[] bp=new double[m];\n  for (int row=0; row < m; row++) {\n    bp[row]=b[pivot[row]];\n  }\n  for (int col=0; col < m; col++) {\n    for (int i=col + 1; i < m; i++) {\n      bp[i]-=bp[col] * lu[i][col];\n    }\n  }\n  for (int col=m - 1; col >= 0; col--) {\n    bp[col]/=lu[col][col];\n    for (int i=0; i < col; i++) {\n      bp[i]-=bp[col] * lu[i][col];\n    }\n  }\n  return bp;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 174,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
                "nodePosition": {
                    "charLength": 8,
                    "startLineNumber": 297,
                    "startColumnNumber": 34,
                    "endLineNumber": 297,
                    "endColumnNumber": 42
                },
                "nodeContext": "col >= 0",
                "nodeType": "InfixExpression",
                "astNodeNumber": 3,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "int"
        },
        {
            "nodeContext": "0",
            "nodeType": "NumberLiteral",
            "nodePosition": {
                "charLength": 1,
                "startLineNumber": 299,
                "startColumnNumber": 29,
                "endLineNumber": 299,
                "endColumnNumber": 30
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
                    "nodePosition": {
                        "charLength": 5,
                        "startLineNumber": 299,
                        "startColumnNumber": 25,
                        "endLineNumber": 299,
                        "endColumnNumber": 30
                    },
                    "nodeContext": "i=0",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
                    "nodePosition": {
                        "charLength": 9,
                        "startLineNumber": 299,
                        "startColumnNumber": 21,
                        "endLineNumber": 299,
                        "endColumnNumber": 30
                    },
                    "nodeContext": "int i=0",
                    "nodeType": "VariableDeclarationExpression",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 100,
                        "startLineNumber": 299,
                        "startColumnNumber": 16,
                        "endLineNumber": 301,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "for (int i=0; i < col; i++) {\n  bp[i]-=bp[col] * lu[i][col];\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 26,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 173,
                        "startLineNumber": 297,
                        "startColumnNumber": 51,
                        "endLineNumber": 302,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  bp[col]/=lu[col][col];\n  for (int i=0; i < col; i++) {\n    bp[i]-=bp[col] * lu[i][col];\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 37,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 212,
                        "startLineNumber": 297,
                        "startColumnNumber": 12,
                        "endLineNumber": 302,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "for (int col=m - 1; col >= 0; col--) {\n  bp[col]/=lu[col][col];\n  for (int i=0; i < col; i++) {\n    bp[i]-=bp[col] * lu[i][col];\n  }\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 50,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1065,
                        "startLineNumber": 270,
                        "startColumnNumber": 68,
                        "endLineNumber": 306,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  final int m=pivot.length;\n  if (b.length != m) {\n    throw MathRuntimeException.createIllegalArgumentException(\"vector length mismatch: got {0} but expected {1}\",b.length,m);\n  }\n  if (singular) {\n    throw new SingularMatrixException();\n  }\n  final double[] bp=new double[m];\n  for (int row=0; row < m; row++) {\n    bp[row]=b[pivot[row]];\n  }\n  for (int col=0; col < m; col++) {\n    for (int i=col + 1; i < m; i++) {\n      bp[i]-=bp[col] * lu[i][col];\n    }\n  }\n  for (int col=m - 1; col >= 0; col--) {\n    bp[col]/=lu[col][col];\n    for (int i=0; i < col; i++) {\n      bp[i]-=bp[col] * lu[i][col];\n    }\n  }\n  return bp;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 158,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1196,
                        "startLineNumber": 268,
                        "startColumnNumber": 8,
                        "endLineNumber": 306,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "/** \n * {@inheritDoc} \n */\npublic double[] solve(double[] b) throws IllegalArgumentException, InvalidMatrixException {\n  final int m=pivot.length;\n  if (b.length != m) {\n    throw MathRuntimeException.createIllegalArgumentException(\"vector length mismatch: got {0} but expected {1}\",b.length,m);\n  }\n  if (singular) {\n    throw new SingularMatrixException();\n  }\n  final double[] bp=new double[m];\n  for (int row=0; row < m; row++) {\n    bp[row]=b[pivot[row]];\n  }\n  for (int col=0; col < m; col++) {\n    for (int i=col + 1; i < m; i++) {\n      bp[i]-=bp[col] * lu[i][col];\n    }\n  }\n  for (int col=m - 1; col >= 0; col--) {\n    bp[col]/=lu[col][col];\n    for (int i=0; i < col; i++) {\n      bp[i]-=bp[col] * lu[i][col];\n    }\n  }\n  return bp;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 174,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
                "nodePosition": {
                    "charLength": 9,
                    "startLineNumber": 299,
                    "startColumnNumber": 21,
                    "endLineNumber": 299,
                    "endColumnNumber": 30
                },
                "nodeContext": "int i=0",
                "nodeType": "VariableDeclarationExpression",
                "astNodeNumber": 5,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "int"
        }
    ],
    "positionList": [
        {
            "charLength": 1,
            "startLineNumber": 285,
            "startColumnNumber": 27,
            "endLineNumber": 285,
            "endColumnNumber": 28
        },
        {
            "charLength": 1,
            "startLineNumber": 290,
            "startColumnNumber": 27,
            "endLineNumber": 290,
            "endColumnNumber": 28
        },
        {
            "charLength": 1,
            "startLineNumber": 297,
            "startColumnNumber": 41,
            "endLineNumber": 297,
            "endColumnNumber": 42
        },
        {
            "charLength": 1,
            "startLineNumber": 299,
            "startColumnNumber": 29,
            "endLineNumber": 299,
            "endColumnNumber": 30
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 2
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 2,
            "secondKey": 3,
            "layout": 1
        },
        {
            "firstKey": 3,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 1,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 2,
            "layout": 4
        }
    ]
}