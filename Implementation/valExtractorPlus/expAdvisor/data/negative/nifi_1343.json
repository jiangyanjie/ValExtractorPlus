{
    "id": 1343,
    "expression": "httpServletRequest",
    "projectName": "nifi",
    "commitID": "2a92747046b39d7b3f7604258c1d3bb81a9447bd",
    "filePath": "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/ProcessGroupResource.java",
    "occurrences": 2,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "httpServletRequest",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 18,
                "startLineNumber": 607,
                "startColumnNumber": 58,
                "endLineNumber": 607,
                "endColumnNumber": 76
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 37,
                        "startLineNumber": 607,
                        "startColumnNumber": 40,
                        "endLineNumber": 607,
                        "endColumnNumber": 77
                    },
                    "nodeContext": "isValidationPhase(httpServletRequest)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 55,
                        "startLineNumber": 607,
                        "startColumnNumber": 22,
                        "endLineNumber": 607,
                        "endColumnNumber": 77
                    },
                    "nodeContext": "validationPhase=isValidationPhase(httpServletRequest)",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 70,
                        "startLineNumber": 607,
                        "startColumnNumber": 8,
                        "endLineNumber": 607,
                        "endColumnNumber": 78
                    },
                    "nodeContext": "final boolean validationPhase=isValidationPhase(httpServletRequest);\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2639,
                        "startLineNumber": 578,
                        "startColumnNumber": 53,
                        "endLineNumber": 630,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (processorEntity == null || processorEntity.getComponent() == null) {\n    throw new IllegalArgumentException(\"Processor details must be specified.\");\n  }\n  if (processorEntity.getRevision() == null || (processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)) {\n    throw new IllegalArgumentException(\"A revision of 0 must be specified when creating a new Processor.\");\n  }\n  if (processorEntity.getComponent().getId() != null) {\n    throw new IllegalArgumentException(\"Processor ID cannot be specified.\");\n  }\n  if (StringUtils.isBlank(processorEntity.getComponent().getType())) {\n    throw new IllegalArgumentException(\"The type of processor to create must be specified.\");\n  }\n  if (processorEntity.getComponent().getParentGroupId() != null && !groupId.equals(processorEntity.getComponent().getParentGroupId())) {\n    throw new IllegalArgumentException(String.format(\"If specified, the parent process group id %s must be the same as specified in the URI %s\",processorEntity.getComponent().getParentGroupId(),groupId));\n  }\n  processorEntity.getComponent().setParentGroupId(groupId);\n  if (isReplicateRequest()) {\n    return replicate(HttpMethod.POST,processorEntity);\n  }\n  final boolean validationPhase=isValidationPhase(httpServletRequest);\n  if (validationPhase || !isTwoPhaseRequest(httpServletRequest)) {\n    serviceFacade.authorizeAccess(lookup -> {\n      final Authorizable processGroup=lookup.getProcessGroup(groupId).getAuthorizable();\n      processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n    }\n);\n  }\n  if (validationPhase) {\n    return generateContinueResponse().build();\n  }\n  processorEntity.getComponent().setId(generateUuid());\n  final Revision revision=getRevision(processorEntity,processorEntity.getComponent().getId());\n  final ProcessorEntity entity=serviceFacade.createProcessor(revision,groupId,processorEntity.getComponent());\n  processorResource.populateRemainingProcessorEntityContent(entity);\n  String uri=entity.getUri();\n  return clusterContext(generateCreatedResponse(URI.create(uri),entity)).build();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 242,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 4427,
                        "startLineNumber": 540,
                        "startColumnNumber": 4,
                        "endLineNumber": 630,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Creates a new processor.\n * @param httpServletRequest request\n * @param groupId            The group id\n * @param processorEntity    A processorEntity.\n * @return A processorEntity.\n */\n@POST @Consumes(MediaType.APPLICATION_JSON) @Produces(MediaType.APPLICATION_JSON) @Path(\"{id}/processors\") @ApiOperation(value=\"Creates a new processor\",response=ProcessorEntity.class,authorizations={@Authorization(value=\"Write - /process-groups/{uuid}\",type=\"\")}) @ApiResponses(value={@ApiResponse(code=400,message=\"NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.\"),@ApiResponse(code=401,message=\"Client could not be authenticated.\"),@ApiResponse(code=403,message=\"Client is not authorized to make this request.\"),@ApiResponse(code=404,message=\"The specified resource could not be found.\"),@ApiResponse(code=409,message=\"The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.\")}) public Response createProcessor(@Context final HttpServletRequest httpServletRequest,@ApiParam(value=\"The process group id.\",required=true) @PathParam(\"id\") final String groupId,@ApiParam(value=\"The processor configuration details.\",required=true) final ProcessorEntity processorEntity){\n  if (processorEntity == null || processorEntity.getComponent() == null) {\n    throw new IllegalArgumentException(\"Processor details must be specified.\");\n  }\n  if (processorEntity.getRevision() == null || (processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)) {\n    throw new IllegalArgumentException(\"A revision of 0 must be specified when creating a new Processor.\");\n  }\n  if (processorEntity.getComponent().getId() != null) {\n    throw new IllegalArgumentException(\"Processor ID cannot be specified.\");\n  }\n  if (StringUtils.isBlank(processorEntity.getComponent().getType())) {\n    throw new IllegalArgumentException(\"The type of processor to create must be specified.\");\n  }\n  if (processorEntity.getComponent().getParentGroupId() != null && !groupId.equals(processorEntity.getComponent().getParentGroupId())) {\n    throw new IllegalArgumentException(String.format(\"If specified, the parent process group id %s must be the same as specified in the URI %s\",processorEntity.getComponent().getParentGroupId(),groupId));\n  }\n  processorEntity.getComponent().setParentGroupId(groupId);\n  if (isReplicateRequest()) {\n    return replicate(HttpMethod.POST,processorEntity);\n  }\n  final boolean validationPhase=isValidationPhase(httpServletRequest);\n  if (validationPhase || !isTwoPhaseRequest(httpServletRequest)) {\n    serviceFacade.authorizeAccess(lookup -> {\n      final Authorizable processGroup=lookup.getProcessGroup(groupId).getAuthorizable();\n      processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n    }\n);\n  }\n  if (validationPhase) {\n    return generateContinueResponse().build();\n  }\n  processorEntity.getComponent().setId(generateUuid());\n  final Revision revision=getRevision(processorEntity,processorEntity.getComponent().getId());\n  final ProcessorEntity entity=serviceFacade.createProcessor(revision,groupId,processorEntity.getComponent());\n  processorResource.populateRemainingProcessorEntityContent(entity);\n  String uri=entity.getUri();\n  return clusterContext(generateCreatedResponse(URI.create(uri),entity)).build();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 365,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 70,
                    "startLineNumber": 607,
                    "startColumnNumber": 8,
                    "endLineNumber": 607,
                    "endColumnNumber": 78
                },
                "nodeContext": "final boolean validationPhase=isValidationPhase(httpServletRequest);\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 8,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.nifi.web.api.HttpServletRequest"
        },
        {
            "nodeContext": "httpServletRequest",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 18,
                "startLineNumber": 608,
                "startColumnNumber": 50,
                "endLineNumber": 608,
                "endColumnNumber": 68
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
                    "nodePosition": {
                        "charLength": 37,
                        "startLineNumber": 608,
                        "startColumnNumber": 32,
                        "endLineNumber": 608,
                        "endColumnNumber": 69
                    },
                    "nodeContext": "isTwoPhaseRequest(httpServletRequest)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 38,
                        "startLineNumber": 608,
                        "startColumnNumber": 31,
                        "endLineNumber": 608,
                        "endColumnNumber": 69
                    },
                    "nodeContext": "!isTwoPhaseRequest(httpServletRequest)",
                    "nodeType": "PrefixExpression",
                    "astNodeNumber": 4,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 57,
                        "startLineNumber": 608,
                        "startColumnNumber": 12,
                        "endLineNumber": 608,
                        "endColumnNumber": 69
                    },
                    "nodeContext": "validationPhase || !isTwoPhaseRequest(httpServletRequest)",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 6,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 379,
                        "startLineNumber": 608,
                        "startColumnNumber": 8,
                        "endLineNumber": 614,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (validationPhase || !isTwoPhaseRequest(httpServletRequest)) {\n  serviceFacade.authorizeAccess(lookup -> {\n    final Authorizable processGroup=lookup.getProcessGroup(groupId).getAuthorizable();\n    processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n  }\n);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 39,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2639,
                        "startLineNumber": 578,
                        "startColumnNumber": 53,
                        "endLineNumber": 630,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (processorEntity == null || processorEntity.getComponent() == null) {\n    throw new IllegalArgumentException(\"Processor details must be specified.\");\n  }\n  if (processorEntity.getRevision() == null || (processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)) {\n    throw new IllegalArgumentException(\"A revision of 0 must be specified when creating a new Processor.\");\n  }\n  if (processorEntity.getComponent().getId() != null) {\n    throw new IllegalArgumentException(\"Processor ID cannot be specified.\");\n  }\n  if (StringUtils.isBlank(processorEntity.getComponent().getType())) {\n    throw new IllegalArgumentException(\"The type of processor to create must be specified.\");\n  }\n  if (processorEntity.getComponent().getParentGroupId() != null && !groupId.equals(processorEntity.getComponent().getParentGroupId())) {\n    throw new IllegalArgumentException(String.format(\"If specified, the parent process group id %s must be the same as specified in the URI %s\",processorEntity.getComponent().getParentGroupId(),groupId));\n  }\n  processorEntity.getComponent().setParentGroupId(groupId);\n  if (isReplicateRequest()) {\n    return replicate(HttpMethod.POST,processorEntity);\n  }\n  final boolean validationPhase=isValidationPhase(httpServletRequest);\n  if (validationPhase || !isTwoPhaseRequest(httpServletRequest)) {\n    serviceFacade.authorizeAccess(lookup -> {\n      final Authorizable processGroup=lookup.getProcessGroup(groupId).getAuthorizable();\n      processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n    }\n);\n  }\n  if (validationPhase) {\n    return generateContinueResponse().build();\n  }\n  processorEntity.getComponent().setId(generateUuid());\n  final Revision revision=getRevision(processorEntity,processorEntity.getComponent().getId());\n  final ProcessorEntity entity=serviceFacade.createProcessor(revision,groupId,processorEntity.getComponent());\n  processorResource.populateRemainingProcessorEntityContent(entity);\n  String uri=entity.getUri();\n  return clusterContext(generateCreatedResponse(URI.create(uri),entity)).build();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 242,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 4427,
                        "startLineNumber": 540,
                        "startColumnNumber": 4,
                        "endLineNumber": 630,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Creates a new processor.\n * @param httpServletRequest request\n * @param groupId            The group id\n * @param processorEntity    A processorEntity.\n * @return A processorEntity.\n */\n@POST @Consumes(MediaType.APPLICATION_JSON) @Produces(MediaType.APPLICATION_JSON) @Path(\"{id}/processors\") @ApiOperation(value=\"Creates a new processor\",response=ProcessorEntity.class,authorizations={@Authorization(value=\"Write - /process-groups/{uuid}\",type=\"\")}) @ApiResponses(value={@ApiResponse(code=400,message=\"NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.\"),@ApiResponse(code=401,message=\"Client could not be authenticated.\"),@ApiResponse(code=403,message=\"Client is not authorized to make this request.\"),@ApiResponse(code=404,message=\"The specified resource could not be found.\"),@ApiResponse(code=409,message=\"The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.\")}) public Response createProcessor(@Context final HttpServletRequest httpServletRequest,@ApiParam(value=\"The process group id.\",required=true) @PathParam(\"id\") final String groupId,@ApiParam(value=\"The processor configuration details.\",required=true) final ProcessorEntity processorEntity){\n  if (processorEntity == null || processorEntity.getComponent() == null) {\n    throw new IllegalArgumentException(\"Processor details must be specified.\");\n  }\n  if (processorEntity.getRevision() == null || (processorEntity.getRevision().getVersion() == null || processorEntity.getRevision().getVersion() != 0)) {\n    throw new IllegalArgumentException(\"A revision of 0 must be specified when creating a new Processor.\");\n  }\n  if (processorEntity.getComponent().getId() != null) {\n    throw new IllegalArgumentException(\"Processor ID cannot be specified.\");\n  }\n  if (StringUtils.isBlank(processorEntity.getComponent().getType())) {\n    throw new IllegalArgumentException(\"The type of processor to create must be specified.\");\n  }\n  if (processorEntity.getComponent().getParentGroupId() != null && !groupId.equals(processorEntity.getComponent().getParentGroupId())) {\n    throw new IllegalArgumentException(String.format(\"If specified, the parent process group id %s must be the same as specified in the URI %s\",processorEntity.getComponent().getParentGroupId(),groupId));\n  }\n  processorEntity.getComponent().setParentGroupId(groupId);\n  if (isReplicateRequest()) {\n    return replicate(HttpMethod.POST,processorEntity);\n  }\n  final boolean validationPhase=isValidationPhase(httpServletRequest);\n  if (validationPhase || !isTwoPhaseRequest(httpServletRequest)) {\n    serviceFacade.authorizeAccess(lookup -> {\n      final Authorizable processGroup=lookup.getProcessGroup(groupId).getAuthorizable();\n      processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n    }\n);\n  }\n  if (validationPhase) {\n    return generateContinueResponse().build();\n  }\n  processorEntity.getComponent().setId(generateUuid());\n  final Revision revision=getRevision(processorEntity,processorEntity.getComponent().getId());\n  final ProcessorEntity entity=serviceFacade.createProcessor(revision,groupId,processorEntity.getComponent());\n  processorResource.populateRemainingProcessorEntityContent(entity);\n  String uri=entity.getUri();\n  return clusterContext(generateCreatedResponse(URI.create(uri),entity)).build();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 365,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 57,
                    "startLineNumber": 608,
                    "startColumnNumber": 12,
                    "endLineNumber": 608,
                    "endColumnNumber": 69
                },
                "nodeContext": "validationPhase || !isTwoPhaseRequest(httpServletRequest)",
                "nodeType": "InfixExpression",
                "astNodeNumber": 6,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.nifi.web.api.HttpServletRequest"
        }
    ],
    "positionList": [
        {
            "charLength": 18,
            "startLineNumber": 607,
            "startColumnNumber": 58,
            "endLineNumber": 607,
            "endColumnNumber": 76
        },
        {
            "charLength": 18,
            "startLineNumber": 608,
            "startColumnNumber": 50,
            "endLineNumber": 608,
            "endColumnNumber": 68
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 4
        }
    ]
}