{
    "id": 224,
    "expression": "split",
    "projectName": "dromara@hutool",
    "commitID": "4fa9794d06fa92188895883a1dae020b01fb0e2e",
    "filePath": "hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java",
    "occurrences": 3,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "split",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 5,
                "startLineNumber": 2411,
                "startColumnNumber": 28,
                "endLineNumber": 2411,
                "endColumnNumber": 33
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 12,
                        "startLineNumber": 2411,
                        "startColumnNumber": 28,
                        "endLineNumber": 2411,
                        "endColumnNumber": 40
                    },
                    "nodeContext": "split.length",
                    "nodeType": "QualifiedName",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 16,
                        "startLineNumber": 2411,
                        "startColumnNumber": 28,
                        "endLineNumber": 2411,
                        "endColumnNumber": 44
                    },
                    "nodeContext": "split.length - 1",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
                    "nodePosition": {
                        "charLength": 25,
                        "startLineNumber": 2411,
                        "startColumnNumber": 19,
                        "endLineNumber": 2411,
                        "endColumnNumber": 44
                    },
                    "nodeContext": "length=split.length - 1",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
                    "nodePosition": {
                        "charLength": 36,
                        "startLineNumber": 2411,
                        "startColumnNumber": 8,
                        "endLineNumber": 2411,
                        "endColumnNumber": 44
                    },
                    "nodeContext": "int i=1, length=split.length - 1",
                    "nodeType": "VariableDeclarationExpression",
                    "astNodeNumber": 12,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 97,
                        "startLineNumber": 2411,
                        "startColumnNumber": 3,
                        "endLineNumber": 2413,
                        "endColumnNumber": 4
                    },
                    "nodeContext": "for (int i=1, length=split.length - 1; i < length; i+=2) {\n  result.add(split[i]);\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 27,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 128,
                        "startLineNumber": 2409,
                        "startColumnNumber": 27,
                        "endLineNumber": 2414,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  for (int i=1, length=split.length - 1; i < length; i+=2) {\n    result.add(split[i]);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 28,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 372,
                        "startLineNumber": 2409,
                        "startColumnNumber": 2,
                        "endLineNumber": 2422,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "if (prefix.equals(suffix)) {\n  for (int i=1, length=split.length - 1; i < length; i+=2) {\n    result.add(split[i]);\n  }\n}\n else {\n  int suffixIndex;\n  for (  String fragment : split) {\n    suffixIndex=fragment.indexOf(suffix.toString());\n    if (suffixIndex > 0) {\n      result.add(fragment.substring(0,suffixIndex));\n    }\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 68,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 658,
                        "startLineNumber": 2400,
                        "startColumnNumber": 98,
                        "endLineNumber": 2425,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  if (hasEmpty(str,prefix,suffix) || false == contains(str,prefix)) {\n    return new String[0];\n  }\n  final List<String> result=new LinkedList<>();\n  final String[] split=split(str,prefix);\n  if (prefix.equals(suffix)) {\n    for (int i=1, length=split.length - 1; i < length; i+=2) {\n      result.add(split[i]);\n    }\n  }\n else {\n    int suffixIndex;\n    for (    String fragment : split) {\n      suffixIndex=fragment.indexOf(suffix.toString());\n      if (suffixIndex > 0) {\n        result.add(fragment.substring(0,suffixIndex));\n      }\n    }\n  }\n  return result.toArray(new String[0]);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 125,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1672,
                        "startLineNumber": 2374,
                        "startColumnNumber": 1,
                        "endLineNumber": 2425,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "/** \n * 截取指定字符串多段中间部分，不包括标识字符串<br> <p> 栗子： <pre> StrUtil.subBetweenAll(\"wx[b]y[z]\", \"[\", \"]\") \t\t= [\"b\",\"z\"] StrUtil.subBetweenAll(null, *, *)          \t\t\t= [] StrUtil.subBetweenAll(*, null, *)          \t\t\t= [] StrUtil.subBetweenAll(*, *, null)          \t\t\t= [] StrUtil.subBetweenAll(\"\", \"\", \"\")          \t\t\t= [] StrUtil.subBetweenAll(\"\", \"\", \"]\")         \t\t\t= [] StrUtil.subBetweenAll(\"\", \"[\", \"]\")        \t\t\t= [] StrUtil.subBetweenAll(\"yabcz\", \"\", \"\")     \t\t\t= [] StrUtil.subBetweenAll(\"yabcz\", \"y\", \"z\")   \t\t\t= [\"abc\"] StrUtil.subBetweenAll(\"yabczyabcz\", \"y\", \"z\")   \t\t= [\"abc\",\"abc\"] StrUtil.subBetweenAll(\"[yabc[zy]abcz]\", \"[\", \"]\");   = [\"zy\"]           重叠时只截取内部， </pre>\n * @param str    被切割的字符串\n * @param prefix 截取开始的字符串标识\n * @param suffix 截取到的字符串标识\n * @return 截取后的字符串\n * @author dahuoyzs\n * @since 5.2.5\n */\npublic static String[] subBetweenAll(CharSequence str,CharSequence prefix,CharSequence suffix){\n  if (hasEmpty(str,prefix,suffix) || false == contains(str,prefix)) {\n    return new String[0];\n  }\n  final List<String> result=new LinkedList<>();\n  final String[] split=split(str,prefix);\n  if (prefix.equals(suffix)) {\n    for (int i=1, length=split.length - 1; i < length; i+=2) {\n      result.add(split[i]);\n    }\n  }\n else {\n    int suffixIndex;\n    for (    String fragment : split) {\n      suffixIndex=fragment.indexOf(suffix.toString());\n      if (suffixIndex > 0) {\n        result.add(fragment.substring(0,suffixIndex));\n      }\n    }\n  }\n  return result.toArray(new String[0]);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 146,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
                "nodePosition": {
                    "charLength": 36,
                    "startLineNumber": 2411,
                    "startColumnNumber": 8,
                    "endLineNumber": 2411,
                    "endColumnNumber": 44
                },
                "nodeContext": "int i=1, length=split.length - 1",
                "nodeType": "VariableDeclarationExpression",
                "astNodeNumber": 12,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "java.lang.String[]"
        },
        {
            "nodeContext": "split",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 5,
                "startLineNumber": 2412,
                "startColumnNumber": 15,
                "endLineNumber": 2412,
                "endColumnNumber": 20
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 8,
                        "startLineNumber": 2412,
                        "startColumnNumber": 15,
                        "endLineNumber": 2412,
                        "endColumnNumber": 23
                    },
                    "nodeContext": "split[i]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 20,
                        "startLineNumber": 2412,
                        "startColumnNumber": 4,
                        "endLineNumber": 2412,
                        "endColumnNumber": 24
                    },
                    "nodeContext": "result.add(split[i])",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 21,
                        "startLineNumber": 2412,
                        "startColumnNumber": 4,
                        "endLineNumber": 2412,
                        "endColumnNumber": 25
                    },
                    "nodeContext": "result.add(split[i]);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 34,
                        "startLineNumber": 2411,
                        "startColumnNumber": 66,
                        "endLineNumber": 2413,
                        "endColumnNumber": 4
                    },
                    "nodeContext": "{\n  result.add(split[i]);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 8,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 97,
                        "startLineNumber": 2411,
                        "startColumnNumber": 3,
                        "endLineNumber": 2413,
                        "endColumnNumber": 4
                    },
                    "nodeContext": "for (int i=1, length=split.length - 1; i < length; i+=2) {\n  result.add(split[i]);\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 27,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 128,
                        "startLineNumber": 2409,
                        "startColumnNumber": 27,
                        "endLineNumber": 2414,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  for (int i=1, length=split.length - 1; i < length; i+=2) {\n    result.add(split[i]);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 28,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 372,
                        "startLineNumber": 2409,
                        "startColumnNumber": 2,
                        "endLineNumber": 2422,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "if (prefix.equals(suffix)) {\n  for (int i=1, length=split.length - 1; i < length; i+=2) {\n    result.add(split[i]);\n  }\n}\n else {\n  int suffixIndex;\n  for (  String fragment : split) {\n    suffixIndex=fragment.indexOf(suffix.toString());\n    if (suffixIndex > 0) {\n      result.add(fragment.substring(0,suffixIndex));\n    }\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 68,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 658,
                        "startLineNumber": 2400,
                        "startColumnNumber": 98,
                        "endLineNumber": 2425,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  if (hasEmpty(str,prefix,suffix) || false == contains(str,prefix)) {\n    return new String[0];\n  }\n  final List<String> result=new LinkedList<>();\n  final String[] split=split(str,prefix);\n  if (prefix.equals(suffix)) {\n    for (int i=1, length=split.length - 1; i < length; i+=2) {\n      result.add(split[i]);\n    }\n  }\n else {\n    int suffixIndex;\n    for (    String fragment : split) {\n      suffixIndex=fragment.indexOf(suffix.toString());\n      if (suffixIndex > 0) {\n        result.add(fragment.substring(0,suffixIndex));\n      }\n    }\n  }\n  return result.toArray(new String[0]);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 125,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1672,
                        "startLineNumber": 2374,
                        "startColumnNumber": 1,
                        "endLineNumber": 2425,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "/** \n * 截取指定字符串多段中间部分，不包括标识字符串<br> <p> 栗子： <pre> StrUtil.subBetweenAll(\"wx[b]y[z]\", \"[\", \"]\") \t\t= [\"b\",\"z\"] StrUtil.subBetweenAll(null, *, *)          \t\t\t= [] StrUtil.subBetweenAll(*, null, *)          \t\t\t= [] StrUtil.subBetweenAll(*, *, null)          \t\t\t= [] StrUtil.subBetweenAll(\"\", \"\", \"\")          \t\t\t= [] StrUtil.subBetweenAll(\"\", \"\", \"]\")         \t\t\t= [] StrUtil.subBetweenAll(\"\", \"[\", \"]\")        \t\t\t= [] StrUtil.subBetweenAll(\"yabcz\", \"\", \"\")     \t\t\t= [] StrUtil.subBetweenAll(\"yabcz\", \"y\", \"z\")   \t\t\t= [\"abc\"] StrUtil.subBetweenAll(\"yabczyabcz\", \"y\", \"z\")   \t\t= [\"abc\",\"abc\"] StrUtil.subBetweenAll(\"[yabc[zy]abcz]\", \"[\", \"]\");   = [\"zy\"]           重叠时只截取内部， </pre>\n * @param str    被切割的字符串\n * @param prefix 截取开始的字符串标识\n * @param suffix 截取到的字符串标识\n * @return 截取后的字符串\n * @author dahuoyzs\n * @since 5.2.5\n */\npublic static String[] subBetweenAll(CharSequence str,CharSequence prefix,CharSequence suffix){\n  if (hasEmpty(str,prefix,suffix) || false == contains(str,prefix)) {\n    return new String[0];\n  }\n  final List<String> result=new LinkedList<>();\n  final String[] split=split(str,prefix);\n  if (prefix.equals(suffix)) {\n    for (int i=1, length=split.length - 1; i < length; i+=2) {\n      result.add(split[i]);\n    }\n  }\n else {\n    int suffixIndex;\n    for (    String fragment : split) {\n      suffixIndex=fragment.indexOf(suffix.toString());\n      if (suffixIndex > 0) {\n        result.add(fragment.substring(0,suffixIndex));\n      }\n    }\n  }\n  return result.toArray(new String[0]);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 146,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 21,
                    "startLineNumber": 2412,
                    "startColumnNumber": 4,
                    "endLineNumber": 2412,
                    "endColumnNumber": 25
                },
                "nodeContext": "result.add(split[i]);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 7,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.lang.String[]"
        },
        {
            "nodeContext": "split",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 5,
                "startLineNumber": 2416,
                "startColumnNumber": 26,
                "endLineNumber": 2416,
                "endColumnNumber": 31
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 182,
                        "startLineNumber": 2416,
                        "startColumnNumber": 3,
                        "endLineNumber": 2421,
                        "endColumnNumber": 4
                    },
                    "nodeContext": "for (String fragment : split) {\n  suffixIndex=fragment.indexOf(suffix.toString());\n  if (suffixIndex > 0) {\n    result.add(fragment.substring(0,suffixIndex));\n  }\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 30,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 214,
                        "startLineNumber": 2414,
                        "startColumnNumber": 8,
                        "endLineNumber": 2422,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  int suffixIndex;\n  for (  String fragment : split) {\n    suffixIndex=fragment.indexOf(suffix.toString());\n    if (suffixIndex > 0) {\n      result.add(fragment.substring(0,suffixIndex));\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 35,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 372,
                        "startLineNumber": 2409,
                        "startColumnNumber": 2,
                        "endLineNumber": 2422,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "if (prefix.equals(suffix)) {\n  for (int i=1, length=split.length - 1; i < length; i+=2) {\n    result.add(split[i]);\n  }\n}\n else {\n  int suffixIndex;\n  for (  String fragment : split) {\n    suffixIndex=fragment.indexOf(suffix.toString());\n    if (suffixIndex > 0) {\n      result.add(fragment.substring(0,suffixIndex));\n    }\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 68,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 658,
                        "startLineNumber": 2400,
                        "startColumnNumber": 98,
                        "endLineNumber": 2425,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  if (hasEmpty(str,prefix,suffix) || false == contains(str,prefix)) {\n    return new String[0];\n  }\n  final List<String> result=new LinkedList<>();\n  final String[] split=split(str,prefix);\n  if (prefix.equals(suffix)) {\n    for (int i=1, length=split.length - 1; i < length; i+=2) {\n      result.add(split[i]);\n    }\n  }\n else {\n    int suffixIndex;\n    for (    String fragment : split) {\n      suffixIndex=fragment.indexOf(suffix.toString());\n      if (suffixIndex > 0) {\n        result.add(fragment.substring(0,suffixIndex));\n      }\n    }\n  }\n  return result.toArray(new String[0]);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 125,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1672,
                        "startLineNumber": 2374,
                        "startColumnNumber": 1,
                        "endLineNumber": 2425,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "/** \n * 截取指定字符串多段中间部分，不包括标识字符串<br> <p> 栗子： <pre> StrUtil.subBetweenAll(\"wx[b]y[z]\", \"[\", \"]\") \t\t= [\"b\",\"z\"] StrUtil.subBetweenAll(null, *, *)          \t\t\t= [] StrUtil.subBetweenAll(*, null, *)          \t\t\t= [] StrUtil.subBetweenAll(*, *, null)          \t\t\t= [] StrUtil.subBetweenAll(\"\", \"\", \"\")          \t\t\t= [] StrUtil.subBetweenAll(\"\", \"\", \"]\")         \t\t\t= [] StrUtil.subBetweenAll(\"\", \"[\", \"]\")        \t\t\t= [] StrUtil.subBetweenAll(\"yabcz\", \"\", \"\")     \t\t\t= [] StrUtil.subBetweenAll(\"yabcz\", \"y\", \"z\")   \t\t\t= [\"abc\"] StrUtil.subBetweenAll(\"yabczyabcz\", \"y\", \"z\")   \t\t= [\"abc\",\"abc\"] StrUtil.subBetweenAll(\"[yabc[zy]abcz]\", \"[\", \"]\");   = [\"zy\"]           重叠时只截取内部， </pre>\n * @param str    被切割的字符串\n * @param prefix 截取开始的字符串标识\n * @param suffix 截取到的字符串标识\n * @return 截取后的字符串\n * @author dahuoyzs\n * @since 5.2.5\n */\npublic static String[] subBetweenAll(CharSequence str,CharSequence prefix,CharSequence suffix){\n  if (hasEmpty(str,prefix,suffix) || false == contains(str,prefix)) {\n    return new String[0];\n  }\n  final List<String> result=new LinkedList<>();\n  final String[] split=split(str,prefix);\n  if (prefix.equals(suffix)) {\n    for (int i=1, length=split.length - 1; i < length; i+=2) {\n      result.add(split[i]);\n    }\n  }\n else {\n    int suffixIndex;\n    for (    String fragment : split) {\n      suffixIndex=fragment.indexOf(suffix.toString());\n      if (suffixIndex > 0) {\n        result.add(fragment.substring(0,suffixIndex));\n      }\n    }\n  }\n  return result.toArray(new String[0]);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 146,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 182,
                    "startLineNumber": 2416,
                    "startColumnNumber": 3,
                    "endLineNumber": 2421,
                    "endColumnNumber": 4
                },
                "nodeContext": "for (String fragment : split) {\n  suffixIndex=fragment.indexOf(suffix.toString());\n  if (suffixIndex > 0) {\n    result.add(fragment.substring(0,suffixIndex));\n  }\n}\n",
                "nodeType": "EnhancedForStatement",
                "astNodeNumber": 30,
                "astHeight": 8
            },
            "tokenLength": 1,
            "type": "java.lang.String[]"
        }
    ],
    "positionList": [
        {
            "charLength": 5,
            "startLineNumber": 2411,
            "startColumnNumber": 28,
            "endLineNumber": 2411,
            "endColumnNumber": 33
        },
        {
            "charLength": 5,
            "startLineNumber": 2412,
            "startColumnNumber": 15,
            "endLineNumber": 2412,
            "endColumnNumber": 20
        },
        {
            "charLength": 5,
            "startLineNumber": 2416,
            "startColumnNumber": 26,
            "endLineNumber": 2416,
            "endColumnNumber": 31
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 4
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 6
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 6
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 2
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 2
        }
    ]
}