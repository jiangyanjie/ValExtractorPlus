{
    "id": 121,
    "expression": "bean",
    "projectName": "spring-projects@spring-framework",
    "commitID": "9614817e884367da0c20539da5391968d74a0b51",
    "filePath": "spring-test/src/main/java/org/springframework/test/context/support/DependencyInjectionTestExecutionListener.java",
    "occurrences": 2,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "bean",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 119,
                "startColumnNumber": 37,
                "endLineNumber": 119,
                "endColumnNumber": 41
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 87,
                        "startLineNumber": 119,
                        "startColumnNumber": 2,
                        "endLineNumber": 119,
                        "endColumnNumber": 89
                    },
                    "nodeContext": "beanFactory.autowireBeanProperties(bean,AutowireCapableBeanFactory.AUTOWIRE_NO,false)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 8,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 88,
                        "startLineNumber": 119,
                        "startColumnNumber": 2,
                        "endLineNumber": 119,
                        "endColumnNumber": 90
                    },
                    "nodeContext": "beanFactory.autowireBeanProperties(bean,AutowireCapableBeanFactory.AUTOWIRE_NO,false);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 472,
                        "startLineNumber": 115,
                        "startColumnNumber": 77,
                        "endLineNumber": 122,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  Object bean=testContext.getTestInstance();\n  Class<?> clazz=testContext.getTestClass();\n  AutowireCapableBeanFactory beanFactory=testContext.getApplicationContext().getAutowireCapableBeanFactory();\n  beanFactory.autowireBeanProperties(bean,AutowireCapableBeanFactory.AUTOWIRE_NO,false);\n  beanFactory.initializeBean(bean,clazz.getName() + AutowireCapableBeanFactory.ORIGINAL_INSTANCE_SUFFIX);\n  testContext.removeAttribute(REINJECT_DEPENDENCIES_ATTRIBUTE);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 55,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1130,
                        "startLineNumber": 103,
                        "startColumnNumber": 1,
                        "endLineNumber": 122,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "/** \n * Performs dependency injection and bean initialization for the supplied {@link TestContext} as described in{@link #prepareTestInstance(TestContext) prepareTestInstance()}. <p>The  {@link #REINJECT_DEPENDENCIES_ATTRIBUTE} will be subsequently removedfrom the test context, regardless of its value.\n * @param testContext the test context for which dependency injection shouldbe performed (never  {@code null})\n * @throws Exception allows any exception to propagate\n * @see #prepareTestInstance(TestContext)\n * @see #beforeTestMethod(TestContext)\n */\nprotected void injectDependencies(TestContext testContext) throws Exception {\n  Object bean=testContext.getTestInstance();\n  Class<?> clazz=testContext.getTestClass();\n  AutowireCapableBeanFactory beanFactory=testContext.getApplicationContext().getAutowireCapableBeanFactory();\n  beanFactory.autowireBeanProperties(bean,AutowireCapableBeanFactory.AUTOWIRE_NO,false);\n  beanFactory.initializeBean(bean,clazz.getName() + AutowireCapableBeanFactory.ORIGINAL_INSTANCE_SUFFIX);\n  testContext.removeAttribute(REINJECT_DEPENDENCIES_ATTRIBUTE);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 66,
                    "astHeight": 8
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 88,
                    "startLineNumber": 119,
                    "startColumnNumber": 2,
                    "endLineNumber": 119,
                    "endColumnNumber": 90
                },
                "nodeContext": "beanFactory.autowireBeanProperties(bean,AutowireCapableBeanFactory.AUTOWIRE_NO,false);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 9,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.lang.Object"
        },
        {
            "nodeContext": "bean",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 120,
                "startColumnNumber": 29,
                "endLineNumber": 120,
                "endColumnNumber": 33
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 103,
                        "startLineNumber": 120,
                        "startColumnNumber": 2,
                        "endLineNumber": 120,
                        "endColumnNumber": 105
                    },
                    "nodeContext": "beanFactory.initializeBean(bean,clazz.getName() + AutowireCapableBeanFactory.ORIGINAL_INSTANCE_SUFFIX)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 11,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 104,
                        "startLineNumber": 120,
                        "startColumnNumber": 2,
                        "endLineNumber": 120,
                        "endColumnNumber": 106
                    },
                    "nodeContext": "beanFactory.initializeBean(bean,clazz.getName() + AutowireCapableBeanFactory.ORIGINAL_INSTANCE_SUFFIX);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 12,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 472,
                        "startLineNumber": 115,
                        "startColumnNumber": 77,
                        "endLineNumber": 122,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  Object bean=testContext.getTestInstance();\n  Class<?> clazz=testContext.getTestClass();\n  AutowireCapableBeanFactory beanFactory=testContext.getApplicationContext().getAutowireCapableBeanFactory();\n  beanFactory.autowireBeanProperties(bean,AutowireCapableBeanFactory.AUTOWIRE_NO,false);\n  beanFactory.initializeBean(bean,clazz.getName() + AutowireCapableBeanFactory.ORIGINAL_INSTANCE_SUFFIX);\n  testContext.removeAttribute(REINJECT_DEPENDENCIES_ATTRIBUTE);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 55,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1130,
                        "startLineNumber": 103,
                        "startColumnNumber": 1,
                        "endLineNumber": 122,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "/** \n * Performs dependency injection and bean initialization for the supplied {@link TestContext} as described in{@link #prepareTestInstance(TestContext) prepareTestInstance()}. <p>The  {@link #REINJECT_DEPENDENCIES_ATTRIBUTE} will be subsequently removedfrom the test context, regardless of its value.\n * @param testContext the test context for which dependency injection shouldbe performed (never  {@code null})\n * @throws Exception allows any exception to propagate\n * @see #prepareTestInstance(TestContext)\n * @see #beforeTestMethod(TestContext)\n */\nprotected void injectDependencies(TestContext testContext) throws Exception {\n  Object bean=testContext.getTestInstance();\n  Class<?> clazz=testContext.getTestClass();\n  AutowireCapableBeanFactory beanFactory=testContext.getApplicationContext().getAutowireCapableBeanFactory();\n  beanFactory.autowireBeanProperties(bean,AutowireCapableBeanFactory.AUTOWIRE_NO,false);\n  beanFactory.initializeBean(bean,clazz.getName() + AutowireCapableBeanFactory.ORIGINAL_INSTANCE_SUFFIX);\n  testContext.removeAttribute(REINJECT_DEPENDENCIES_ATTRIBUTE);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 66,
                    "astHeight": 8
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 104,
                    "startLineNumber": 120,
                    "startColumnNumber": 2,
                    "endLineNumber": 120,
                    "endColumnNumber": 106
                },
                "nodeContext": "beanFactory.initializeBean(bean,clazz.getName() + AutowireCapableBeanFactory.ORIGINAL_INSTANCE_SUFFIX);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 12,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "java.lang.Object"
        }
    ],
    "positionList": [
        {
            "charLength": 4,
            "startLineNumber": 119,
            "startColumnNumber": 37,
            "endLineNumber": 119,
            "endColumnNumber": 41
        },
        {
            "charLength": 4,
            "startLineNumber": 120,
            "startColumnNumber": 29,
            "endLineNumber": 120,
            "endColumnNumber": 33
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 2
        }
    ]
}