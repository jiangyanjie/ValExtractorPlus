{
    "id": 138,
    "expression": "new double[n + 1]",
    "projectName": "commons-math",
    "commitID": "54c4ee34af4b366a898176190813152d446095e1",
    "filePath": "src/main/java/org/apache/commons/math4/analysis/interpolation/SplineInterpolator.java",
    "occurrences": 2,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "new double[n + 1]",
            "nodeType": "ArrayCreation",
            "nodePosition": {
                "charLength": 17,
                "startLineNumber": 91,
                "startColumnNumber": 27,
                "endLineNumber": 91,
                "endColumnNumber": 44
            },
            "astNodeNumber": 7,
            "astHeight": 3,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 21,
                        "startLineNumber": 91,
                        "startColumnNumber": 23,
                        "endLineNumber": 91,
                        "endColumnNumber": 44
                    },
                    "nodeContext": "z=new double[n + 1]",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 37,
                        "startLineNumber": 91,
                        "startColumnNumber": 8,
                        "endLineNumber": 91,
                        "endColumnNumber": 45
                    },
                    "nodeContext": "final double[] z=new double[n + 1];\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 14,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1961,
                        "startLineNumber": 69,
                        "startColumnNumber": 45,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 461,
                    "astHeight": 19
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2719,
                        "startLineNumber": 53,
                        "startColumnNumber": 4,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Computes an interpolating function for the data set.\n * @param x the arguments for the interpolation points\n * @param y the values for the interpolation points\n * @return a function which interpolates the data set\n * @throws DimensionMismatchException if {@code x} and {@code y}have different sizes.\n * @throws NonMonotonicSequenceException if {@code x} is not sorted instrict increasing order.\n * @throws NumberIsTooSmallException if the size of {@code x} is smallerthan 3.\n */\n@Override public PolynomialSplineFunction interpolate(double x[],double y[]) throws DimensionMismatchException, NumberIsTooSmallException, NonMonotonicSequenceException {\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 483,
                    "astHeight": 20
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 37,
                    "startLineNumber": 91,
                    "startColumnNumber": 8,
                    "endLineNumber": 91,
                    "endColumnNumber": 45
                },
                "nodeContext": "final double[] z=new double[n + 1];\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 14,
                "astHeight": 5
            },
            "tokenLength": 3,
            "type": "double[]"
        },
        {
            "nodeContext": "new double[n + 1]",
            "nodeType": "ArrayCreation",
            "nodePosition": {
                "charLength": 17,
                "startLineNumber": 102,
                "startColumnNumber": 27,
                "endLineNumber": 102,
                "endColumnNumber": 44
            },
            "astNodeNumber": 7,
            "astHeight": 3,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 21,
                        "startLineNumber": 102,
                        "startColumnNumber": 23,
                        "endLineNumber": 102,
                        "endColumnNumber": 44
                    },
                    "nodeContext": "c=new double[n + 1]",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 37,
                        "startLineNumber": 102,
                        "startColumnNumber": 8,
                        "endLineNumber": 102,
                        "endColumnNumber": 45
                    },
                    "nodeContext": "final double[] c=new double[n + 1];\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 14,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1961,
                        "startLineNumber": 69,
                        "startColumnNumber": 45,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 461,
                    "astHeight": 19
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2719,
                        "startLineNumber": 53,
                        "startColumnNumber": 4,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Computes an interpolating function for the data set.\n * @param x the arguments for the interpolation points\n * @param y the values for the interpolation points\n * @return a function which interpolates the data set\n * @throws DimensionMismatchException if {@code x} and {@code y}have different sizes.\n * @throws NonMonotonicSequenceException if {@code x} is not sorted instrict increasing order.\n * @throws NumberIsTooSmallException if the size of {@code x} is smallerthan 3.\n */\n@Override public PolynomialSplineFunction interpolate(double x[],double y[]) throws DimensionMismatchException, NumberIsTooSmallException, NonMonotonicSequenceException {\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 483,
                    "astHeight": 20
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 37,
                    "startLineNumber": 102,
                    "startColumnNumber": 8,
                    "endLineNumber": 102,
                    "endColumnNumber": 45
                },
                "nodeContext": "final double[] c=new double[n + 1];\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 14,
                "astHeight": 5
            },
            "tokenLength": 3,
            "type": "double[]"
        }
    ],
    "positionList": [
        {
            "charLength": 17,
            "startLineNumber": 91,
            "startColumnNumber": 27,
            "endLineNumber": 91,
            "endColumnNumber": 44
        },
        {
            "charLength": 17,
            "startLineNumber": 102,
            "startColumnNumber": 27,
            "endLineNumber": 102,
            "endColumnNumber": 44
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 2
        }
    ]
}