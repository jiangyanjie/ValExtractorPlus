{
    "id": 1707,
    "expression": "trustedCAs",
    "projectName": "nifi",
    "commitID": "95a3115f9bf075b704bc393bddba235e4a946710",
    "filePath": "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-security/src/main/java/org/apache/nifi/web/security/x509/ocsp/OcspCertificateValidator.java",
    "occurrences": 2,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "trustedCAs",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 10,
                "startLineNumber": 404,
                "startColumnNumber": 12,
                "endLineNumber": 404,
                "endColumnNumber": 22
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 80,
                        "startLineNumber": 404,
                        "startColumnNumber": 12,
                        "endLineNumber": 404,
                        "endColumnNumber": 92
                    },
                    "nodeContext": "trustedCAs.containsKey(responderCertificate.getSubjectX500Principal().getName())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 190,
                        "startLineNumber": 404,
                        "startColumnNumber": 8,
                        "endLineNumber": 406,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (trustedCAs.containsKey(responderCertificate.getSubjectX500Principal().getName())) {\n  return trustedCAs.get(responderCertificate.getSubjectX500Principal().getName());\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 19,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1524,
                        "startLineNumber": 402,
                        "startColumnNumber": 144,
                        "endLineNumber": 432,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (trustedCAs.containsKey(responderCertificate.getSubjectX500Principal().getName())) {\n    return trustedCAs.get(responderCertificate.getSubjectX500Principal().getName());\n  }\n  if (responderCertificate.getIssuerX500Principal().equals(issuerCertificate.getSubjectX500Principal())) {\n    return null;\n  }\n else {\n    return null;\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 35,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2275,
                        "startLineNumber": 393,
                        "startColumnNumber": 4,
                        "endLineNumber": 432,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Gets the trusted responder certificate. The response contains the responder certificate, however we cannot blindly trust it. Instead, we use a configured trusted CA. If the responder certificate is a trusted CA, then we can use it. If the responder certificate is not directly trusted, we still may be able to trust it if it was issued by the same CA that issued the subject certificate. Other various checks may be required (this portion is currently not implemented).\n * @param responderCertificate cert\n * @param issuerCertificate cert\n * @return cert\n */\nprivate X509Certificate getTrustedResponderCertificate(final X509Certificate responderCertificate,final X509Certificate issuerCertificate){\n  if (trustedCAs.containsKey(responderCertificate.getSubjectX500Principal().getName())) {\n    return trustedCAs.get(responderCertificate.getSubjectX500Principal().getName());\n  }\n  if (responderCertificate.getIssuerX500Principal().equals(issuerCertificate.getSubjectX500Principal())) {\n    return null;\n  }\n else {\n    return null;\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 51,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 80,
                    "startLineNumber": 404,
                    "startColumnNumber": 12,
                    "endLineNumber": 404,
                    "endColumnNumber": 92
                },
                "nodeContext": "trustedCAs.containsKey(responderCertificate.getSubjectX500Principal().getName())",
                "nodeType": "MethodInvocation",
                "astNodeNumber": 8,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.util.Map<java.lang.String,java.security.cert.X509Certificate>"
        },
        {
            "nodeContext": "trustedCAs",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 10,
                "startLineNumber": 405,
                "startColumnNumber": 19,
                "endLineNumber": 405,
                "endColumnNumber": 29
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
                    "nodePosition": {
                        "charLength": 72,
                        "startLineNumber": 405,
                        "startColumnNumber": 19,
                        "endLineNumber": 405,
                        "endColumnNumber": 91
                    },
                    "nodeContext": "trustedCAs.get(responderCertificate.getSubjectX500Principal().getName())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 80,
                        "startLineNumber": 405,
                        "startColumnNumber": 12,
                        "endLineNumber": 405,
                        "endColumnNumber": 92
                    },
                    "nodeContext": "return trustedCAs.get(responderCertificate.getSubjectX500Principal().getName());\n",
                    "nodeType": "ReturnStatement",
                    "astNodeNumber": 9,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 104,
                        "startLineNumber": 404,
                        "startColumnNumber": 94,
                        "endLineNumber": 406,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  return trustedCAs.get(responderCertificate.getSubjectX500Principal().getName());\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 10,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 190,
                        "startLineNumber": 404,
                        "startColumnNumber": 8,
                        "endLineNumber": 406,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (trustedCAs.containsKey(responderCertificate.getSubjectX500Principal().getName())) {\n  return trustedCAs.get(responderCertificate.getSubjectX500Principal().getName());\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 19,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1524,
                        "startLineNumber": 402,
                        "startColumnNumber": 144,
                        "endLineNumber": 432,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (trustedCAs.containsKey(responderCertificate.getSubjectX500Principal().getName())) {\n    return trustedCAs.get(responderCertificate.getSubjectX500Principal().getName());\n  }\n  if (responderCertificate.getIssuerX500Principal().equals(issuerCertificate.getSubjectX500Principal())) {\n    return null;\n  }\n else {\n    return null;\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 35,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2275,
                        "startLineNumber": 393,
                        "startColumnNumber": 4,
                        "endLineNumber": 432,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Gets the trusted responder certificate. The response contains the responder certificate, however we cannot blindly trust it. Instead, we use a configured trusted CA. If the responder certificate is a trusted CA, then we can use it. If the responder certificate is not directly trusted, we still may be able to trust it if it was issued by the same CA that issued the subject certificate. Other various checks may be required (this portion is currently not implemented).\n * @param responderCertificate cert\n * @param issuerCertificate cert\n * @return cert\n */\nprivate X509Certificate getTrustedResponderCertificate(final X509Certificate responderCertificate,final X509Certificate issuerCertificate){\n  if (trustedCAs.containsKey(responderCertificate.getSubjectX500Principal().getName())) {\n    return trustedCAs.get(responderCertificate.getSubjectX500Principal().getName());\n  }\n  if (responderCertificate.getIssuerX500Principal().equals(issuerCertificate.getSubjectX500Principal())) {\n    return null;\n  }\n else {\n    return null;\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 51,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 80,
                    "startLineNumber": 405,
                    "startColumnNumber": 12,
                    "endLineNumber": 405,
                    "endColumnNumber": 92
                },
                "nodeContext": "return trustedCAs.get(responderCertificate.getSubjectX500Principal().getName());\n",
                "nodeType": "ReturnStatement",
                "astNodeNumber": 9,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "java.util.Map<java.lang.String,java.security.cert.X509Certificate>"
        }
    ],
    "positionList": [
        {
            "charLength": 10,
            "startLineNumber": 404,
            "startColumnNumber": 12,
            "endLineNumber": 404,
            "endColumnNumber": 22
        },
        {
            "charLength": 10,
            "startLineNumber": 405,
            "startColumnNumber": 19,
            "endLineNumber": 405,
            "endColumnNumber": 29
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 1
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 3
        }
    ]
}