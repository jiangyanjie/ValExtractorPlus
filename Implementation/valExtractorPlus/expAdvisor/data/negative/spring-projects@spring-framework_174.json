{
    "id": 174,
    "expression": "result",
    "projectName": "spring-projects@spring-framework",
    "commitID": "dd2ce20687f14f1a501c54ef75eeb56d1bd501f5",
    "filePath": "spring-core/src/main/java/org/springframework/core/io/support/SpringFactoriesLoader.java",
    "occurrences": 5,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "result",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 6,
                "startLineNumber": 127,
                "startColumnNumber": 6,
                "endLineNumber": 127,
                "endColumnNumber": 12
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 14,
                        "startLineNumber": 127,
                        "startColumnNumber": 6,
                        "endLineNumber": 127,
                        "endColumnNumber": 20
                    },
                    "nodeContext": "result != null",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 43,
                        "startLineNumber": 127,
                        "startColumnNumber": 2,
                        "endLineNumber": 129,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "if (result != null) {\n  return result;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1056,
                        "startLineNumber": 125,
                        "startColumnNumber": 97,
                        "endLineNumber": 154,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  MultiValueMap<String,String> result=cache.get(classLoader);\n  if (result != null) {\n    return result;\n  }\n  try {\n    Enumeration<URL> urls=(classLoader != null ? classLoader.getResources(FACTORIES_RESOURCE_LOCATION) : ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n    result=new LinkedMultiValueMap<>();\n    while (urls.hasMoreElements()) {\n      URL url=urls.nextElement();\n      UrlResource resource=new UrlResource(url);\n      Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n      for (      Map.Entry<?,?> entry : properties.entrySet()) {\n        String factoryClassName=((String)entry.getKey()).trim();\n        for (        String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n          result.add(factoryClassName,factoryName.trim());\n        }\n      }\n    }\n    cache.put(classLoader,result);\n    return result;\n  }\n catch (  IOException ex) {\n    throw new IllegalArgumentException(\"Unable to load factories from location [\" + FACTORIES_RESOURCE_LOCATION + \"]\",ex);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 157,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1152,
                        "startLineNumber": 125,
                        "startColumnNumber": 1,
                        "endLineNumber": 154,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "private static Map<String,List<String>> loadSpringFactories(@Nullable ClassLoader classLoader){\n  MultiValueMap<String,String> result=cache.get(classLoader);\n  if (result != null) {\n    return result;\n  }\n  try {\n    Enumeration<URL> urls=(classLoader != null ? classLoader.getResources(FACTORIES_RESOURCE_LOCATION) : ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n    result=new LinkedMultiValueMap<>();\n    while (urls.hasMoreElements()) {\n      URL url=urls.nextElement();\n      UrlResource resource=new UrlResource(url);\n      Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n      for (      Map.Entry<?,?> entry : properties.entrySet()) {\n        String factoryClassName=((String)entry.getKey()).trim();\n        for (        String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n          result.add(factoryClassName,factoryName.trim());\n        }\n      }\n    }\n    cache.put(classLoader,result);\n    return result;\n  }\n catch (  IOException ex) {\n    throw new IllegalArgumentException(\"Unable to load factories from location [\" + FACTORIES_RESOURCE_LOCATION + \"]\",ex);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 177,
                    "astHeight": 15
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 14,
                    "startLineNumber": 127,
                    "startColumnNumber": 6,
                    "endLineNumber": 127,
                    "endColumnNumber": 20
                },
                "nodeContext": "result != null",
                "nodeType": "InfixExpression",
                "astNodeNumber": 3,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "org.springframework.util.MultiValueMap<java.lang.String,java.lang.String>"
        },
        {
            "nodeContext": "result",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 6,
                "startLineNumber": 128,
                "startColumnNumber": 10,
                "endLineNumber": 128,
                "endColumnNumber": 16
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 14,
                        "startLineNumber": 128,
                        "startColumnNumber": 3,
                        "endLineNumber": 128,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "return result;\n",
                    "nodeType": "ReturnStatement",
                    "astNodeNumber": 2,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 23,
                        "startLineNumber": 127,
                        "startColumnNumber": 22,
                        "endLineNumber": 129,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 3,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 43,
                        "startLineNumber": 127,
                        "startColumnNumber": 2,
                        "endLineNumber": 129,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "if (result != null) {\n  return result;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1056,
                        "startLineNumber": 125,
                        "startColumnNumber": 97,
                        "endLineNumber": 154,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  MultiValueMap<String,String> result=cache.get(classLoader);\n  if (result != null) {\n    return result;\n  }\n  try {\n    Enumeration<URL> urls=(classLoader != null ? classLoader.getResources(FACTORIES_RESOURCE_LOCATION) : ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n    result=new LinkedMultiValueMap<>();\n    while (urls.hasMoreElements()) {\n      URL url=urls.nextElement();\n      UrlResource resource=new UrlResource(url);\n      Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n      for (      Map.Entry<?,?> entry : properties.entrySet()) {\n        String factoryClassName=((String)entry.getKey()).trim();\n        for (        String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n          result.add(factoryClassName,factoryName.trim());\n        }\n      }\n    }\n    cache.put(classLoader,result);\n    return result;\n  }\n catch (  IOException ex) {\n    throw new IllegalArgumentException(\"Unable to load factories from location [\" + FACTORIES_RESOURCE_LOCATION + \"]\",ex);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 157,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1152,
                        "startLineNumber": 125,
                        "startColumnNumber": 1,
                        "endLineNumber": 154,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "private static Map<String,List<String>> loadSpringFactories(@Nullable ClassLoader classLoader){\n  MultiValueMap<String,String> result=cache.get(classLoader);\n  if (result != null) {\n    return result;\n  }\n  try {\n    Enumeration<URL> urls=(classLoader != null ? classLoader.getResources(FACTORIES_RESOURCE_LOCATION) : ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n    result=new LinkedMultiValueMap<>();\n    while (urls.hasMoreElements()) {\n      URL url=urls.nextElement();\n      UrlResource resource=new UrlResource(url);\n      Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n      for (      Map.Entry<?,?> entry : properties.entrySet()) {\n        String factoryClassName=((String)entry.getKey()).trim();\n        for (        String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n          result.add(factoryClassName,factoryName.trim());\n        }\n      }\n    }\n    cache.put(classLoader,result);\n    return result;\n  }\n catch (  IOException ex) {\n    throw new IllegalArgumentException(\"Unable to load factories from location [\" + FACTORIES_RESOURCE_LOCATION + \"]\",ex);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 177,
                    "astHeight": 15
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 14,
                    "startLineNumber": 128,
                    "startColumnNumber": 3,
                    "endLineNumber": 128,
                    "endColumnNumber": 17
                },
                "nodeContext": "return result;\n",
                "nodeType": "ReturnStatement",
                "astNodeNumber": 2,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "org.springframework.util.MultiValueMap<java.lang.String,java.lang.String>"
        },
        {
            "nodeContext": "result",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 6,
                "startLineNumber": 143,
                "startColumnNumber": 6,
                "endLineNumber": 143,
                "endColumnNumber": 12
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 48,
                        "startLineNumber": 143,
                        "startColumnNumber": 6,
                        "endLineNumber": 143,
                        "endColumnNumber": 54
                    },
                    "nodeContext": "result.add(factoryClassName,factoryName.trim())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 49,
                        "startLineNumber": 143,
                        "startColumnNumber": 6,
                        "endLineNumber": 143,
                        "endColumnNumber": 55
                    },
                    "nodeContext": "result.add(factoryClassName,factoryName.trim());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 64,
                        "startLineNumber": 142,
                        "startColumnNumber": 103,
                        "endLineNumber": 144,
                        "endColumnNumber": 6
                    },
                    "nodeContext": "{\n  result.add(factoryClassName,factoryName.trim());\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 9,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 162,
                        "startLineNumber": 142,
                        "startColumnNumber": 5,
                        "endLineNumber": 144,
                        "endColumnNumber": 6
                    },
                    "nodeContext": "for (String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n  result.add(factoryClassName,factoryName.trim());\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 23,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 240,
                        "startLineNumber": 140,
                        "startColumnNumber": 56,
                        "endLineNumber": 145,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  String factoryClassName=((String)entry.getKey()).trim();\n  for (  String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n    result.add(factoryClassName,factoryName.trim());\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 38,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 292,
                        "startLineNumber": 140,
                        "startColumnNumber": 4,
                        "endLineNumber": 145,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "for (Map.Entry<?,?> entry : properties.entrySet()) {\n  String factoryClassName=((String)entry.getKey()).trim();\n  for (  String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n    result.add(factoryClassName,factoryName.trim());\n  }\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 51,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
                    "nodePosition": {
                        "charLength": 462,
                        "startLineNumber": 136,
                        "startColumnNumber": 34,
                        "endLineNumber": 146,
                        "endColumnNumber": 4
                    },
                    "nodeContext": "{\n  URL url=urls.nextElement();\n  UrlResource resource=new UrlResource(url);\n  Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n  for (  Map.Entry<?,?> entry : properties.entrySet()) {\n    String factoryClassName=((String)entry.getKey()).trim();\n    for (    String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n      result.add(factoryClassName,factoryName.trim());\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 78,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 493,
                        "startLineNumber": 136,
                        "startColumnNumber": 3,
                        "endLineNumber": 146,
                        "endColumnNumber": 4
                    },
                    "nodeContext": "while (urls.hasMoreElements()) {\n  URL url=urls.nextElement();\n  UrlResource resource=new UrlResource(url);\n  Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n  for (  Map.Entry<?,?> entry : properties.entrySet()) {\n    String factoryClassName=((String)entry.getKey()).trim();\n    for (    String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n      result.add(factoryClassName,factoryName.trim());\n    }\n  }\n}\n",
                    "nodeType": "WhileStatement",
                    "astNodeNumber": 82,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 774,
                        "startLineNumber": 131,
                        "startColumnNumber": 6,
                        "endLineNumber": 149,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  Enumeration<URL> urls=(classLoader != null ? classLoader.getResources(FACTORIES_RESOURCE_LOCATION) : ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n  result=new LinkedMultiValueMap<>();\n  while (urls.hasMoreElements()) {\n    URL url=urls.nextElement();\n    UrlResource resource=new UrlResource(url);\n    Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n    for (    Map.Entry<?,?> entry : properties.entrySet()) {\n      String factoryClassName=((String)entry.getKey()).trim();\n      for (      String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n        result.add(factoryClassName,factoryName.trim());\n      }\n    }\n  }\n  cache.put(classLoader,result);\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 119,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 937,
                        "startLineNumber": 131,
                        "startColumnNumber": 2,
                        "endLineNumber": 153,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "try {\n  Enumeration<URL> urls=(classLoader != null ? classLoader.getResources(FACTORIES_RESOURCE_LOCATION) : ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n  result=new LinkedMultiValueMap<>();\n  while (urls.hasMoreElements()) {\n    URL url=urls.nextElement();\n    UrlResource resource=new UrlResource(url);\n    Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n    for (    Map.Entry<?,?> entry : properties.entrySet()) {\n      String factoryClassName=((String)entry.getKey()).trim();\n      for (      String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n        result.add(factoryClassName,factoryName.trim());\n      }\n    }\n  }\n  cache.put(classLoader,result);\n  return result;\n}\n catch (IOException ex) {\n  throw new IllegalArgumentException(\"Unable to load factories from location [\" + FACTORIES_RESOURCE_LOCATION + \"]\",ex);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 135,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1056,
                        "startLineNumber": 125,
                        "startColumnNumber": 97,
                        "endLineNumber": 154,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  MultiValueMap<String,String> result=cache.get(classLoader);\n  if (result != null) {\n    return result;\n  }\n  try {\n    Enumeration<URL> urls=(classLoader != null ? classLoader.getResources(FACTORIES_RESOURCE_LOCATION) : ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n    result=new LinkedMultiValueMap<>();\n    while (urls.hasMoreElements()) {\n      URL url=urls.nextElement();\n      UrlResource resource=new UrlResource(url);\n      Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n      for (      Map.Entry<?,?> entry : properties.entrySet()) {\n        String factoryClassName=((String)entry.getKey()).trim();\n        for (        String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n          result.add(factoryClassName,factoryName.trim());\n        }\n      }\n    }\n    cache.put(classLoader,result);\n    return result;\n  }\n catch (  IOException ex) {\n    throw new IllegalArgumentException(\"Unable to load factories from location [\" + FACTORIES_RESOURCE_LOCATION + \"]\",ex);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 157,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1152,
                        "startLineNumber": 125,
                        "startColumnNumber": 1,
                        "endLineNumber": 154,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "private static Map<String,List<String>> loadSpringFactories(@Nullable ClassLoader classLoader){\n  MultiValueMap<String,String> result=cache.get(classLoader);\n  if (result != null) {\n    return result;\n  }\n  try {\n    Enumeration<URL> urls=(classLoader != null ? classLoader.getResources(FACTORIES_RESOURCE_LOCATION) : ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n    result=new LinkedMultiValueMap<>();\n    while (urls.hasMoreElements()) {\n      URL url=urls.nextElement();\n      UrlResource resource=new UrlResource(url);\n      Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n      for (      Map.Entry<?,?> entry : properties.entrySet()) {\n        String factoryClassName=((String)entry.getKey()).trim();\n        for (        String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n          result.add(factoryClassName,factoryName.trim());\n        }\n      }\n    }\n    cache.put(classLoader,result);\n    return result;\n  }\n catch (  IOException ex) {\n    throw new IllegalArgumentException(\"Unable to load factories from location [\" + FACTORIES_RESOURCE_LOCATION + \"]\",ex);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 177,
                    "astHeight": 15
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 49,
                    "startLineNumber": 143,
                    "startColumnNumber": 6,
                    "endLineNumber": 143,
                    "endColumnNumber": 55
                },
                "nodeContext": "result.add(factoryClassName,factoryName.trim());\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 8,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.springframework.util.MultiValueMap<java.lang.String,java.lang.String>"
        },
        {
            "nodeContext": "result",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 6,
                "startLineNumber": 147,
                "startColumnNumber": 26,
                "endLineNumber": 147,
                "endColumnNumber": 32
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 30,
                        "startLineNumber": 147,
                        "startColumnNumber": 3,
                        "endLineNumber": 147,
                        "endColumnNumber": 33
                    },
                    "nodeContext": "cache.put(classLoader,result)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 31,
                        "startLineNumber": 147,
                        "startColumnNumber": 3,
                        "endLineNumber": 147,
                        "endColumnNumber": 34
                    },
                    "nodeContext": "cache.put(classLoader,result);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 774,
                        "startLineNumber": 131,
                        "startColumnNumber": 6,
                        "endLineNumber": 149,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  Enumeration<URL> urls=(classLoader != null ? classLoader.getResources(FACTORIES_RESOURCE_LOCATION) : ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n  result=new LinkedMultiValueMap<>();\n  while (urls.hasMoreElements()) {\n    URL url=urls.nextElement();\n    UrlResource resource=new UrlResource(url);\n    Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n    for (    Map.Entry<?,?> entry : properties.entrySet()) {\n      String factoryClassName=((String)entry.getKey()).trim();\n      for (      String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n        result.add(factoryClassName,factoryName.trim());\n      }\n    }\n  }\n  cache.put(classLoader,result);\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 119,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 937,
                        "startLineNumber": 131,
                        "startColumnNumber": 2,
                        "endLineNumber": 153,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "try {\n  Enumeration<URL> urls=(classLoader != null ? classLoader.getResources(FACTORIES_RESOURCE_LOCATION) : ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n  result=new LinkedMultiValueMap<>();\n  while (urls.hasMoreElements()) {\n    URL url=urls.nextElement();\n    UrlResource resource=new UrlResource(url);\n    Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n    for (    Map.Entry<?,?> entry : properties.entrySet()) {\n      String factoryClassName=((String)entry.getKey()).trim();\n      for (      String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n        result.add(factoryClassName,factoryName.trim());\n      }\n    }\n  }\n  cache.put(classLoader,result);\n  return result;\n}\n catch (IOException ex) {\n  throw new IllegalArgumentException(\"Unable to load factories from location [\" + FACTORIES_RESOURCE_LOCATION + \"]\",ex);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 135,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1056,
                        "startLineNumber": 125,
                        "startColumnNumber": 97,
                        "endLineNumber": 154,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  MultiValueMap<String,String> result=cache.get(classLoader);\n  if (result != null) {\n    return result;\n  }\n  try {\n    Enumeration<URL> urls=(classLoader != null ? classLoader.getResources(FACTORIES_RESOURCE_LOCATION) : ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n    result=new LinkedMultiValueMap<>();\n    while (urls.hasMoreElements()) {\n      URL url=urls.nextElement();\n      UrlResource resource=new UrlResource(url);\n      Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n      for (      Map.Entry<?,?> entry : properties.entrySet()) {\n        String factoryClassName=((String)entry.getKey()).trim();\n        for (        String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n          result.add(factoryClassName,factoryName.trim());\n        }\n      }\n    }\n    cache.put(classLoader,result);\n    return result;\n  }\n catch (  IOException ex) {\n    throw new IllegalArgumentException(\"Unable to load factories from location [\" + FACTORIES_RESOURCE_LOCATION + \"]\",ex);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 157,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1152,
                        "startLineNumber": 125,
                        "startColumnNumber": 1,
                        "endLineNumber": 154,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "private static Map<String,List<String>> loadSpringFactories(@Nullable ClassLoader classLoader){\n  MultiValueMap<String,String> result=cache.get(classLoader);\n  if (result != null) {\n    return result;\n  }\n  try {\n    Enumeration<URL> urls=(classLoader != null ? classLoader.getResources(FACTORIES_RESOURCE_LOCATION) : ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n    result=new LinkedMultiValueMap<>();\n    while (urls.hasMoreElements()) {\n      URL url=urls.nextElement();\n      UrlResource resource=new UrlResource(url);\n      Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n      for (      Map.Entry<?,?> entry : properties.entrySet()) {\n        String factoryClassName=((String)entry.getKey()).trim();\n        for (        String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n          result.add(factoryClassName,factoryName.trim());\n        }\n      }\n    }\n    cache.put(classLoader,result);\n    return result;\n  }\n catch (  IOException ex) {\n    throw new IllegalArgumentException(\"Unable to load factories from location [\" + FACTORIES_RESOURCE_LOCATION + \"]\",ex);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 177,
                    "astHeight": 15
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 31,
                    "startLineNumber": 147,
                    "startColumnNumber": 3,
                    "endLineNumber": 147,
                    "endColumnNumber": 34
                },
                "nodeContext": "cache.put(classLoader,result);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 6,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "org.springframework.util.MultiValueMap<java.lang.String,java.lang.String>"
        },
        {
            "nodeContext": "result",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 6,
                "startLineNumber": 148,
                "startColumnNumber": 10,
                "endLineNumber": 148,
                "endColumnNumber": 16
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 14,
                        "startLineNumber": 148,
                        "startColumnNumber": 3,
                        "endLineNumber": 148,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "return result;\n",
                    "nodeType": "ReturnStatement",
                    "astNodeNumber": 2,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 774,
                        "startLineNumber": 131,
                        "startColumnNumber": 6,
                        "endLineNumber": 149,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  Enumeration<URL> urls=(classLoader != null ? classLoader.getResources(FACTORIES_RESOURCE_LOCATION) : ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n  result=new LinkedMultiValueMap<>();\n  while (urls.hasMoreElements()) {\n    URL url=urls.nextElement();\n    UrlResource resource=new UrlResource(url);\n    Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n    for (    Map.Entry<?,?> entry : properties.entrySet()) {\n      String factoryClassName=((String)entry.getKey()).trim();\n      for (      String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n        result.add(factoryClassName,factoryName.trim());\n      }\n    }\n  }\n  cache.put(classLoader,result);\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 119,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 937,
                        "startLineNumber": 131,
                        "startColumnNumber": 2,
                        "endLineNumber": 153,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "try {\n  Enumeration<URL> urls=(classLoader != null ? classLoader.getResources(FACTORIES_RESOURCE_LOCATION) : ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n  result=new LinkedMultiValueMap<>();\n  while (urls.hasMoreElements()) {\n    URL url=urls.nextElement();\n    UrlResource resource=new UrlResource(url);\n    Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n    for (    Map.Entry<?,?> entry : properties.entrySet()) {\n      String factoryClassName=((String)entry.getKey()).trim();\n      for (      String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n        result.add(factoryClassName,factoryName.trim());\n      }\n    }\n  }\n  cache.put(classLoader,result);\n  return result;\n}\n catch (IOException ex) {\n  throw new IllegalArgumentException(\"Unable to load factories from location [\" + FACTORIES_RESOURCE_LOCATION + \"]\",ex);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 135,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1056,
                        "startLineNumber": 125,
                        "startColumnNumber": 97,
                        "endLineNumber": 154,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  MultiValueMap<String,String> result=cache.get(classLoader);\n  if (result != null) {\n    return result;\n  }\n  try {\n    Enumeration<URL> urls=(classLoader != null ? classLoader.getResources(FACTORIES_RESOURCE_LOCATION) : ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n    result=new LinkedMultiValueMap<>();\n    while (urls.hasMoreElements()) {\n      URL url=urls.nextElement();\n      UrlResource resource=new UrlResource(url);\n      Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n      for (      Map.Entry<?,?> entry : properties.entrySet()) {\n        String factoryClassName=((String)entry.getKey()).trim();\n        for (        String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n          result.add(factoryClassName,factoryName.trim());\n        }\n      }\n    }\n    cache.put(classLoader,result);\n    return result;\n  }\n catch (  IOException ex) {\n    throw new IllegalArgumentException(\"Unable to load factories from location [\" + FACTORIES_RESOURCE_LOCATION + \"]\",ex);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 157,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1152,
                        "startLineNumber": 125,
                        "startColumnNumber": 1,
                        "endLineNumber": 154,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "private static Map<String,List<String>> loadSpringFactories(@Nullable ClassLoader classLoader){\n  MultiValueMap<String,String> result=cache.get(classLoader);\n  if (result != null) {\n    return result;\n  }\n  try {\n    Enumeration<URL> urls=(classLoader != null ? classLoader.getResources(FACTORIES_RESOURCE_LOCATION) : ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n    result=new LinkedMultiValueMap<>();\n    while (urls.hasMoreElements()) {\n      URL url=urls.nextElement();\n      UrlResource resource=new UrlResource(url);\n      Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n      for (      Map.Entry<?,?> entry : properties.entrySet()) {\n        String factoryClassName=((String)entry.getKey()).trim();\n        for (        String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n          result.add(factoryClassName,factoryName.trim());\n        }\n      }\n    }\n    cache.put(classLoader,result);\n    return result;\n  }\n catch (  IOException ex) {\n    throw new IllegalArgumentException(\"Unable to load factories from location [\" + FACTORIES_RESOURCE_LOCATION + \"]\",ex);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 177,
                    "astHeight": 15
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 14,
                    "startLineNumber": 148,
                    "startColumnNumber": 3,
                    "endLineNumber": 148,
                    "endColumnNumber": 17
                },
                "nodeContext": "return result;\n",
                "nodeType": "ReturnStatement",
                "astNodeNumber": 2,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "org.springframework.util.MultiValueMap<java.lang.String,java.lang.String>"
        }
    ],
    "positionList": [
        {
            "charLength": 6,
            "startLineNumber": 127,
            "startColumnNumber": 6,
            "endLineNumber": 127,
            "endColumnNumber": 12
        },
        {
            "charLength": 6,
            "startLineNumber": 128,
            "startColumnNumber": 10,
            "endLineNumber": 128,
            "endColumnNumber": 16
        },
        {
            "charLength": 6,
            "startLineNumber": 143,
            "startColumnNumber": 6,
            "endLineNumber": 143,
            "endColumnNumber": 12
        },
        {
            "charLength": 6,
            "startLineNumber": 147,
            "startColumnNumber": 26,
            "endLineNumber": 147,
            "endColumnNumber": 32
        },
        {
            "charLength": 6,
            "startLineNumber": 148,
            "startColumnNumber": 10,
            "endLineNumber": 148,
            "endColumnNumber": 16
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 1
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 4,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 10
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 10
        },
        {
            "firstKey": 2,
            "secondKey": 3,
            "layout": 8
        },
        {
            "firstKey": 2,
            "secondKey": 4,
            "layout": 8
        },
        {
            "firstKey": 3,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 1,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 3,
            "secondKey": 4,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 4,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 4,
            "secondKey": 2,
            "layout": 1
        },
        {
            "firstKey": 4,
            "secondKey": 3,
            "layout": 1
        }
    ]
}