{
    "id": 116,
    "expression": "classLoader",
    "projectName": "apache@skywalking",
    "commitID": "e0a4c44036b33eadc0add7f91a2e5fd6caca7098",
    "filePath": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/AbstractClassEnhancePluginDefine.java",
    "occurrences": 3,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "classLoader",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 11,
                "startLineNumber": 70,
                "startColumnNumber": 48,
                "endLineNumber": 70,
                "endColumnNumber": 59
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
                    "nodePosition": {
                        "charLength": 39,
                        "startLineNumber": 70,
                        "startColumnNumber": 21,
                        "endLineNumber": 70,
                        "endColumnNumber": 60
                    },
                    "nodeContext": "finder.exist(witnessClass,classLoader)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 40,
                        "startLineNumber": 70,
                        "startColumnNumber": 20,
                        "endLineNumber": 70,
                        "endColumnNumber": 60
                    },
                    "nodeContext": "!finder.exist(witnessClass,classLoader)",
                    "nodeType": "PrefixExpression",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 283,
                        "startLineNumber": 70,
                        "startColumnNumber": 16,
                        "endLineNumber": 73,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (!finder.exist(witnessClass,classLoader)) {\n  LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness class {} is not existed.\",transformClassName,interceptorDefineClassName,witnessClass);\n  return null;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 18,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 315,
                        "startLineNumber": 69,
                        "startColumnNumber": 55,
                        "endLineNumber": 74,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  if (!finder.exist(witnessClass,classLoader)) {\n    LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness class {} is not existed.\",transformClassName,interceptorDefineClassName,witnessClass);\n    return null;\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 19,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 358,
                        "startLineNumber": 69,
                        "startColumnNumber": 12,
                        "endLineNumber": 74,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "for (String witnessClass : witnessClasses) {\n  if (!finder.exist(witnessClass,classLoader)) {\n    LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness class {} is not existed.\",transformClassName,interceptorDefineClassName,witnessClass);\n    return null;\n  }\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 25,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 382,
                        "startLineNumber": 68,
                        "startColumnNumber": 36,
                        "endLineNumber": 75,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  for (  String witnessClass : witnessClasses) {\n    if (!finder.exist(witnessClass,classLoader)) {\n      LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness class {} is not existed.\",transformClassName,interceptorDefineClassName,witnessClass);\n      return null;\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 26,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 410,
                        "startLineNumber": 68,
                        "startColumnNumber": 8,
                        "endLineNumber": 75,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (witnessClasses != null) {\n  for (  String witnessClass : witnessClasses) {\n    if (!finder.exist(witnessClass,classLoader)) {\n      LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness class {} is not existed.\",transformClassName,interceptorDefineClassName,witnessClass);\n      return null;\n    }\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 30,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1945,
                        "startLineNumber": 54,
                        "startColumnNumber": 80,
                        "endLineNumber": 95,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  String interceptorDefineClassName=this.getClass().getName();\n  String transformClassName=typeDescription.getTypeName();\n  if (StringUtil.isEmpty(transformClassName)) {\n    LOGGER.warn(\"classname of being intercepted is not defined by {}.\",interceptorDefineClassName);\n    return null;\n  }\n  LOGGER.debug(\"prepare to enhance class {} by {}.\",transformClassName,interceptorDefineClassName);\n  WitnessFinder finder=WitnessFinder.INSTANCE;\n  String[] witnessClasses=witnessClasses();\n  if (witnessClasses != null) {\n    for (    String witnessClass : witnessClasses) {\n      if (!finder.exist(witnessClass,classLoader)) {\n        LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness class {} is not existed.\",transformClassName,interceptorDefineClassName,witnessClass);\n        return null;\n      }\n    }\n  }\n  List<WitnessMethod> witnessMethods=witnessMethods();\n  if (!CollectionUtil.isEmpty(witnessMethods)) {\n    for (    WitnessMethod witnessMethod : witnessMethods) {\n      if (!finder.exist(witnessMethod,classLoader)) {\n        LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness method {} is not existed.\",transformClassName,interceptorDefineClassName,witnessMethod);\n        return null;\n      }\n    }\n  }\n  DynamicType.Builder<?> newClassBuilder=this.enhance(typeDescription,builder,classLoader,context);\n  context.initializationStageCompleted();\n  LOGGER.debug(\"enhance class {} by {} completely.\",transformClassName,interceptorDefineClassName);\n  return newClassBuilder;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 158,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2531,
                        "startLineNumber": 44,
                        "startColumnNumber": 4,
                        "endLineNumber": 95,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Main entrance of enhancing the class.\n * @param typeDescription target class description.\n * @param builder         byte-buddy's builder to manipulate target class's bytecode.\n * @param classLoader     load the given transformClass\n * @return the new builder, or <code>null</code> if not be enhanced.\n * @throws PluginException when set builder failure.\n */\npublic DynamicType.Builder<?> define(TypeDescription typeDescription,DynamicType.Builder<?> builder,ClassLoader classLoader,EnhanceContext context) throws PluginException {\n  String interceptorDefineClassName=this.getClass().getName();\n  String transformClassName=typeDescription.getTypeName();\n  if (StringUtil.isEmpty(transformClassName)) {\n    LOGGER.warn(\"classname of being intercepted is not defined by {}.\",interceptorDefineClassName);\n    return null;\n  }\n  LOGGER.debug(\"prepare to enhance class {} by {}.\",transformClassName,interceptorDefineClassName);\n  WitnessFinder finder=WitnessFinder.INSTANCE;\n  String[] witnessClasses=witnessClasses();\n  if (witnessClasses != null) {\n    for (    String witnessClass : witnessClasses) {\n      if (!finder.exist(witnessClass,classLoader)) {\n        LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness class {} is not existed.\",transformClassName,interceptorDefineClassName,witnessClass);\n        return null;\n      }\n    }\n  }\n  List<WitnessMethod> witnessMethods=witnessMethods();\n  if (!CollectionUtil.isEmpty(witnessMethods)) {\n    for (    WitnessMethod witnessMethod : witnessMethods) {\n      if (!finder.exist(witnessMethod,classLoader)) {\n        LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness method {} is not existed.\",transformClassName,interceptorDefineClassName,witnessMethod);\n        return null;\n      }\n    }\n  }\n  DynamicType.Builder<?> newClassBuilder=this.enhance(typeDescription,builder,classLoader,context);\n  context.initializationStageCompleted();\n  LOGGER.debug(\"enhance class {} by {} completely.\",transformClassName,interceptorDefineClassName);\n  return newClassBuilder;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 190,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 40,
                    "startLineNumber": 70,
                    "startColumnNumber": 20,
                    "endLineNumber": 70,
                    "endColumnNumber": 60
                },
                "nodeContext": "!finder.exist(witnessClass,classLoader)",
                "nodeType": "PrefixExpression",
                "astNodeNumber": 6,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "java.lang.ClassLoader"
        },
        {
            "nodeContext": "classLoader",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 11,
                "startLineNumber": 79,
                "startColumnNumber": 49,
                "endLineNumber": 79,
                "endColumnNumber": 60
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
                    "nodePosition": {
                        "charLength": 40,
                        "startLineNumber": 79,
                        "startColumnNumber": 21,
                        "endLineNumber": 79,
                        "endColumnNumber": 61
                    },
                    "nodeContext": "finder.exist(witnessMethod,classLoader)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 41,
                        "startLineNumber": 79,
                        "startColumnNumber": 20,
                        "endLineNumber": 79,
                        "endColumnNumber": 61
                    },
                    "nodeContext": "!finder.exist(witnessMethod,classLoader)",
                    "nodeType": "PrefixExpression",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 286,
                        "startLineNumber": 79,
                        "startColumnNumber": 16,
                        "endLineNumber": 82,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (!finder.exist(witnessMethod,classLoader)) {\n  LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness method {} is not existed.\",transformClassName,interceptorDefineClassName,witnessMethod);\n  return null;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 18,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 318,
                        "startLineNumber": 78,
                        "startColumnNumber": 63,
                        "endLineNumber": 83,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  if (!finder.exist(witnessMethod,classLoader)) {\n    LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness method {} is not existed.\",transformClassName,interceptorDefineClassName,witnessMethod);\n    return null;\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 19,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 369,
                        "startLineNumber": 78,
                        "startColumnNumber": 12,
                        "endLineNumber": 83,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "for (WitnessMethod witnessMethod : witnessMethods) {\n  if (!finder.exist(witnessMethod,classLoader)) {\n    LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness method {} is not existed.\",transformClassName,interceptorDefineClassName,witnessMethod);\n    return null;\n  }\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 25,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 393,
                        "startLineNumber": 77,
                        "startColumnNumber": 53,
                        "endLineNumber": 84,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  for (  WitnessMethod witnessMethod : witnessMethods) {\n    if (!finder.exist(witnessMethod,classLoader)) {\n      LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness method {} is not existed.\",transformClassName,interceptorDefineClassName,witnessMethod);\n      return null;\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 26,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 438,
                        "startLineNumber": 77,
                        "startColumnNumber": 8,
                        "endLineNumber": 84,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (!CollectionUtil.isEmpty(witnessMethods)) {\n  for (  WitnessMethod witnessMethod : witnessMethods) {\n    if (!finder.exist(witnessMethod,classLoader)) {\n      LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness method {} is not existed.\",transformClassName,interceptorDefineClassName,witnessMethod);\n      return null;\n    }\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 32,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1945,
                        "startLineNumber": 54,
                        "startColumnNumber": 80,
                        "endLineNumber": 95,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  String interceptorDefineClassName=this.getClass().getName();\n  String transformClassName=typeDescription.getTypeName();\n  if (StringUtil.isEmpty(transformClassName)) {\n    LOGGER.warn(\"classname of being intercepted is not defined by {}.\",interceptorDefineClassName);\n    return null;\n  }\n  LOGGER.debug(\"prepare to enhance class {} by {}.\",transformClassName,interceptorDefineClassName);\n  WitnessFinder finder=WitnessFinder.INSTANCE;\n  String[] witnessClasses=witnessClasses();\n  if (witnessClasses != null) {\n    for (    String witnessClass : witnessClasses) {\n      if (!finder.exist(witnessClass,classLoader)) {\n        LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness class {} is not existed.\",transformClassName,interceptorDefineClassName,witnessClass);\n        return null;\n      }\n    }\n  }\n  List<WitnessMethod> witnessMethods=witnessMethods();\n  if (!CollectionUtil.isEmpty(witnessMethods)) {\n    for (    WitnessMethod witnessMethod : witnessMethods) {\n      if (!finder.exist(witnessMethod,classLoader)) {\n        LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness method {} is not existed.\",transformClassName,interceptorDefineClassName,witnessMethod);\n        return null;\n      }\n    }\n  }\n  DynamicType.Builder<?> newClassBuilder=this.enhance(typeDescription,builder,classLoader,context);\n  context.initializationStageCompleted();\n  LOGGER.debug(\"enhance class {} by {} completely.\",transformClassName,interceptorDefineClassName);\n  return newClassBuilder;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 158,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2531,
                        "startLineNumber": 44,
                        "startColumnNumber": 4,
                        "endLineNumber": 95,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Main entrance of enhancing the class.\n * @param typeDescription target class description.\n * @param builder         byte-buddy's builder to manipulate target class's bytecode.\n * @param classLoader     load the given transformClass\n * @return the new builder, or <code>null</code> if not be enhanced.\n * @throws PluginException when set builder failure.\n */\npublic DynamicType.Builder<?> define(TypeDescription typeDescription,DynamicType.Builder<?> builder,ClassLoader classLoader,EnhanceContext context) throws PluginException {\n  String interceptorDefineClassName=this.getClass().getName();\n  String transformClassName=typeDescription.getTypeName();\n  if (StringUtil.isEmpty(transformClassName)) {\n    LOGGER.warn(\"classname of being intercepted is not defined by {}.\",interceptorDefineClassName);\n    return null;\n  }\n  LOGGER.debug(\"prepare to enhance class {} by {}.\",transformClassName,interceptorDefineClassName);\n  WitnessFinder finder=WitnessFinder.INSTANCE;\n  String[] witnessClasses=witnessClasses();\n  if (witnessClasses != null) {\n    for (    String witnessClass : witnessClasses) {\n      if (!finder.exist(witnessClass,classLoader)) {\n        LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness class {} is not existed.\",transformClassName,interceptorDefineClassName,witnessClass);\n        return null;\n      }\n    }\n  }\n  List<WitnessMethod> witnessMethods=witnessMethods();\n  if (!CollectionUtil.isEmpty(witnessMethods)) {\n    for (    WitnessMethod witnessMethod : witnessMethods) {\n      if (!finder.exist(witnessMethod,classLoader)) {\n        LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness method {} is not existed.\",transformClassName,interceptorDefineClassName,witnessMethod);\n        return null;\n      }\n    }\n  }\n  DynamicType.Builder<?> newClassBuilder=this.enhance(typeDescription,builder,classLoader,context);\n  context.initializationStageCompleted();\n  LOGGER.debug(\"enhance class {} by {} completely.\",transformClassName,interceptorDefineClassName);\n  return newClassBuilder;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 190,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 41,
                    "startLineNumber": 79,
                    "startColumnNumber": 20,
                    "endLineNumber": 79,
                    "endColumnNumber": 61
                },
                "nodeContext": "!finder.exist(witnessMethod,classLoader)",
                "nodeType": "PrefixExpression",
                "astNodeNumber": 6,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "java.lang.ClassLoader"
        },
        {
            "nodeContext": "classLoader",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 11,
                "startLineNumber": 89,
                "startColumnNumber": 88,
                "endLineNumber": 89,
                "endColumnNumber": 99
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 60,
                        "startLineNumber": 89,
                        "startColumnNumber": 49,
                        "endLineNumber": 89,
                        "endColumnNumber": 109
                    },
                    "nodeContext": "this.enhance(typeDescription,builder,classLoader,context)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 7,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 78,
                        "startLineNumber": 89,
                        "startColumnNumber": 31,
                        "endLineNumber": 89,
                        "endColumnNumber": 109
                    },
                    "nodeContext": "newClassBuilder=this.enhance(typeDescription,builder,classLoader,context)",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 9,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 102,
                        "startLineNumber": 89,
                        "startColumnNumber": 8,
                        "endLineNumber": 89,
                        "endColumnNumber": 110
                    },
                    "nodeContext": "DynamicType.Builder<?> newClassBuilder=this.enhance(typeDescription,builder,classLoader,context);\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 16,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1945,
                        "startLineNumber": 54,
                        "startColumnNumber": 80,
                        "endLineNumber": 95,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  String interceptorDefineClassName=this.getClass().getName();\n  String transformClassName=typeDescription.getTypeName();\n  if (StringUtil.isEmpty(transformClassName)) {\n    LOGGER.warn(\"classname of being intercepted is not defined by {}.\",interceptorDefineClassName);\n    return null;\n  }\n  LOGGER.debug(\"prepare to enhance class {} by {}.\",transformClassName,interceptorDefineClassName);\n  WitnessFinder finder=WitnessFinder.INSTANCE;\n  String[] witnessClasses=witnessClasses();\n  if (witnessClasses != null) {\n    for (    String witnessClass : witnessClasses) {\n      if (!finder.exist(witnessClass,classLoader)) {\n        LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness class {} is not existed.\",transformClassName,interceptorDefineClassName,witnessClass);\n        return null;\n      }\n    }\n  }\n  List<WitnessMethod> witnessMethods=witnessMethods();\n  if (!CollectionUtil.isEmpty(witnessMethods)) {\n    for (    WitnessMethod witnessMethod : witnessMethods) {\n      if (!finder.exist(witnessMethod,classLoader)) {\n        LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness method {} is not existed.\",transformClassName,interceptorDefineClassName,witnessMethod);\n        return null;\n      }\n    }\n  }\n  DynamicType.Builder<?> newClassBuilder=this.enhance(typeDescription,builder,classLoader,context);\n  context.initializationStageCompleted();\n  LOGGER.debug(\"enhance class {} by {} completely.\",transformClassName,interceptorDefineClassName);\n  return newClassBuilder;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 158,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2531,
                        "startLineNumber": 44,
                        "startColumnNumber": 4,
                        "endLineNumber": 95,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Main entrance of enhancing the class.\n * @param typeDescription target class description.\n * @param builder         byte-buddy's builder to manipulate target class's bytecode.\n * @param classLoader     load the given transformClass\n * @return the new builder, or <code>null</code> if not be enhanced.\n * @throws PluginException when set builder failure.\n */\npublic DynamicType.Builder<?> define(TypeDescription typeDescription,DynamicType.Builder<?> builder,ClassLoader classLoader,EnhanceContext context) throws PluginException {\n  String interceptorDefineClassName=this.getClass().getName();\n  String transformClassName=typeDescription.getTypeName();\n  if (StringUtil.isEmpty(transformClassName)) {\n    LOGGER.warn(\"classname of being intercepted is not defined by {}.\",interceptorDefineClassName);\n    return null;\n  }\n  LOGGER.debug(\"prepare to enhance class {} by {}.\",transformClassName,interceptorDefineClassName);\n  WitnessFinder finder=WitnessFinder.INSTANCE;\n  String[] witnessClasses=witnessClasses();\n  if (witnessClasses != null) {\n    for (    String witnessClass : witnessClasses) {\n      if (!finder.exist(witnessClass,classLoader)) {\n        LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness class {} is not existed.\",transformClassName,interceptorDefineClassName,witnessClass);\n        return null;\n      }\n    }\n  }\n  List<WitnessMethod> witnessMethods=witnessMethods();\n  if (!CollectionUtil.isEmpty(witnessMethods)) {\n    for (    WitnessMethod witnessMethod : witnessMethods) {\n      if (!finder.exist(witnessMethod,classLoader)) {\n        LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness method {} is not existed.\",transformClassName,interceptorDefineClassName,witnessMethod);\n        return null;\n      }\n    }\n  }\n  DynamicType.Builder<?> newClassBuilder=this.enhance(typeDescription,builder,classLoader,context);\n  context.initializationStageCompleted();\n  LOGGER.debug(\"enhance class {} by {} completely.\",transformClassName,interceptorDefineClassName);\n  return newClassBuilder;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 190,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 102,
                    "startLineNumber": 89,
                    "startColumnNumber": 8,
                    "endLineNumber": 89,
                    "endColumnNumber": 110
                },
                "nodeContext": "DynamicType.Builder<?> newClassBuilder=this.enhance(typeDescription,builder,classLoader,context);\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 16,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "java.lang.ClassLoader"
        }
    ],
    "positionList": [
        {
            "charLength": 11,
            "startLineNumber": 70,
            "startColumnNumber": 48,
            "endLineNumber": 70,
            "endColumnNumber": 59
        },
        {
            "charLength": 11,
            "startLineNumber": 79,
            "startColumnNumber": 49,
            "endLineNumber": 79,
            "endColumnNumber": 60
        },
        {
            "charLength": 11,
            "startLineNumber": 89,
            "startColumnNumber": 88,
            "endLineNumber": 89,
            "endColumnNumber": 99
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 7
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 7
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 7
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 7
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 3
        }
    ]
}