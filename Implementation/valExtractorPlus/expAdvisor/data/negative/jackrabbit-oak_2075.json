{
    "id": 2075,
    "expression": "new RuntimeException(e)",
    "projectName": "jackrabbit-oak",
    "commitID": "fdd0ed2bafe0cb253c887ccb78cd981a70f6810f",
    "filePath": "oak-core/src/main/java/org/apache/jackrabbit/oak/security/user/UserInitializer.java",
    "occurrences": 3,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "new RuntimeException(e)",
            "nodeType": "ClassInstanceCreation",
            "nodePosition": {
                "charLength": 23,
                "startLineNumber": 97,
                "startColumnNumber": 18,
                "endLineNumber": 97,
                "endColumnNumber": 41
            },
            "astNodeNumber": 4,
            "astHeight": 3,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 30,
                        "startLineNumber": 97,
                        "startColumnNumber": 12,
                        "endLineNumber": 97,
                        "endColumnNumber": 42
                    },
                    "nodeContext": "throw new RuntimeException(e);\n",
                    "nodeType": "ThrowStatement",
                    "astNodeNumber": 5,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
                    "nodePosition": {
                        "charLength": 54,
                        "startLineNumber": 96,
                        "startColumnNumber": 42,
                        "endLineNumber": 98,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  throw new RuntimeException(e);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 6,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
                    "nodePosition": {
                        "charLength": 86,
                        "startLineNumber": 96,
                        "startColumnNumber": 10,
                        "endLineNumber": 98,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "catch (CommitFailedException e) {\n  throw new RuntimeException(e);\n}\n",
                    "nodeType": "CatchClause",
                    "astNodeNumber": 11,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 148,
                        "startLineNumber": 94,
                        "startColumnNumber": 8,
                        "endLineNumber": 98,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "try {\n  branch.merge(EmptyHook.INSTANCE);\n}\n catch (CommitFailedException e) {\n  throw new RuntimeException(e);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 20,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2602,
                        "startLineNumber": 90,
                        "startColumnNumber": 55,
                        "endLineNumber": 142,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  MemoryNodeStore store=new MemoryNodeStore();\n  NodeStoreBranch branch=store.branch();\n  branch.setRoot(workspaceRoot);\n  try {\n    branch.merge(EmptyHook.INSTANCE);\n  }\n catch (  CommitFailedException e) {\n    throw new RuntimeException(e);\n  }\n  Root root=new RootImpl(store,commitHook,workspaceName,SystemSubject.INSTANCE,new OpenSecurityProvider(),indexProvider);\n  UserConfiguration userConfiguration=securityProvider.getUserConfiguration();\n  UserManager userManager=userConfiguration.getUserManager(root,NamePathMapper.DEFAULT);\n  String errorMsg=\"Failed to initialize user content.\";\n  try {\n    NodeUtil rootTree=checkNotNull(new NodeUtil(root.getTree(\"/\")));\n    NodeUtil index=rootTree.getOrAddChild(IndexConstants.INDEX_DEFINITIONS_NAME,JcrConstants.NT_UNSTRUCTURED);\n    if (!index.hasChild(\"authorizableId\")) {\n      IndexUtils.createIndexDefinition(index,\"authorizableId\",true,new String[]{REP_AUTHORIZABLE_ID},null);\n    }\n    if (!index.hasChild(\"principalName\")) {\n      IndexUtils.createIndexDefinition(index,\"principalName\",true,new String[]{REP_PRINCIPAL_NAME},new String[]{NT_REP_GROUP,NT_REP_USER,NT_REP_AUTHORIZABLE});\n    }\n    if (!index.hasChild(\"members\")) {\n      IndexUtils.createIndexDefinition(index,\"members\",false,new String[]{UserConstants.REP_MEMBERS},null);\n    }\n    String adminId=userConfiguration.getConfigurationParameters().getConfigValue(PARAM_ADMIN_ID,DEFAULT_ADMIN_ID);\n    if (userManager.getAuthorizable(adminId) == null) {\n      userManager.createUser(adminId,adminId);\n    }\n    String anonymousId=userConfiguration.getConfigurationParameters().getConfigValue(PARAM_ANONYMOUS_ID,DEFAULT_ANONYMOUS_ID);\n    if (userManager.getAuthorizable(anonymousId) == null) {\n      userManager.createUser(anonymousId,null);\n    }\n    if (root.hasPendingChanges()) {\n      root.commit();\n    }\n  }\n catch (  RepositoryException e) {\n    log.error(errorMsg,e);\n    throw new RuntimeException(e);\n  }\ncatch (  CommitFailedException e) {\n    log.error(errorMsg,e);\n    throw new RuntimeException(e);\n  }\n  return store.getRoot();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 291,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2825,
                        "startLineNumber": 86,
                        "startColumnNumber": 4,
                        "endLineNumber": 142,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Nonnull @Override public NodeState initialize(NodeState workspaceRoot,String workspaceName,QueryIndexProvider indexProvider,CommitHook commitHook){\n  MemoryNodeStore store=new MemoryNodeStore();\n  NodeStoreBranch branch=store.branch();\n  branch.setRoot(workspaceRoot);\n  try {\n    branch.merge(EmptyHook.INSTANCE);\n  }\n catch (  CommitFailedException e) {\n    throw new RuntimeException(e);\n  }\n  Root root=new RootImpl(store,commitHook,workspaceName,SystemSubject.INSTANCE,new OpenSecurityProvider(),indexProvider);\n  UserConfiguration userConfiguration=securityProvider.getUserConfiguration();\n  UserManager userManager=userConfiguration.getUserManager(root,NamePathMapper.DEFAULT);\n  String errorMsg=\"Failed to initialize user content.\";\n  try {\n    NodeUtil rootTree=checkNotNull(new NodeUtil(root.getTree(\"/\")));\n    NodeUtil index=rootTree.getOrAddChild(IndexConstants.INDEX_DEFINITIONS_NAME,JcrConstants.NT_UNSTRUCTURED);\n    if (!index.hasChild(\"authorizableId\")) {\n      IndexUtils.createIndexDefinition(index,\"authorizableId\",true,new String[]{REP_AUTHORIZABLE_ID},null);\n    }\n    if (!index.hasChild(\"principalName\")) {\n      IndexUtils.createIndexDefinition(index,\"principalName\",true,new String[]{REP_PRINCIPAL_NAME},new String[]{NT_REP_GROUP,NT_REP_USER,NT_REP_AUTHORIZABLE});\n    }\n    if (!index.hasChild(\"members\")) {\n      IndexUtils.createIndexDefinition(index,\"members\",false,new String[]{UserConstants.REP_MEMBERS},null);\n    }\n    String adminId=userConfiguration.getConfigurationParameters().getConfigValue(PARAM_ADMIN_ID,DEFAULT_ADMIN_ID);\n    if (userManager.getAuthorizable(adminId) == null) {\n      userManager.createUser(adminId,adminId);\n    }\n    String anonymousId=userConfiguration.getConfigurationParameters().getConfigValue(PARAM_ANONYMOUS_ID,DEFAULT_ANONYMOUS_ID);\n    if (userManager.getAuthorizable(anonymousId) == null) {\n      userManager.createUser(anonymousId,null);\n    }\n    if (root.hasPendingChanges()) {\n      root.commit();\n    }\n  }\n catch (  RepositoryException e) {\n    log.error(errorMsg,e);\n    throw new RuntimeException(e);\n  }\ncatch (  CommitFailedException e) {\n    log.error(errorMsg,e);\n    throw new RuntimeException(e);\n  }\n  return store.getRoot();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 316,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 30,
                    "startLineNumber": 97,
                    "startColumnNumber": 12,
                    "endLineNumber": 97,
                    "endColumnNumber": 42
                },
                "nodeContext": "throw new RuntimeException(e);\n",
                "nodeType": "ThrowStatement",
                "astNodeNumber": 5,
                "astHeight": 4
            },
            "tokenLength": 2,
            "type": "java.lang.RuntimeException"
        },
        {
            "nodeContext": "new RuntimeException(e)",
            "nodeType": "ClassInstanceCreation",
            "nodePosition": {
                "charLength": 23,
                "startLineNumber": 136,
                "startColumnNumber": 18,
                "endLineNumber": 136,
                "endColumnNumber": 41
            },
            "astNodeNumber": 4,
            "astHeight": 3,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 30,
                        "startLineNumber": 136,
                        "startColumnNumber": 12,
                        "endLineNumber": 136,
                        "endColumnNumber": 42
                    },
                    "nodeContext": "throw new RuntimeException(e);\n",
                    "nodeType": "ThrowStatement",
                    "astNodeNumber": 5,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
                    "nodePosition": {
                        "charLength": 90,
                        "startLineNumber": 134,
                        "startColumnNumber": 40,
                        "endLineNumber": 137,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  log.error(errorMsg,e);\n  throw new RuntimeException(e);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 12,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
                    "nodePosition": {
                        "charLength": 120,
                        "startLineNumber": 134,
                        "startColumnNumber": 10,
                        "endLineNumber": 137,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "catch (RepositoryException e) {\n  log.error(errorMsg,e);\n  throw new RuntimeException(e);\n}\n",
                    "nodeType": "CatchClause",
                    "astNodeNumber": 17,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1841,
                        "startLineNumber": 106,
                        "startColumnNumber": 8,
                        "endLineNumber": 140,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "try {\n  NodeUtil rootTree=checkNotNull(new NodeUtil(root.getTree(\"/\")));\n  NodeUtil index=rootTree.getOrAddChild(IndexConstants.INDEX_DEFINITIONS_NAME,JcrConstants.NT_UNSTRUCTURED);\n  if (!index.hasChild(\"authorizableId\")) {\n    IndexUtils.createIndexDefinition(index,\"authorizableId\",true,new String[]{REP_AUTHORIZABLE_ID},null);\n  }\n  if (!index.hasChild(\"principalName\")) {\n    IndexUtils.createIndexDefinition(index,\"principalName\",true,new String[]{REP_PRINCIPAL_NAME},new String[]{NT_REP_GROUP,NT_REP_USER,NT_REP_AUTHORIZABLE});\n  }\n  if (!index.hasChild(\"members\")) {\n    IndexUtils.createIndexDefinition(index,\"members\",false,new String[]{UserConstants.REP_MEMBERS},null);\n  }\n  String adminId=userConfiguration.getConfigurationParameters().getConfigValue(PARAM_ADMIN_ID,DEFAULT_ADMIN_ID);\n  if (userManager.getAuthorizable(adminId) == null) {\n    userManager.createUser(adminId,adminId);\n  }\n  String anonymousId=userConfiguration.getConfigurationParameters().getConfigValue(PARAM_ANONYMOUS_ID,DEFAULT_ANONYMOUS_ID);\n  if (userManager.getAuthorizable(anonymousId) == null) {\n    userManager.createUser(anonymousId,null);\n  }\n  if (root.hasPendingChanges()) {\n    root.commit();\n  }\n}\n catch (RepositoryException e) {\n  log.error(errorMsg,e);\n  throw new RuntimeException(e);\n}\ncatch (CommitFailedException e) {\n  log.error(errorMsg,e);\n  throw new RuntimeException(e);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 201,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2602,
                        "startLineNumber": 90,
                        "startColumnNumber": 55,
                        "endLineNumber": 142,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  MemoryNodeStore store=new MemoryNodeStore();\n  NodeStoreBranch branch=store.branch();\n  branch.setRoot(workspaceRoot);\n  try {\n    branch.merge(EmptyHook.INSTANCE);\n  }\n catch (  CommitFailedException e) {\n    throw new RuntimeException(e);\n  }\n  Root root=new RootImpl(store,commitHook,workspaceName,SystemSubject.INSTANCE,new OpenSecurityProvider(),indexProvider);\n  UserConfiguration userConfiguration=securityProvider.getUserConfiguration();\n  UserManager userManager=userConfiguration.getUserManager(root,NamePathMapper.DEFAULT);\n  String errorMsg=\"Failed to initialize user content.\";\n  try {\n    NodeUtil rootTree=checkNotNull(new NodeUtil(root.getTree(\"/\")));\n    NodeUtil index=rootTree.getOrAddChild(IndexConstants.INDEX_DEFINITIONS_NAME,JcrConstants.NT_UNSTRUCTURED);\n    if (!index.hasChild(\"authorizableId\")) {\n      IndexUtils.createIndexDefinition(index,\"authorizableId\",true,new String[]{REP_AUTHORIZABLE_ID},null);\n    }\n    if (!index.hasChild(\"principalName\")) {\n      IndexUtils.createIndexDefinition(index,\"principalName\",true,new String[]{REP_PRINCIPAL_NAME},new String[]{NT_REP_GROUP,NT_REP_USER,NT_REP_AUTHORIZABLE});\n    }\n    if (!index.hasChild(\"members\")) {\n      IndexUtils.createIndexDefinition(index,\"members\",false,new String[]{UserConstants.REP_MEMBERS},null);\n    }\n    String adminId=userConfiguration.getConfigurationParameters().getConfigValue(PARAM_ADMIN_ID,DEFAULT_ADMIN_ID);\n    if (userManager.getAuthorizable(adminId) == null) {\n      userManager.createUser(adminId,adminId);\n    }\n    String anonymousId=userConfiguration.getConfigurationParameters().getConfigValue(PARAM_ANONYMOUS_ID,DEFAULT_ANONYMOUS_ID);\n    if (userManager.getAuthorizable(anonymousId) == null) {\n      userManager.createUser(anonymousId,null);\n    }\n    if (root.hasPendingChanges()) {\n      root.commit();\n    }\n  }\n catch (  RepositoryException e) {\n    log.error(errorMsg,e);\n    throw new RuntimeException(e);\n  }\ncatch (  CommitFailedException e) {\n    log.error(errorMsg,e);\n    throw new RuntimeException(e);\n  }\n  return store.getRoot();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 291,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2825,
                        "startLineNumber": 86,
                        "startColumnNumber": 4,
                        "endLineNumber": 142,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Nonnull @Override public NodeState initialize(NodeState workspaceRoot,String workspaceName,QueryIndexProvider indexProvider,CommitHook commitHook){\n  MemoryNodeStore store=new MemoryNodeStore();\n  NodeStoreBranch branch=store.branch();\n  branch.setRoot(workspaceRoot);\n  try {\n    branch.merge(EmptyHook.INSTANCE);\n  }\n catch (  CommitFailedException e) {\n    throw new RuntimeException(e);\n  }\n  Root root=new RootImpl(store,commitHook,workspaceName,SystemSubject.INSTANCE,new OpenSecurityProvider(),indexProvider);\n  UserConfiguration userConfiguration=securityProvider.getUserConfiguration();\n  UserManager userManager=userConfiguration.getUserManager(root,NamePathMapper.DEFAULT);\n  String errorMsg=\"Failed to initialize user content.\";\n  try {\n    NodeUtil rootTree=checkNotNull(new NodeUtil(root.getTree(\"/\")));\n    NodeUtil index=rootTree.getOrAddChild(IndexConstants.INDEX_DEFINITIONS_NAME,JcrConstants.NT_UNSTRUCTURED);\n    if (!index.hasChild(\"authorizableId\")) {\n      IndexUtils.createIndexDefinition(index,\"authorizableId\",true,new String[]{REP_AUTHORIZABLE_ID},null);\n    }\n    if (!index.hasChild(\"principalName\")) {\n      IndexUtils.createIndexDefinition(index,\"principalName\",true,new String[]{REP_PRINCIPAL_NAME},new String[]{NT_REP_GROUP,NT_REP_USER,NT_REP_AUTHORIZABLE});\n    }\n    if (!index.hasChild(\"members\")) {\n      IndexUtils.createIndexDefinition(index,\"members\",false,new String[]{UserConstants.REP_MEMBERS},null);\n    }\n    String adminId=userConfiguration.getConfigurationParameters().getConfigValue(PARAM_ADMIN_ID,DEFAULT_ADMIN_ID);\n    if (userManager.getAuthorizable(adminId) == null) {\n      userManager.createUser(adminId,adminId);\n    }\n    String anonymousId=userConfiguration.getConfigurationParameters().getConfigValue(PARAM_ANONYMOUS_ID,DEFAULT_ANONYMOUS_ID);\n    if (userManager.getAuthorizable(anonymousId) == null) {\n      userManager.createUser(anonymousId,null);\n    }\n    if (root.hasPendingChanges()) {\n      root.commit();\n    }\n  }\n catch (  RepositoryException e) {\n    log.error(errorMsg,e);\n    throw new RuntimeException(e);\n  }\ncatch (  CommitFailedException e) {\n    log.error(errorMsg,e);\n    throw new RuntimeException(e);\n  }\n  return store.getRoot();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 316,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 30,
                    "startLineNumber": 136,
                    "startColumnNumber": 12,
                    "endLineNumber": 136,
                    "endColumnNumber": 42
                },
                "nodeContext": "throw new RuntimeException(e);\n",
                "nodeType": "ThrowStatement",
                "astNodeNumber": 5,
                "astHeight": 4
            },
            "tokenLength": 2,
            "type": "java.lang.RuntimeException"
        },
        {
            "nodeContext": "new RuntimeException(e)",
            "nodeType": "ClassInstanceCreation",
            "nodePosition": {
                "charLength": 23,
                "startLineNumber": 139,
                "startColumnNumber": 18,
                "endLineNumber": 139,
                "endColumnNumber": 41
            },
            "astNodeNumber": 4,
            "astHeight": 3,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 30,
                        "startLineNumber": 139,
                        "startColumnNumber": 12,
                        "endLineNumber": 139,
                        "endColumnNumber": 42
                    },
                    "nodeContext": "throw new RuntimeException(e);\n",
                    "nodeType": "ThrowStatement",
                    "astNodeNumber": 5,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
                    "nodePosition": {
                        "charLength": 90,
                        "startLineNumber": 137,
                        "startColumnNumber": 42,
                        "endLineNumber": 140,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  log.error(errorMsg,e);\n  throw new RuntimeException(e);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 12,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
                    "nodePosition": {
                        "charLength": 122,
                        "startLineNumber": 137,
                        "startColumnNumber": 10,
                        "endLineNumber": 140,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "catch (CommitFailedException e) {\n  log.error(errorMsg,e);\n  throw new RuntimeException(e);\n}\n",
                    "nodeType": "CatchClause",
                    "astNodeNumber": 17,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1841,
                        "startLineNumber": 106,
                        "startColumnNumber": 8,
                        "endLineNumber": 140,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "try {\n  NodeUtil rootTree=checkNotNull(new NodeUtil(root.getTree(\"/\")));\n  NodeUtil index=rootTree.getOrAddChild(IndexConstants.INDEX_DEFINITIONS_NAME,JcrConstants.NT_UNSTRUCTURED);\n  if (!index.hasChild(\"authorizableId\")) {\n    IndexUtils.createIndexDefinition(index,\"authorizableId\",true,new String[]{REP_AUTHORIZABLE_ID},null);\n  }\n  if (!index.hasChild(\"principalName\")) {\n    IndexUtils.createIndexDefinition(index,\"principalName\",true,new String[]{REP_PRINCIPAL_NAME},new String[]{NT_REP_GROUP,NT_REP_USER,NT_REP_AUTHORIZABLE});\n  }\n  if (!index.hasChild(\"members\")) {\n    IndexUtils.createIndexDefinition(index,\"members\",false,new String[]{UserConstants.REP_MEMBERS},null);\n  }\n  String adminId=userConfiguration.getConfigurationParameters().getConfigValue(PARAM_ADMIN_ID,DEFAULT_ADMIN_ID);\n  if (userManager.getAuthorizable(adminId) == null) {\n    userManager.createUser(adminId,adminId);\n  }\n  String anonymousId=userConfiguration.getConfigurationParameters().getConfigValue(PARAM_ANONYMOUS_ID,DEFAULT_ANONYMOUS_ID);\n  if (userManager.getAuthorizable(anonymousId) == null) {\n    userManager.createUser(anonymousId,null);\n  }\n  if (root.hasPendingChanges()) {\n    root.commit();\n  }\n}\n catch (RepositoryException e) {\n  log.error(errorMsg,e);\n  throw new RuntimeException(e);\n}\ncatch (CommitFailedException e) {\n  log.error(errorMsg,e);\n  throw new RuntimeException(e);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 201,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2602,
                        "startLineNumber": 90,
                        "startColumnNumber": 55,
                        "endLineNumber": 142,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  MemoryNodeStore store=new MemoryNodeStore();\n  NodeStoreBranch branch=store.branch();\n  branch.setRoot(workspaceRoot);\n  try {\n    branch.merge(EmptyHook.INSTANCE);\n  }\n catch (  CommitFailedException e) {\n    throw new RuntimeException(e);\n  }\n  Root root=new RootImpl(store,commitHook,workspaceName,SystemSubject.INSTANCE,new OpenSecurityProvider(),indexProvider);\n  UserConfiguration userConfiguration=securityProvider.getUserConfiguration();\n  UserManager userManager=userConfiguration.getUserManager(root,NamePathMapper.DEFAULT);\n  String errorMsg=\"Failed to initialize user content.\";\n  try {\n    NodeUtil rootTree=checkNotNull(new NodeUtil(root.getTree(\"/\")));\n    NodeUtil index=rootTree.getOrAddChild(IndexConstants.INDEX_DEFINITIONS_NAME,JcrConstants.NT_UNSTRUCTURED);\n    if (!index.hasChild(\"authorizableId\")) {\n      IndexUtils.createIndexDefinition(index,\"authorizableId\",true,new String[]{REP_AUTHORIZABLE_ID},null);\n    }\n    if (!index.hasChild(\"principalName\")) {\n      IndexUtils.createIndexDefinition(index,\"principalName\",true,new String[]{REP_PRINCIPAL_NAME},new String[]{NT_REP_GROUP,NT_REP_USER,NT_REP_AUTHORIZABLE});\n    }\n    if (!index.hasChild(\"members\")) {\n      IndexUtils.createIndexDefinition(index,\"members\",false,new String[]{UserConstants.REP_MEMBERS},null);\n    }\n    String adminId=userConfiguration.getConfigurationParameters().getConfigValue(PARAM_ADMIN_ID,DEFAULT_ADMIN_ID);\n    if (userManager.getAuthorizable(adminId) == null) {\n      userManager.createUser(adminId,adminId);\n    }\n    String anonymousId=userConfiguration.getConfigurationParameters().getConfigValue(PARAM_ANONYMOUS_ID,DEFAULT_ANONYMOUS_ID);\n    if (userManager.getAuthorizable(anonymousId) == null) {\n      userManager.createUser(anonymousId,null);\n    }\n    if (root.hasPendingChanges()) {\n      root.commit();\n    }\n  }\n catch (  RepositoryException e) {\n    log.error(errorMsg,e);\n    throw new RuntimeException(e);\n  }\ncatch (  CommitFailedException e) {\n    log.error(errorMsg,e);\n    throw new RuntimeException(e);\n  }\n  return store.getRoot();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 291,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2825,
                        "startLineNumber": 86,
                        "startColumnNumber": 4,
                        "endLineNumber": 142,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Nonnull @Override public NodeState initialize(NodeState workspaceRoot,String workspaceName,QueryIndexProvider indexProvider,CommitHook commitHook){\n  MemoryNodeStore store=new MemoryNodeStore();\n  NodeStoreBranch branch=store.branch();\n  branch.setRoot(workspaceRoot);\n  try {\n    branch.merge(EmptyHook.INSTANCE);\n  }\n catch (  CommitFailedException e) {\n    throw new RuntimeException(e);\n  }\n  Root root=new RootImpl(store,commitHook,workspaceName,SystemSubject.INSTANCE,new OpenSecurityProvider(),indexProvider);\n  UserConfiguration userConfiguration=securityProvider.getUserConfiguration();\n  UserManager userManager=userConfiguration.getUserManager(root,NamePathMapper.DEFAULT);\n  String errorMsg=\"Failed to initialize user content.\";\n  try {\n    NodeUtil rootTree=checkNotNull(new NodeUtil(root.getTree(\"/\")));\n    NodeUtil index=rootTree.getOrAddChild(IndexConstants.INDEX_DEFINITIONS_NAME,JcrConstants.NT_UNSTRUCTURED);\n    if (!index.hasChild(\"authorizableId\")) {\n      IndexUtils.createIndexDefinition(index,\"authorizableId\",true,new String[]{REP_AUTHORIZABLE_ID},null);\n    }\n    if (!index.hasChild(\"principalName\")) {\n      IndexUtils.createIndexDefinition(index,\"principalName\",true,new String[]{REP_PRINCIPAL_NAME},new String[]{NT_REP_GROUP,NT_REP_USER,NT_REP_AUTHORIZABLE});\n    }\n    if (!index.hasChild(\"members\")) {\n      IndexUtils.createIndexDefinition(index,\"members\",false,new String[]{UserConstants.REP_MEMBERS},null);\n    }\n    String adminId=userConfiguration.getConfigurationParameters().getConfigValue(PARAM_ADMIN_ID,DEFAULT_ADMIN_ID);\n    if (userManager.getAuthorizable(adminId) == null) {\n      userManager.createUser(adminId,adminId);\n    }\n    String anonymousId=userConfiguration.getConfigurationParameters().getConfigValue(PARAM_ANONYMOUS_ID,DEFAULT_ANONYMOUS_ID);\n    if (userManager.getAuthorizable(anonymousId) == null) {\n      userManager.createUser(anonymousId,null);\n    }\n    if (root.hasPendingChanges()) {\n      root.commit();\n    }\n  }\n catch (  RepositoryException e) {\n    log.error(errorMsg,e);\n    throw new RuntimeException(e);\n  }\ncatch (  CommitFailedException e) {\n    log.error(errorMsg,e);\n    throw new RuntimeException(e);\n  }\n  return store.getRoot();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 316,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 30,
                    "startLineNumber": 139,
                    "startColumnNumber": 12,
                    "endLineNumber": 139,
                    "endColumnNumber": 42
                },
                "nodeContext": "throw new RuntimeException(e);\n",
                "nodeType": "ThrowStatement",
                "astNodeNumber": 5,
                "astHeight": 4
            },
            "tokenLength": 2,
            "type": "java.lang.RuntimeException"
        }
    ],
    "positionList": [
        {
            "charLength": 23,
            "startLineNumber": 97,
            "startColumnNumber": 18,
            "endLineNumber": 97,
            "endColumnNumber": 41
        },
        {
            "charLength": 23,
            "startLineNumber": 136,
            "startColumnNumber": 18,
            "endLineNumber": 136,
            "endColumnNumber": 41
        },
        {
            "charLength": 23,
            "startLineNumber": 139,
            "startColumnNumber": 18,
            "endLineNumber": 139,
            "endColumnNumber": 41
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 4
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 3
        }
    ]
}