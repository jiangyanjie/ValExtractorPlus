{
    "id": 174,
    "expression": "this",
    "projectName": "tinkerpop",
    "commitID": "2c29bf9210c2d68c9364d5872c0dc7f82124f8ef",
    "filePath": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/traversal/step/map/VertexProgramStep.java",
    "occurrences": 12,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "this",
            "nodeType": "ThisExpression",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 48,
                "startColumnNumber": 16,
                "endLineNumber": 48,
                "endColumnNumber": 20
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 10,
                        "startLineNumber": 48,
                        "startColumnNumber": 16,
                        "endLineNumber": 48,
                        "endColumnNumber": 26
                    },
                    "nodeContext": "this.first",
                    "nodeType": "FieldAccess",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 57,
                        "startLineNumber": 48,
                        "startColumnNumber": 16,
                        "endLineNumber": 48,
                        "endColumnNumber": 73
                    },
                    "nodeContext": "this.first && this.getPreviousStep() instanceof EmptyStep",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 10,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 653,
                        "startLineNumber": 48,
                        "startColumnNumber": 12,
                        "endLineNumber": 56,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n  this.first=false;\n  final Graph graph=this.getTraversal().getGraph().get();\n  return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n}\n else {\n  final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n  final Graph graph=traverser.get().graph();\n  return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 102,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 677,
                        "startLineNumber": 47,
                        "startColumnNumber": 12,
                        "endLineNumber": 57,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 103,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 815,
                        "startLineNumber": 47,
                        "startColumnNumber": 8,
                        "endLineNumber": 59,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "try {\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n catch (final InterruptedException|ExecutionException e) {\n  throw new IllegalStateException(e.getMessage(),e);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 122,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 831,
                        "startLineNumber": 46,
                        "startColumnNumber": 89,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 123,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 930,
                        "startLineNumber": 45,
                        "startColumnNumber": 4,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override protected Traverser<ComputerResult> processNextStart() throws NoSuchElementException {\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 135,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 57,
                    "startLineNumber": 48,
                    "startColumnNumber": 16,
                    "endLineNumber": 48,
                    "endColumnNumber": 73
                },
                "nodeContext": "this.first && this.getPreviousStep() instanceof EmptyStep",
                "nodeType": "InfixExpression",
                "astNodeNumber": 10,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.tinkerpop.gremlin.process.computer.traversal.step.map.VertexProgramStep"
        },
        {
            "nodeContext": "this",
            "nodeType": "ThisExpression",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 48,
                "startColumnNumber": 30,
                "endLineNumber": 48,
                "endColumnNumber": 34
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InstanceofExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 22,
                        "startLineNumber": 48,
                        "startColumnNumber": 30,
                        "endLineNumber": 48,
                        "endColumnNumber": 52
                    },
                    "nodeContext": "this.getPreviousStep()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 43,
                        "startLineNumber": 48,
                        "startColumnNumber": 30,
                        "endLineNumber": 48,
                        "endColumnNumber": 73
                    },
                    "nodeContext": "this.getPreviousStep() instanceof EmptyStep",
                    "nodeType": "InstanceofExpression",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 57,
                        "startLineNumber": 48,
                        "startColumnNumber": 16,
                        "endLineNumber": 48,
                        "endColumnNumber": 73
                    },
                    "nodeContext": "this.first && this.getPreviousStep() instanceof EmptyStep",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 10,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 653,
                        "startLineNumber": 48,
                        "startColumnNumber": 12,
                        "endLineNumber": 56,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n  this.first=false;\n  final Graph graph=this.getTraversal().getGraph().get();\n  return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n}\n else {\n  final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n  final Graph graph=traverser.get().graph();\n  return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 102,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 677,
                        "startLineNumber": 47,
                        "startColumnNumber": 12,
                        "endLineNumber": 57,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 103,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 815,
                        "startLineNumber": 47,
                        "startColumnNumber": 8,
                        "endLineNumber": 59,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "try {\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n catch (final InterruptedException|ExecutionException e) {\n  throw new IllegalStateException(e.getMessage(),e);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 122,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 831,
                        "startLineNumber": 46,
                        "startColumnNumber": 89,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 123,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 930,
                        "startLineNumber": 45,
                        "startColumnNumber": 4,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override protected Traverser<ComputerResult> processNextStart() throws NoSuchElementException {\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 135,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 57,
                    "startLineNumber": 48,
                    "startColumnNumber": 16,
                    "endLineNumber": 48,
                    "endColumnNumber": 73
                },
                "nodeContext": "this.first && this.getPreviousStep() instanceof EmptyStep",
                "nodeType": "InfixExpression",
                "astNodeNumber": 10,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.tinkerpop.gremlin.process.computer.traversal.step.map.VertexProgramStep"
        },
        {
            "nodeContext": "this",
            "nodeType": "ThisExpression",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 49,
                "startColumnNumber": 16,
                "endLineNumber": 49,
                "endColumnNumber": 20
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
                    "nodePosition": {
                        "charLength": 10,
                        "startLineNumber": 49,
                        "startColumnNumber": 16,
                        "endLineNumber": 49,
                        "endColumnNumber": 26
                    },
                    "nodeContext": "this.first",
                    "nodeType": "FieldAccess",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 18,
                        "startLineNumber": 49,
                        "startColumnNumber": 16,
                        "endLineNumber": 49,
                        "endColumnNumber": 34
                    },
                    "nodeContext": "this.first=false",
                    "nodeType": "Assignment",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 19,
                        "startLineNumber": 49,
                        "startColumnNumber": 16,
                        "endLineNumber": 49,
                        "endColumnNumber": 35
                    },
                    "nodeContext": "this.first=false;\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 6,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 294,
                        "startLineNumber": 48,
                        "startColumnNumber": 75,
                        "endLineNumber": 52,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  this.first=false;\n  final Graph graph=this.getTraversal().getGraph().get();\n  return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 44,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 653,
                        "startLineNumber": 48,
                        "startColumnNumber": 12,
                        "endLineNumber": 56,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n  this.first=false;\n  final Graph graph=this.getTraversal().getGraph().get();\n  return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n}\n else {\n  final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n  final Graph graph=traverser.get().graph();\n  return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 102,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 677,
                        "startLineNumber": 47,
                        "startColumnNumber": 12,
                        "endLineNumber": 57,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 103,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 815,
                        "startLineNumber": 47,
                        "startColumnNumber": 8,
                        "endLineNumber": 59,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "try {\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n catch (final InterruptedException|ExecutionException e) {\n  throw new IllegalStateException(e.getMessage(),e);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 122,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 831,
                        "startLineNumber": 46,
                        "startColumnNumber": 89,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 123,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 930,
                        "startLineNumber": 45,
                        "startColumnNumber": 4,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override protected Traverser<ComputerResult> processNextStart() throws NoSuchElementException {\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 135,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 19,
                    "startLineNumber": 49,
                    "startColumnNumber": 16,
                    "endLineNumber": 49,
                    "endColumnNumber": 35
                },
                "nodeContext": "this.first=false;\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 6,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.tinkerpop.gremlin.process.computer.traversal.step.map.VertexProgramStep"
        },
        {
            "nodeContext": "this",
            "nodeType": "ThisExpression",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 50,
                "startColumnNumber": 36,
                "endLineNumber": 50,
                "endColumnNumber": 40
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 19,
                        "startLineNumber": 50,
                        "startColumnNumber": 36,
                        "endLineNumber": 50,
                        "endColumnNumber": 55
                    },
                    "nodeContext": "this.getTraversal()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 30,
                        "startLineNumber": 50,
                        "startColumnNumber": 36,
                        "endLineNumber": 50,
                        "endColumnNumber": 66
                    },
                    "nodeContext": "this.getTraversal().getGraph()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 36,
                        "startLineNumber": 50,
                        "startColumnNumber": 36,
                        "endLineNumber": 50,
                        "endColumnNumber": 72
                    },
                    "nodeContext": "this.getTraversal().getGraph().get()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 44,
                        "startLineNumber": 50,
                        "startColumnNumber": 28,
                        "endLineNumber": 50,
                        "endColumnNumber": 72
                    },
                    "nodeContext": "graph=this.getTraversal().getGraph().get()",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 9,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 57,
                        "startLineNumber": 50,
                        "startColumnNumber": 16,
                        "endLineNumber": 50,
                        "endColumnNumber": 73
                    },
                    "nodeContext": "final Graph graph=this.getTraversal().getGraph().get();\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 13,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 294,
                        "startLineNumber": 48,
                        "startColumnNumber": 75,
                        "endLineNumber": 52,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  this.first=false;\n  final Graph graph=this.getTraversal().getGraph().get();\n  return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 44,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 653,
                        "startLineNumber": 48,
                        "startColumnNumber": 12,
                        "endLineNumber": 56,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n  this.first=false;\n  final Graph graph=this.getTraversal().getGraph().get();\n  return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n}\n else {\n  final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n  final Graph graph=traverser.get().graph();\n  return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 102,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 677,
                        "startLineNumber": 47,
                        "startColumnNumber": 12,
                        "endLineNumber": 57,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 103,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 815,
                        "startLineNumber": 47,
                        "startColumnNumber": 8,
                        "endLineNumber": 59,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "try {\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n catch (final InterruptedException|ExecutionException e) {\n  throw new IllegalStateException(e.getMessage(),e);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 122,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 831,
                        "startLineNumber": 46,
                        "startColumnNumber": 89,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 123,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 930,
                        "startLineNumber": 45,
                        "startColumnNumber": 4,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override protected Traverser<ComputerResult> processNextStart() throws NoSuchElementException {\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 135,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 57,
                    "startLineNumber": 50,
                    "startColumnNumber": 16,
                    "endLineNumber": 50,
                    "endColumnNumber": 73
                },
                "nodeContext": "final Graph graph=this.getTraversal().getGraph().get();\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 13,
                "astHeight": 6
            },
            "tokenLength": 1,
            "type": "org.apache.tinkerpop.gremlin.process.computer.traversal.step.map.VertexProgramStep"
        },
        {
            "nodeContext": "this",
            "nodeType": "ThisExpression",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 51,
                "startColumnNumber": 23,
                "endLineNumber": 51,
                "endColumnNumber": 27
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 19,
                        "startLineNumber": 51,
                        "startColumnNumber": 23,
                        "endLineNumber": 51,
                        "endColumnNumber": 42
                    },
                    "nodeContext": "this.getTraversal()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 43,
                        "startLineNumber": 51,
                        "startColumnNumber": 23,
                        "endLineNumber": 51,
                        "endColumnNumber": 66
                    },
                    "nodeContext": "this.getTraversal().getTraverserGenerator()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
                    "nodePosition": {
                        "charLength": 144,
                        "startLineNumber": 51,
                        "startColumnNumber": 23,
                        "endLineNumber": 51,
                        "endColumnNumber": 167
                    },
                    "nodeContext": "this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 23,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 152,
                        "startLineNumber": 51,
                        "startColumnNumber": 16,
                        "endLineNumber": 51,
                        "endColumnNumber": 168
                    },
                    "nodeContext": "return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n",
                    "nodeType": "ReturnStatement",
                    "astNodeNumber": 24,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 294,
                        "startLineNumber": 48,
                        "startColumnNumber": 75,
                        "endLineNumber": 52,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  this.first=false;\n  final Graph graph=this.getTraversal().getGraph().get();\n  return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 44,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 653,
                        "startLineNumber": 48,
                        "startColumnNumber": 12,
                        "endLineNumber": 56,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n  this.first=false;\n  final Graph graph=this.getTraversal().getGraph().get();\n  return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n}\n else {\n  final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n  final Graph graph=traverser.get().graph();\n  return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 102,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 677,
                        "startLineNumber": 47,
                        "startColumnNumber": 12,
                        "endLineNumber": 57,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 103,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 815,
                        "startLineNumber": 47,
                        "startColumnNumber": 8,
                        "endLineNumber": 59,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "try {\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n catch (final InterruptedException|ExecutionException e) {\n  throw new IllegalStateException(e.getMessage(),e);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 122,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 831,
                        "startLineNumber": 46,
                        "startColumnNumber": 89,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 123,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 930,
                        "startLineNumber": 45,
                        "startColumnNumber": 4,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override protected Traverser<ComputerResult> processNextStart() throws NoSuchElementException {\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 135,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 152,
                    "startLineNumber": 51,
                    "startColumnNumber": 16,
                    "endLineNumber": 51,
                    "endColumnNumber": 168
                },
                "nodeContext": "return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n",
                "nodeType": "ReturnStatement",
                "astNodeNumber": 24,
                "astHeight": 7
            },
            "tokenLength": 1,
            "type": "org.apache.tinkerpop.gremlin.process.computer.traversal.step.map.VertexProgramStep"
        },
        {
            "nodeContext": "this",
            "nodeType": "ThisExpression",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 51,
                "startColumnNumber": 76,
                "endLineNumber": 51,
                "endColumnNumber": 80
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 28,
                        "startLineNumber": 51,
                        "startColumnNumber": 76,
                        "endLineNumber": 51,
                        "endColumnNumber": 104
                    },
                    "nodeContext": "this.generateComputer(graph)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 65,
                        "startLineNumber": 51,
                        "startColumnNumber": 76,
                        "endLineNumber": 51,
                        "endColumnNumber": 141
                    },
                    "nodeContext": "this.generateComputer(graph).program(this.generateProgram(graph))",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 10,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 74,
                        "startLineNumber": 51,
                        "startColumnNumber": 76,
                        "endLineNumber": 51,
                        "endColumnNumber": 150
                    },
                    "nodeContext": "this.generateComputer(graph).program(this.generateProgram(graph)).submit()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 12,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 80,
                        "startLineNumber": 51,
                        "startColumnNumber": 76,
                        "endLineNumber": 51,
                        "endColumnNumber": 156
                    },
                    "nodeContext": "this.generateComputer(graph).program(this.generateProgram(graph)).submit().get()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 14,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
                    "nodePosition": {
                        "charLength": 144,
                        "startLineNumber": 51,
                        "startColumnNumber": 23,
                        "endLineNumber": 51,
                        "endColumnNumber": 167
                    },
                    "nodeContext": "this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 23,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 152,
                        "startLineNumber": 51,
                        "startColumnNumber": 16,
                        "endLineNumber": 51,
                        "endColumnNumber": 168
                    },
                    "nodeContext": "return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n",
                    "nodeType": "ReturnStatement",
                    "astNodeNumber": 24,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 294,
                        "startLineNumber": 48,
                        "startColumnNumber": 75,
                        "endLineNumber": 52,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  this.first=false;\n  final Graph graph=this.getTraversal().getGraph().get();\n  return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 44,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 653,
                        "startLineNumber": 48,
                        "startColumnNumber": 12,
                        "endLineNumber": 56,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n  this.first=false;\n  final Graph graph=this.getTraversal().getGraph().get();\n  return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n}\n else {\n  final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n  final Graph graph=traverser.get().graph();\n  return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 102,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 677,
                        "startLineNumber": 47,
                        "startColumnNumber": 12,
                        "endLineNumber": 57,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 103,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 815,
                        "startLineNumber": 47,
                        "startColumnNumber": 8,
                        "endLineNumber": 59,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "try {\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n catch (final InterruptedException|ExecutionException e) {\n  throw new IllegalStateException(e.getMessage(),e);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 122,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 831,
                        "startLineNumber": 46,
                        "startColumnNumber": 89,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 123,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 930,
                        "startLineNumber": 45,
                        "startColumnNumber": 4,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override protected Traverser<ComputerResult> processNextStart() throws NoSuchElementException {\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 135,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 152,
                    "startLineNumber": 51,
                    "startColumnNumber": 16,
                    "endLineNumber": 51,
                    "endColumnNumber": 168
                },
                "nodeContext": "return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n",
                "nodeType": "ReturnStatement",
                "astNodeNumber": 24,
                "astHeight": 7
            },
            "tokenLength": 1,
            "type": "org.apache.tinkerpop.gremlin.process.computer.traversal.step.map.VertexProgramStep"
        },
        {
            "nodeContext": "this",
            "nodeType": "ThisExpression",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 51,
                "startColumnNumber": 113,
                "endLineNumber": 51,
                "endColumnNumber": 117
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 27,
                        "startLineNumber": 51,
                        "startColumnNumber": 113,
                        "endLineNumber": 51,
                        "endColumnNumber": 140
                    },
                    "nodeContext": "this.generateProgram(graph)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 65,
                        "startLineNumber": 51,
                        "startColumnNumber": 76,
                        "endLineNumber": 51,
                        "endColumnNumber": 141
                    },
                    "nodeContext": "this.generateComputer(graph).program(this.generateProgram(graph))",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 10,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 74,
                        "startLineNumber": 51,
                        "startColumnNumber": 76,
                        "endLineNumber": 51,
                        "endColumnNumber": 150
                    },
                    "nodeContext": "this.generateComputer(graph).program(this.generateProgram(graph)).submit()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 12,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 80,
                        "startLineNumber": 51,
                        "startColumnNumber": 76,
                        "endLineNumber": 51,
                        "endColumnNumber": 156
                    },
                    "nodeContext": "this.generateComputer(graph).program(this.generateProgram(graph)).submit().get()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 14,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
                    "nodePosition": {
                        "charLength": 144,
                        "startLineNumber": 51,
                        "startColumnNumber": 23,
                        "endLineNumber": 51,
                        "endColumnNumber": 167
                    },
                    "nodeContext": "this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 23,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 152,
                        "startLineNumber": 51,
                        "startColumnNumber": 16,
                        "endLineNumber": 51,
                        "endColumnNumber": 168
                    },
                    "nodeContext": "return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n",
                    "nodeType": "ReturnStatement",
                    "astNodeNumber": 24,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 294,
                        "startLineNumber": 48,
                        "startColumnNumber": 75,
                        "endLineNumber": 52,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  this.first=false;\n  final Graph graph=this.getTraversal().getGraph().get();\n  return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 44,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 653,
                        "startLineNumber": 48,
                        "startColumnNumber": 12,
                        "endLineNumber": 56,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n  this.first=false;\n  final Graph graph=this.getTraversal().getGraph().get();\n  return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n}\n else {\n  final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n  final Graph graph=traverser.get().graph();\n  return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 102,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 677,
                        "startLineNumber": 47,
                        "startColumnNumber": 12,
                        "endLineNumber": 57,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 103,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 815,
                        "startLineNumber": 47,
                        "startColumnNumber": 8,
                        "endLineNumber": 59,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "try {\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n catch (final InterruptedException|ExecutionException e) {\n  throw new IllegalStateException(e.getMessage(),e);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 122,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 831,
                        "startLineNumber": 46,
                        "startColumnNumber": 89,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 123,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 930,
                        "startLineNumber": 45,
                        "startColumnNumber": 4,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override protected Traverser<ComputerResult> processNextStart() throws NoSuchElementException {\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 135,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 152,
                    "startLineNumber": 51,
                    "startColumnNumber": 16,
                    "endLineNumber": 51,
                    "endColumnNumber": 168
                },
                "nodeContext": "return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n",
                "nodeType": "ReturnStatement",
                "astNodeNumber": 24,
                "astHeight": 7
            },
            "tokenLength": 1,
            "type": "org.apache.tinkerpop.gremlin.process.computer.traversal.step.map.VertexProgramStep"
        },
        {
            "nodeContext": "this",
            "nodeType": "ThisExpression",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 51,
                "startColumnNumber": 158,
                "endLineNumber": 51,
                "endColumnNumber": 162
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
                    "nodePosition": {
                        "charLength": 144,
                        "startLineNumber": 51,
                        "startColumnNumber": 23,
                        "endLineNumber": 51,
                        "endColumnNumber": 167
                    },
                    "nodeContext": "this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 23,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 152,
                        "startLineNumber": 51,
                        "startColumnNumber": 16,
                        "endLineNumber": 51,
                        "endColumnNumber": 168
                    },
                    "nodeContext": "return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n",
                    "nodeType": "ReturnStatement",
                    "astNodeNumber": 24,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 294,
                        "startLineNumber": 48,
                        "startColumnNumber": 75,
                        "endLineNumber": 52,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  this.first=false;\n  final Graph graph=this.getTraversal().getGraph().get();\n  return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 44,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 653,
                        "startLineNumber": 48,
                        "startColumnNumber": 12,
                        "endLineNumber": 56,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n  this.first=false;\n  final Graph graph=this.getTraversal().getGraph().get();\n  return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n}\n else {\n  final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n  final Graph graph=traverser.get().graph();\n  return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 102,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 677,
                        "startLineNumber": 47,
                        "startColumnNumber": 12,
                        "endLineNumber": 57,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 103,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 815,
                        "startLineNumber": 47,
                        "startColumnNumber": 8,
                        "endLineNumber": 59,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "try {\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n catch (final InterruptedException|ExecutionException e) {\n  throw new IllegalStateException(e.getMessage(),e);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 122,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 831,
                        "startLineNumber": 46,
                        "startColumnNumber": 89,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 123,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 930,
                        "startLineNumber": 45,
                        "startColumnNumber": 4,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override protected Traverser<ComputerResult> processNextStart() throws NoSuchElementException {\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 135,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 152,
                    "startLineNumber": 51,
                    "startColumnNumber": 16,
                    "endLineNumber": 51,
                    "endColumnNumber": 168
                },
                "nodeContext": "return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n",
                "nodeType": "ReturnStatement",
                "astNodeNumber": 24,
                "astHeight": 7
            },
            "tokenLength": 1,
            "type": "org.apache.tinkerpop.gremlin.process.computer.traversal.step.map.VertexProgramStep"
        },
        {
            "nodeContext": "this",
            "nodeType": "ThisExpression",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 53,
                "startColumnNumber": 66,
                "endLineNumber": 53,
                "endColumnNumber": 70
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 11,
                        "startLineNumber": 53,
                        "startColumnNumber": 66,
                        "endLineNumber": 53,
                        "endColumnNumber": 77
                    },
                    "nodeContext": "this.starts",
                    "nodeType": "FieldAccess",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 18,
                        "startLineNumber": 53,
                        "startColumnNumber": 66,
                        "endLineNumber": 53,
                        "endColumnNumber": 84
                    },
                    "nodeContext": "this.starts.next()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 30,
                        "startLineNumber": 53,
                        "startColumnNumber": 54,
                        "endLineNumber": 53,
                        "endColumnNumber": 84
                    },
                    "nodeContext": "traverser=this.starts.next()",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 69,
                        "startLineNumber": 53,
                        "startColumnNumber": 16,
                        "endLineNumber": 53,
                        "endColumnNumber": 85
                    },
                    "nodeContext": "final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 16,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 290,
                        "startLineNumber": 52,
                        "startColumnNumber": 19,
                        "endLineNumber": 56,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n  final Graph graph=traverser.get().graph();\n  return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 47,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 653,
                        "startLineNumber": 48,
                        "startColumnNumber": 12,
                        "endLineNumber": 56,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n  this.first=false;\n  final Graph graph=this.getTraversal().getGraph().get();\n  return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n}\n else {\n  final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n  final Graph graph=traverser.get().graph();\n  return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 102,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 677,
                        "startLineNumber": 47,
                        "startColumnNumber": 12,
                        "endLineNumber": 57,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 103,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 815,
                        "startLineNumber": 47,
                        "startColumnNumber": 8,
                        "endLineNumber": 59,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "try {\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n catch (final InterruptedException|ExecutionException e) {\n  throw new IllegalStateException(e.getMessage(),e);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 122,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 831,
                        "startLineNumber": 46,
                        "startColumnNumber": 89,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 123,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 930,
                        "startLineNumber": 45,
                        "startColumnNumber": 4,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override protected Traverser<ComputerResult> processNextStart() throws NoSuchElementException {\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 135,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 69,
                    "startLineNumber": 53,
                    "startColumnNumber": 16,
                    "endLineNumber": 53,
                    "endColumnNumber": 85
                },
                "nodeContext": "final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 16,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "org.apache.tinkerpop.gremlin.process.computer.traversal.step.map.VertexProgramStep"
        },
        {
            "nodeContext": "this",
            "nodeType": "ThisExpression",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 55,
                "startColumnNumber": 39,
                "endLineNumber": 55,
                "endColumnNumber": 43
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 28,
                        "startLineNumber": 55,
                        "startColumnNumber": 39,
                        "endLineNumber": 55,
                        "endColumnNumber": 67
                    },
                    "nodeContext": "this.generateComputer(graph)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 65,
                        "startLineNumber": 55,
                        "startColumnNumber": 39,
                        "endLineNumber": 55,
                        "endColumnNumber": 104
                    },
                    "nodeContext": "this.generateComputer(graph).program(this.generateProgram(graph))",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 10,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 74,
                        "startLineNumber": 55,
                        "startColumnNumber": 39,
                        "endLineNumber": 55,
                        "endColumnNumber": 113
                    },
                    "nodeContext": "this.generateComputer(graph).program(this.generateProgram(graph)).submit()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 12,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 80,
                        "startLineNumber": 55,
                        "startColumnNumber": 39,
                        "endLineNumber": 55,
                        "endColumnNumber": 119
                    },
                    "nodeContext": "this.generateComputer(graph).program(this.generateProgram(graph)).submit().get()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 14,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
                    "nodePosition": {
                        "charLength": 103,
                        "startLineNumber": 55,
                        "startColumnNumber": 23,
                        "endLineNumber": 55,
                        "endColumnNumber": 126
                    },
                    "nodeContext": "traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 18,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 111,
                        "startLineNumber": 55,
                        "startColumnNumber": 16,
                        "endLineNumber": 55,
                        "endColumnNumber": 127
                    },
                    "nodeContext": "return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n",
                    "nodeType": "ReturnStatement",
                    "astNodeNumber": 19,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 290,
                        "startLineNumber": 52,
                        "startColumnNumber": 19,
                        "endLineNumber": 56,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n  final Graph graph=traverser.get().graph();\n  return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 47,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 653,
                        "startLineNumber": 48,
                        "startColumnNumber": 12,
                        "endLineNumber": 56,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n  this.first=false;\n  final Graph graph=this.getTraversal().getGraph().get();\n  return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n}\n else {\n  final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n  final Graph graph=traverser.get().graph();\n  return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 102,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 677,
                        "startLineNumber": 47,
                        "startColumnNumber": 12,
                        "endLineNumber": 57,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 103,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 815,
                        "startLineNumber": 47,
                        "startColumnNumber": 8,
                        "endLineNumber": 59,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "try {\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n catch (final InterruptedException|ExecutionException e) {\n  throw new IllegalStateException(e.getMessage(),e);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 122,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 831,
                        "startLineNumber": 46,
                        "startColumnNumber": 89,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 123,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 930,
                        "startLineNumber": 45,
                        "startColumnNumber": 4,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override protected Traverser<ComputerResult> processNextStart() throws NoSuchElementException {\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 135,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 111,
                    "startLineNumber": 55,
                    "startColumnNumber": 16,
                    "endLineNumber": 55,
                    "endColumnNumber": 127
                },
                "nodeContext": "return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n",
                "nodeType": "ReturnStatement",
                "astNodeNumber": 19,
                "astHeight": 7
            },
            "tokenLength": 1,
            "type": "org.apache.tinkerpop.gremlin.process.computer.traversal.step.map.VertexProgramStep"
        },
        {
            "nodeContext": "this",
            "nodeType": "ThisExpression",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 55,
                "startColumnNumber": 76,
                "endLineNumber": 55,
                "endColumnNumber": 80
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 27,
                        "startLineNumber": 55,
                        "startColumnNumber": 76,
                        "endLineNumber": 55,
                        "endColumnNumber": 103
                    },
                    "nodeContext": "this.generateProgram(graph)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 65,
                        "startLineNumber": 55,
                        "startColumnNumber": 39,
                        "endLineNumber": 55,
                        "endColumnNumber": 104
                    },
                    "nodeContext": "this.generateComputer(graph).program(this.generateProgram(graph))",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 10,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 74,
                        "startLineNumber": 55,
                        "startColumnNumber": 39,
                        "endLineNumber": 55,
                        "endColumnNumber": 113
                    },
                    "nodeContext": "this.generateComputer(graph).program(this.generateProgram(graph)).submit()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 12,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 80,
                        "startLineNumber": 55,
                        "startColumnNumber": 39,
                        "endLineNumber": 55,
                        "endColumnNumber": 119
                    },
                    "nodeContext": "this.generateComputer(graph).program(this.generateProgram(graph)).submit().get()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 14,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
                    "nodePosition": {
                        "charLength": 103,
                        "startLineNumber": 55,
                        "startColumnNumber": 23,
                        "endLineNumber": 55,
                        "endColumnNumber": 126
                    },
                    "nodeContext": "traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 18,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 111,
                        "startLineNumber": 55,
                        "startColumnNumber": 16,
                        "endLineNumber": 55,
                        "endColumnNumber": 127
                    },
                    "nodeContext": "return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n",
                    "nodeType": "ReturnStatement",
                    "astNodeNumber": 19,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 290,
                        "startLineNumber": 52,
                        "startColumnNumber": 19,
                        "endLineNumber": 56,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n  final Graph graph=traverser.get().graph();\n  return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 47,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 653,
                        "startLineNumber": 48,
                        "startColumnNumber": 12,
                        "endLineNumber": 56,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n  this.first=false;\n  final Graph graph=this.getTraversal().getGraph().get();\n  return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n}\n else {\n  final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n  final Graph graph=traverser.get().graph();\n  return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 102,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 677,
                        "startLineNumber": 47,
                        "startColumnNumber": 12,
                        "endLineNumber": 57,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 103,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 815,
                        "startLineNumber": 47,
                        "startColumnNumber": 8,
                        "endLineNumber": 59,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "try {\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n catch (final InterruptedException|ExecutionException e) {\n  throw new IllegalStateException(e.getMessage(),e);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 122,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 831,
                        "startLineNumber": 46,
                        "startColumnNumber": 89,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 123,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 930,
                        "startLineNumber": 45,
                        "startColumnNumber": 4,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override protected Traverser<ComputerResult> processNextStart() throws NoSuchElementException {\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 135,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 111,
                    "startLineNumber": 55,
                    "startColumnNumber": 16,
                    "endLineNumber": 55,
                    "endColumnNumber": 127
                },
                "nodeContext": "return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n",
                "nodeType": "ReturnStatement",
                "astNodeNumber": 19,
                "astHeight": 7
            },
            "tokenLength": 1,
            "type": "org.apache.tinkerpop.gremlin.process.computer.traversal.step.map.VertexProgramStep"
        },
        {
            "nodeContext": "this",
            "nodeType": "ThisExpression",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 55,
                "startColumnNumber": 121,
                "endLineNumber": 55,
                "endColumnNumber": 125
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
                    "nodePosition": {
                        "charLength": 103,
                        "startLineNumber": 55,
                        "startColumnNumber": 23,
                        "endLineNumber": 55,
                        "endColumnNumber": 126
                    },
                    "nodeContext": "traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 18,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 111,
                        "startLineNumber": 55,
                        "startColumnNumber": 16,
                        "endLineNumber": 55,
                        "endColumnNumber": 127
                    },
                    "nodeContext": "return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n",
                    "nodeType": "ReturnStatement",
                    "astNodeNumber": 19,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 290,
                        "startLineNumber": 52,
                        "startColumnNumber": 19,
                        "endLineNumber": 56,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n  final Graph graph=traverser.get().graph();\n  return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 47,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 653,
                        "startLineNumber": 48,
                        "startColumnNumber": 12,
                        "endLineNumber": 56,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n  this.first=false;\n  final Graph graph=this.getTraversal().getGraph().get();\n  return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n}\n else {\n  final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n  final Graph graph=traverser.get().graph();\n  return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 102,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 677,
                        "startLineNumber": 47,
                        "startColumnNumber": 12,
                        "endLineNumber": 57,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 103,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 815,
                        "startLineNumber": 47,
                        "startColumnNumber": 8,
                        "endLineNumber": 59,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "try {\n  if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n    this.first=false;\n    final Graph graph=this.getTraversal().getGraph().get();\n    return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n  }\n else {\n    final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n    final Graph graph=traverser.get().graph();\n    return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n  }\n}\n catch (final InterruptedException|ExecutionException e) {\n  throw new IllegalStateException(e.getMessage(),e);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 122,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 831,
                        "startLineNumber": 46,
                        "startColumnNumber": 89,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 123,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 930,
                        "startLineNumber": 45,
                        "startColumnNumber": 4,
                        "endLineNumber": 60,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override protected Traverser<ComputerResult> processNextStart() throws NoSuchElementException {\n  try {\n    if (this.first && this.getPreviousStep() instanceof EmptyStep) {\n      this.first=false;\n      final Graph graph=this.getTraversal().getGraph().get();\n      return this.getTraversal().getTraverserGenerator().generate(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this,1l);\n    }\n else {\n      final Traverser.Admin<ComputerResult> traverser=this.starts.next();\n      final Graph graph=traverser.get().graph();\n      return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n    }\n  }\n catch (  final InterruptedException|ExecutionException e) {\n    throw new IllegalStateException(e.getMessage(),e);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 135,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 111,
                    "startLineNumber": 55,
                    "startColumnNumber": 16,
                    "endLineNumber": 55,
                    "endColumnNumber": 127
                },
                "nodeContext": "return traverser.split(this.generateComputer(graph).program(this.generateProgram(graph)).submit().get(),this);\n",
                "nodeType": "ReturnStatement",
                "astNodeNumber": 19,
                "astHeight": 7
            },
            "tokenLength": 1,
            "type": "org.apache.tinkerpop.gremlin.process.computer.traversal.step.map.VertexProgramStep"
        }
    ],
    "positionList": [
        {
            "charLength": 4,
            "startLineNumber": 48,
            "startColumnNumber": 16,
            "endLineNumber": 48,
            "endColumnNumber": 20
        },
        {
            "charLength": 4,
            "startLineNumber": 48,
            "startColumnNumber": 30,
            "endLineNumber": 48,
            "endColumnNumber": 34
        },
        {
            "charLength": 4,
            "startLineNumber": 49,
            "startColumnNumber": 16,
            "endLineNumber": 49,
            "endColumnNumber": 20
        },
        {
            "charLength": 4,
            "startLineNumber": 50,
            "startColumnNumber": 36,
            "endLineNumber": 50,
            "endColumnNumber": 40
        },
        {
            "charLength": 4,
            "startLineNumber": 51,
            "startColumnNumber": 23,
            "endLineNumber": 51,
            "endColumnNumber": 27
        },
        {
            "charLength": 4,
            "startLineNumber": 51,
            "startColumnNumber": 76,
            "endLineNumber": 51,
            "endColumnNumber": 80
        },
        {
            "charLength": 4,
            "startLineNumber": 51,
            "startColumnNumber": 113,
            "endLineNumber": 51,
            "endColumnNumber": 117
        },
        {
            "charLength": 4,
            "startLineNumber": 51,
            "startColumnNumber": 158,
            "endLineNumber": 51,
            "endColumnNumber": 162
        },
        {
            "charLength": 4,
            "startLineNumber": 53,
            "startColumnNumber": 66,
            "endLineNumber": 53,
            "endColumnNumber": 70
        },
        {
            "charLength": 4,
            "startLineNumber": 55,
            "startColumnNumber": 39,
            "endLineNumber": 55,
            "endColumnNumber": 43
        },
        {
            "charLength": 4,
            "startLineNumber": 55,
            "startColumnNumber": 76,
            "endLineNumber": 55,
            "endColumnNumber": 80
        },
        {
            "charLength": 4,
            "startLineNumber": 55,
            "startColumnNumber": 121,
            "endLineNumber": 55,
            "endColumnNumber": 125
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 1
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 4,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 5,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 6,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 7,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 8,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 9,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 10,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 11,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 6,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 7,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 8,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 9,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 10,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 11,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 6,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 7,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 8,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 9,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 10,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 11,
            "layout": 4
        },
        {
            "firstKey": 3,
            "secondKey": 0,
            "layout": 6
        },
        {
            "firstKey": 3,
            "secondKey": 1,
            "layout": 6
        },
        {
            "firstKey": 3,
            "secondKey": 2,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 4,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 5,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 6,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 7,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 8,
            "layout": 6
        },
        {
            "firstKey": 3,
            "secondKey": 9,
            "layout": 6
        },
        {
            "firstKey": 3,
            "secondKey": 10,
            "layout": 6
        },
        {
            "firstKey": 3,
            "secondKey": 11,
            "layout": 6
        },
        {
            "firstKey": 4,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 1,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 2,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 3,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 5,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 6,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 7,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 8,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 9,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 10,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 11,
            "layout": 5
        },
        {
            "firstKey": 5,
            "secondKey": 0,
            "layout": 7
        },
        {
            "firstKey": 5,
            "secondKey": 1,
            "layout": 7
        },
        {
            "firstKey": 5,
            "secondKey": 2,
            "layout": 6
        },
        {
            "firstKey": 5,
            "secondKey": 3,
            "layout": 6
        },
        {
            "firstKey": 5,
            "secondKey": 4,
            "layout": 4
        },
        {
            "firstKey": 5,
            "secondKey": 6,
            "layout": 1
        },
        {
            "firstKey": 5,
            "secondKey": 7,
            "layout": 4
        },
        {
            "firstKey": 5,
            "secondKey": 8,
            "layout": 7
        },
        {
            "firstKey": 5,
            "secondKey": 9,
            "layout": 7
        },
        {
            "firstKey": 5,
            "secondKey": 10,
            "layout": 7
        },
        {
            "firstKey": 5,
            "secondKey": 11,
            "layout": 7
        },
        {
            "firstKey": 6,
            "secondKey": 0,
            "layout": 7
        },
        {
            "firstKey": 6,
            "secondKey": 1,
            "layout": 7
        },
        {
            "firstKey": 6,
            "secondKey": 2,
            "layout": 6
        },
        {
            "firstKey": 6,
            "secondKey": 3,
            "layout": 6
        },
        {
            "firstKey": 6,
            "secondKey": 4,
            "layout": 4
        },
        {
            "firstKey": 6,
            "secondKey": 5,
            "layout": 1
        },
        {
            "firstKey": 6,
            "secondKey": 7,
            "layout": 4
        },
        {
            "firstKey": 6,
            "secondKey": 8,
            "layout": 7
        },
        {
            "firstKey": 6,
            "secondKey": 9,
            "layout": 7
        },
        {
            "firstKey": 6,
            "secondKey": 10,
            "layout": 7
        },
        {
            "firstKey": 6,
            "secondKey": 11,
            "layout": 7
        },
        {
            "firstKey": 7,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 7,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 7,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 4,
            "layout": 0
        },
        {
            "firstKey": 7,
            "secondKey": 5,
            "layout": 0
        },
        {
            "firstKey": 7,
            "secondKey": 6,
            "layout": 0
        },
        {
            "firstKey": 7,
            "secondKey": 8,
            "layout": 3
        },
        {
            "firstKey": 7,
            "secondKey": 9,
            "layout": 3
        },
        {
            "firstKey": 7,
            "secondKey": 10,
            "layout": 3
        },
        {
            "firstKey": 7,
            "secondKey": 11,
            "layout": 3
        },
        {
            "firstKey": 8,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 8,
            "secondKey": 1,
            "layout": 5
        },
        {
            "firstKey": 8,
            "secondKey": 2,
            "layout": 5
        },
        {
            "firstKey": 8,
            "secondKey": 3,
            "layout": 5
        },
        {
            "firstKey": 8,
            "secondKey": 4,
            "layout": 5
        },
        {
            "firstKey": 8,
            "secondKey": 5,
            "layout": 5
        },
        {
            "firstKey": 8,
            "secondKey": 6,
            "layout": 5
        },
        {
            "firstKey": 8,
            "secondKey": 7,
            "layout": 5
        },
        {
            "firstKey": 8,
            "secondKey": 9,
            "layout": 4
        },
        {
            "firstKey": 8,
            "secondKey": 10,
            "layout": 4
        },
        {
            "firstKey": 8,
            "secondKey": 11,
            "layout": 4
        },
        {
            "firstKey": 9,
            "secondKey": 0,
            "layout": 7
        },
        {
            "firstKey": 9,
            "secondKey": 1,
            "layout": 7
        },
        {
            "firstKey": 9,
            "secondKey": 2,
            "layout": 7
        },
        {
            "firstKey": 9,
            "secondKey": 3,
            "layout": 7
        },
        {
            "firstKey": 9,
            "secondKey": 4,
            "layout": 7
        },
        {
            "firstKey": 9,
            "secondKey": 5,
            "layout": 7
        },
        {
            "firstKey": 9,
            "secondKey": 6,
            "layout": 7
        },
        {
            "firstKey": 9,
            "secondKey": 7,
            "layout": 7
        },
        {
            "firstKey": 9,
            "secondKey": 8,
            "layout": 6
        },
        {
            "firstKey": 9,
            "secondKey": 10,
            "layout": 1
        },
        {
            "firstKey": 9,
            "secondKey": 11,
            "layout": 4
        },
        {
            "firstKey": 10,
            "secondKey": 0,
            "layout": 7
        },
        {
            "firstKey": 10,
            "secondKey": 1,
            "layout": 7
        },
        {
            "firstKey": 10,
            "secondKey": 2,
            "layout": 7
        },
        {
            "firstKey": 10,
            "secondKey": 3,
            "layout": 7
        },
        {
            "firstKey": 10,
            "secondKey": 4,
            "layout": 7
        },
        {
            "firstKey": 10,
            "secondKey": 5,
            "layout": 7
        },
        {
            "firstKey": 10,
            "secondKey": 6,
            "layout": 7
        },
        {
            "firstKey": 10,
            "secondKey": 7,
            "layout": 7
        },
        {
            "firstKey": 10,
            "secondKey": 8,
            "layout": 6
        },
        {
            "firstKey": 10,
            "secondKey": 9,
            "layout": 1
        },
        {
            "firstKey": 10,
            "secondKey": 11,
            "layout": 4
        },
        {
            "firstKey": 11,
            "secondKey": 0,
            "layout": 3
        },
        {
            "firstKey": 11,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 11,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 11,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 11,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 11,
            "secondKey": 5,
            "layout": 3
        },
        {
            "firstKey": 11,
            "secondKey": 6,
            "layout": 3
        },
        {
            "firstKey": 11,
            "secondKey": 7,
            "layout": 3
        },
        {
            "firstKey": 11,
            "secondKey": 8,
            "layout": 2
        },
        {
            "firstKey": 11,
            "secondKey": 9,
            "layout": 0
        },
        {
            "firstKey": 11,
            "secondKey": 10,
            "layout": 0
        }
    ]
}