{
    "id": 10,
    "expression": "mergedCell",
    "projectName": "dromara@hutool",
    "commitID": "8aec62a59be74b00c05f543736554a1b568c8ada",
    "filePath": "hutool-poi/src/main/java/cn/hutool/poi/excel/cell/CellUtil.java",
    "occurrences": 2,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "mergedCell",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 10,
                "startLineNumber": 108,
                "startColumnNumber": 5,
                "endLineNumber": 108,
                "endColumnNumber": 15
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 18,
                        "startLineNumber": 108,
                        "startColumnNumber": 5,
                        "endLineNumber": 108,
                        "endColumnNumber": 23
                    },
                    "nodeContext": "mergedCell != cell",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 90,
                        "startLineNumber": 108,
                        "startColumnNumber": 2,
                        "endLineNumber": 111,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "if (mergedCell != cell) {\n  cell=mergedCell;\n  cellType=cell.getCellTypeEnum();\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 15,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 980,
                        "startLineNumber": 98,
                        "startColumnNumber": 88,
                        "endLineNumber": 137,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  if (null == cell) {\n    return null;\n  }\n  if (null == cellType) {\n    cellType=cell.getCellTypeEnum();\n  }\n  final Cell mergedCell=getMergedRegionCell(cell);\n  if (mergedCell != cell) {\n    cell=mergedCell;\n    cellType=cell.getCellTypeEnum();\n  }\n  Object value;\nswitch (cellType) {\ncase NUMERIC:    value=getNumericValue(cell);\n  break;\ncase BOOLEAN:value=cell.getBooleanCellValue();\nbreak;\ncase FORMULA:value=getCellValue(cell,cell.getCachedFormulaResultTypeEnum(),cellEditor);\nbreak;\ncase BLANK:value=StrUtil.EMPTY;\nbreak;\ncase ERROR:final FormulaError error=FormulaError.forInt(cell.getErrorCellValue());\nvalue=(null == error) ? StrUtil.EMPTY : error.getString();\nbreak;\ndefault:value=cell.getStringCellValue();\n}\nreturn null == cellEditor ? value : cellEditor.edit(cell,value);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 137,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1369,
                        "startLineNumber": 89,
                        "startColumnNumber": 1,
                        "endLineNumber": 137,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "/** \n * 获取单元格值<br> 如果单元格值为数字格式，则判断其格式中是否有小数部分，无则返回Long类型，否则返回Double类型\n * @param cell       {@link Cell}单元格\n * @param cellType   单元格值类型{@link CellType}枚举，如果为 {@code null}默认使用cell的类型\n * @param cellEditor 单元格值编辑器。可以通过此编辑器对单元格值做自定义操作\n * @return 值，类型可能为：Date、Double、Boolean、String\n */\npublic static Object getCellValue(Cell cell,CellType cellType,CellEditor cellEditor){\n  if (null == cell) {\n    return null;\n  }\n  if (null == cellType) {\n    cellType=cell.getCellTypeEnum();\n  }\n  final Cell mergedCell=getMergedRegionCell(cell);\n  if (mergedCell != cell) {\n    cell=mergedCell;\n    cellType=cell.getCellTypeEnum();\n  }\n  Object value;\nswitch (cellType) {\ncase NUMERIC:    value=getNumericValue(cell);\n  break;\ncase BOOLEAN:value=cell.getBooleanCellValue();\nbreak;\ncase FORMULA:value=getCellValue(cell,cell.getCachedFormulaResultTypeEnum(),cellEditor);\nbreak;\ncase BLANK:value=StrUtil.EMPTY;\nbreak;\ncase ERROR:final FormulaError error=FormulaError.forInt(cell.getErrorCellValue());\nvalue=(null == error) ? StrUtil.EMPTY : error.getString();\nbreak;\ndefault:value=cell.getStringCellValue();\n}\nreturn null == cellEditor ? value : cellEditor.edit(cell,value);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 156,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 18,
                    "startLineNumber": 108,
                    "startColumnNumber": 5,
                    "endLineNumber": 108,
                    "endColumnNumber": 23
                },
                "nodeContext": "mergedCell != cell",
                "nodeType": "InfixExpression",
                "astNodeNumber": 3,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "cn.hutool.poi.excel.cell.Cell"
        },
        {
            "nodeContext": "mergedCell",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 10,
                "startLineNumber": 109,
                "startColumnNumber": 10,
                "endLineNumber": 109,
                "endColumnNumber": 20
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 17,
                        "startLineNumber": 109,
                        "startColumnNumber": 3,
                        "endLineNumber": 109,
                        "endColumnNumber": 20
                    },
                    "nodeContext": "cell=mergedCell",
                    "nodeType": "Assignment",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 18,
                        "startLineNumber": 109,
                        "startColumnNumber": 3,
                        "endLineNumber": 109,
                        "endColumnNumber": 21
                    },
                    "nodeContext": "cell=mergedCell;\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 4,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 68,
                        "startLineNumber": 108,
                        "startColumnNumber": 24,
                        "endLineNumber": 111,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  cell=mergedCell;\n  cellType=cell.getCellTypeEnum();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 11,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 90,
                        "startLineNumber": 108,
                        "startColumnNumber": 2,
                        "endLineNumber": 111,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "if (mergedCell != cell) {\n  cell=mergedCell;\n  cellType=cell.getCellTypeEnum();\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 15,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 980,
                        "startLineNumber": 98,
                        "startColumnNumber": 88,
                        "endLineNumber": 137,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  if (null == cell) {\n    return null;\n  }\n  if (null == cellType) {\n    cellType=cell.getCellTypeEnum();\n  }\n  final Cell mergedCell=getMergedRegionCell(cell);\n  if (mergedCell != cell) {\n    cell=mergedCell;\n    cellType=cell.getCellTypeEnum();\n  }\n  Object value;\nswitch (cellType) {\ncase NUMERIC:    value=getNumericValue(cell);\n  break;\ncase BOOLEAN:value=cell.getBooleanCellValue();\nbreak;\ncase FORMULA:value=getCellValue(cell,cell.getCachedFormulaResultTypeEnum(),cellEditor);\nbreak;\ncase BLANK:value=StrUtil.EMPTY;\nbreak;\ncase ERROR:final FormulaError error=FormulaError.forInt(cell.getErrorCellValue());\nvalue=(null == error) ? StrUtil.EMPTY : error.getString();\nbreak;\ndefault:value=cell.getStringCellValue();\n}\nreturn null == cellEditor ? value : cellEditor.edit(cell,value);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 137,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1369,
                        "startLineNumber": 89,
                        "startColumnNumber": 1,
                        "endLineNumber": 137,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "/** \n * 获取单元格值<br> 如果单元格值为数字格式，则判断其格式中是否有小数部分，无则返回Long类型，否则返回Double类型\n * @param cell       {@link Cell}单元格\n * @param cellType   单元格值类型{@link CellType}枚举，如果为 {@code null}默认使用cell的类型\n * @param cellEditor 单元格值编辑器。可以通过此编辑器对单元格值做自定义操作\n * @return 值，类型可能为：Date、Double、Boolean、String\n */\npublic static Object getCellValue(Cell cell,CellType cellType,CellEditor cellEditor){\n  if (null == cell) {\n    return null;\n  }\n  if (null == cellType) {\n    cellType=cell.getCellTypeEnum();\n  }\n  final Cell mergedCell=getMergedRegionCell(cell);\n  if (mergedCell != cell) {\n    cell=mergedCell;\n    cellType=cell.getCellTypeEnum();\n  }\n  Object value;\nswitch (cellType) {\ncase NUMERIC:    value=getNumericValue(cell);\n  break;\ncase BOOLEAN:value=cell.getBooleanCellValue();\nbreak;\ncase FORMULA:value=getCellValue(cell,cell.getCachedFormulaResultTypeEnum(),cellEditor);\nbreak;\ncase BLANK:value=StrUtil.EMPTY;\nbreak;\ncase ERROR:final FormulaError error=FormulaError.forInt(cell.getErrorCellValue());\nvalue=(null == error) ? StrUtil.EMPTY : error.getString();\nbreak;\ndefault:value=cell.getStringCellValue();\n}\nreturn null == cellEditor ? value : cellEditor.edit(cell,value);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 156,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 18,
                    "startLineNumber": 109,
                    "startColumnNumber": 3,
                    "endLineNumber": 109,
                    "endColumnNumber": 21
                },
                "nodeContext": "cell=mergedCell;\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 4,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "cn.hutool.poi.excel.cell.Cell"
        }
    ],
    "positionList": [
        {
            "charLength": 10,
            "startLineNumber": 108,
            "startColumnNumber": 5,
            "endLineNumber": 108,
            "endColumnNumber": 15
        },
        {
            "charLength": 10,
            "startLineNumber": 109,
            "startColumnNumber": 10,
            "endLineNumber": 109,
            "endColumnNumber": 20
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 1
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 3
        }
    ]
}