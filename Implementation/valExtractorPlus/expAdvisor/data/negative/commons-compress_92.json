{
    "id": 92,
    "expression": "pEntry.getLength() + (mustAppendName ? n.length() : 0)",
    "projectName": "commons-compress",
    "commitID": "e3ea7b6607e7c96b9e2b6813c05bfba887c8e226",
    "filePath": "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java",
    "occurrences": 1,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "pEntry.getLength() + (mustAppendName ? n.length() : 0)",
            "nodeType": "InfixExpression",
            "nodePosition": {
                "charLength": 82,
                "startLineNumber": 182,
                "startColumnNumber": 27,
                "endLineNumber": 183,
                "endColumnNumber": 62
            },
            "astNodeNumber": 11,
            "astHeight": 5,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 98,
                        "startLineNumber": 182,
                        "startColumnNumber": 12,
                        "endLineNumber": 183,
                        "endColumnNumber": 63
                    },
                    "nodeContext": "String.valueOf(pEntry.getLength() + (mustAppendName ? n.length() : 0))",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 14,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 115,
                        "startLineNumber": 181,
                        "startColumnNumber": 21,
                        "endLineNumber": 183,
                        "endColumnNumber": 63
                    },
                    "nodeContext": "s=String.valueOf(pEntry.getLength() + (mustAppendName ? n.length() : 0))",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 16,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 129,
                        "startLineNumber": 181,
                        "startColumnNumber": 8,
                        "endLineNumber": 183,
                        "endColumnNumber": 64
                    },
                    "nodeContext": "final String s=String.valueOf(pEntry.getLength() + (mustAppendName ? n.length() : 0));\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 20,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2027,
                        "startLineNumber": 134,
                        "startColumnNumber": 82,
                        "endLineNumber": 198,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  long offset=0;\n  boolean mustAppendName=false;\n  final String n=pEntry.getName();\n  if (LONGFILE_ERROR == longFileMode && n.length() > 16) {\n    throw new IOException(\"File name too long, > 16 chars: \" + n);\n  }\n  if (LONGFILE_BSD == longFileMode && (n.length() > 16 || n.contains(\" \"))) {\n    mustAppendName=true;\n    offset+=write(ArArchiveInputStream.BSD_LONGNAME_PREFIX + String.valueOf(n.length()));\n  }\n else {\n    offset+=write(n);\n  }\n  offset=fill(offset,16,' ');\n  final String m=\"\" + pEntry.getLastModified();\n  if (m.length() > 12) {\n    throw new IOException(\"Last modified too long\");\n  }\n  offset+=write(m);\n  offset=fill(offset,28,' ');\n  final String u=\"\" + pEntry.getUserId();\n  if (u.length() > 6) {\n    throw new IOException(\"User id too long\");\n  }\n  offset+=write(u);\n  offset=fill(offset,34,' ');\n  final String g=\"\" + pEntry.getGroupId();\n  if (g.length() > 6) {\n    throw new IOException(\"Group id too long\");\n  }\n  offset+=write(g);\n  offset=fill(offset,40,' ');\n  final String fm=\"\" + Integer.toString(pEntry.getMode(),8);\n  if (fm.length() > 8) {\n    throw new IOException(\"Filemode too long\");\n  }\n  offset+=write(fm);\n  offset=fill(offset,48,' ');\n  final String s=String.valueOf(pEntry.getLength() + (mustAppendName ? n.length() : 0));\n  if (s.length() > 10) {\n    throw new IOException(\"Size too long\");\n  }\n  offset+=write(s);\n  offset=fill(offset,58,' ');\n  offset+=write(ArArchiveEntry.TRAILER);\n  if (mustAppendName) {\n    offset+=write(n);\n  }\n  return offset;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 306,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2105,
                        "startLineNumber": 134,
                        "startColumnNumber": 4,
                        "endLineNumber": 198,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "private long writeEntryHeader(final ArArchiveEntry pEntry) throws IOException {\n  long offset=0;\n  boolean mustAppendName=false;\n  final String n=pEntry.getName();\n  if (LONGFILE_ERROR == longFileMode && n.length() > 16) {\n    throw new IOException(\"File name too long, > 16 chars: \" + n);\n  }\n  if (LONGFILE_BSD == longFileMode && (n.length() > 16 || n.contains(\" \"))) {\n    mustAppendName=true;\n    offset+=write(ArArchiveInputStream.BSD_LONGNAME_PREFIX + String.valueOf(n.length()));\n  }\n else {\n    offset+=write(n);\n  }\n  offset=fill(offset,16,' ');\n  final String m=\"\" + pEntry.getLastModified();\n  if (m.length() > 12) {\n    throw new IOException(\"Last modified too long\");\n  }\n  offset+=write(m);\n  offset=fill(offset,28,' ');\n  final String u=\"\" + pEntry.getUserId();\n  if (u.length() > 6) {\n    throw new IOException(\"User id too long\");\n  }\n  offset+=write(u);\n  offset=fill(offset,34,' ');\n  final String g=\"\" + pEntry.getGroupId();\n  if (g.length() > 6) {\n    throw new IOException(\"Group id too long\");\n  }\n  offset+=write(g);\n  offset=fill(offset,40,' ');\n  final String fm=\"\" + Integer.toString(pEntry.getMode(),8);\n  if (fm.length() > 8) {\n    throw new IOException(\"Filemode too long\");\n  }\n  offset+=write(fm);\n  offset=fill(offset,48,' ');\n  final String s=String.valueOf(pEntry.getLength() + (mustAppendName ? n.length() : 0));\n  if (s.length() > 10) {\n    throw new IOException(\"Size too long\");\n  }\n  offset+=write(s);\n  offset=fill(offset,58,' ');\n  offset+=write(ArArchiveEntry.TRAILER);\n  if (mustAppendName) {\n    offset+=write(n);\n  }\n  return offset;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 317,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                "nodePosition": {
                    "charLength": 98,
                    "startLineNumber": 182,
                    "startColumnNumber": 12,
                    "endLineNumber": 183,
                    "endColumnNumber": 63
                },
                "nodeContext": "String.valueOf(pEntry.getLength() + (mustAppendName ? n.length() : 0))",
                "nodeType": "MethodInvocation",
                "astNodeNumber": 14,
                "astHeight": 6
            },
            "tokenLength": 7,
            "type": "long"
        }
    ],
    "positionList": [
        {
            "charLength": 82,
            "startLineNumber": 182,
            "startColumnNumber": 27,
            "endLineNumber": 183,
            "endColumnNumber": 62
        }
    ],
    "layoutRelationDataList": []
}