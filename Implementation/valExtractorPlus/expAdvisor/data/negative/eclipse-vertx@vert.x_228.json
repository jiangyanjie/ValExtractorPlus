{
    "id": 228,
    "expression": "streams",
    "projectName": "eclipse-vertx@vert.x",
    "commitID": "665e20a715caff0cbaa72adfd1bb374c543281f0",
    "filePath": "src/main/java/io/vertx/core/http/impl/Http2ClientConnection.java",
    "occurrences": 1,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "streams",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 133,
                "startColumnNumber": 10,
                "endLineNumber": 133,
                "endColumnNumber": 17
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 50,
                        "startLineNumber": 133,
                        "startColumnNumber": 10,
                        "endLineNumber": 133,
                        "endColumnNumber": 60
                    },
                    "nodeContext": "streams.put(promisedStreamId,pushReq.getStream())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 51,
                        "startLineNumber": 133,
                        "startColumnNumber": 10,
                        "endLineNumber": 133,
                        "endColumnNumber": 61
                    },
                    "nodeContext": "streams.put(promisedStreamId,pushReq.getStream());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
                    "nodePosition": {
                        "charLength": 847,
                        "startLineNumber": 122,
                        "startColumnNumber": 36,
                        "endLineNumber": 135,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  String rawMethod=headers.method().toString();\n  HttpMethod method=HttpUtils.toVertxMethod(rawMethod);\n  String uri=headers.path().toString();\n  String host=headers.authority() != null ? headers.authority().toString() : null;\n  MultiMap headersMap=new Http2HeadersAdaptor(headers);\n  Http2Stream promisedStream=handler.connection().stream(promisedStreamId);\n  HttpClientRequestPushPromise pushReq=new HttpClientRequestPushPromise(this,promisedStream,http2Pool.client,method,rawMethod,uri,host,headersMap);\n  if (metrics.isEnabled()) {\n    pushReq.metric(metrics.responsePushed(metric,localAddress(),remoteAddress(),pushReq));\n  }\n  streams.put(promisedStreamId,pushReq.getStream());\n  pushHandler.handle(pushReq);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 116,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 853,
                        "startLineNumber": 122,
                        "startColumnNumber": 30,
                        "endLineNumber": 135,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "() -> {\n  String rawMethod=headers.method().toString();\n  HttpMethod method=HttpUtils.toVertxMethod(rawMethod);\n  String uri=headers.path().toString();\n  String host=headers.authority() != null ? headers.authority().toString() : null;\n  MultiMap headersMap=new Http2HeadersAdaptor(headers);\n  Http2Stream promisedStream=handler.connection().stream(promisedStreamId);\n  HttpClientRequestPushPromise pushReq=new HttpClientRequestPushPromise(this,promisedStream,http2Pool.client,method,rawMethod,uri,host,headersMap);\n  if (metrics.isEnabled()) {\n    pushReq.metric(metrics.responsePushed(metric,localAddress(),remoteAddress(),pushReq));\n  }\n  streams.put(promisedStreamId,pushReq.getStream());\n  pushHandler.handle(pushReq);\n}\n",
                    "nodeType": "LambdaExpression",
                    "astNodeNumber": 117,
                    "astHeight": 9
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 51,
                    "startLineNumber": 133,
                    "startColumnNumber": 10,
                    "endLineNumber": 133,
                    "endColumnNumber": 61
                },
                "nodeContext": "streams.put(promisedStreamId,pushReq.getStream());\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 8,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "io.vertx.core.http.impl.IntObjectMap<io.vertx.core.http.impl.VertxHttp2Stream>"
        }
    ],
    "positionList": [
        {
            "charLength": 7,
            "startLineNumber": 133,
            "startColumnNumber": 10,
            "endLineNumber": 133,
            "endColumnNumber": 17
        }
    ],
    "layoutRelationDataList": []
}