{
    "id": 2153,
    "expression": "aceTree",
    "projectName": "jackrabbit-oak",
    "commitID": "f061961dc602716553ff9d61959e7801a37a8580",
    "filePath": "oak-core/src/main/java/org/apache/jackrabbit/oak/security/authorization/AccessControlManagerImpl.java",
    "occurrences": 1,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "aceTree",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 7,
                "startLineNumber": 222,
                "startColumnNumber": 20,
                "endLineNumber": 222,
                "endColumnNumber": 27
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 16,
                        "startLineNumber": 222,
                        "startColumnNumber": 20,
                        "endLineNumber": 222,
                        "endColumnNumber": 36
                    },
                    "nodeContext": "aceTree.remove()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 17,
                        "startLineNumber": 222,
                        "startColumnNumber": 20,
                        "endLineNumber": 222,
                        "endColumnNumber": 37
                    },
                    "nodeContext": "aceTree.remove();\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 4,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 57,
                        "startLineNumber": 221,
                        "startColumnNumber": 69,
                        "endLineNumber": 223,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  aceTree.remove();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 5,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 110,
                        "startLineNumber": 221,
                        "startColumnNumber": 16,
                        "endLineNumber": 223,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "for (Tree aceTree : aclNode.getTree().getChildren()) {\n  aceTree.remove();\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 15,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 186,
                        "startLineNumber": 219,
                        "startColumnNumber": 33,
                        "endLineNumber": 224,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  for (  Tree aceTree : aclNode.getTree().getChildren()) {\n    aceTree.remove();\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 16,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 284,
                        "startLineNumber": 219,
                        "startColumnNumber": 12,
                        "endLineNumber": 226,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (aclNode != null) {\n  for (  Tree aceTree : aclNode.getTree().getChildren()) {\n    aceTree.remove();\n  }\n}\n else {\n  aclNode=createAclTree(absPath,tree);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 28,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 1128,
                        "startLineNumber": 213,
                        "startColumnNumber": 15,
                        "endLineNumber": 238,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  Tree tree=getTree(absPath);\n  checkPermission(tree);\n  checkIsAccessControlContent(tree);\n  NodeUtil aclNode=getAclNode(absPath,tree);\n  if (aclNode != null) {\n    for (    Tree aceTree : aclNode.getTree().getChildren()) {\n      aceTree.remove();\n    }\n  }\n else {\n    aclNode=createAclTree(absPath,tree);\n  }\n  ACL acl=(ACL)policy;\n  for (  JackrabbitAccessControlEntry ace : acl.getACEs()) {\n    String nodeName=generateAceName(aclNode,ace.isAllow());\n    String ntName=(ace.isAllow()) ? NT_REP_GRANT_ACE : NT_REP_DENY_ACE;\n    NodeUtil aceNode=aclNode.addChild(nodeName,ntName);\n    aceNode.setString(REP_PRINCIPAL_NAME,ace.getPrincipal().getName());\n    aceNode.setNames(REP_PRIVILEGES,AccessControlUtils.namesFromPrivileges(ace.getPrivileges()));\n    restrictionProvider.writeRestrictions(absPath,aceNode.getTree(),ace);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 135,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1267,
                        "startLineNumber": 210,
                        "startColumnNumber": 8,
                        "endLineNumber": 238,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (policy instanceof PrincipalACL) {\n  throw new RepositoryException(\"not yet implemented\");\n}\n else {\n  Tree tree=getTree(absPath);\n  checkPermission(tree);\n  checkIsAccessControlContent(tree);\n  NodeUtil aclNode=getAclNode(absPath,tree);\n  if (aclNode != null) {\n    for (    Tree aceTree : aclNode.getTree().getChildren()) {\n      aceTree.remove();\n    }\n  }\n else {\n    aclNode=createAclTree(absPath,tree);\n  }\n  ACL acl=(ACL)policy;\n  for (  JackrabbitAccessControlEntry ace : acl.getACEs()) {\n    String nodeName=generateAceName(aclNode,ace.isAllow());\n    String ntName=(ace.isAllow()) ? NT_REP_GRANT_ACE : NT_REP_DENY_ACE;\n    NodeUtil aceNode=aclNode.addChild(nodeName,ntName);\n    aceNode.setString(REP_PRINCIPAL_NAME,ace.getPrincipal().getName());\n    aceNode.setNames(REP_PRIVILEGES,AccessControlUtils.namesFromPrivileges(ace.getPrivileges()));\n    restrictionProvider.writeRestrictions(absPath,aceNode.getTree(),ace);\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 146,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1327,
                        "startLineNumber": 207,
                        "startColumnNumber": 97,
                        "endLineNumber": 239,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  checkValidPolicy(absPath,policy);\n  if (policy instanceof PrincipalACL) {\n    throw new RepositoryException(\"not yet implemented\");\n  }\n else {\n    Tree tree=getTree(absPath);\n    checkPermission(tree);\n    checkIsAccessControlContent(tree);\n    NodeUtil aclNode=getAclNode(absPath,tree);\n    if (aclNode != null) {\n      for (      Tree aceTree : aclNode.getTree().getChildren()) {\n        aceTree.remove();\n      }\n    }\n else {\n      aclNode=createAclTree(absPath,tree);\n    }\n    ACL acl=(ACL)policy;\n    for (    JackrabbitAccessControlEntry ace : acl.getACEs()) {\n      String nodeName=generateAceName(aclNode,ace.isAllow());\n      String ntName=(ace.isAllow()) ? NT_REP_GRANT_ACE : NT_REP_DENY_ACE;\n      NodeUtil aceNode=aclNode.addChild(nodeName,ntName);\n      aceNode.setString(REP_PRINCIPAL_NAME,ace.getPrincipal().getName());\n      aceNode.setNames(REP_PRIVILEGES,AccessControlUtils.namesFromPrivileges(ace.getPrivileges()));\n      restrictionProvider.writeRestrictions(absPath,aceNode.getTree(),ace);\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 152,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1434,
                        "startLineNumber": 206,
                        "startColumnNumber": 4,
                        "endLineNumber": 239,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override public void setPolicy(String absPath,AccessControlPolicy policy) throws RepositoryException {\n  checkValidPolicy(absPath,policy);\n  if (policy instanceof PrincipalACL) {\n    throw new RepositoryException(\"not yet implemented\");\n  }\n else {\n    Tree tree=getTree(absPath);\n    checkPermission(tree);\n    checkIsAccessControlContent(tree);\n    NodeUtil aclNode=getAclNode(absPath,tree);\n    if (aclNode != null) {\n      for (      Tree aceTree : aclNode.getTree().getChildren()) {\n        aceTree.remove();\n      }\n    }\n else {\n      aclNode=createAclTree(absPath,tree);\n    }\n    ACL acl=(ACL)policy;\n    for (    JackrabbitAccessControlEntry ace : acl.getACEs()) {\n      String nodeName=generateAceName(aclNode,ace.isAllow());\n      String ntName=(ace.isAllow()) ? NT_REP_GRANT_ACE : NT_REP_DENY_ACE;\n      NodeUtil aceNode=aclNode.addChild(nodeName,ntName);\n      aceNode.setString(REP_PRINCIPAL_NAME,ace.getPrincipal().getName());\n      aceNode.setNames(REP_PRIVILEGES,AccessControlUtils.namesFromPrivileges(ace.getPrivileges()));\n      restrictionProvider.writeRestrictions(absPath,aceNode.getTree(),ace);\n    }\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 168,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 17,
                    "startLineNumber": 222,
                    "startColumnNumber": 20,
                    "endLineNumber": 222,
                    "endColumnNumber": 37
                },
                "nodeContext": "aceTree.remove();\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 4,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.oak.api.Tree"
        }
    ],
    "positionList": [
        {
            "charLength": 7,
            "startLineNumber": 222,
            "startColumnNumber": 20,
            "endLineNumber": 222,
            "endColumnNumber": 27
        }
    ],
    "layoutRelationDataList": []
}