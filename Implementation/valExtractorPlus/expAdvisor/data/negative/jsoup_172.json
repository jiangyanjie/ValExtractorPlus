{
    "id": 172,
    "expression": "Connection.KeyVal",
    "projectName": "jsoup",
    "commitID": "7d4f963539e6206af7f79af5ef08c8fb7535746c",
    "filePath": "src/main/java/org/jsoup/helper/HttpConnection.java",
    "occurrences": 3,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "Connection.KeyVal",
            "nodeType": "QualifiedName",
            "nodePosition": {
                "charLength": 17,
                "startLineNumber": 1048,
                "startColumnNumber": 29,
                "endLineNumber": 1048,
                "endColumnNumber": 46
            },
            "astNodeNumber": 3,
            "astHeight": 2,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.ParameterizedType,typeArguments]",
                    "nodePosition": {
                        "charLength": 17,
                        "startLineNumber": 1048,
                        "startColumnNumber": 29,
                        "endLineNumber": 1048,
                        "endColumnNumber": 46
                    },
                    "nodeContext": "Connection.KeyVal",
                    "nodeType": "SimpleType",
                    "astNodeNumber": 4,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,type]",
                    "nodePosition": {
                        "charLength": 29,
                        "startLineNumber": 1048,
                        "startColumnNumber": 18,
                        "endLineNumber": 1048,
                        "endColumnNumber": 47
                    },
                    "nodeContext": "Collection<Connection.KeyVal>",
                    "nodeType": "ParameterizedType",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 54,
                        "startLineNumber": 1048,
                        "startColumnNumber": 12,
                        "endLineNumber": 1048,
                        "endColumnNumber": 66
                    },
                    "nodeContext": "final Collection<Connection.KeyVal> data=req.data();\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 14,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2310,
                        "startLineNumber": 1047,
                        "startColumnNumber": 150,
                        "endLineNumber": 1098,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  final Collection<Connection.KeyVal> data=req.data();\n  final BufferedWriter w=new BufferedWriter(new OutputStreamWriter(outputStream,req.postDataCharset()));\n  if (bound != null) {\n    for (    Connection.KeyVal keyVal : data) {\n      w.write(\"--\");\n      w.write(bound);\n      w.write(\"\\r\\n\");\n      w.write(\"Content-Disposition: form-data; name=\\\"\");\n      w.write(encodeMimeName(keyVal.key()));\n      w.write(\"\\\"\");\n      if (keyVal.hasInputStream()) {\n        w.write(\"; filename=\\\"\");\n        w.write(encodeMimeName(keyVal.value()));\n        w.write(\"\\\"\\r\\nContent-Type: \");\n        String contentType=keyVal.contentType();\n        w.write(contentType != null ? contentType : DefaultUploadType);\n        w.write(\"\\r\\n\\r\\n\");\n        w.flush();\n        DataUtil.crossStreams(keyVal.inputStream(),outputStream);\n        outputStream.flush();\n      }\n else {\n        w.write(\"\\r\\n\\r\\n\");\n        w.write(keyVal.value());\n      }\n      w.write(\"\\r\\n\");\n    }\n    w.write(\"--\");\n    w.write(bound);\n    w.write(\"--\");\n  }\n else   if (req.requestBody() != null) {\n    w.write(req.requestBody());\n  }\n else {\n    boolean first=true;\n    for (    Connection.KeyVal keyVal : data) {\n      if (!first)       w.append('&');\n else       first=false;\n      w.write(URLEncoder.encode(keyVal.key(),req.postDataCharset()));\n      w.write('=');\n      w.write(URLEncoder.encode(keyVal.value(),req.postDataCharset()));\n    }\n  }\n  w.close();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 251,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2452,
                        "startLineNumber": 1047,
                        "startColumnNumber": 8,
                        "endLineNumber": 1098,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "private static void writePost(final Connection.Request req,final OutputStream outputStream,@Nullable final String bound) throws IOException {\n  final Collection<Connection.KeyVal> data=req.data();\n  final BufferedWriter w=new BufferedWriter(new OutputStreamWriter(outputStream,req.postDataCharset()));\n  if (bound != null) {\n    for (    Connection.KeyVal keyVal : data) {\n      w.write(\"--\");\n      w.write(bound);\n      w.write(\"\\r\\n\");\n      w.write(\"Content-Disposition: form-data; name=\\\"\");\n      w.write(encodeMimeName(keyVal.key()));\n      w.write(\"\\\"\");\n      if (keyVal.hasInputStream()) {\n        w.write(\"; filename=\\\"\");\n        w.write(encodeMimeName(keyVal.value()));\n        w.write(\"\\\"\\r\\nContent-Type: \");\n        String contentType=keyVal.contentType();\n        w.write(contentType != null ? contentType : DefaultUploadType);\n        w.write(\"\\r\\n\\r\\n\");\n        w.flush();\n        DataUtil.crossStreams(keyVal.inputStream(),outputStream);\n        outputStream.flush();\n      }\n else {\n        w.write(\"\\r\\n\\r\\n\");\n        w.write(keyVal.value());\n      }\n      w.write(\"\\r\\n\");\n    }\n    w.write(\"--\");\n    w.write(bound);\n    w.write(\"--\");\n  }\n else   if (req.requestBody() != null) {\n    w.write(req.requestBody());\n  }\n else {\n    boolean first=true;\n    for (    Connection.KeyVal keyVal : data) {\n      if (!first)       w.append('&');\n else       first=false;\n      w.write(URLEncoder.encode(keyVal.key(),req.postDataCharset()));\n      w.write('=');\n      w.write(URLEncoder.encode(keyVal.value(),req.postDataCharset()));\n    }\n  }\n  w.close();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 277,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 54,
                    "startLineNumber": 1048,
                    "startColumnNumber": 12,
                    "endLineNumber": 1048,
                    "endColumnNumber": 66
                },
                "nodeContext": "final Collection<Connection.KeyVal> data=req.data();\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 14,
                "astHeight": 5
            },
            "tokenLength": 2,
            "type": "org.jsoup.Connection.KeyVal"
        },
        {
            "nodeContext": "Connection.KeyVal",
            "nodeType": "QualifiedName",
            "nodePosition": {
                "charLength": 17,
                "startLineNumber": 1053,
                "startColumnNumber": 21,
                "endLineNumber": 1053,
                "endColumnNumber": 38
            },
            "astNodeNumber": 3,
            "astHeight": 2,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.SingleVariableDeclaration,type]",
                    "nodePosition": {
                        "charLength": 17,
                        "startLineNumber": 1053,
                        "startColumnNumber": 21,
                        "endLineNumber": 1053,
                        "endColumnNumber": 38
                    },
                    "nodeContext": "Connection.KeyVal",
                    "nodeType": "SimpleType",
                    "astNodeNumber": 4,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,parameter]",
                    "nodePosition": {
                        "charLength": 24,
                        "startLineNumber": 1053,
                        "startColumnNumber": 21,
                        "endLineNumber": 1053,
                        "endColumnNumber": 45
                    },
                    "nodeContext": "Connection.KeyVal keyVal",
                    "nodeType": "SingleVariableDeclaration",
                    "astNodeNumber": 6,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1129,
                        "startLineNumber": 1053,
                        "startColumnNumber": 16,
                        "endLineNumber": 1075,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "for (Connection.KeyVal keyVal : data) {\n  w.write(\"--\");\n  w.write(bound);\n  w.write(\"\\r\\n\");\n  w.write(\"Content-Disposition: form-data; name=\\\"\");\n  w.write(encodeMimeName(keyVal.key()));\n  w.write(\"\\\"\");\n  if (keyVal.hasInputStream()) {\n    w.write(\"; filename=\\\"\");\n    w.write(encodeMimeName(keyVal.value()));\n    w.write(\"\\\"\\r\\nContent-Type: \");\n    String contentType=keyVal.contentType();\n    w.write(contentType != null ? contentType : DefaultUploadType);\n    w.write(\"\\r\\n\\r\\n\");\n    w.flush();\n    DataUtil.crossStreams(keyVal.inputStream(),outputStream);\n    outputStream.flush();\n  }\n else {\n    w.write(\"\\r\\n\\r\\n\");\n    w.write(keyVal.value());\n  }\n  w.write(\"\\r\\n\");\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 124,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 1322,
                        "startLineNumber": 1051,
                        "startColumnNumber": 31,
                        "endLineNumber": 1079,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  for (  Connection.KeyVal keyVal : data) {\n    w.write(\"--\");\n    w.write(bound);\n    w.write(\"\\r\\n\");\n    w.write(\"Content-Disposition: form-data; name=\\\"\");\n    w.write(encodeMimeName(keyVal.key()));\n    w.write(\"\\\"\");\n    if (keyVal.hasInputStream()) {\n      w.write(\"; filename=\\\"\");\n      w.write(encodeMimeName(keyVal.value()));\n      w.write(\"\\\"\\r\\nContent-Type: \");\n      String contentType=keyVal.contentType();\n      w.write(contentType != null ? contentType : DefaultUploadType);\n      w.write(\"\\r\\n\\r\\n\");\n      w.flush();\n      DataUtil.crossStreams(keyVal.inputStream(),outputStream);\n      outputStream.flush();\n    }\n else {\n      w.write(\"\\r\\n\\r\\n\");\n      w.write(keyVal.value());\n    }\n    w.write(\"\\r\\n\");\n  }\n  w.write(\"--\");\n  w.write(bound);\n  w.write(\"--\");\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 140,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 2077,
                        "startLineNumber": 1051,
                        "startColumnNumber": 12,
                        "endLineNumber": 1096,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (bound != null) {\n  for (  Connection.KeyVal keyVal : data) {\n    w.write(\"--\");\n    w.write(bound);\n    w.write(\"\\r\\n\");\n    w.write(\"Content-Disposition: form-data; name=\\\"\");\n    w.write(encodeMimeName(keyVal.key()));\n    w.write(\"\\\"\");\n    if (keyVal.hasInputStream()) {\n      w.write(\"; filename=\\\"\");\n      w.write(encodeMimeName(keyVal.value()));\n      w.write(\"\\\"\\r\\nContent-Type: \");\n      String contentType=keyVal.contentType();\n      w.write(contentType != null ? contentType : DefaultUploadType);\n      w.write(\"\\r\\n\\r\\n\");\n      w.flush();\n      DataUtil.crossStreams(keyVal.inputStream(),outputStream);\n      outputStream.flush();\n    }\n else {\n      w.write(\"\\r\\n\\r\\n\");\n      w.write(keyVal.value());\n    }\n    w.write(\"\\r\\n\");\n  }\n  w.write(\"--\");\n  w.write(bound);\n  w.write(\"--\");\n}\n else if (req.requestBody() != null) {\n  w.write(req.requestBody());\n}\n else {\n  boolean first=true;\n  for (  Connection.KeyVal keyVal : data) {\n    if (!first)     w.append('&');\n else     first=false;\n    w.write(URLEncoder.encode(keyVal.key(),req.postDataCharset()));\n    w.write('=');\n    w.write(URLEncoder.encode(keyVal.value(),req.postDataCharset()));\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 216,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2310,
                        "startLineNumber": 1047,
                        "startColumnNumber": 150,
                        "endLineNumber": 1098,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  final Collection<Connection.KeyVal> data=req.data();\n  final BufferedWriter w=new BufferedWriter(new OutputStreamWriter(outputStream,req.postDataCharset()));\n  if (bound != null) {\n    for (    Connection.KeyVal keyVal : data) {\n      w.write(\"--\");\n      w.write(bound);\n      w.write(\"\\r\\n\");\n      w.write(\"Content-Disposition: form-data; name=\\\"\");\n      w.write(encodeMimeName(keyVal.key()));\n      w.write(\"\\\"\");\n      if (keyVal.hasInputStream()) {\n        w.write(\"; filename=\\\"\");\n        w.write(encodeMimeName(keyVal.value()));\n        w.write(\"\\\"\\r\\nContent-Type: \");\n        String contentType=keyVal.contentType();\n        w.write(contentType != null ? contentType : DefaultUploadType);\n        w.write(\"\\r\\n\\r\\n\");\n        w.flush();\n        DataUtil.crossStreams(keyVal.inputStream(),outputStream);\n        outputStream.flush();\n      }\n else {\n        w.write(\"\\r\\n\\r\\n\");\n        w.write(keyVal.value());\n      }\n      w.write(\"\\r\\n\");\n    }\n    w.write(\"--\");\n    w.write(bound);\n    w.write(\"--\");\n  }\n else   if (req.requestBody() != null) {\n    w.write(req.requestBody());\n  }\n else {\n    boolean first=true;\n    for (    Connection.KeyVal keyVal : data) {\n      if (!first)       w.append('&');\n else       first=false;\n      w.write(URLEncoder.encode(keyVal.key(),req.postDataCharset()));\n      w.write('=');\n      w.write(URLEncoder.encode(keyVal.value(),req.postDataCharset()));\n    }\n  }\n  w.close();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 251,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2452,
                        "startLineNumber": 1047,
                        "startColumnNumber": 8,
                        "endLineNumber": 1098,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "private static void writePost(final Connection.Request req,final OutputStream outputStream,@Nullable final String bound) throws IOException {\n  final Collection<Connection.KeyVal> data=req.data();\n  final BufferedWriter w=new BufferedWriter(new OutputStreamWriter(outputStream,req.postDataCharset()));\n  if (bound != null) {\n    for (    Connection.KeyVal keyVal : data) {\n      w.write(\"--\");\n      w.write(bound);\n      w.write(\"\\r\\n\");\n      w.write(\"Content-Disposition: form-data; name=\\\"\");\n      w.write(encodeMimeName(keyVal.key()));\n      w.write(\"\\\"\");\n      if (keyVal.hasInputStream()) {\n        w.write(\"; filename=\\\"\");\n        w.write(encodeMimeName(keyVal.value()));\n        w.write(\"\\\"\\r\\nContent-Type: \");\n        String contentType=keyVal.contentType();\n        w.write(contentType != null ? contentType : DefaultUploadType);\n        w.write(\"\\r\\n\\r\\n\");\n        w.flush();\n        DataUtil.crossStreams(keyVal.inputStream(),outputStream);\n        outputStream.flush();\n      }\n else {\n        w.write(\"\\r\\n\\r\\n\");\n        w.write(keyVal.value());\n      }\n      w.write(\"\\r\\n\");\n    }\n    w.write(\"--\");\n    w.write(bound);\n    w.write(\"--\");\n  }\n else   if (req.requestBody() != null) {\n    w.write(req.requestBody());\n  }\n else {\n    boolean first=true;\n    for (    Connection.KeyVal keyVal : data) {\n      if (!first)       w.append('&');\n else       first=false;\n      w.write(URLEncoder.encode(keyVal.key(),req.postDataCharset()));\n      w.write('=');\n      w.write(URLEncoder.encode(keyVal.value(),req.postDataCharset()));\n    }\n  }\n  w.close();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 277,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,parameter]",
                "nodePosition": {
                    "charLength": 24,
                    "startLineNumber": 1053,
                    "startColumnNumber": 21,
                    "endLineNumber": 1053,
                    "endColumnNumber": 45
                },
                "nodeContext": "Connection.KeyVal keyVal",
                "nodeType": "SingleVariableDeclaration",
                "astNodeNumber": 6,
                "astHeight": 4
            },
            "tokenLength": 2,
            "type": "org.jsoup.Connection.KeyVal"
        },
        {
            "nodeContext": "Connection.KeyVal",
            "nodeType": "QualifiedName",
            "nodePosition": {
                "charLength": 17,
                "startLineNumber": 1086,
                "startColumnNumber": 21,
                "endLineNumber": 1086,
                "endColumnNumber": 38
            },
            "astNodeNumber": 3,
            "astHeight": 2,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.SingleVariableDeclaration,type]",
                    "nodePosition": {
                        "charLength": 17,
                        "startLineNumber": 1086,
                        "startColumnNumber": 21,
                        "endLineNumber": 1086,
                        "endColumnNumber": 38
                    },
                    "nodeContext": "Connection.KeyVal",
                    "nodeType": "SimpleType",
                    "astNodeNumber": 4,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,parameter]",
                    "nodePosition": {
                        "charLength": 24,
                        "startLineNumber": 1086,
                        "startColumnNumber": 21,
                        "endLineNumber": 1086,
                        "endColumnNumber": 45
                    },
                    "nodeContext": "Connection.KeyVal keyVal",
                    "nodeType": "SingleVariableDeclaration",
                    "astNodeNumber": 6,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 399,
                        "startLineNumber": 1086,
                        "startColumnNumber": 16,
                        "endLineNumber": 1095,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "for (Connection.KeyVal keyVal : data) {\n  if (!first)   w.append('&');\n else   first=false;\n  w.write(URLEncoder.encode(keyVal.key(),req.postDataCharset()));\n  w.write('=');\n  w.write(URLEncoder.encode(keyVal.value(),req.postDataCharset()));\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 52,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 542,
                        "startLineNumber": 1083,
                        "startColumnNumber": 17,
                        "endLineNumber": 1096,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  boolean first=true;\n  for (  Connection.KeyVal keyVal : data) {\n    if (!first)     w.append('&');\n else     first=false;\n    w.write(URLEncoder.encode(keyVal.key(),req.postDataCharset()));\n    w.write('=');\n    w.write(URLEncoder.encode(keyVal.value(),req.postDataCharset()));\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 58,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
                    "nodePosition": {
                        "charLength": 730,
                        "startLineNumber": 1079,
                        "startColumnNumber": 19,
                        "endLineNumber": 1096,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (req.requestBody() != null) {\n  w.write(req.requestBody());\n}\n else {\n  boolean first=true;\n  for (  Connection.KeyVal keyVal : data) {\n    if (!first)     w.append('&');\n else     first=false;\n    w.write(URLEncoder.encode(keyVal.key(),req.postDataCharset()));\n    w.write('=');\n    w.write(URLEncoder.encode(keyVal.value(),req.postDataCharset()));\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 72,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 2077,
                        "startLineNumber": 1051,
                        "startColumnNumber": 12,
                        "endLineNumber": 1096,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (bound != null) {\n  for (  Connection.KeyVal keyVal : data) {\n    w.write(\"--\");\n    w.write(bound);\n    w.write(\"\\r\\n\");\n    w.write(\"Content-Disposition: form-data; name=\\\"\");\n    w.write(encodeMimeName(keyVal.key()));\n    w.write(\"\\\"\");\n    if (keyVal.hasInputStream()) {\n      w.write(\"; filename=\\\"\");\n      w.write(encodeMimeName(keyVal.value()));\n      w.write(\"\\\"\\r\\nContent-Type: \");\n      String contentType=keyVal.contentType();\n      w.write(contentType != null ? contentType : DefaultUploadType);\n      w.write(\"\\r\\n\\r\\n\");\n      w.flush();\n      DataUtil.crossStreams(keyVal.inputStream(),outputStream);\n      outputStream.flush();\n    }\n else {\n      w.write(\"\\r\\n\\r\\n\");\n      w.write(keyVal.value());\n    }\n    w.write(\"\\r\\n\");\n  }\n  w.write(\"--\");\n  w.write(bound);\n  w.write(\"--\");\n}\n else if (req.requestBody() != null) {\n  w.write(req.requestBody());\n}\n else {\n  boolean first=true;\n  for (  Connection.KeyVal keyVal : data) {\n    if (!first)     w.append('&');\n else     first=false;\n    w.write(URLEncoder.encode(keyVal.key(),req.postDataCharset()));\n    w.write('=');\n    w.write(URLEncoder.encode(keyVal.value(),req.postDataCharset()));\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 216,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 2310,
                        "startLineNumber": 1047,
                        "startColumnNumber": 150,
                        "endLineNumber": 1098,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  final Collection<Connection.KeyVal> data=req.data();\n  final BufferedWriter w=new BufferedWriter(new OutputStreamWriter(outputStream,req.postDataCharset()));\n  if (bound != null) {\n    for (    Connection.KeyVal keyVal : data) {\n      w.write(\"--\");\n      w.write(bound);\n      w.write(\"\\r\\n\");\n      w.write(\"Content-Disposition: form-data; name=\\\"\");\n      w.write(encodeMimeName(keyVal.key()));\n      w.write(\"\\\"\");\n      if (keyVal.hasInputStream()) {\n        w.write(\"; filename=\\\"\");\n        w.write(encodeMimeName(keyVal.value()));\n        w.write(\"\\\"\\r\\nContent-Type: \");\n        String contentType=keyVal.contentType();\n        w.write(contentType != null ? contentType : DefaultUploadType);\n        w.write(\"\\r\\n\\r\\n\");\n        w.flush();\n        DataUtil.crossStreams(keyVal.inputStream(),outputStream);\n        outputStream.flush();\n      }\n else {\n        w.write(\"\\r\\n\\r\\n\");\n        w.write(keyVal.value());\n      }\n      w.write(\"\\r\\n\");\n    }\n    w.write(\"--\");\n    w.write(bound);\n    w.write(\"--\");\n  }\n else   if (req.requestBody() != null) {\n    w.write(req.requestBody());\n  }\n else {\n    boolean first=true;\n    for (    Connection.KeyVal keyVal : data) {\n      if (!first)       w.append('&');\n else       first=false;\n      w.write(URLEncoder.encode(keyVal.key(),req.postDataCharset()));\n      w.write('=');\n      w.write(URLEncoder.encode(keyVal.value(),req.postDataCharset()));\n    }\n  }\n  w.close();\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 251,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2452,
                        "startLineNumber": 1047,
                        "startColumnNumber": 8,
                        "endLineNumber": 1098,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "private static void writePost(final Connection.Request req,final OutputStream outputStream,@Nullable final String bound) throws IOException {\n  final Collection<Connection.KeyVal> data=req.data();\n  final BufferedWriter w=new BufferedWriter(new OutputStreamWriter(outputStream,req.postDataCharset()));\n  if (bound != null) {\n    for (    Connection.KeyVal keyVal : data) {\n      w.write(\"--\");\n      w.write(bound);\n      w.write(\"\\r\\n\");\n      w.write(\"Content-Disposition: form-data; name=\\\"\");\n      w.write(encodeMimeName(keyVal.key()));\n      w.write(\"\\\"\");\n      if (keyVal.hasInputStream()) {\n        w.write(\"; filename=\\\"\");\n        w.write(encodeMimeName(keyVal.value()));\n        w.write(\"\\\"\\r\\nContent-Type: \");\n        String contentType=keyVal.contentType();\n        w.write(contentType != null ? contentType : DefaultUploadType);\n        w.write(\"\\r\\n\\r\\n\");\n        w.flush();\n        DataUtil.crossStreams(keyVal.inputStream(),outputStream);\n        outputStream.flush();\n      }\n else {\n        w.write(\"\\r\\n\\r\\n\");\n        w.write(keyVal.value());\n      }\n      w.write(\"\\r\\n\");\n    }\n    w.write(\"--\");\n    w.write(bound);\n    w.write(\"--\");\n  }\n else   if (req.requestBody() != null) {\n    w.write(req.requestBody());\n  }\n else {\n    boolean first=true;\n    for (    Connection.KeyVal keyVal : data) {\n      if (!first)       w.append('&');\n else       first=false;\n      w.write(URLEncoder.encode(keyVal.key(),req.postDataCharset()));\n      w.write('=');\n      w.write(URLEncoder.encode(keyVal.value(),req.postDataCharset()));\n    }\n  }\n  w.close();\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 277,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,parameter]",
                "nodePosition": {
                    "charLength": 24,
                    "startLineNumber": 1086,
                    "startColumnNumber": 21,
                    "endLineNumber": 1086,
                    "endColumnNumber": 45
                },
                "nodeContext": "Connection.KeyVal keyVal",
                "nodeType": "SingleVariableDeclaration",
                "astNodeNumber": 6,
                "astHeight": 4
            },
            "tokenLength": 2,
            "type": "org.jsoup.Connection.KeyVal"
        }
    ],
    "positionList": [
        {
            "charLength": 17,
            "startLineNumber": 1048,
            "startColumnNumber": 29,
            "endLineNumber": 1048,
            "endColumnNumber": 46
        },
        {
            "charLength": 17,
            "startLineNumber": 1053,
            "startColumnNumber": 21,
            "endLineNumber": 1053,
            "endColumnNumber": 38
        },
        {
            "charLength": 17,
            "startLineNumber": 1086,
            "startColumnNumber": 21,
            "endLineNumber": 1086,
            "endColumnNumber": 38
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 6
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 5
        }
    ]
}