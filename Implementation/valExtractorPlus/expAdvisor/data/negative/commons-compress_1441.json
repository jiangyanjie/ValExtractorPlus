{
    "id": 1441,
    "expression": "data",
    "projectName": "commons-compress",
    "commitID": "1470c26cadbbfe6a7150f862766eaa30937fbd2b",
    "filePath": "src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java",
    "occurrences": 11,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "data",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 231,
                "startColumnNumber": 48,
                "endLineNumber": 231,
                "endColumnNumber": 52
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 11,
                        "startLineNumber": 231,
                        "startColumnNumber": 48,
                        "endLineNumber": 231,
                        "endColumnNumber": 59
                    },
                    "nodeContext": "data.length",
                    "nodeType": "QualifiedName",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 15,
                        "startLineNumber": 231,
                        "startColumnNumber": 48,
                        "endLineNumber": 231,
                        "endColumnNumber": 63
                    },
                    "nodeContext": "data.length > 0",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 90,
                        "startLineNumber": 231,
                        "startColumnNumber": 48,
                        "endLineNumber": 232,
                        "endColumnNumber": 73
                    },
                    "nodeContext": "data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 16,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 116,
                        "startLineNumber": 231,
                        "startColumnNumber": 22,
                        "endLineNumber": 232,
                        "endColumnNumber": 73
                    },
                    "nodeContext": "lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 18,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 131,
                        "startLineNumber": 231,
                        "startColumnNumber": 8,
                        "endLineNumber": 232,
                        "endColumnNumber": 74
                    },
                    "nodeContext": "final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 21,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1368,
                        "startLineNumber": 230,
                        "startColumnNumber": 76,
                        "endLineNumber": 262,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getLocalFileDataLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] local=data[i].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n      start+=local.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] local=data[data.length - 1].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 196,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1606,
                        "startLineNumber": 225,
                        "startColumnNumber": 4,
                        "endLineNumber": 262,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Merges the local file data fields of the given ZipExtraFields.\n * @param data an array of ExtraFiles\n * @return an array of bytes\n */\npublic static byte[] mergeLocalFileDataData(final ZipExtraField[] data){\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getLocalFileDataLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] local=data[i].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n      start+=local.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] local=data[data.length - 1].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 211,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                "nodePosition": {
                    "charLength": 15,
                    "startLineNumber": 231,
                    "startColumnNumber": 48,
                    "endLineNumber": 231,
                    "endColumnNumber": 63
                },
                "nodeContext": "data.length > 0",
                "nodeType": "InfixExpression",
                "astNodeNumber": 5,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "org.apache.commons.compress.archivers.zip.ZipExtraField[]"
        },
        {
            "nodeContext": "data",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 232,
                "startColumnNumber": 15,
                "endLineNumber": 232,
                "endColumnNumber": 19
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InstanceofExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 21,
                        "startLineNumber": 232,
                        "startColumnNumber": 15,
                        "endLineNumber": 232,
                        "endColumnNumber": 36
                    },
                    "nodeContext": "data[data.length - 1]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 58,
                        "startLineNumber": 232,
                        "startColumnNumber": 15,
                        "endLineNumber": 232,
                        "endColumnNumber": 73
                    },
                    "nodeContext": "data[data.length - 1] instanceof UnparseableExtraFieldData",
                    "nodeType": "InstanceofExpression",
                    "astNodeNumber": 10,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 90,
                        "startLineNumber": 231,
                        "startColumnNumber": 48,
                        "endLineNumber": 232,
                        "endColumnNumber": 73
                    },
                    "nodeContext": "data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 16,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 116,
                        "startLineNumber": 231,
                        "startColumnNumber": 22,
                        "endLineNumber": 232,
                        "endColumnNumber": 73
                    },
                    "nodeContext": "lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 18,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 131,
                        "startLineNumber": 231,
                        "startColumnNumber": 8,
                        "endLineNumber": 232,
                        "endColumnNumber": 74
                    },
                    "nodeContext": "final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 21,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1368,
                        "startLineNumber": 230,
                        "startColumnNumber": 76,
                        "endLineNumber": 262,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getLocalFileDataLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] local=data[i].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n      start+=local.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] local=data[data.length - 1].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 196,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1606,
                        "startLineNumber": 225,
                        "startColumnNumber": 4,
                        "endLineNumber": 262,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Merges the local file data fields of the given ZipExtraFields.\n * @param data an array of ExtraFiles\n * @return an array of bytes\n */\npublic static byte[] mergeLocalFileDataData(final ZipExtraField[] data){\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getLocalFileDataLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] local=data[i].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n      start+=local.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] local=data[data.length - 1].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 211,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                "nodePosition": {
                    "charLength": 58,
                    "startLineNumber": 232,
                    "startColumnNumber": 15,
                    "endLineNumber": 232,
                    "endColumnNumber": 73
                },
                "nodeContext": "data[data.length - 1] instanceof UnparseableExtraFieldData",
                "nodeType": "InstanceofExpression",
                "astNodeNumber": 10,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "org.apache.commons.compress.archivers.zip.ZipExtraField[]"
        },
        {
            "nodeContext": "data",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 232,
                "startColumnNumber": 20,
                "endLineNumber": 232,
                "endColumnNumber": 24
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 11,
                        "startLineNumber": 232,
                        "startColumnNumber": 20,
                        "endLineNumber": 232,
                        "endColumnNumber": 31
                    },
                    "nodeContext": "data.length",
                    "nodeType": "QualifiedName",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
                    "nodePosition": {
                        "charLength": 15,
                        "startLineNumber": 232,
                        "startColumnNumber": 20,
                        "endLineNumber": 232,
                        "endColumnNumber": 35
                    },
                    "nodeContext": "data.length - 1",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InstanceofExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 21,
                        "startLineNumber": 232,
                        "startColumnNumber": 15,
                        "endLineNumber": 232,
                        "endColumnNumber": 36
                    },
                    "nodeContext": "data[data.length - 1]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 58,
                        "startLineNumber": 232,
                        "startColumnNumber": 15,
                        "endLineNumber": 232,
                        "endColumnNumber": 73
                    },
                    "nodeContext": "data[data.length - 1] instanceof UnparseableExtraFieldData",
                    "nodeType": "InstanceofExpression",
                    "astNodeNumber": 10,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 90,
                        "startLineNumber": 231,
                        "startColumnNumber": 48,
                        "endLineNumber": 232,
                        "endColumnNumber": 73
                    },
                    "nodeContext": "data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 16,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 116,
                        "startLineNumber": 231,
                        "startColumnNumber": 22,
                        "endLineNumber": 232,
                        "endColumnNumber": 73
                    },
                    "nodeContext": "lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 18,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 131,
                        "startLineNumber": 231,
                        "startColumnNumber": 8,
                        "endLineNumber": 232,
                        "endColumnNumber": 74
                    },
                    "nodeContext": "final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 21,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1368,
                        "startLineNumber": 230,
                        "startColumnNumber": 76,
                        "endLineNumber": 262,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getLocalFileDataLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] local=data[i].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n      start+=local.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] local=data[data.length - 1].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 196,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1606,
                        "startLineNumber": 225,
                        "startColumnNumber": 4,
                        "endLineNumber": 262,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Merges the local file data fields of the given ZipExtraFields.\n * @param data an array of ExtraFiles\n * @return an array of bytes\n */\npublic static byte[] mergeLocalFileDataData(final ZipExtraField[] data){\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getLocalFileDataLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] local=data[i].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n      start+=local.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] local=data[data.length - 1].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 211,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                "nodePosition": {
                    "charLength": 58,
                    "startLineNumber": 232,
                    "startColumnNumber": 15,
                    "endLineNumber": 232,
                    "endColumnNumber": 73
                },
                "nodeContext": "data[data.length - 1] instanceof UnparseableExtraFieldData",
                "nodeType": "InstanceofExpression",
                "astNodeNumber": 10,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "org.apache.commons.compress.archivers.zip.ZipExtraField[]"
        },
        {
            "nodeContext": "data",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 234,
                "startColumnNumber": 38,
                "endLineNumber": 234,
                "endColumnNumber": 42
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 11,
                        "startLineNumber": 234,
                        "startColumnNumber": 38,
                        "endLineNumber": 234,
                        "endColumnNumber": 49
                    },
                    "nodeContext": "data.length",
                    "nodeType": "QualifiedName",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
                    "nodePosition": {
                        "charLength": 15,
                        "startLineNumber": 234,
                        "startColumnNumber": 38,
                        "endLineNumber": 234,
                        "endColumnNumber": 53
                    },
                    "nodeContext": "data.length - 1",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 55,
                        "startLineNumber": 234,
                        "startColumnNumber": 12,
                        "endLineNumber": 234,
                        "endColumnNumber": 67
                    },
                    "nodeContext": "lastIsUnparseableHolder ? data.length - 1 : data.length",
                    "nodeType": "ConditionalExpression",
                    "astNodeNumber": 10,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 93,
                        "startLineNumber": 233,
                        "startColumnNumber": 18,
                        "endLineNumber": 234,
                        "endColumnNumber": 67
                    },
                    "nodeContext": "regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 12,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 104,
                        "startLineNumber": 233,
                        "startColumnNumber": 8,
                        "endLineNumber": 234,
                        "endColumnNumber": 68
                    },
                    "nodeContext": "final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 15,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1368,
                        "startLineNumber": 230,
                        "startColumnNumber": 76,
                        "endLineNumber": 262,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getLocalFileDataLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] local=data[i].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n      start+=local.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] local=data[data.length - 1].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 196,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1606,
                        "startLineNumber": 225,
                        "startColumnNumber": 4,
                        "endLineNumber": 262,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Merges the local file data fields of the given ZipExtraFields.\n * @param data an array of ExtraFiles\n * @return an array of bytes\n */\npublic static byte[] mergeLocalFileDataData(final ZipExtraField[] data){\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getLocalFileDataLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] local=data[i].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n      start+=local.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] local=data[data.length - 1].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 211,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                "nodePosition": {
                    "charLength": 55,
                    "startLineNumber": 234,
                    "startColumnNumber": 12,
                    "endLineNumber": 234,
                    "endColumnNumber": 67
                },
                "nodeContext": "lastIsUnparseableHolder ? data.length - 1 : data.length",
                "nodeType": "ConditionalExpression",
                "astNodeNumber": 10,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.commons.compress.archivers.zip.ZipExtraField[]"
        },
        {
            "nodeContext": "data",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 234,
                "startColumnNumber": 56,
                "endLineNumber": 234,
                "endColumnNumber": 60
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
                    "nodePosition": {
                        "charLength": 11,
                        "startLineNumber": 234,
                        "startColumnNumber": 56,
                        "endLineNumber": 234,
                        "endColumnNumber": 67
                    },
                    "nodeContext": "data.length",
                    "nodeType": "QualifiedName",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 55,
                        "startLineNumber": 234,
                        "startColumnNumber": 12,
                        "endLineNumber": 234,
                        "endColumnNumber": 67
                    },
                    "nodeContext": "lastIsUnparseableHolder ? data.length - 1 : data.length",
                    "nodeType": "ConditionalExpression",
                    "astNodeNumber": 10,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 93,
                        "startLineNumber": 233,
                        "startColumnNumber": 18,
                        "endLineNumber": 234,
                        "endColumnNumber": 67
                    },
                    "nodeContext": "regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 12,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 104,
                        "startLineNumber": 233,
                        "startColumnNumber": 8,
                        "endLineNumber": 234,
                        "endColumnNumber": 68
                    },
                    "nodeContext": "final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 15,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1368,
                        "startLineNumber": 230,
                        "startColumnNumber": 76,
                        "endLineNumber": 262,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getLocalFileDataLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] local=data[i].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n      start+=local.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] local=data[data.length - 1].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 196,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1606,
                        "startLineNumber": 225,
                        "startColumnNumber": 4,
                        "endLineNumber": 262,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Merges the local file data fields of the given ZipExtraFields.\n * @param data an array of ExtraFiles\n * @return an array of bytes\n */\npublic static byte[] mergeLocalFileDataData(final ZipExtraField[] data){\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getLocalFileDataLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] local=data[i].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n      start+=local.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] local=data[data.length - 1].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 211,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                "nodePosition": {
                    "charLength": 55,
                    "startLineNumber": 234,
                    "startColumnNumber": 12,
                    "endLineNumber": 234,
                    "endColumnNumber": 67
                },
                "nodeContext": "lastIsUnparseableHolder ? data.length - 1 : data.length",
                "nodeType": "ConditionalExpression",
                "astNodeNumber": 10,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.commons.compress.archivers.zip.ZipExtraField[]"
        },
        {
            "nodeContext": "data",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 237,
                "startColumnNumber": 43,
                "endLineNumber": 237,
                "endColumnNumber": 47
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 118,
                        "startLineNumber": 237,
                        "startColumnNumber": 8,
                        "endLineNumber": 239,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (final ZipExtraField element : data) {\n  sum+=element.getLocalFileDataLength().getValue();\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 16,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1368,
                        "startLineNumber": 230,
                        "startColumnNumber": 76,
                        "endLineNumber": 262,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getLocalFileDataLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] local=data[i].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n      start+=local.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] local=data[data.length - 1].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 196,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1606,
                        "startLineNumber": 225,
                        "startColumnNumber": 4,
                        "endLineNumber": 262,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Merges the local file data fields of the given ZipExtraFields.\n * @param data an array of ExtraFiles\n * @return an array of bytes\n */\npublic static byte[] mergeLocalFileDataData(final ZipExtraField[] data){\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getLocalFileDataLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] local=data[i].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n      start+=local.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] local=data[data.length - 1].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 211,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 118,
                    "startLineNumber": 237,
                    "startColumnNumber": 8,
                    "endLineNumber": 239,
                    "endColumnNumber": 9
                },
                "nodeContext": "for (final ZipExtraField element : data) {\n  sum+=element.getLocalFileDataLength().getValue();\n}\n",
                "nodeType": "EnhancedForStatement",
                "astNodeNumber": 16,
                "astHeight": 7
            },
            "tokenLength": 1,
            "type": "org.apache.commons.compress.archivers.zip.ZipExtraField[]"
        },
        {
            "nodeContext": "data",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 244,
                "startColumnNumber": 29,
                "endLineNumber": 244,
                "endColumnNumber": 33
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 7,
                        "startLineNumber": 244,
                        "startColumnNumber": 29,
                        "endLineNumber": 244,
                        "endColumnNumber": 36
                    },
                    "nodeContext": "data[i]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 21,
                        "startLineNumber": 244,
                        "startColumnNumber": 29,
                        "endLineNumber": 244,
                        "endColumnNumber": 50
                    },
                    "nodeContext": "data[i].getHeaderId()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 32,
                        "startLineNumber": 244,
                        "startColumnNumber": 29,
                        "endLineNumber": 244,
                        "endColumnNumber": 61
                    },
                    "nodeContext": "data[i].getHeaderId().getBytes()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 101,
                        "startLineNumber": 244,
                        "startColumnNumber": 12,
                        "endLineNumber": 245,
                        "endColumnNumber": 49
                    },
                    "nodeContext": "System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 14,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 102,
                        "startLineNumber": 244,
                        "startColumnNumber": 12,
                        "endLineNumber": 245,
                        "endColumnNumber": 50
                    },
                    "nodeContext": "System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 15,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 516,
                        "startLineNumber": 243,
                        "startColumnNumber": 57,
                        "endLineNumber": 254,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n  System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n  start+=WORD;\n  final byte[] local=data[i].getLocalFileDataData();\n  if (local != null) {\n    System.arraycopy(local,0,result,start,local.length);\n    start+=local.length;\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 71,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 565,
                        "startLineNumber": 243,
                        "startColumnNumber": 8,
                        "endLineNumber": 254,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=0; i < regularExtraFieldCount; i++) {\n  System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n  System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n  start+=WORD;\n  final byte[] local=data[i].getLocalFileDataData();\n  if (local != null) {\n    System.arraycopy(local,0,result,start,local.length);\n    start+=local.length;\n  }\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 82,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1368,
                        "startLineNumber": 230,
                        "startColumnNumber": 76,
                        "endLineNumber": 262,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getLocalFileDataLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] local=data[i].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n      start+=local.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] local=data[data.length - 1].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 196,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1606,
                        "startLineNumber": 225,
                        "startColumnNumber": 4,
                        "endLineNumber": 262,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Merges the local file data fields of the given ZipExtraFields.\n * @param data an array of ExtraFiles\n * @return an array of bytes\n */\npublic static byte[] mergeLocalFileDataData(final ZipExtraField[] data){\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getLocalFileDataLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] local=data[i].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n      start+=local.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] local=data[data.length - 1].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 211,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                "nodePosition": {
                    "charLength": 32,
                    "startLineNumber": 244,
                    "startColumnNumber": 29,
                    "endLineNumber": 244,
                    "endColumnNumber": 61
                },
                "nodeContext": "data[i].getHeaderId().getBytes()",
                "nodeType": "MethodInvocation",
                "astNodeNumber": 7,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.commons.compress.archivers.zip.ZipExtraField[]"
        },
        {
            "nodeContext": "data",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 246,
                "startColumnNumber": 29,
                "endLineNumber": 246,
                "endColumnNumber": 33
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 7,
                        "startLineNumber": 246,
                        "startColumnNumber": 29,
                        "endLineNumber": 246,
                        "endColumnNumber": 36
                    },
                    "nodeContext": "data[i]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 32,
                        "startLineNumber": 246,
                        "startColumnNumber": 29,
                        "endLineNumber": 246,
                        "endColumnNumber": 61
                    },
                    "nodeContext": "data[i].getLocalFileDataLength()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 43,
                        "startLineNumber": 246,
                        "startColumnNumber": 29,
                        "endLineNumber": 246,
                        "endColumnNumber": 72
                    },
                    "nodeContext": "data[i].getLocalFileDataLength().getBytes()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 116,
                        "startLineNumber": 246,
                        "startColumnNumber": 12,
                        "endLineNumber": 247,
                        "endColumnNumber": 53
                    },
                    "nodeContext": "System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 16,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 117,
                        "startLineNumber": 246,
                        "startColumnNumber": 12,
                        "endLineNumber": 247,
                        "endColumnNumber": 54
                    },
                    "nodeContext": "System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 17,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 516,
                        "startLineNumber": 243,
                        "startColumnNumber": 57,
                        "endLineNumber": 254,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n  System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n  start+=WORD;\n  final byte[] local=data[i].getLocalFileDataData();\n  if (local != null) {\n    System.arraycopy(local,0,result,start,local.length);\n    start+=local.length;\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 71,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 565,
                        "startLineNumber": 243,
                        "startColumnNumber": 8,
                        "endLineNumber": 254,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=0; i < regularExtraFieldCount; i++) {\n  System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n  System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n  start+=WORD;\n  final byte[] local=data[i].getLocalFileDataData();\n  if (local != null) {\n    System.arraycopy(local,0,result,start,local.length);\n    start+=local.length;\n  }\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 82,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1368,
                        "startLineNumber": 230,
                        "startColumnNumber": 76,
                        "endLineNumber": 262,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getLocalFileDataLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] local=data[i].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n      start+=local.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] local=data[data.length - 1].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 196,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1606,
                        "startLineNumber": 225,
                        "startColumnNumber": 4,
                        "endLineNumber": 262,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Merges the local file data fields of the given ZipExtraFields.\n * @param data an array of ExtraFiles\n * @return an array of bytes\n */\npublic static byte[] mergeLocalFileDataData(final ZipExtraField[] data){\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getLocalFileDataLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] local=data[i].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n      start+=local.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] local=data[data.length - 1].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 211,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                "nodePosition": {
                    "charLength": 43,
                    "startLineNumber": 246,
                    "startColumnNumber": 29,
                    "endLineNumber": 246,
                    "endColumnNumber": 72
                },
                "nodeContext": "data[i].getLocalFileDataLength().getBytes()",
                "nodeType": "MethodInvocation",
                "astNodeNumber": 7,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.commons.compress.archivers.zip.ZipExtraField[]"
        },
        {
            "nodeContext": "data",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 249,
                "startColumnNumber": 33,
                "endLineNumber": 249,
                "endColumnNumber": 37
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 7,
                        "startLineNumber": 249,
                        "startColumnNumber": 33,
                        "endLineNumber": 249,
                        "endColumnNumber": 40
                    },
                    "nodeContext": "data[i]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 30,
                        "startLineNumber": 249,
                        "startColumnNumber": 33,
                        "endLineNumber": 249,
                        "endColumnNumber": 63
                    },
                    "nodeContext": "data[i].getLocalFileDataData()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 38,
                        "startLineNumber": 249,
                        "startColumnNumber": 25,
                        "endLineNumber": 249,
                        "endColumnNumber": 63
                    },
                    "nodeContext": "local=data[i].getLocalFileDataData()",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 52,
                        "startLineNumber": 249,
                        "startColumnNumber": 12,
                        "endLineNumber": 249,
                        "endColumnNumber": 64
                    },
                    "nodeContext": "final byte[] local=data[i].getLocalFileDataData();\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 12,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 516,
                        "startLineNumber": 243,
                        "startColumnNumber": 57,
                        "endLineNumber": 254,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n  System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n  start+=WORD;\n  final byte[] local=data[i].getLocalFileDataData();\n  if (local != null) {\n    System.arraycopy(local,0,result,start,local.length);\n    start+=local.length;\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 71,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 565,
                        "startLineNumber": 243,
                        "startColumnNumber": 8,
                        "endLineNumber": 254,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=0; i < regularExtraFieldCount; i++) {\n  System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n  System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n  start+=WORD;\n  final byte[] local=data[i].getLocalFileDataData();\n  if (local != null) {\n    System.arraycopy(local,0,result,start,local.length);\n    start+=local.length;\n  }\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 82,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1368,
                        "startLineNumber": 230,
                        "startColumnNumber": 76,
                        "endLineNumber": 262,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getLocalFileDataLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] local=data[i].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n      start+=local.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] local=data[data.length - 1].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 196,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1606,
                        "startLineNumber": 225,
                        "startColumnNumber": 4,
                        "endLineNumber": 262,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Merges the local file data fields of the given ZipExtraFields.\n * @param data an array of ExtraFiles\n * @return an array of bytes\n */\npublic static byte[] mergeLocalFileDataData(final ZipExtraField[] data){\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getLocalFileDataLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] local=data[i].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n      start+=local.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] local=data[data.length - 1].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 211,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 52,
                    "startLineNumber": 249,
                    "startColumnNumber": 12,
                    "endLineNumber": 249,
                    "endColumnNumber": 64
                },
                "nodeContext": "final byte[] local=data[i].getLocalFileDataData();\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 12,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "org.apache.commons.compress.archivers.zip.ZipExtraField[]"
        },
        {
            "nodeContext": "data",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 256,
                "startColumnNumber": 33,
                "endLineNumber": 256,
                "endColumnNumber": 37
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 21,
                        "startLineNumber": 256,
                        "startColumnNumber": 33,
                        "endLineNumber": 256,
                        "endColumnNumber": 54
                    },
                    "nodeContext": "data[data.length - 1]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 44,
                        "startLineNumber": 256,
                        "startColumnNumber": 33,
                        "endLineNumber": 256,
                        "endColumnNumber": 77
                    },
                    "nodeContext": "data[data.length - 1].getLocalFileDataData()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 9,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 52,
                        "startLineNumber": 256,
                        "startColumnNumber": 25,
                        "endLineNumber": 256,
                        "endColumnNumber": 77
                    },
                    "nodeContext": "local=data[data.length - 1].getLocalFileDataData()",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 11,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 66,
                        "startLineNumber": 256,
                        "startColumnNumber": 12,
                        "endLineNumber": 256,
                        "endColumnNumber": 78
                    },
                    "nodeContext": "final byte[] local=data[data.length - 1].getLocalFileDataData();\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 16,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 215,
                        "startLineNumber": 255,
                        "startColumnNumber": 37,
                        "endLineNumber": 260,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  final byte[] local=data[data.length - 1].getLocalFileDataData();\n  if (local != null) {\n    System.arraycopy(local,0,result,start,local.length);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 33,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 244,
                        "startLineNumber": 255,
                        "startColumnNumber": 8,
                        "endLineNumber": 260,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (lastIsUnparseableHolder) {\n  final byte[] local=data[data.length - 1].getLocalFileDataData();\n  if (local != null) {\n    System.arraycopy(local,0,result,start,local.length);\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 35,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1368,
                        "startLineNumber": 230,
                        "startColumnNumber": 76,
                        "endLineNumber": 262,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getLocalFileDataLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] local=data[i].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n      start+=local.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] local=data[data.length - 1].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 196,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1606,
                        "startLineNumber": 225,
                        "startColumnNumber": 4,
                        "endLineNumber": 262,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Merges the local file data fields of the given ZipExtraFields.\n * @param data an array of ExtraFiles\n * @return an array of bytes\n */\npublic static byte[] mergeLocalFileDataData(final ZipExtraField[] data){\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getLocalFileDataLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] local=data[i].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n      start+=local.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] local=data[data.length - 1].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 211,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 66,
                    "startLineNumber": 256,
                    "startColumnNumber": 12,
                    "endLineNumber": 256,
                    "endColumnNumber": 78
                },
                "nodeContext": "final byte[] local=data[data.length - 1].getLocalFileDataData();\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 16,
                "astHeight": 7
            },
            "tokenLength": 1,
            "type": "org.apache.commons.compress.archivers.zip.ZipExtraField[]"
        },
        {
            "nodeContext": "data",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 256,
                "startColumnNumber": 38,
                "endLineNumber": 256,
                "endColumnNumber": 42
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 11,
                        "startLineNumber": 256,
                        "startColumnNumber": 38,
                        "endLineNumber": 256,
                        "endColumnNumber": 49
                    },
                    "nodeContext": "data.length",
                    "nodeType": "QualifiedName",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
                    "nodePosition": {
                        "charLength": 15,
                        "startLineNumber": 256,
                        "startColumnNumber": 38,
                        "endLineNumber": 256,
                        "endColumnNumber": 53
                    },
                    "nodeContext": "data.length - 1",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 21,
                        "startLineNumber": 256,
                        "startColumnNumber": 33,
                        "endLineNumber": 256,
                        "endColumnNumber": 54
                    },
                    "nodeContext": "data[data.length - 1]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 44,
                        "startLineNumber": 256,
                        "startColumnNumber": 33,
                        "endLineNumber": 256,
                        "endColumnNumber": 77
                    },
                    "nodeContext": "data[data.length - 1].getLocalFileDataData()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 9,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 52,
                        "startLineNumber": 256,
                        "startColumnNumber": 25,
                        "endLineNumber": 256,
                        "endColumnNumber": 77
                    },
                    "nodeContext": "local=data[data.length - 1].getLocalFileDataData()",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 11,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 66,
                        "startLineNumber": 256,
                        "startColumnNumber": 12,
                        "endLineNumber": 256,
                        "endColumnNumber": 78
                    },
                    "nodeContext": "final byte[] local=data[data.length - 1].getLocalFileDataData();\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 16,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 215,
                        "startLineNumber": 255,
                        "startColumnNumber": 37,
                        "endLineNumber": 260,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  final byte[] local=data[data.length - 1].getLocalFileDataData();\n  if (local != null) {\n    System.arraycopy(local,0,result,start,local.length);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 33,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 244,
                        "startLineNumber": 255,
                        "startColumnNumber": 8,
                        "endLineNumber": 260,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (lastIsUnparseableHolder) {\n  final byte[] local=data[data.length - 1].getLocalFileDataData();\n  if (local != null) {\n    System.arraycopy(local,0,result,start,local.length);\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 35,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1368,
                        "startLineNumber": 230,
                        "startColumnNumber": 76,
                        "endLineNumber": 262,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getLocalFileDataLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] local=data[i].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n      start+=local.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] local=data[data.length - 1].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 196,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1606,
                        "startLineNumber": 225,
                        "startColumnNumber": 4,
                        "endLineNumber": 262,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Merges the local file data fields of the given ZipExtraFields.\n * @param data an array of ExtraFiles\n * @return an array of bytes\n */\npublic static byte[] mergeLocalFileDataData(final ZipExtraField[] data){\n  final boolean lastIsUnparseableHolder=data.length > 0 && data[data.length - 1] instanceof UnparseableExtraFieldData;\n  final int regularExtraFieldCount=lastIsUnparseableHolder ? data.length - 1 : data.length;\n  int sum=WORD * regularExtraFieldCount;\n  for (  final ZipExtraField element : data) {\n    sum+=element.getLocalFileDataLength().getValue();\n  }\n  final byte[] result=new byte[sum];\n  int start=0;\n  for (int i=0; i < regularExtraFieldCount; i++) {\n    System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);\n    System.arraycopy(data[i].getLocalFileDataLength().getBytes(),0,result,start + 2,2);\n    start+=WORD;\n    final byte[] local=data[i].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n      start+=local.length;\n    }\n  }\n  if (lastIsUnparseableHolder) {\n    final byte[] local=data[data.length - 1].getLocalFileDataData();\n    if (local != null) {\n      System.arraycopy(local,0,result,start,local.length);\n    }\n  }\n  return result;\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 211,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 66,
                    "startLineNumber": 256,
                    "startColumnNumber": 12,
                    "endLineNumber": 256,
                    "endColumnNumber": 78
                },
                "nodeContext": "final byte[] local=data[data.length - 1].getLocalFileDataData();\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 16,
                "astHeight": 7
            },
            "tokenLength": 1,
            "type": "org.apache.commons.compress.archivers.zip.ZipExtraField[]"
        }
    ],
    "positionList": [
        {
            "charLength": 4,
            "startLineNumber": 231,
            "startColumnNumber": 48,
            "endLineNumber": 231,
            "endColumnNumber": 52
        },
        {
            "charLength": 4,
            "startLineNumber": 232,
            "startColumnNumber": 15,
            "endLineNumber": 232,
            "endColumnNumber": 19
        },
        {
            "charLength": 4,
            "startLineNumber": 232,
            "startColumnNumber": 20,
            "endLineNumber": 232,
            "endColumnNumber": 24
        },
        {
            "charLength": 4,
            "startLineNumber": 234,
            "startColumnNumber": 38,
            "endLineNumber": 234,
            "endColumnNumber": 42
        },
        {
            "charLength": 4,
            "startLineNumber": 234,
            "startColumnNumber": 56,
            "endLineNumber": 234,
            "endColumnNumber": 60
        },
        {
            "charLength": 4,
            "startLineNumber": 237,
            "startColumnNumber": 43,
            "endLineNumber": 237,
            "endColumnNumber": 47
        },
        {
            "charLength": 4,
            "startLineNumber": 244,
            "startColumnNumber": 29,
            "endLineNumber": 244,
            "endColumnNumber": 33
        },
        {
            "charLength": 4,
            "startLineNumber": 246,
            "startColumnNumber": 29,
            "endLineNumber": 246,
            "endColumnNumber": 33
        },
        {
            "charLength": 4,
            "startLineNumber": 249,
            "startColumnNumber": 33,
            "endLineNumber": 249,
            "endColumnNumber": 37
        },
        {
            "charLength": 4,
            "startLineNumber": 256,
            "startColumnNumber": 33,
            "endLineNumber": 256,
            "endColumnNumber": 37
        },
        {
            "charLength": 4,
            "startLineNumber": 256,
            "startColumnNumber": 38,
            "endLineNumber": 256,
            "endColumnNumber": 42
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 3,
            "layout": 5
        },
        {
            "firstKey": 0,
            "secondKey": 4,
            "layout": 5
        },
        {
            "firstKey": 0,
            "secondKey": 5,
            "layout": 5
        },
        {
            "firstKey": 0,
            "secondKey": 6,
            "layout": 5
        },
        {
            "firstKey": 0,
            "secondKey": 7,
            "layout": 5
        },
        {
            "firstKey": 0,
            "secondKey": 8,
            "layout": 5
        },
        {
            "firstKey": 0,
            "secondKey": 9,
            "layout": 5
        },
        {
            "firstKey": 0,
            "secondKey": 10,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 0
        },
        {
            "firstKey": 1,
            "secondKey": 3,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 4,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 5,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 6,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 7,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 8,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 9,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 10,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 2,
            "secondKey": 3,
            "layout": 7
        },
        {
            "firstKey": 2,
            "secondKey": 4,
            "layout": 7
        },
        {
            "firstKey": 2,
            "secondKey": 5,
            "layout": 7
        },
        {
            "firstKey": 2,
            "secondKey": 6,
            "layout": 7
        },
        {
            "firstKey": 2,
            "secondKey": 7,
            "layout": 7
        },
        {
            "firstKey": 2,
            "secondKey": 8,
            "layout": 7
        },
        {
            "firstKey": 2,
            "secondKey": 9,
            "layout": 7
        },
        {
            "firstKey": 2,
            "secondKey": 10,
            "layout": 7
        },
        {
            "firstKey": 3,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 1,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 2,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 4,
            "layout": 2
        },
        {
            "firstKey": 3,
            "secondKey": 5,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 6,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 7,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 8,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 9,
            "layout": 5
        },
        {
            "firstKey": 3,
            "secondKey": 10,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 1,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 2,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 3,
            "layout": 1
        },
        {
            "firstKey": 4,
            "secondKey": 5,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 6,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 7,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 8,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 9,
            "layout": 4
        },
        {
            "firstKey": 4,
            "secondKey": 10,
            "layout": 4
        },
        {
            "firstKey": 5,
            "secondKey": 0,
            "layout": 1
        },
        {
            "firstKey": 5,
            "secondKey": 1,
            "layout": 1
        },
        {
            "firstKey": 5,
            "secondKey": 2,
            "layout": 1
        },
        {
            "firstKey": 5,
            "secondKey": 3,
            "layout": 1
        },
        {
            "firstKey": 5,
            "secondKey": 4,
            "layout": 1
        },
        {
            "firstKey": 5,
            "secondKey": 6,
            "layout": 1
        },
        {
            "firstKey": 5,
            "secondKey": 7,
            "layout": 1
        },
        {
            "firstKey": 5,
            "secondKey": 8,
            "layout": 1
        },
        {
            "firstKey": 5,
            "secondKey": 9,
            "layout": 1
        },
        {
            "firstKey": 5,
            "secondKey": 10,
            "layout": 1
        },
        {
            "firstKey": 6,
            "secondKey": 0,
            "layout": 7
        },
        {
            "firstKey": 6,
            "secondKey": 1,
            "layout": 7
        },
        {
            "firstKey": 6,
            "secondKey": 2,
            "layout": 7
        },
        {
            "firstKey": 6,
            "secondKey": 3,
            "layout": 7
        },
        {
            "firstKey": 6,
            "secondKey": 4,
            "layout": 7
        },
        {
            "firstKey": 6,
            "secondKey": 5,
            "layout": 7
        },
        {
            "firstKey": 6,
            "secondKey": 7,
            "layout": 5
        },
        {
            "firstKey": 6,
            "secondKey": 8,
            "layout": 5
        },
        {
            "firstKey": 6,
            "secondKey": 9,
            "layout": 7
        },
        {
            "firstKey": 6,
            "secondKey": 10,
            "layout": 7
        },
        {
            "firstKey": 7,
            "secondKey": 0,
            "layout": 7
        },
        {
            "firstKey": 7,
            "secondKey": 1,
            "layout": 7
        },
        {
            "firstKey": 7,
            "secondKey": 2,
            "layout": 7
        },
        {
            "firstKey": 7,
            "secondKey": 3,
            "layout": 7
        },
        {
            "firstKey": 7,
            "secondKey": 4,
            "layout": 7
        },
        {
            "firstKey": 7,
            "secondKey": 5,
            "layout": 7
        },
        {
            "firstKey": 7,
            "secondKey": 6,
            "layout": 5
        },
        {
            "firstKey": 7,
            "secondKey": 8,
            "layout": 5
        },
        {
            "firstKey": 7,
            "secondKey": 9,
            "layout": 7
        },
        {
            "firstKey": 7,
            "secondKey": 10,
            "layout": 7
        },
        {
            "firstKey": 8,
            "secondKey": 0,
            "layout": 6
        },
        {
            "firstKey": 8,
            "secondKey": 1,
            "layout": 6
        },
        {
            "firstKey": 8,
            "secondKey": 2,
            "layout": 6
        },
        {
            "firstKey": 8,
            "secondKey": 3,
            "layout": 6
        },
        {
            "firstKey": 8,
            "secondKey": 4,
            "layout": 6
        },
        {
            "firstKey": 8,
            "secondKey": 5,
            "layout": 6
        },
        {
            "firstKey": 8,
            "secondKey": 6,
            "layout": 4
        },
        {
            "firstKey": 8,
            "secondKey": 7,
            "layout": 4
        },
        {
            "firstKey": 8,
            "secondKey": 9,
            "layout": 6
        },
        {
            "firstKey": 8,
            "secondKey": 10,
            "layout": 6
        },
        {
            "firstKey": 9,
            "secondKey": 0,
            "layout": 6
        },
        {
            "firstKey": 9,
            "secondKey": 1,
            "layout": 6
        },
        {
            "firstKey": 9,
            "secondKey": 2,
            "layout": 6
        },
        {
            "firstKey": 9,
            "secondKey": 3,
            "layout": 6
        },
        {
            "firstKey": 9,
            "secondKey": 4,
            "layout": 6
        },
        {
            "firstKey": 9,
            "secondKey": 5,
            "layout": 6
        },
        {
            "firstKey": 9,
            "secondKey": 6,
            "layout": 6
        },
        {
            "firstKey": 9,
            "secondKey": 7,
            "layout": 6
        },
        {
            "firstKey": 9,
            "secondKey": 8,
            "layout": 6
        },
        {
            "firstKey": 9,
            "secondKey": 10,
            "layout": 0
        },
        {
            "firstKey": 10,
            "secondKey": 0,
            "layout": 8
        },
        {
            "firstKey": 10,
            "secondKey": 1,
            "layout": 8
        },
        {
            "firstKey": 10,
            "secondKey": 2,
            "layout": 8
        },
        {
            "firstKey": 10,
            "secondKey": 3,
            "layout": 8
        },
        {
            "firstKey": 10,
            "secondKey": 4,
            "layout": 8
        },
        {
            "firstKey": 10,
            "secondKey": 5,
            "layout": 8
        },
        {
            "firstKey": 10,
            "secondKey": 6,
            "layout": 8
        },
        {
            "firstKey": 10,
            "secondKey": 7,
            "layout": 8
        },
        {
            "firstKey": 10,
            "secondKey": 8,
            "layout": 8
        },
        {
            "firstKey": 10,
            "secondKey": 9,
            "layout": 2
        }
    ]
}