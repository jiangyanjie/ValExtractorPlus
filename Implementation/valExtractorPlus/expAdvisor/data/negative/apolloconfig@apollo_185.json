{
    "id": 185,
    "expression": "\"No available admin service\"",
    "projectName": "apolloconfig@apollo",
    "commitID": "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
    "filePath": "apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/ServiceExceptionTest.java",
    "occurrences": 1,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "\"No available admin service\"",
            "nodeType": "StringLiteral",
            "nodePosition": {
                "charLength": 28,
                "startLineNumber": 38,
                "startColumnNumber": 20,
                "endLineNumber": 38,
                "endColumnNumber": 48
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 39,
                        "startLineNumber": 38,
                        "startColumnNumber": 9,
                        "endLineNumber": 38,
                        "endColumnNumber": 48
                    },
                    "nodeContext": "errorMsg=\"No available admin service\"",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 47,
                        "startLineNumber": 38,
                        "startColumnNumber": 2,
                        "endLineNumber": 38,
                        "endColumnNumber": 49
                    },
                    "nodeContext": "String errorMsg=\"No available admin service\";\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1206,
                        "startLineNumber": 37,
                        "startColumnNumber": 41,
                        "endLineNumber": 66,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "{\n  String errorMsg=\"No available admin service\";\n  String errorCode=\"errorCode\";\n  String status=\"500\";\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"status\",status);\n  errorAttributes.put(\"message\",errorMsg);\n  errorAttributes.put(\"timestamp\",LocalDateTime.now().format(DateTimeFormatter.ISO_LOCAL_DATE_TIME));\n  errorAttributes.put(\"exception\",ServiceException.class.getName());\n  errorAttributes.put(\"errorCode\",errorCode);\n  HttpStatusCodeException adminException=new HttpServerErrorException(HttpStatus.INTERNAL_SERVER_ERROR,\"admin server error\",new Gson().toJson(errorAttributes).getBytes(),Charset.defaultCharset());\n  when(userService.findByUserId(any(String.class))).thenThrow(adminException);\n  App app=generateSampleApp();\n  try {\n    appController.create(app);\n  }\n catch (  HttpStatusCodeException e) {\n    @SuppressWarnings(\"unchecked\") Map<String,String> attr=new Gson().fromJson(e.getResponseBodyAsString(),Map.class);\n    Assert.assertEquals(errorMsg,attr.get(\"message\"));\n    Assert.assertEquals(errorCode,attr.get(\"errorCode\"));\n    Assert.assertEquals(status,attr.get(\"status\"));\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 182,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1253,
                        "startLineNumber": 36,
                        "startColumnNumber": 1,
                        "endLineNumber": 66,
                        "endColumnNumber": 2
                    },
                    "nodeContext": "@Test public void testAdminServiceException(){\n  String errorMsg=\"No available admin service\";\n  String errorCode=\"errorCode\";\n  String status=\"500\";\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"status\",status);\n  errorAttributes.put(\"message\",errorMsg);\n  errorAttributes.put(\"timestamp\",LocalDateTime.now().format(DateTimeFormatter.ISO_LOCAL_DATE_TIME));\n  errorAttributes.put(\"exception\",ServiceException.class.getName());\n  errorAttributes.put(\"errorCode\",errorCode);\n  HttpStatusCodeException adminException=new HttpServerErrorException(HttpStatus.INTERNAL_SERVER_ERROR,\"admin server error\",new Gson().toJson(errorAttributes).getBytes(),Charset.defaultCharset());\n  when(userService.findByUserId(any(String.class))).thenThrow(adminException);\n  App app=generateSampleApp();\n  try {\n    appController.create(app);\n  }\n catch (  HttpStatusCodeException e) {\n    @SuppressWarnings(\"unchecked\") Map<String,String> attr=new Gson().fromJson(e.getResponseBodyAsString(),Map.class);\n    Assert.assertEquals(errorMsg,attr.get(\"message\"));\n    Assert.assertEquals(errorCode,attr.get(\"errorCode\"));\n    Assert.assertEquals(status,attr.get(\"status\"));\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 188,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 47,
                    "startLineNumber": 38,
                    "startColumnNumber": 2,
                    "endLineNumber": 38,
                    "endColumnNumber": 49
                },
                "nodeContext": "String errorMsg=\"No available admin service\";\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 6,
                "astHeight": 3
            },
            "tokenLength": 4,
            "type": "java.lang.String"
        }
    ],
    "positionList": [
        {
            "charLength": 28,
            "startLineNumber": 38,
            "startColumnNumber": 20,
            "endLineNumber": 38,
            "endColumnNumber": 48
        }
    ],
    "layoutRelationDataList": []
}