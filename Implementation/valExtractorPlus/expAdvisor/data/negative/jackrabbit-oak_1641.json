{
    "id": 1641,
    "expression": "available",
    "projectName": "jackrabbit-oak",
    "commitID": "87c6818d22ef416b3216125d845812f03c454fb7",
    "filePath": "oak-core/src/main/java/org/apache/jackrabbit/oak/query/QueryImpl.java",
    "occurrences": 3,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "available",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 9,
                "startLineNumber": 487,
                "startColumnNumber": 8,
                "endLineNumber": 487,
                "endColumnNumber": 17
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 48,
                        "startLineNumber": 487,
                        "startColumnNumber": 8,
                        "endLineNumber": 487,
                        "endColumnNumber": 56
                    },
                    "nodeContext": "available.addAll(result.getInnerJoinSelectors())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 49,
                        "startLineNumber": 487,
                        "startColumnNumber": 8,
                        "endLineNumber": 487,
                        "endColumnNumber": 57
                    },
                    "nodeContext": "available.addAll(result.getInnerJoinSelectors());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 7,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 559,
                        "startLineNumber": 482,
                        "startColumnNumber": 112,
                        "endLineNumber": 497,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (result == null) {\n    return last;\n  }\n  Set<SourceImpl> available=new HashSet<SourceImpl>();\n  available.addAll(result.getInnerJoinSelectors());\n  available.add(last);\n  for (  JoinConditionImpl j : conditions) {\n    if (j.canEvaluate(available)) {\n      JoinImpl join=new JoinImpl(result,last,JoinType.INNER,j);\n      return join;\n    }\n  }\n  throw new IllegalArgumentException(\"No join condition was found\");\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 68,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 667,
                        "startLineNumber": 482,
                        "startColumnNumber": 4,
                        "endLineNumber": 497,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "private static SourceImpl buildJoin(SourceImpl result,SourceImpl last,List<JoinConditionImpl> conditions){\n  if (result == null) {\n    return last;\n  }\n  Set<SourceImpl> available=new HashSet<SourceImpl>();\n  available.addAll(result.getInnerJoinSelectors());\n  available.add(last);\n  for (  JoinConditionImpl j : conditions) {\n    if (j.canEvaluate(available)) {\n      JoinImpl join=new JoinImpl(result,last,JoinType.INNER,j);\n      return join;\n    }\n  }\n  throw new IllegalArgumentException(\"No join condition was found\");\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 89,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 49,
                    "startLineNumber": 487,
                    "startColumnNumber": 8,
                    "endLineNumber": 487,
                    "endColumnNumber": 57
                },
                "nodeContext": "available.addAll(result.getInnerJoinSelectors());\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 7,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.util.Set<org.apache.jackrabbit.oak.query.ast.SourceImpl>"
        },
        {
            "nodeContext": "available",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 9,
                "startLineNumber": 488,
                "startColumnNumber": 8,
                "endLineNumber": 488,
                "endColumnNumber": 17
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 19,
                        "startLineNumber": 488,
                        "startColumnNumber": 8,
                        "endLineNumber": 488,
                        "endColumnNumber": 27
                    },
                    "nodeContext": "available.add(last)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 20,
                        "startLineNumber": 488,
                        "startColumnNumber": 8,
                        "endLineNumber": 488,
                        "endColumnNumber": 28
                    },
                    "nodeContext": "available.add(last);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 559,
                        "startLineNumber": 482,
                        "startColumnNumber": 112,
                        "endLineNumber": 497,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (result == null) {\n    return last;\n  }\n  Set<SourceImpl> available=new HashSet<SourceImpl>();\n  available.addAll(result.getInnerJoinSelectors());\n  available.add(last);\n  for (  JoinConditionImpl j : conditions) {\n    if (j.canEvaluate(available)) {\n      JoinImpl join=new JoinImpl(result,last,JoinType.INNER,j);\n      return join;\n    }\n  }\n  throw new IllegalArgumentException(\"No join condition was found\");\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 68,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 667,
                        "startLineNumber": 482,
                        "startColumnNumber": 4,
                        "endLineNumber": 497,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "private static SourceImpl buildJoin(SourceImpl result,SourceImpl last,List<JoinConditionImpl> conditions){\n  if (result == null) {\n    return last;\n  }\n  Set<SourceImpl> available=new HashSet<SourceImpl>();\n  available.addAll(result.getInnerJoinSelectors());\n  available.add(last);\n  for (  JoinConditionImpl j : conditions) {\n    if (j.canEvaluate(available)) {\n      JoinImpl join=new JoinImpl(result,last,JoinType.INNER,j);\n      return join;\n    }\n  }\n  throw new IllegalArgumentException(\"No join condition was found\");\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 89,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 20,
                    "startLineNumber": 488,
                    "startColumnNumber": 8,
                    "endLineNumber": 488,
                    "endColumnNumber": 28
                },
                "nodeContext": "available.add(last);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 5,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "java.util.Set<org.apache.jackrabbit.oak.query.ast.SourceImpl>"
        },
        {
            "nodeContext": "available",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 9,
                "startLineNumber": 490,
                "startColumnNumber": 30,
                "endLineNumber": 490,
                "endColumnNumber": 39
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 24,
                        "startLineNumber": 490,
                        "startColumnNumber": 16,
                        "endLineNumber": 490,
                        "endColumnNumber": 40
                    },
                    "nodeContext": "j.canEvaluate(available)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 153,
                        "startLineNumber": 490,
                        "startColumnNumber": 12,
                        "endLineNumber": 493,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (j.canEvaluate(available)) {\n  JoinImpl join=new JoinImpl(result,last,JoinType.INNER,j);\n  return join;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 22,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 177,
                        "startLineNumber": 489,
                        "startColumnNumber": 47,
                        "endLineNumber": 494,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  if (j.canEvaluate(available)) {\n    JoinImpl join=new JoinImpl(result,last,JoinType.INNER,j);\n    return join;\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 23,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 216,
                        "startLineNumber": 489,
                        "startColumnNumber": 8,
                        "endLineNumber": 494,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (JoinConditionImpl j : conditions) {\n  if (j.canEvaluate(available)) {\n    JoinImpl join=new JoinImpl(result,last,JoinType.INNER,j);\n    return join;\n  }\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 29,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 559,
                        "startLineNumber": 482,
                        "startColumnNumber": 112,
                        "endLineNumber": 497,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (result == null) {\n    return last;\n  }\n  Set<SourceImpl> available=new HashSet<SourceImpl>();\n  available.addAll(result.getInnerJoinSelectors());\n  available.add(last);\n  for (  JoinConditionImpl j : conditions) {\n    if (j.canEvaluate(available)) {\n      JoinImpl join=new JoinImpl(result,last,JoinType.INNER,j);\n      return join;\n    }\n  }\n  throw new IllegalArgumentException(\"No join condition was found\");\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 68,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 667,
                        "startLineNumber": 482,
                        "startColumnNumber": 4,
                        "endLineNumber": 497,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "private static SourceImpl buildJoin(SourceImpl result,SourceImpl last,List<JoinConditionImpl> conditions){\n  if (result == null) {\n    return last;\n  }\n  Set<SourceImpl> available=new HashSet<SourceImpl>();\n  available.addAll(result.getInnerJoinSelectors());\n  available.add(last);\n  for (  JoinConditionImpl j : conditions) {\n    if (j.canEvaluate(available)) {\n      JoinImpl join=new JoinImpl(result,last,JoinType.INNER,j);\n      return join;\n    }\n  }\n  throw new IllegalArgumentException(\"No join condition was found\");\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 89,
                    "astHeight": 11
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 24,
                    "startLineNumber": 490,
                    "startColumnNumber": 16,
                    "endLineNumber": 490,
                    "endColumnNumber": 40
                },
                "nodeContext": "j.canEvaluate(available)",
                "nodeType": "MethodInvocation",
                "astNodeNumber": 4,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "java.util.Set<org.apache.jackrabbit.oak.query.ast.SourceImpl>"
        }
    ],
    "positionList": [
        {
            "charLength": 9,
            "startLineNumber": 487,
            "startColumnNumber": 8,
            "endLineNumber": 487,
            "endColumnNumber": 17
        },
        {
            "charLength": 9,
            "startLineNumber": 488,
            "startColumnNumber": 8,
            "endLineNumber": 488,
            "endColumnNumber": 17
        },
        {
            "charLength": 9,
            "startLineNumber": 490,
            "startColumnNumber": 30,
            "endLineNumber": 490,
            "endColumnNumber": 39
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 2
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 4
        }
    ]
}