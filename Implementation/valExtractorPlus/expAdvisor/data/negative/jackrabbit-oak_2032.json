{
    "id": 2032,
    "expression": "r",
    "projectName": "jackrabbit-oak",
    "commitID": "2dcb1440cc8a7fb0ce29c6253b6b50ac26a8d286",
    "filePath": "oak-core/src/main/java/org/apache/jackrabbit/oak/spi/security/authorization/restriction/CompositeRestrictionProvider.java",
    "occurrences": 3,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "r",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 1,
                "startLineNumber": 99,
                "startColumnNumber": 34,
                "endLineNumber": 99,
                "endColumnNumber": 35
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 10,
                        "startLineNumber": 99,
                        "startColumnNumber": 26,
                        "endLineNumber": 99,
                        "endColumnNumber": 36
                    },
                    "nodeContext": "getName(r)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 17,
                        "startLineNumber": 99,
                        "startColumnNumber": 19,
                        "endLineNumber": 99,
                        "endColumnNumber": 36
                    },
                    "nodeContext": "name=getName(r)",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 25,
                        "startLineNumber": 99,
                        "startColumnNumber": 12,
                        "endLineNumber": 99,
                        "endColumnNumber": 37
                    },
                    "nodeContext": "String name=getName(r);\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 478,
                        "startLineNumber": 98,
                        "startColumnNumber": 65,
                        "endLineNumber": 111,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  String name=getName(r);\n  rNames.add(name);\n  boolean valid=false;\n  for (  RestrictionDefinition def : supported) {\n    if (name.equals(def.getName())) {\n      valid=def.equals(r.getDefinition());\n      break;\n    }\n  }\n  if (!valid) {\n    throw new AccessControlException(\"Invalid restriction: \" + r + \" at \"+ oakPath);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 57,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 535,
                        "startLineNumber": 98,
                        "startColumnNumber": 8,
                        "endLineNumber": 111,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (Restriction r : readRestrictions(oakPath,aceTree)) {\n  String name=getName(r);\n  rNames.add(name);\n  boolean valid=false;\n  for (  RestrictionDefinition def : supported) {\n    if (name.equals(def.getName())) {\n      valid=def.equals(r.getDefinition());\n      break;\n    }\n  }\n  if (!valid) {\n    throw new AccessControlException(\"Invalid restriction: \" + r + \" at \"+ oakPath);\n  }\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 66,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 944,
                        "startLineNumber": 95,
                        "startColumnNumber": 137,
                        "endLineNumber": 117,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  Set<RestrictionDefinition> supported=getSupportedRestrictions(oakPath);\n  Set<String> rNames=new HashSet<String>();\n  for (  Restriction r : readRestrictions(oakPath,aceTree)) {\n    String name=getName(r);\n    rNames.add(name);\n    boolean valid=false;\n    for (    RestrictionDefinition def : supported) {\n      if (name.equals(def.getName())) {\n        valid=def.equals(r.getDefinition());\n        break;\n      }\n    }\n    if (!valid) {\n      throw new AccessControlException(\"Invalid restriction: \" + r + \" at \"+ oakPath);\n    }\n  }\n  for (  RestrictionDefinition def : supported) {\n    if (def.isMandatory() && !rNames.contains(def.getName())) {\n      throw new AccessControlException(\"Mandatory restriction \" + def.getName() + \" is missing.\");\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 122,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1091,
                        "startLineNumber": 94,
                        "startColumnNumber": 4,
                        "endLineNumber": 117,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override public void validateRestrictions(@Nullable String oakPath,@Nonnull Tree aceTree) throws AccessControlException, RepositoryException {\n  Set<RestrictionDefinition> supported=getSupportedRestrictions(oakPath);\n  Set<String> rNames=new HashSet<String>();\n  for (  Restriction r : readRestrictions(oakPath,aceTree)) {\n    String name=getName(r);\n    rNames.add(name);\n    boolean valid=false;\n    for (    RestrictionDefinition def : supported) {\n      if (name.equals(def.getName())) {\n        valid=def.equals(r.getDefinition());\n        break;\n      }\n    }\n    if (!valid) {\n      throw new AccessControlException(\"Invalid restriction: \" + r + \" at \"+ oakPath);\n    }\n  }\n  for (  RestrictionDefinition def : supported) {\n    if (def.isMandatory() && !rNames.contains(def.getName())) {\n      throw new AccessControlException(\"Mandatory restriction \" + def.getName() + \" is missing.\");\n    }\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 144,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 25,
                    "startLineNumber": 99,
                    "startColumnNumber": 12,
                    "endLineNumber": 99,
                    "endColumnNumber": 37
                },
                "nodeContext": "String name=getName(r);\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 8,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.oak.spi.security.authorization.restriction.Restriction"
        },
        {
            "nodeContext": "r",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 1,
                "startLineNumber": 104,
                "startColumnNumber": 39,
                "endLineNumber": 104,
                "endColumnNumber": 40
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 17,
                        "startLineNumber": 104,
                        "startColumnNumber": 39,
                        "endLineNumber": 104,
                        "endColumnNumber": 56
                    },
                    "nodeContext": "r.getDefinition()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 29,
                        "startLineNumber": 104,
                        "startColumnNumber": 28,
                        "endLineNumber": 104,
                        "endColumnNumber": 57
                    },
                    "nodeContext": "def.equals(r.getDefinition())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 37,
                        "startLineNumber": 104,
                        "startColumnNumber": 20,
                        "endLineNumber": 104,
                        "endColumnNumber": 57
                    },
                    "nodeContext": "valid=def.equals(r.getDefinition())",
                    "nodeType": "Assignment",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 38,
                        "startLineNumber": 104,
                        "startColumnNumber": 20,
                        "endLineNumber": 104,
                        "endColumnNumber": 58
                    },
                    "nodeContext": "valid=def.equals(r.getDefinition());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 9,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 105,
                        "startLineNumber": 103,
                        "startColumnNumber": 48,
                        "endLineNumber": 106,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  valid=def.equals(r.getDefinition());\n  break;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 11,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 137,
                        "startLineNumber": 103,
                        "startColumnNumber": 16,
                        "endLineNumber": 106,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (name.equals(def.getName())) {\n  valid=def.equals(r.getDefinition());\n  break;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 18,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 169,
                        "startLineNumber": 102,
                        "startColumnNumber": 56,
                        "endLineNumber": 107,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  if (name.equals(def.getName())) {\n    valid=def.equals(r.getDefinition());\n    break;\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 19,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 213,
                        "startLineNumber": 102,
                        "startColumnNumber": 12,
                        "endLineNumber": 107,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "for (RestrictionDefinition def : supported) {\n  if (name.equals(def.getName())) {\n    valid=def.equals(r.getDefinition());\n    break;\n  }\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 25,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 478,
                        "startLineNumber": 98,
                        "startColumnNumber": 65,
                        "endLineNumber": 111,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  String name=getName(r);\n  rNames.add(name);\n  boolean valid=false;\n  for (  RestrictionDefinition def : supported) {\n    if (name.equals(def.getName())) {\n      valid=def.equals(r.getDefinition());\n      break;\n    }\n  }\n  if (!valid) {\n    throw new AccessControlException(\"Invalid restriction: \" + r + \" at \"+ oakPath);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 57,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 535,
                        "startLineNumber": 98,
                        "startColumnNumber": 8,
                        "endLineNumber": 111,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (Restriction r : readRestrictions(oakPath,aceTree)) {\n  String name=getName(r);\n  rNames.add(name);\n  boolean valid=false;\n  for (  RestrictionDefinition def : supported) {\n    if (name.equals(def.getName())) {\n      valid=def.equals(r.getDefinition());\n      break;\n    }\n  }\n  if (!valid) {\n    throw new AccessControlException(\"Invalid restriction: \" + r + \" at \"+ oakPath);\n  }\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 66,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 944,
                        "startLineNumber": 95,
                        "startColumnNumber": 137,
                        "endLineNumber": 117,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  Set<RestrictionDefinition> supported=getSupportedRestrictions(oakPath);\n  Set<String> rNames=new HashSet<String>();\n  for (  Restriction r : readRestrictions(oakPath,aceTree)) {\n    String name=getName(r);\n    rNames.add(name);\n    boolean valid=false;\n    for (    RestrictionDefinition def : supported) {\n      if (name.equals(def.getName())) {\n        valid=def.equals(r.getDefinition());\n        break;\n      }\n    }\n    if (!valid) {\n      throw new AccessControlException(\"Invalid restriction: \" + r + \" at \"+ oakPath);\n    }\n  }\n  for (  RestrictionDefinition def : supported) {\n    if (def.isMandatory() && !rNames.contains(def.getName())) {\n      throw new AccessControlException(\"Mandatory restriction \" + def.getName() + \" is missing.\");\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 122,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1091,
                        "startLineNumber": 94,
                        "startColumnNumber": 4,
                        "endLineNumber": 117,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override public void validateRestrictions(@Nullable String oakPath,@Nonnull Tree aceTree) throws AccessControlException, RepositoryException {\n  Set<RestrictionDefinition> supported=getSupportedRestrictions(oakPath);\n  Set<String> rNames=new HashSet<String>();\n  for (  Restriction r : readRestrictions(oakPath,aceTree)) {\n    String name=getName(r);\n    rNames.add(name);\n    boolean valid=false;\n    for (    RestrictionDefinition def : supported) {\n      if (name.equals(def.getName())) {\n        valid=def.equals(r.getDefinition());\n        break;\n      }\n    }\n    if (!valid) {\n      throw new AccessControlException(\"Invalid restriction: \" + r + \" at \"+ oakPath);\n    }\n  }\n  for (  RestrictionDefinition def : supported) {\n    if (def.isMandatory() && !rNames.contains(def.getName())) {\n      throw new AccessControlException(\"Mandatory restriction \" + def.getName() + \" is missing.\");\n    }\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 144,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 38,
                    "startLineNumber": 104,
                    "startColumnNumber": 20,
                    "endLineNumber": 104,
                    "endColumnNumber": 58
                },
                "nodeContext": "valid=def.equals(r.getDefinition());\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 9,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.oak.spi.security.authorization.restriction.Restriction"
        },
        {
            "nodeContext": "r",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 1,
                "startLineNumber": 109,
                "startColumnNumber": 75,
                "endLineNumber": 109,
                "endColumnNumber": 76
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
                    "nodePosition": {
                        "charLength": 46,
                        "startLineNumber": 109,
                        "startColumnNumber": 49,
                        "endLineNumber": 109,
                        "endColumnNumber": 95
                    },
                    "nodeContext": "\"Invalid restriction: \" + r + \" at \"+ oakPath",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 5,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
                    "nodePosition": {
                        "charLength": 74,
                        "startLineNumber": 109,
                        "startColumnNumber": 22,
                        "endLineNumber": 109,
                        "endColumnNumber": 96
                    },
                    "nodeContext": "new AccessControlException(\"Invalid restriction: \" + r + \" at \"+ oakPath)",
                    "nodeType": "ClassInstanceCreation",
                    "astNodeNumber": 8,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 81,
                        "startLineNumber": 109,
                        "startColumnNumber": 16,
                        "endLineNumber": 109,
                        "endColumnNumber": 97
                    },
                    "nodeContext": "throw new AccessControlException(\"Invalid restriction: \" + r + \" at \"+ oakPath);\n",
                    "nodeType": "ThrowStatement",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 113,
                        "startLineNumber": 108,
                        "startColumnNumber": 24,
                        "endLineNumber": 110,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  throw new AccessControlException(\"Invalid restriction: \" + r + \" at \"+ oakPath);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 10,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 125,
                        "startLineNumber": 108,
                        "startColumnNumber": 12,
                        "endLineNumber": 110,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "if (!valid) {\n  throw new AccessControlException(\"Invalid restriction: \" + r + \" at \"+ oakPath);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 13,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 478,
                        "startLineNumber": 98,
                        "startColumnNumber": 65,
                        "endLineNumber": 111,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  String name=getName(r);\n  rNames.add(name);\n  boolean valid=false;\n  for (  RestrictionDefinition def : supported) {\n    if (name.equals(def.getName())) {\n      valid=def.equals(r.getDefinition());\n      break;\n    }\n  }\n  if (!valid) {\n    throw new AccessControlException(\"Invalid restriction: \" + r + \" at \"+ oakPath);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 57,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 535,
                        "startLineNumber": 98,
                        "startColumnNumber": 8,
                        "endLineNumber": 111,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (Restriction r : readRestrictions(oakPath,aceTree)) {\n  String name=getName(r);\n  rNames.add(name);\n  boolean valid=false;\n  for (  RestrictionDefinition def : supported) {\n    if (name.equals(def.getName())) {\n      valid=def.equals(r.getDefinition());\n      break;\n    }\n  }\n  if (!valid) {\n    throw new AccessControlException(\"Invalid restriction: \" + r + \" at \"+ oakPath);\n  }\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 66,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 944,
                        "startLineNumber": 95,
                        "startColumnNumber": 137,
                        "endLineNumber": 117,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  Set<RestrictionDefinition> supported=getSupportedRestrictions(oakPath);\n  Set<String> rNames=new HashSet<String>();\n  for (  Restriction r : readRestrictions(oakPath,aceTree)) {\n    String name=getName(r);\n    rNames.add(name);\n    boolean valid=false;\n    for (    RestrictionDefinition def : supported) {\n      if (name.equals(def.getName())) {\n        valid=def.equals(r.getDefinition());\n        break;\n      }\n    }\n    if (!valid) {\n      throw new AccessControlException(\"Invalid restriction: \" + r + \" at \"+ oakPath);\n    }\n  }\n  for (  RestrictionDefinition def : supported) {\n    if (def.isMandatory() && !rNames.contains(def.getName())) {\n      throw new AccessControlException(\"Mandatory restriction \" + def.getName() + \" is missing.\");\n    }\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 122,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1091,
                        "startLineNumber": 94,
                        "startColumnNumber": 4,
                        "endLineNumber": 117,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override public void validateRestrictions(@Nullable String oakPath,@Nonnull Tree aceTree) throws AccessControlException, RepositoryException {\n  Set<RestrictionDefinition> supported=getSupportedRestrictions(oakPath);\n  Set<String> rNames=new HashSet<String>();\n  for (  Restriction r : readRestrictions(oakPath,aceTree)) {\n    String name=getName(r);\n    rNames.add(name);\n    boolean valid=false;\n    for (    RestrictionDefinition def : supported) {\n      if (name.equals(def.getName())) {\n        valid=def.equals(r.getDefinition());\n        break;\n      }\n    }\n    if (!valid) {\n      throw new AccessControlException(\"Invalid restriction: \" + r + \" at \"+ oakPath);\n    }\n  }\n  for (  RestrictionDefinition def : supported) {\n    if (def.isMandatory() && !rNames.contains(def.getName())) {\n      throw new AccessControlException(\"Mandatory restriction \" + def.getName() + \" is missing.\");\n    }\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 144,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 81,
                    "startLineNumber": 109,
                    "startColumnNumber": 16,
                    "endLineNumber": 109,
                    "endColumnNumber": 97
                },
                "nodeContext": "throw new AccessControlException(\"Invalid restriction: \" + r + \" at \"+ oakPath);\n",
                "nodeType": "ThrowStatement",
                "astNodeNumber": 9,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.jackrabbit.oak.spi.security.authorization.restriction.Restriction"
        }
    ],
    "positionList": [
        {
            "charLength": 1,
            "startLineNumber": 99,
            "startColumnNumber": 34,
            "endLineNumber": 99,
            "endColumnNumber": 35
        },
        {
            "charLength": 1,
            "startLineNumber": 104,
            "startColumnNumber": 39,
            "endLineNumber": 104,
            "endColumnNumber": 40
        },
        {
            "charLength": 1,
            "startLineNumber": 109,
            "startColumnNumber": 75,
            "endLineNumber": 109,
            "endColumnNumber": 76
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 3
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 8
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 8
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 5
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 5
        }
    ]
}