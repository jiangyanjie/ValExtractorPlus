{
    "id": 9,
    "expression": "RequestOptions",
    "projectName": "tinkerpop",
    "commitID": "bebd9e72c6a32736d890c0029d6581143ee5e139",
    "filePath": "gremlin-driver/src/main/java/org/apache/tinkerpop/gremlin/driver/remote/DriverRemoteConnection.java",
    "occurrences": 2,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "RequestOptions",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 14,
                "startLineNumber": 221,
                "startColumnNumber": 18,
                "endLineNumber": 221,
                "endColumnNumber": 32
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.SimpleType,name]",
                    "nodePosition": {
                        "charLength": 22,
                        "startLineNumber": 221,
                        "startColumnNumber": 18,
                        "endLineNumber": 221,
                        "endColumnNumber": 40
                    },
                    "nodeContext": "RequestOptions.Builder",
                    "nodeType": "QualifiedName",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,type]",
                    "nodePosition": {
                        "charLength": 22,
                        "startLineNumber": 221,
                        "startColumnNumber": 18,
                        "endLineNumber": 221,
                        "endColumnNumber": 40
                    },
                    "nodeContext": "RequestOptions.Builder",
                    "nodeType": "SimpleType",
                    "astNodeNumber": 4,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 62,
                        "startLineNumber": 221,
                        "startColumnNumber": 12,
                        "endLineNumber": 221,
                        "endColumnNumber": 74
                    },
                    "nodeContext": "final RequestOptions.Builder builder=RequestOptions.build();\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 11,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 1092,
                        "startLineNumber": 216,
                        "startColumnNumber": 12,
                        "endLineNumber": 231,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  final Iterator<OptionsStrategy> itty=IteratorUtils.map(IteratorUtils.filter(bytecode.getSourceInstructions().iterator(),s -> s.getOperator().equals(TraversalSource.Symbols.withStrategies) && s.getArguments()[0] instanceof OptionsStrategy),os -> (OptionsStrategy)os.getArguments()[0]);\n  final RequestOptions.Builder builder=RequestOptions.build();\n  while (itty.hasNext()) {\n    final OptionsStrategy optionsStrategy=itty.next();\n    if (optionsStrategy.getOptions().containsKey(PER_REQUEST_TIMEOUT))     builder.timeout((long)optionsStrategy.getOptions().get(PER_REQUEST_TIMEOUT));\n else     if (optionsStrategy.getOptions().containsKey(PER_REQUEST_BATCH_SIZE))     builder.batchSize((int)optionsStrategy.getOptions().get(PER_REQUEST_BATCH_SIZE));\n  }\n  return client.submitAsync(bytecode,builder.create()).thenApply(rs -> new DriverRemoteTraversal<>(rs,client,attachElements,conf));\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 138,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1182,
                        "startLineNumber": 216,
                        "startColumnNumber": 8,
                        "endLineNumber": 233,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "try {\n  final Iterator<OptionsStrategy> itty=IteratorUtils.map(IteratorUtils.filter(bytecode.getSourceInstructions().iterator(),s -> s.getOperator().equals(TraversalSource.Symbols.withStrategies) && s.getArguments()[0] instanceof OptionsStrategy),os -> (OptionsStrategy)os.getArguments()[0]);\n  final RequestOptions.Builder builder=RequestOptions.build();\n  while (itty.hasNext()) {\n    final OptionsStrategy optionsStrategy=itty.next();\n    if (optionsStrategy.getOptions().containsKey(PER_REQUEST_TIMEOUT))     builder.timeout((long)optionsStrategy.getOptions().get(PER_REQUEST_TIMEOUT));\n else     if (optionsStrategy.getOptions().containsKey(PER_REQUEST_BATCH_SIZE))     builder.batchSize((int)optionsStrategy.getOptions().get(PER_REQUEST_BATCH_SIZE));\n  }\n  return client.submitAsync(bytecode,builder.create()).thenApply(rs -> new DriverRemoteTraversal<>(rs,client,attachElements,conf));\n}\n catch (Exception ex) {\n  throw new RemoteConnectionException(ex);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 150,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1198,
                        "startLineNumber": 215,
                        "startColumnNumber": 126,
                        "endLineNumber": 234,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  try {\n    final Iterator<OptionsStrategy> itty=IteratorUtils.map(IteratorUtils.filter(bytecode.getSourceInstructions().iterator(),s -> s.getOperator().equals(TraversalSource.Symbols.withStrategies) && s.getArguments()[0] instanceof OptionsStrategy),os -> (OptionsStrategy)os.getArguments()[0]);\n    final RequestOptions.Builder builder=RequestOptions.build();\n    while (itty.hasNext()) {\n      final OptionsStrategy optionsStrategy=itty.next();\n      if (optionsStrategy.getOptions().containsKey(PER_REQUEST_TIMEOUT))       builder.timeout((long)optionsStrategy.getOptions().get(PER_REQUEST_TIMEOUT));\n else       if (optionsStrategy.getOptions().containsKey(PER_REQUEST_BATCH_SIZE))       builder.batchSize((int)optionsStrategy.getOptions().get(PER_REQUEST_BATCH_SIZE));\n    }\n    return client.submitAsync(bytecode,builder.create()).thenApply(rs -> new DriverRemoteTraversal<>(rs,client,attachElements,conf));\n  }\n catch (  Exception ex) {\n    throw new RemoteConnectionException(ex);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 151,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1334,
                        "startLineNumber": 214,
                        "startColumnNumber": 4,
                        "endLineNumber": 234,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override public <E>CompletableFuture<RemoteTraversal<?,E>> submitAsync(final Bytecode bytecode) throws RemoteConnectionException {\n  try {\n    final Iterator<OptionsStrategy> itty=IteratorUtils.map(IteratorUtils.filter(bytecode.getSourceInstructions().iterator(),s -> s.getOperator().equals(TraversalSource.Symbols.withStrategies) && s.getArguments()[0] instanceof OptionsStrategy),os -> (OptionsStrategy)os.getArguments()[0]);\n    final RequestOptions.Builder builder=RequestOptions.build();\n    while (itty.hasNext()) {\n      final OptionsStrategy optionsStrategy=itty.next();\n      if (optionsStrategy.getOptions().containsKey(PER_REQUEST_TIMEOUT))       builder.timeout((long)optionsStrategy.getOptions().get(PER_REQUEST_TIMEOUT));\n else       if (optionsStrategy.getOptions().containsKey(PER_REQUEST_BATCH_SIZE))       builder.batchSize((int)optionsStrategy.getOptions().get(PER_REQUEST_BATCH_SIZE));\n    }\n    return client.submitAsync(bytecode,builder.create()).thenApply(rs -> new DriverRemoteTraversal<>(rs,client,attachElements,conf));\n  }\n catch (  Exception ex) {\n    throw new RemoteConnectionException(ex);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 174,
                    "astHeight": 14
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 62,
                    "startLineNumber": 221,
                    "startColumnNumber": 12,
                    "endLineNumber": 221,
                    "endColumnNumber": 74
                },
                "nodeContext": "final RequestOptions.Builder builder=RequestOptions.build();\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 11,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.tinkerpop.gremlin.driver.RequestOptions"
        },
        {
            "nodeContext": "RequestOptions",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 14,
                "startLineNumber": 221,
                "startColumnNumber": 51,
                "endLineNumber": 221,
                "endColumnNumber": 65
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
                    "nodePosition": {
                        "charLength": 22,
                        "startLineNumber": 221,
                        "startColumnNumber": 51,
                        "endLineNumber": 221,
                        "endColumnNumber": 73
                    },
                    "nodeContext": "RequestOptions.build()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 32,
                        "startLineNumber": 221,
                        "startColumnNumber": 41,
                        "endLineNumber": 221,
                        "endColumnNumber": 73
                    },
                    "nodeContext": "builder=RequestOptions.build()",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 62,
                        "startLineNumber": 221,
                        "startColumnNumber": 12,
                        "endLineNumber": 221,
                        "endColumnNumber": 74
                    },
                    "nodeContext": "final RequestOptions.Builder builder=RequestOptions.build();\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 11,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 1092,
                        "startLineNumber": 216,
                        "startColumnNumber": 12,
                        "endLineNumber": 231,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  final Iterator<OptionsStrategy> itty=IteratorUtils.map(IteratorUtils.filter(bytecode.getSourceInstructions().iterator(),s -> s.getOperator().equals(TraversalSource.Symbols.withStrategies) && s.getArguments()[0] instanceof OptionsStrategy),os -> (OptionsStrategy)os.getArguments()[0]);\n  final RequestOptions.Builder builder=RequestOptions.build();\n  while (itty.hasNext()) {\n    final OptionsStrategy optionsStrategy=itty.next();\n    if (optionsStrategy.getOptions().containsKey(PER_REQUEST_TIMEOUT))     builder.timeout((long)optionsStrategy.getOptions().get(PER_REQUEST_TIMEOUT));\n else     if (optionsStrategy.getOptions().containsKey(PER_REQUEST_BATCH_SIZE))     builder.batchSize((int)optionsStrategy.getOptions().get(PER_REQUEST_BATCH_SIZE));\n  }\n  return client.submitAsync(bytecode,builder.create()).thenApply(rs -> new DriverRemoteTraversal<>(rs,client,attachElements,conf));\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 138,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1182,
                        "startLineNumber": 216,
                        "startColumnNumber": 8,
                        "endLineNumber": 233,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "try {\n  final Iterator<OptionsStrategy> itty=IteratorUtils.map(IteratorUtils.filter(bytecode.getSourceInstructions().iterator(),s -> s.getOperator().equals(TraversalSource.Symbols.withStrategies) && s.getArguments()[0] instanceof OptionsStrategy),os -> (OptionsStrategy)os.getArguments()[0]);\n  final RequestOptions.Builder builder=RequestOptions.build();\n  while (itty.hasNext()) {\n    final OptionsStrategy optionsStrategy=itty.next();\n    if (optionsStrategy.getOptions().containsKey(PER_REQUEST_TIMEOUT))     builder.timeout((long)optionsStrategy.getOptions().get(PER_REQUEST_TIMEOUT));\n else     if (optionsStrategy.getOptions().containsKey(PER_REQUEST_BATCH_SIZE))     builder.batchSize((int)optionsStrategy.getOptions().get(PER_REQUEST_BATCH_SIZE));\n  }\n  return client.submitAsync(bytecode,builder.create()).thenApply(rs -> new DriverRemoteTraversal<>(rs,client,attachElements,conf));\n}\n catch (Exception ex) {\n  throw new RemoteConnectionException(ex);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 150,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1198,
                        "startLineNumber": 215,
                        "startColumnNumber": 126,
                        "endLineNumber": 234,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  try {\n    final Iterator<OptionsStrategy> itty=IteratorUtils.map(IteratorUtils.filter(bytecode.getSourceInstructions().iterator(),s -> s.getOperator().equals(TraversalSource.Symbols.withStrategies) && s.getArguments()[0] instanceof OptionsStrategy),os -> (OptionsStrategy)os.getArguments()[0]);\n    final RequestOptions.Builder builder=RequestOptions.build();\n    while (itty.hasNext()) {\n      final OptionsStrategy optionsStrategy=itty.next();\n      if (optionsStrategy.getOptions().containsKey(PER_REQUEST_TIMEOUT))       builder.timeout((long)optionsStrategy.getOptions().get(PER_REQUEST_TIMEOUT));\n else       if (optionsStrategy.getOptions().containsKey(PER_REQUEST_BATCH_SIZE))       builder.batchSize((int)optionsStrategy.getOptions().get(PER_REQUEST_BATCH_SIZE));\n    }\n    return client.submitAsync(bytecode,builder.create()).thenApply(rs -> new DriverRemoteTraversal<>(rs,client,attachElements,conf));\n  }\n catch (  Exception ex) {\n    throw new RemoteConnectionException(ex);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 151,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1334,
                        "startLineNumber": 214,
                        "startColumnNumber": 4,
                        "endLineNumber": 234,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "@Override public <E>CompletableFuture<RemoteTraversal<?,E>> submitAsync(final Bytecode bytecode) throws RemoteConnectionException {\n  try {\n    final Iterator<OptionsStrategy> itty=IteratorUtils.map(IteratorUtils.filter(bytecode.getSourceInstructions().iterator(),s -> s.getOperator().equals(TraversalSource.Symbols.withStrategies) && s.getArguments()[0] instanceof OptionsStrategy),os -> (OptionsStrategy)os.getArguments()[0]);\n    final RequestOptions.Builder builder=RequestOptions.build();\n    while (itty.hasNext()) {\n      final OptionsStrategy optionsStrategy=itty.next();\n      if (optionsStrategy.getOptions().containsKey(PER_REQUEST_TIMEOUT))       builder.timeout((long)optionsStrategy.getOptions().get(PER_REQUEST_TIMEOUT));\n else       if (optionsStrategy.getOptions().containsKey(PER_REQUEST_BATCH_SIZE))       builder.batchSize((int)optionsStrategy.getOptions().get(PER_REQUEST_BATCH_SIZE));\n    }\n    return client.submitAsync(bytecode,builder.create()).thenApply(rs -> new DriverRemoteTraversal<>(rs,client,attachElements,conf));\n  }\n catch (  Exception ex) {\n    throw new RemoteConnectionException(ex);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 174,
                    "astHeight": 14
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 62,
                    "startLineNumber": 221,
                    "startColumnNumber": 12,
                    "endLineNumber": 221,
                    "endColumnNumber": 74
                },
                "nodeContext": "final RequestOptions.Builder builder=RequestOptions.build();\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 11,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "org.apache.tinkerpop.gremlin.driver.RequestOptions"
        }
    ],
    "positionList": [
        {
            "charLength": 14,
            "startLineNumber": 221,
            "startColumnNumber": 18,
            "endLineNumber": 221,
            "endColumnNumber": 32
        },
        {
            "charLength": 14,
            "startLineNumber": 221,
            "startColumnNumber": 51,
            "endLineNumber": 221,
            "endColumnNumber": 65
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 2
        }
    ]
}