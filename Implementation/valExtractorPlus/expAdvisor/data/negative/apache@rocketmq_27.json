{
    "id": 27,
    "expression": "null",
    "projectName": "apache@rocketmq",
    "commitID": "7f234337d01c737bfd01d5e0fd2b86bdb8719d35",
    "filePath": "remoting/src/main/java/org/apache/rocketmq/remoting/transport/mqtt/MqttMessage2RemotingCommandHandler.java",
    "occurrences": 2,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "null",
            "nodeType": "NullLiteral",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 46,
                "startColumnNumber": 41,
                "endLineNumber": 46,
                "endColumnNumber": 45
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
                    "nodePosition": {
                        "charLength": 21,
                        "startLineNumber": 46,
                        "startColumnNumber": 24,
                        "endLineNumber": 46,
                        "endColumnNumber": 45
                    },
                    "nodeContext": "requestCommand=null",
                    "nodeType": "VariableDeclarationFragment",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 38,
                        "startLineNumber": 46,
                        "startColumnNumber": 8,
                        "endLineNumber": 46,
                        "endColumnNumber": 46
                    },
                    "nodeContext": "RemotingCommand requestCommand=null;\n",
                    "nodeType": "VariableDeclarationStatement",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 465,
                        "startLineNumber": 42,
                        "startColumnNumber": 29,
                        "endLineNumber": 53,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (!(msg instanceof MqttMessage)) {\n    return;\n  }\n  RemotingCommand requestCommand=null;\n  Message2MessageEncodeDecode message2MessageEncodeDecode=EncodeDecodeDispatcher.getEncodeDecodeDispatcher().get(msg.fixedHeader().messageType());\n  if (message2MessageEncodeDecode != null) {\n    requestCommand=message2MessageEncodeDecode.decode(msg);\n  }\n  out.add(requestCommand);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 48,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1055,
                        "startLineNumber": 30,
                        "startColumnNumber": 4,
                        "endLineNumber": 53,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Decode from one message to an other. This method will be called for each written message that can be handled by this encoder.\n * @param ctx the {@link ChannelHandlerContext} which this {@link MessageToMessageDecoder}belongs to\n * @param msg the message to decode to an other one\n * @param out the {@link List} to which decoded messages should be added\n * @throws Exception is thrown if an error occurs\n */\n@Override protected void decode(ChannelHandlerContext ctx,MqttMessage msg,List<Object> out) throws Exception {\n  if (!(msg instanceof MqttMessage)) {\n    return;\n  }\n  RemotingCommand requestCommand=null;\n  Message2MessageEncodeDecode message2MessageEncodeDecode=EncodeDecodeDispatcher.getEncodeDecodeDispatcher().get(msg.fixedHeader().messageType());\n  if (message2MessageEncodeDecode != null) {\n    requestCommand=message2MessageEncodeDecode.decode(msg);\n  }\n  out.add(requestCommand);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 72,
                    "astHeight": 8
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 38,
                    "startLineNumber": 46,
                    "startColumnNumber": 8,
                    "endLineNumber": 46,
                    "endColumnNumber": 46
                },
                "nodeContext": "RemotingCommand requestCommand=null;\n",
                "nodeType": "VariableDeclarationStatement",
                "astNodeNumber": 6,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "null"
        },
        {
            "nodeContext": "null",
            "nodeType": "NullLiteral",
            "nodePosition": {
                "charLength": 4,
                "startLineNumber": 49,
                "startColumnNumber": 43,
                "endLineNumber": 49,
                "endColumnNumber": 47
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 35,
                        "startLineNumber": 49,
                        "startColumnNumber": 12,
                        "endLineNumber": 49,
                        "endColumnNumber": 47
                    },
                    "nodeContext": "message2MessageEncodeDecode != null",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 122,
                        "startLineNumber": 49,
                        "startColumnNumber": 8,
                        "endLineNumber": 51,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (message2MessageEncodeDecode != null) {\n  requestCommand=message2MessageEncodeDecode.decode(msg);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 12,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 465,
                        "startLineNumber": 42,
                        "startColumnNumber": 29,
                        "endLineNumber": 53,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (!(msg instanceof MqttMessage)) {\n    return;\n  }\n  RemotingCommand requestCommand=null;\n  Message2MessageEncodeDecode message2MessageEncodeDecode=EncodeDecodeDispatcher.getEncodeDecodeDispatcher().get(msg.fixedHeader().messageType());\n  if (message2MessageEncodeDecode != null) {\n    requestCommand=message2MessageEncodeDecode.decode(msg);\n  }\n  out.add(requestCommand);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 48,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1055,
                        "startLineNumber": 30,
                        "startColumnNumber": 4,
                        "endLineNumber": 53,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Decode from one message to an other. This method will be called for each written message that can be handled by this encoder.\n * @param ctx the {@link ChannelHandlerContext} which this {@link MessageToMessageDecoder}belongs to\n * @param msg the message to decode to an other one\n * @param out the {@link List} to which decoded messages should be added\n * @throws Exception is thrown if an error occurs\n */\n@Override protected void decode(ChannelHandlerContext ctx,MqttMessage msg,List<Object> out) throws Exception {\n  if (!(msg instanceof MqttMessage)) {\n    return;\n  }\n  RemotingCommand requestCommand=null;\n  Message2MessageEncodeDecode message2MessageEncodeDecode=EncodeDecodeDispatcher.getEncodeDecodeDispatcher().get(msg.fixedHeader().messageType());\n  if (message2MessageEncodeDecode != null) {\n    requestCommand=message2MessageEncodeDecode.decode(msg);\n  }\n  out.add(requestCommand);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 72,
                    "astHeight": 8
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 35,
                    "startLineNumber": 49,
                    "startColumnNumber": 12,
                    "endLineNumber": 49,
                    "endColumnNumber": 47
                },
                "nodeContext": "message2MessageEncodeDecode != null",
                "nodeType": "InfixExpression",
                "astNodeNumber": 3,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "null"
        }
    ],
    "positionList": [
        {
            "charLength": 4,
            "startLineNumber": 46,
            "startColumnNumber": 41,
            "endLineNumber": 46,
            "endColumnNumber": 45
        },
        {
            "charLength": 4,
            "startLineNumber": 49,
            "startColumnNumber": 43,
            "endLineNumber": 49,
            "endColumnNumber": 47
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 2
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 2
        }
    ]
}