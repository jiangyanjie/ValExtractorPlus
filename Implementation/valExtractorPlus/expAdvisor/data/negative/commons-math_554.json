{
    "id": 554,
    "expression": "h",
    "projectName": "commons-math",
    "commitID": "54c4ee34af4b366a898176190813152d446095e1",
    "filePath": "src/main/java/org/apache/commons/math4/analysis/interpolation/SplineInterpolator.java",
    "occurrences": 11,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "h",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 1,
                "startLineNumber": 87,
                "startColumnNumber": 12,
                "endLineNumber": 87,
                "endColumnNumber": 13
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
                    "nodePosition": {
                        "charLength": 4,
                        "startLineNumber": 87,
                        "startColumnNumber": 12,
                        "endLineNumber": 87,
                        "endColumnNumber": 16
                    },
                    "nodeContext": "h[i]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 22,
                        "startLineNumber": 87,
                        "startColumnNumber": 12,
                        "endLineNumber": 87,
                        "endColumnNumber": 34
                    },
                    "nodeContext": "h[i]=x[i + 1] - x[i]",
                    "nodeType": "Assignment",
                    "astNodeNumber": 13,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 23,
                        "startLineNumber": 87,
                        "startColumnNumber": 12,
                        "endLineNumber": 87,
                        "endColumnNumber": 35
                    },
                    "nodeContext": "h[i]=x[i + 1] - x[i];\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 14,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 47,
                        "startLineNumber": 86,
                        "startColumnNumber": 36,
                        "endLineNumber": 88,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  h[i]=x[i + 1] - x[i];\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 15,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 75,
                        "startLineNumber": 86,
                        "startColumnNumber": 8,
                        "endLineNumber": 88,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=0; i < n; i++) {\n  h[i]=x[i + 1] - x[i];\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 26,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1961,
                        "startLineNumber": 69,
                        "startColumnNumber": 45,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 461,
                    "astHeight": 19
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2719,
                        "startLineNumber": 53,
                        "startColumnNumber": 4,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Computes an interpolating function for the data set.\n * @param x the arguments for the interpolation points\n * @param y the values for the interpolation points\n * @return a function which interpolates the data set\n * @throws DimensionMismatchException if {@code x} and {@code y}have different sizes.\n * @throws NonMonotonicSequenceException if {@code x} is not sorted instrict increasing order.\n * @throws NumberIsTooSmallException if the size of {@code x} is smallerthan 3.\n */\n@Override public PolynomialSplineFunction interpolate(double x[],double y[]) throws DimensionMismatchException, NumberIsTooSmallException, NonMonotonicSequenceException {\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 483,
                    "astHeight": 20
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 23,
                    "startLineNumber": 87,
                    "startColumnNumber": 12,
                    "endLineNumber": 87,
                    "endColumnNumber": 35
                },
                "nodeContext": "h[i]=x[i + 1] - x[i];\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 14,
                "astHeight": 6
            },
            "tokenLength": 1,
            "type": "double[]"
        },
        {
            "nodeContext": "h",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 1,
                "startLineNumber": 94,
                "startColumnNumber": 44,
                "endLineNumber": 94,
                "endColumnNumber": 45
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 8,
                        "startLineNumber": 94,
                        "startColumnNumber": 44,
                        "endLineNumber": 94,
                        "endColumnNumber": 52
                    },
                    "nodeContext": "h[i - 1]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 19,
                        "startLineNumber": 94,
                        "startColumnNumber": 44,
                        "endLineNumber": 94,
                        "endColumnNumber": 63
                    },
                    "nodeContext": "h[i - 1] * mu[i - 1]",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 11,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 47,
                        "startLineNumber": 94,
                        "startColumnNumber": 16,
                        "endLineNumber": 94,
                        "endColumnNumber": 63
                    },
                    "nodeContext": "2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1]",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 26,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 51,
                        "startLineNumber": 94,
                        "startColumnNumber": 12,
                        "endLineNumber": 94,
                        "endColumnNumber": 63
                    },
                    "nodeContext": "g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1]",
                    "nodeType": "Assignment",
                    "astNodeNumber": 28,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 52,
                        "startLineNumber": 94,
                        "startColumnNumber": 12,
                        "endLineNumber": 94,
                        "endColumnNumber": 64
                    },
                    "nodeContext": "g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 29,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 269,
                        "startLineNumber": 93,
                        "startColumnNumber": 36,
                        "endLineNumber": 98,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n  mu[i]=h[i] / g;\n  z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 112,
                    "astHeight": 17
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 297,
                        "startLineNumber": 93,
                        "startColumnNumber": 8,
                        "endLineNumber": 98,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=1; i < n; i++) {\n  g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n  mu[i]=h[i] / g;\n  z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 123,
                    "astHeight": 18
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1961,
                        "startLineNumber": 69,
                        "startColumnNumber": 45,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 461,
                    "astHeight": 19
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2719,
                        "startLineNumber": 53,
                        "startColumnNumber": 4,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Computes an interpolating function for the data set.\n * @param x the arguments for the interpolation points\n * @param y the values for the interpolation points\n * @return a function which interpolates the data set\n * @throws DimensionMismatchException if {@code x} and {@code y}have different sizes.\n * @throws NonMonotonicSequenceException if {@code x} is not sorted instrict increasing order.\n * @throws NumberIsTooSmallException if the size of {@code x} is smallerthan 3.\n */\n@Override public PolynomialSplineFunction interpolate(double x[],double y[]) throws DimensionMismatchException, NumberIsTooSmallException, NonMonotonicSequenceException {\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 483,
                    "astHeight": 20
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 52,
                    "startLineNumber": 94,
                    "startColumnNumber": 12,
                    "endLineNumber": 94,
                    "endColumnNumber": 64
                },
                "nodeContext": "g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 29,
                "astHeight": 9
            },
            "tokenLength": 1,
            "type": "double[]"
        },
        {
            "nodeContext": "h",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 1,
                "startLineNumber": 95,
                "startColumnNumber": 20,
                "endLineNumber": 95,
                "endColumnNumber": 21
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 4,
                        "startLineNumber": 95,
                        "startColumnNumber": 20,
                        "endLineNumber": 95,
                        "endColumnNumber": 24
                    },
                    "nodeContext": "h[i]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 8,
                        "startLineNumber": 95,
                        "startColumnNumber": 20,
                        "endLineNumber": 95,
                        "endColumnNumber": 28
                    },
                    "nodeContext": "h[i] / g",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 16,
                        "startLineNumber": 95,
                        "startColumnNumber": 12,
                        "endLineNumber": 95,
                        "endColumnNumber": 28
                    },
                    "nodeContext": "mu[i]=h[i] / g",
                    "nodeType": "Assignment",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 17,
                        "startLineNumber": 95,
                        "startColumnNumber": 12,
                        "endLineNumber": 95,
                        "endColumnNumber": 29
                    },
                    "nodeContext": "mu[i]=h[i] / g;\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 10,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 269,
                        "startLineNumber": 93,
                        "startColumnNumber": 36,
                        "endLineNumber": 98,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n  mu[i]=h[i] / g;\n  z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 112,
                    "astHeight": 17
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 297,
                        "startLineNumber": 93,
                        "startColumnNumber": 8,
                        "endLineNumber": 98,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=1; i < n; i++) {\n  g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n  mu[i]=h[i] / g;\n  z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 123,
                    "astHeight": 18
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1961,
                        "startLineNumber": 69,
                        "startColumnNumber": 45,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 461,
                    "astHeight": 19
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2719,
                        "startLineNumber": 53,
                        "startColumnNumber": 4,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Computes an interpolating function for the data set.\n * @param x the arguments for the interpolation points\n * @param y the values for the interpolation points\n * @return a function which interpolates the data set\n * @throws DimensionMismatchException if {@code x} and {@code y}have different sizes.\n * @throws NonMonotonicSequenceException if {@code x} is not sorted instrict increasing order.\n * @throws NumberIsTooSmallException if the size of {@code x} is smallerthan 3.\n */\n@Override public PolynomialSplineFunction interpolate(double x[],double y[]) throws DimensionMismatchException, NumberIsTooSmallException, NonMonotonicSequenceException {\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 483,
                    "astHeight": 20
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 17,
                    "startLineNumber": 95,
                    "startColumnNumber": 12,
                    "endLineNumber": 95,
                    "endColumnNumber": 29
                },
                "nodeContext": "mu[i]=h[i] / g;\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 10,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "double[]"
        },
        {
            "nodeContext": "h",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 1,
                "startLineNumber": 96,
                "startColumnNumber": 37,
                "endLineNumber": 96,
                "endColumnNumber": 38
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 8,
                        "startLineNumber": 96,
                        "startColumnNumber": 37,
                        "endLineNumber": 96,
                        "endColumnNumber": 45
                    },
                    "nodeContext": "h[i - 1]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 19,
                        "startLineNumber": 96,
                        "startColumnNumber": 26,
                        "endLineNumber": 96,
                        "endColumnNumber": 45
                    },
                    "nodeContext": "y[i + 1] * h[i - 1]",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 11,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 50,
                        "startLineNumber": 96,
                        "startColumnNumber": 26,
                        "endLineNumber": 96,
                        "endColumnNumber": 76
                    },
                    "nodeContext": "y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1])",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 28,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
                    "nodePosition": {
                        "charLength": 67,
                        "startLineNumber": 96,
                        "startColumnNumber": 26,
                        "endLineNumber": 96,
                        "endColumnNumber": 93
                    },
                    "nodeContext": "y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 38,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 69,
                        "startLineNumber": 96,
                        "startColumnNumber": 25,
                        "endLineNumber": 96,
                        "endColumnNumber": 94
                    },
                    "nodeContext": "(y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i])",
                    "nodeType": "ParenthesizedExpression",
                    "astNodeNumber": 39,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 74,
                        "startLineNumber": 96,
                        "startColumnNumber": 20,
                        "endLineNumber": 96,
                        "endColumnNumber": 94
                    },
                    "nodeContext": "3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i])",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 41,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 114,
                        "startLineNumber": 96,
                        "startColumnNumber": 20,
                        "endLineNumber": 97,
                        "endColumnNumber": 37
                    },
                    "nodeContext": "3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i])",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 52,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
                    "nodePosition": {
                        "charLength": 136,
                        "startLineNumber": 96,
                        "startColumnNumber": 20,
                        "endLineNumber": 97,
                        "endColumnNumber": 59
                    },
                    "nodeContext": "3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 64,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 138,
                        "startLineNumber": 96,
                        "startColumnNumber": 19,
                        "endLineNumber": 97,
                        "endColumnNumber": 60
                    },
                    "nodeContext": "(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1])",
                    "nodeType": "ParenthesizedExpression",
                    "astNodeNumber": 65,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 142,
                        "startLineNumber": 96,
                        "startColumnNumber": 19,
                        "endLineNumber": 97,
                        "endColumnNumber": 64
                    },
                    "nodeContext": "(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 67,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 149,
                        "startLineNumber": 96,
                        "startColumnNumber": 12,
                        "endLineNumber": 97,
                        "endColumnNumber": 64
                    },
                    "nodeContext": "z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g",
                    "nodeType": "Assignment",
                    "astNodeNumber": 71,
                    "astHeight": 15
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 150,
                        "startLineNumber": 96,
                        "startColumnNumber": 12,
                        "endLineNumber": 97,
                        "endColumnNumber": 65
                    },
                    "nodeContext": "z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 72,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 269,
                        "startLineNumber": 93,
                        "startColumnNumber": 36,
                        "endLineNumber": 98,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n  mu[i]=h[i] / g;\n  z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 112,
                    "astHeight": 17
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 297,
                        "startLineNumber": 93,
                        "startColumnNumber": 8,
                        "endLineNumber": 98,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=1; i < n; i++) {\n  g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n  mu[i]=h[i] / g;\n  z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 123,
                    "astHeight": 18
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1961,
                        "startLineNumber": 69,
                        "startColumnNumber": 45,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 461,
                    "astHeight": 19
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2719,
                        "startLineNumber": 53,
                        "startColumnNumber": 4,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Computes an interpolating function for the data set.\n * @param x the arguments for the interpolation points\n * @param y the values for the interpolation points\n * @return a function which interpolates the data set\n * @throws DimensionMismatchException if {@code x} and {@code y}have different sizes.\n * @throws NonMonotonicSequenceException if {@code x} is not sorted instrict increasing order.\n * @throws NumberIsTooSmallException if the size of {@code x} is smallerthan 3.\n */\n@Override public PolynomialSplineFunction interpolate(double x[],double y[]) throws DimensionMismatchException, NumberIsTooSmallException, NonMonotonicSequenceException {\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 483,
                    "astHeight": 20
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                "nodePosition": {
                    "charLength": 74,
                    "startLineNumber": 96,
                    "startColumnNumber": 20,
                    "endLineNumber": 96,
                    "endColumnNumber": 94
                },
                "nodeContext": "3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i])",
                "nodeType": "InfixExpression",
                "astNodeNumber": 41,
                "astHeight": 10
            },
            "tokenLength": 1,
            "type": "double[]"
        },
        {
            "nodeContext": "h",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 1,
                "startLineNumber": 96,
                "startColumnNumber": 89,
                "endLineNumber": 96,
                "endColumnNumber": 90
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 4,
                        "startLineNumber": 96,
                        "startColumnNumber": 89,
                        "endLineNumber": 96,
                        "endColumnNumber": 93
                    },
                    "nodeContext": "h[i]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 15,
                        "startLineNumber": 96,
                        "startColumnNumber": 78,
                        "endLineNumber": 96,
                        "endColumnNumber": 93
                    },
                    "nodeContext": "y[i - 1] * h[i]",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
                    "nodePosition": {
                        "charLength": 67,
                        "startLineNumber": 96,
                        "startColumnNumber": 26,
                        "endLineNumber": 96,
                        "endColumnNumber": 93
                    },
                    "nodeContext": "y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 38,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 69,
                        "startLineNumber": 96,
                        "startColumnNumber": 25,
                        "endLineNumber": 96,
                        "endColumnNumber": 94
                    },
                    "nodeContext": "(y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i])",
                    "nodeType": "ParenthesizedExpression",
                    "astNodeNumber": 39,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 74,
                        "startLineNumber": 96,
                        "startColumnNumber": 20,
                        "endLineNumber": 96,
                        "endColumnNumber": 94
                    },
                    "nodeContext": "3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i])",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 41,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 114,
                        "startLineNumber": 96,
                        "startColumnNumber": 20,
                        "endLineNumber": 97,
                        "endColumnNumber": 37
                    },
                    "nodeContext": "3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i])",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 52,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
                    "nodePosition": {
                        "charLength": 136,
                        "startLineNumber": 96,
                        "startColumnNumber": 20,
                        "endLineNumber": 97,
                        "endColumnNumber": 59
                    },
                    "nodeContext": "3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 64,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 138,
                        "startLineNumber": 96,
                        "startColumnNumber": 19,
                        "endLineNumber": 97,
                        "endColumnNumber": 60
                    },
                    "nodeContext": "(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1])",
                    "nodeType": "ParenthesizedExpression",
                    "astNodeNumber": 65,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 142,
                        "startLineNumber": 96,
                        "startColumnNumber": 19,
                        "endLineNumber": 97,
                        "endColumnNumber": 64
                    },
                    "nodeContext": "(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 67,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 149,
                        "startLineNumber": 96,
                        "startColumnNumber": 12,
                        "endLineNumber": 97,
                        "endColumnNumber": 64
                    },
                    "nodeContext": "z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g",
                    "nodeType": "Assignment",
                    "astNodeNumber": 71,
                    "astHeight": 15
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 150,
                        "startLineNumber": 96,
                        "startColumnNumber": 12,
                        "endLineNumber": 97,
                        "endColumnNumber": 65
                    },
                    "nodeContext": "z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 72,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 269,
                        "startLineNumber": 93,
                        "startColumnNumber": 36,
                        "endLineNumber": 98,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n  mu[i]=h[i] / g;\n  z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 112,
                    "astHeight": 17
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 297,
                        "startLineNumber": 93,
                        "startColumnNumber": 8,
                        "endLineNumber": 98,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=1; i < n; i++) {\n  g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n  mu[i]=h[i] / g;\n  z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 123,
                    "astHeight": 18
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1961,
                        "startLineNumber": 69,
                        "startColumnNumber": 45,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 461,
                    "astHeight": 19
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2719,
                        "startLineNumber": 53,
                        "startColumnNumber": 4,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Computes an interpolating function for the data set.\n * @param x the arguments for the interpolation points\n * @param y the values for the interpolation points\n * @return a function which interpolates the data set\n * @throws DimensionMismatchException if {@code x} and {@code y}have different sizes.\n * @throws NonMonotonicSequenceException if {@code x} is not sorted instrict increasing order.\n * @throws NumberIsTooSmallException if the size of {@code x} is smallerthan 3.\n */\n@Override public PolynomialSplineFunction interpolate(double x[],double y[]) throws DimensionMismatchException, NumberIsTooSmallException, NonMonotonicSequenceException {\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 483,
                    "astHeight": 20
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                "nodePosition": {
                    "charLength": 74,
                    "startLineNumber": 96,
                    "startColumnNumber": 20,
                    "endLineNumber": 96,
                    "endColumnNumber": 94
                },
                "nodeContext": "3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i])",
                "nodeType": "InfixExpression",
                "astNodeNumber": 41,
                "astHeight": 10
            },
            "tokenLength": 1,
            "type": "double[]"
        },
        {
            "nodeContext": "h",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 1,
                "startLineNumber": 97,
                "startColumnNumber": 21,
                "endLineNumber": 97,
                "endColumnNumber": 22
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 8,
                        "startLineNumber": 97,
                        "startColumnNumber": 21,
                        "endLineNumber": 97,
                        "endColumnNumber": 29
                    },
                    "nodeContext": "h[i - 1]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
                    "nodePosition": {
                        "charLength": 15,
                        "startLineNumber": 97,
                        "startColumnNumber": 21,
                        "endLineNumber": 97,
                        "endColumnNumber": 36
                    },
                    "nodeContext": "h[i - 1] * h[i]",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 17,
                        "startLineNumber": 97,
                        "startColumnNumber": 20,
                        "endLineNumber": 97,
                        "endColumnNumber": 37
                    },
                    "nodeContext": "(h[i - 1] * h[i])",
                    "nodeType": "ParenthesizedExpression",
                    "astNodeNumber": 10,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 114,
                        "startLineNumber": 96,
                        "startColumnNumber": 20,
                        "endLineNumber": 97,
                        "endColumnNumber": 37
                    },
                    "nodeContext": "3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i])",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 52,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
                    "nodePosition": {
                        "charLength": 136,
                        "startLineNumber": 96,
                        "startColumnNumber": 20,
                        "endLineNumber": 97,
                        "endColumnNumber": 59
                    },
                    "nodeContext": "3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 64,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 138,
                        "startLineNumber": 96,
                        "startColumnNumber": 19,
                        "endLineNumber": 97,
                        "endColumnNumber": 60
                    },
                    "nodeContext": "(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1])",
                    "nodeType": "ParenthesizedExpression",
                    "astNodeNumber": 65,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 142,
                        "startLineNumber": 96,
                        "startColumnNumber": 19,
                        "endLineNumber": 97,
                        "endColumnNumber": 64
                    },
                    "nodeContext": "(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 67,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 149,
                        "startLineNumber": 96,
                        "startColumnNumber": 12,
                        "endLineNumber": 97,
                        "endColumnNumber": 64
                    },
                    "nodeContext": "z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g",
                    "nodeType": "Assignment",
                    "astNodeNumber": 71,
                    "astHeight": 15
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 150,
                        "startLineNumber": 96,
                        "startColumnNumber": 12,
                        "endLineNumber": 97,
                        "endColumnNumber": 65
                    },
                    "nodeContext": "z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 72,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 269,
                        "startLineNumber": 93,
                        "startColumnNumber": 36,
                        "endLineNumber": 98,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n  mu[i]=h[i] / g;\n  z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 112,
                    "astHeight": 17
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 297,
                        "startLineNumber": 93,
                        "startColumnNumber": 8,
                        "endLineNumber": 98,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=1; i < n; i++) {\n  g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n  mu[i]=h[i] / g;\n  z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 123,
                    "astHeight": 18
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1961,
                        "startLineNumber": 69,
                        "startColumnNumber": 45,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 461,
                    "astHeight": 19
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2719,
                        "startLineNumber": 53,
                        "startColumnNumber": 4,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Computes an interpolating function for the data set.\n * @param x the arguments for the interpolation points\n * @param y the values for the interpolation points\n * @return a function which interpolates the data set\n * @throws DimensionMismatchException if {@code x} and {@code y}have different sizes.\n * @throws NonMonotonicSequenceException if {@code x} is not sorted instrict increasing order.\n * @throws NumberIsTooSmallException if the size of {@code x} is smallerthan 3.\n */\n@Override public PolynomialSplineFunction interpolate(double x[],double y[]) throws DimensionMismatchException, NumberIsTooSmallException, NonMonotonicSequenceException {\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 483,
                    "astHeight": 20
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                "nodePosition": {
                    "charLength": 17,
                    "startLineNumber": 97,
                    "startColumnNumber": 20,
                    "endLineNumber": 97,
                    "endColumnNumber": 37
                },
                "nodeContext": "(h[i - 1] * h[i])",
                "nodeType": "ParenthesizedExpression",
                "astNodeNumber": 10,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "double[]"
        },
        {
            "nodeContext": "h",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 1,
                "startLineNumber": 97,
                "startColumnNumber": 32,
                "endLineNumber": 97,
                "endColumnNumber": 33
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 4,
                        "startLineNumber": 97,
                        "startColumnNumber": 32,
                        "endLineNumber": 97,
                        "endColumnNumber": 36
                    },
                    "nodeContext": "h[i]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
                    "nodePosition": {
                        "charLength": 15,
                        "startLineNumber": 97,
                        "startColumnNumber": 21,
                        "endLineNumber": 97,
                        "endColumnNumber": 36
                    },
                    "nodeContext": "h[i - 1] * h[i]",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 17,
                        "startLineNumber": 97,
                        "startColumnNumber": 20,
                        "endLineNumber": 97,
                        "endColumnNumber": 37
                    },
                    "nodeContext": "(h[i - 1] * h[i])",
                    "nodeType": "ParenthesizedExpression",
                    "astNodeNumber": 10,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 114,
                        "startLineNumber": 96,
                        "startColumnNumber": 20,
                        "endLineNumber": 97,
                        "endColumnNumber": 37
                    },
                    "nodeContext": "3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i])",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 52,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
                    "nodePosition": {
                        "charLength": 136,
                        "startLineNumber": 96,
                        "startColumnNumber": 20,
                        "endLineNumber": 97,
                        "endColumnNumber": 59
                    },
                    "nodeContext": "3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 64,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 138,
                        "startLineNumber": 96,
                        "startColumnNumber": 19,
                        "endLineNumber": 97,
                        "endColumnNumber": 60
                    },
                    "nodeContext": "(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1])",
                    "nodeType": "ParenthesizedExpression",
                    "astNodeNumber": 65,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 142,
                        "startLineNumber": 96,
                        "startColumnNumber": 19,
                        "endLineNumber": 97,
                        "endColumnNumber": 64
                    },
                    "nodeContext": "(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 67,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 149,
                        "startLineNumber": 96,
                        "startColumnNumber": 12,
                        "endLineNumber": 97,
                        "endColumnNumber": 64
                    },
                    "nodeContext": "z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g",
                    "nodeType": "Assignment",
                    "astNodeNumber": 71,
                    "astHeight": 15
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 150,
                        "startLineNumber": 96,
                        "startColumnNumber": 12,
                        "endLineNumber": 97,
                        "endColumnNumber": 65
                    },
                    "nodeContext": "z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 72,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 269,
                        "startLineNumber": 93,
                        "startColumnNumber": 36,
                        "endLineNumber": 98,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n  mu[i]=h[i] / g;\n  z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 112,
                    "astHeight": 17
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 297,
                        "startLineNumber": 93,
                        "startColumnNumber": 8,
                        "endLineNumber": 98,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=1; i < n; i++) {\n  g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n  mu[i]=h[i] / g;\n  z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 123,
                    "astHeight": 18
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1961,
                        "startLineNumber": 69,
                        "startColumnNumber": 45,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 461,
                    "astHeight": 19
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2719,
                        "startLineNumber": 53,
                        "startColumnNumber": 4,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Computes an interpolating function for the data set.\n * @param x the arguments for the interpolation points\n * @param y the values for the interpolation points\n * @return a function which interpolates the data set\n * @throws DimensionMismatchException if {@code x} and {@code y}have different sizes.\n * @throws NonMonotonicSequenceException if {@code x} is not sorted instrict increasing order.\n * @throws NumberIsTooSmallException if the size of {@code x} is smallerthan 3.\n */\n@Override public PolynomialSplineFunction interpolate(double x[],double y[]) throws DimensionMismatchException, NumberIsTooSmallException, NonMonotonicSequenceException {\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 483,
                    "astHeight": 20
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                "nodePosition": {
                    "charLength": 17,
                    "startLineNumber": 97,
                    "startColumnNumber": 20,
                    "endLineNumber": 97,
                    "endColumnNumber": 37
                },
                "nodeContext": "(h[i - 1] * h[i])",
                "nodeType": "ParenthesizedExpression",
                "astNodeNumber": 10,
                "astHeight": 5
            },
            "tokenLength": 1,
            "type": "double[]"
        },
        {
            "nodeContext": "h",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 1,
                "startLineNumber": 97,
                "startColumnNumber": 40,
                "endLineNumber": 97,
                "endColumnNumber": 41
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 8,
                        "startLineNumber": 97,
                        "startColumnNumber": 40,
                        "endLineNumber": 97,
                        "endColumnNumber": 48
                    },
                    "nodeContext": "h[i - 1]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 19,
                        "startLineNumber": 97,
                        "startColumnNumber": 40,
                        "endLineNumber": 97,
                        "endColumnNumber": 59
                    },
                    "nodeContext": "h[i - 1] * z[i - 1]",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 11,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
                    "nodePosition": {
                        "charLength": 136,
                        "startLineNumber": 96,
                        "startColumnNumber": 20,
                        "endLineNumber": 97,
                        "endColumnNumber": 59
                    },
                    "nodeContext": "3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 64,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 138,
                        "startLineNumber": 96,
                        "startColumnNumber": 19,
                        "endLineNumber": 97,
                        "endColumnNumber": 60
                    },
                    "nodeContext": "(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1])",
                    "nodeType": "ParenthesizedExpression",
                    "astNodeNumber": 65,
                    "astHeight": 13
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 142,
                        "startLineNumber": 96,
                        "startColumnNumber": 19,
                        "endLineNumber": 97,
                        "endColumnNumber": 64
                    },
                    "nodeContext": "(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 67,
                    "astHeight": 14
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 149,
                        "startLineNumber": 96,
                        "startColumnNumber": 12,
                        "endLineNumber": 97,
                        "endColumnNumber": 64
                    },
                    "nodeContext": "z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g",
                    "nodeType": "Assignment",
                    "astNodeNumber": 71,
                    "astHeight": 15
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 150,
                        "startLineNumber": 96,
                        "startColumnNumber": 12,
                        "endLineNumber": 97,
                        "endColumnNumber": 65
                    },
                    "nodeContext": "z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 72,
                    "astHeight": 16
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 269,
                        "startLineNumber": 93,
                        "startColumnNumber": 36,
                        "endLineNumber": 98,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n  mu[i]=h[i] / g;\n  z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 112,
                    "astHeight": 17
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 297,
                        "startLineNumber": 93,
                        "startColumnNumber": 8,
                        "endLineNumber": 98,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int i=1; i < n; i++) {\n  g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n  mu[i]=h[i] / g;\n  z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 123,
                    "astHeight": 18
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1961,
                        "startLineNumber": 69,
                        "startColumnNumber": 45,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 461,
                    "astHeight": 19
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2719,
                        "startLineNumber": 53,
                        "startColumnNumber": 4,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Computes an interpolating function for the data set.\n * @param x the arguments for the interpolation points\n * @param y the values for the interpolation points\n * @return a function which interpolates the data set\n * @throws DimensionMismatchException if {@code x} and {@code y}have different sizes.\n * @throws NonMonotonicSequenceException if {@code x} is not sorted instrict increasing order.\n * @throws NumberIsTooSmallException if the size of {@code x} is smallerthan 3.\n */\n@Override public PolynomialSplineFunction interpolate(double x[],double y[]) throws DimensionMismatchException, NumberIsTooSmallException, NonMonotonicSequenceException {\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 483,
                    "astHeight": 20
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                "nodePosition": {
                    "charLength": 19,
                    "startLineNumber": 97,
                    "startColumnNumber": 40,
                    "endLineNumber": 97,
                    "endColumnNumber": 59
                },
                "nodeContext": "h[i - 1] * z[i - 1]",
                "nodeType": "InfixExpression",
                "astNodeNumber": 11,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "double[]"
        },
        {
            "nodeContext": "h",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 1,
                "startLineNumber": 107,
                "startColumnNumber": 39,
                "endLineNumber": 107,
                "endColumnNumber": 40
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 4,
                        "startLineNumber": 107,
                        "startColumnNumber": 39,
                        "endLineNumber": 107,
                        "endColumnNumber": 43
                    },
                    "nodeContext": "h[j]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 24,
                        "startLineNumber": 107,
                        "startColumnNumber": 19,
                        "endLineNumber": 107,
                        "endColumnNumber": 43
                    },
                    "nodeContext": "(y[j + 1] - y[j]) / h[j]",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 14,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 61,
                        "startLineNumber": 107,
                        "startColumnNumber": 19,
                        "endLineNumber": 107,
                        "endColumnNumber": 80
                    },
                    "nodeContext": "(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 33,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 68,
                        "startLineNumber": 107,
                        "startColumnNumber": 12,
                        "endLineNumber": 107,
                        "endColumnNumber": 80
                    },
                    "nodeContext": "b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d",
                    "nodeType": "Assignment",
                    "astNodeNumber": 37,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 69,
                        "startLineNumber": 107,
                        "startColumnNumber": 12,
                        "endLineNumber": 107,
                        "endColumnNumber": 81
                    },
                    "nodeContext": "b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 38,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 189,
                        "startLineNumber": 105,
                        "startColumnNumber": 39,
                        "endLineNumber": 109,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  c[j]=z[j] - mu[j] * c[j + 1];\n  b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n  d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 79,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 220,
                        "startLineNumber": 105,
                        "startColumnNumber": 8,
                        "endLineNumber": 109,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int j=n - 1; j >= 0; j--) {\n  c[j]=z[j] - mu[j] * c[j + 1];\n  b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n  d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 92,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1961,
                        "startLineNumber": 69,
                        "startColumnNumber": 45,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 461,
                    "astHeight": 19
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2719,
                        "startLineNumber": 53,
                        "startColumnNumber": 4,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Computes an interpolating function for the data set.\n * @param x the arguments for the interpolation points\n * @param y the values for the interpolation points\n * @return a function which interpolates the data set\n * @throws DimensionMismatchException if {@code x} and {@code y}have different sizes.\n * @throws NonMonotonicSequenceException if {@code x} is not sorted instrict increasing order.\n * @throws NumberIsTooSmallException if the size of {@code x} is smallerthan 3.\n */\n@Override public PolynomialSplineFunction interpolate(double x[],double y[]) throws DimensionMismatchException, NumberIsTooSmallException, NonMonotonicSequenceException {\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 483,
                    "astHeight": 20
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 69,
                    "startLineNumber": 107,
                    "startColumnNumber": 12,
                    "endLineNumber": 107,
                    "endColumnNumber": 81
                },
                "nodeContext": "b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 38,
                "astHeight": 10
            },
            "tokenLength": 1,
            "type": "double[]"
        },
        {
            "nodeContext": "h",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 1,
                "startLineNumber": 107,
                "startColumnNumber": 46,
                "endLineNumber": 107,
                "endColumnNumber": 47
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 4,
                        "startLineNumber": 107,
                        "startColumnNumber": 46,
                        "endLineNumber": 107,
                        "endColumnNumber": 50
                    },
                    "nodeContext": "h[j]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 29,
                        "startLineNumber": 107,
                        "startColumnNumber": 46,
                        "endLineNumber": 107,
                        "endColumnNumber": 75
                    },
                    "nodeContext": "h[j] * (c[j + 1] + 2d * c[j])",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 16,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 34,
                        "startLineNumber": 107,
                        "startColumnNumber": 46,
                        "endLineNumber": 107,
                        "endColumnNumber": 80
                    },
                    "nodeContext": "h[j] * (c[j + 1] + 2d * c[j]) / 3d",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 18,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 61,
                        "startLineNumber": 107,
                        "startColumnNumber": 19,
                        "endLineNumber": 107,
                        "endColumnNumber": 80
                    },
                    "nodeContext": "(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 33,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 68,
                        "startLineNumber": 107,
                        "startColumnNumber": 12,
                        "endLineNumber": 107,
                        "endColumnNumber": 80
                    },
                    "nodeContext": "b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d",
                    "nodeType": "Assignment",
                    "astNodeNumber": 37,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 69,
                        "startLineNumber": 107,
                        "startColumnNumber": 12,
                        "endLineNumber": 107,
                        "endColumnNumber": 81
                    },
                    "nodeContext": "b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 38,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 189,
                        "startLineNumber": 105,
                        "startColumnNumber": 39,
                        "endLineNumber": 109,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  c[j]=z[j] - mu[j] * c[j + 1];\n  b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n  d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 79,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 220,
                        "startLineNumber": 105,
                        "startColumnNumber": 8,
                        "endLineNumber": 109,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int j=n - 1; j >= 0; j--) {\n  c[j]=z[j] - mu[j] * c[j + 1];\n  b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n  d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 92,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1961,
                        "startLineNumber": 69,
                        "startColumnNumber": 45,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 461,
                    "astHeight": 19
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2719,
                        "startLineNumber": 53,
                        "startColumnNumber": 4,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Computes an interpolating function for the data set.\n * @param x the arguments for the interpolation points\n * @param y the values for the interpolation points\n * @return a function which interpolates the data set\n * @throws DimensionMismatchException if {@code x} and {@code y}have different sizes.\n * @throws NonMonotonicSequenceException if {@code x} is not sorted instrict increasing order.\n * @throws NumberIsTooSmallException if the size of {@code x} is smallerthan 3.\n */\n@Override public PolynomialSplineFunction interpolate(double x[],double y[]) throws DimensionMismatchException, NumberIsTooSmallException, NonMonotonicSequenceException {\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 483,
                    "astHeight": 20
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 69,
                    "startLineNumber": 107,
                    "startColumnNumber": 12,
                    "endLineNumber": 107,
                    "endColumnNumber": 81
                },
                "nodeContext": "b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 38,
                "astHeight": 10
            },
            "tokenLength": 1,
            "type": "double[]"
        },
        {
            "nodeContext": "h",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 1,
                "startLineNumber": 108,
                "startColumnNumber": 45,
                "endLineNumber": 108,
                "endColumnNumber": 46
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 4,
                        "startLineNumber": 108,
                        "startColumnNumber": 45,
                        "endLineNumber": 108,
                        "endColumnNumber": 49
                    },
                    "nodeContext": "h[j]",
                    "nodeType": "ArrayAccess",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
                    "nodePosition": {
                        "charLength": 9,
                        "startLineNumber": 108,
                        "startColumnNumber": 40,
                        "endLineNumber": 108,
                        "endColumnNumber": 49
                    },
                    "nodeContext": "3d * h[j]",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 11,
                        "startLineNumber": 108,
                        "startColumnNumber": 39,
                        "endLineNumber": 108,
                        "endColumnNumber": 50
                    },
                    "nodeContext": "(3d * h[j])",
                    "nodeType": "ParenthesizedExpression",
                    "astNodeNumber": 6,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
                    "nodePosition": {
                        "charLength": 31,
                        "startLineNumber": 108,
                        "startColumnNumber": 19,
                        "endLineNumber": 108,
                        "endColumnNumber": 50
                    },
                    "nodeContext": "(c[j + 1] - c[j]) / (3d * h[j])",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 17,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 38,
                        "startLineNumber": 108,
                        "startColumnNumber": 12,
                        "endLineNumber": 108,
                        "endColumnNumber": 50
                    },
                    "nodeContext": "d[j]=(c[j + 1] - c[j]) / (3d * h[j])",
                    "nodeType": "Assignment",
                    "astNodeNumber": 21,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 39,
                        "startLineNumber": 108,
                        "startColumnNumber": 12,
                        "endLineNumber": 108,
                        "endColumnNumber": 51
                    },
                    "nodeContext": "d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 22,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
                    "nodePosition": {
                        "charLength": 189,
                        "startLineNumber": 105,
                        "startColumnNumber": 39,
                        "endLineNumber": 109,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  c[j]=z[j] - mu[j] * c[j + 1];\n  b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n  d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 79,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 220,
                        "startLineNumber": 105,
                        "startColumnNumber": 8,
                        "endLineNumber": 109,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "for (int j=n - 1; j >= 0; j--) {\n  c[j]=z[j] - mu[j] * c[j + 1];\n  b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n  d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n}\n",
                    "nodeType": "ForStatement",
                    "astNodeNumber": 92,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1961,
                        "startLineNumber": 69,
                        "startColumnNumber": 45,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 461,
                    "astHeight": 19
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2719,
                        "startLineNumber": 53,
                        "startColumnNumber": 4,
                        "endLineNumber": 122,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Computes an interpolating function for the data set.\n * @param x the arguments for the interpolation points\n * @param y the values for the interpolation points\n * @return a function which interpolates the data set\n * @throws DimensionMismatchException if {@code x} and {@code y}have different sizes.\n * @throws NonMonotonicSequenceException if {@code x} is not sorted instrict increasing order.\n * @throws NumberIsTooSmallException if the size of {@code x} is smallerthan 3.\n */\n@Override public PolynomialSplineFunction interpolate(double x[],double y[]) throws DimensionMismatchException, NumberIsTooSmallException, NonMonotonicSequenceException {\n  if (x.length != y.length) {\n    throw new DimensionMismatchException(x.length,y.length);\n  }\n  if (x.length < 3) {\n    throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);\n  }\n  final int n=x.length - 1;\n  MathArrays.checkOrder(x);\n  final double[] h=new double[n];\n  for (int i=0; i < n; i++) {\n    h[i]=x[i + 1] - x[i];\n  }\n  final double[] mu=new double[n];\n  final double[] z=new double[n + 1];\n  double g=0;\n  for (int i=1; i < n; i++) {\n    g=2d * (x[i + 1] - x[i - 1]) - h[i - 1] * mu[i - 1];\n    mu[i]=h[i] / g;\n    z[i]=(3d * (y[i + 1] * h[i - 1] - y[i] * (x[i + 1] - x[i - 1]) + y[i - 1] * h[i]) / (h[i - 1] * h[i]) - h[i - 1] * z[i - 1]) / g;\n  }\n  final double[] b=new double[n];\n  final double[] c=new double[n + 1];\n  final double[] d=new double[n];\n  for (int j=n - 1; j >= 0; j--) {\n    c[j]=z[j] - mu[j] * c[j + 1];\n    b[j]=(y[j + 1] - y[j]) / h[j] - h[j] * (c[j + 1] + 2d * c[j]) / 3d;\n    d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n  }\n  final PolynomialFunction[] polynomials=new PolynomialFunction[n];\n  final double[] coefficients=new double[4];\n  for (int i=0; i < n; i++) {\n    coefficients[0]=y[i];\n    coefficients[1]=b[i];\n    coefficients[2]=c[i];\n    coefficients[3]=d[i];\n    polynomials[i]=new PolynomialFunction(coefficients);\n  }\n  return new PolynomialSplineFunction(x,polynomials);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 483,
                    "astHeight": 20
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 39,
                    "startLineNumber": 108,
                    "startColumnNumber": 12,
                    "endLineNumber": 108,
                    "endColumnNumber": 51
                },
                "nodeContext": "d[j]=(c[j + 1] - c[j]) / (3d * h[j]);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 22,
                "astHeight": 8
            },
            "tokenLength": 1,
            "type": "double[]"
        }
    ],
    "positionList": [
        {
            "charLength": 1,
            "startLineNumber": 87,
            "startColumnNumber": 12,
            "endLineNumber": 87,
            "endColumnNumber": 13
        },
        {
            "charLength": 1,
            "startLineNumber": 94,
            "startColumnNumber": 44,
            "endLineNumber": 94,
            "endColumnNumber": 45
        },
        {
            "charLength": 1,
            "startLineNumber": 95,
            "startColumnNumber": 20,
            "endLineNumber": 95,
            "endColumnNumber": 21
        },
        {
            "charLength": 1,
            "startLineNumber": 96,
            "startColumnNumber": 37,
            "endLineNumber": 96,
            "endColumnNumber": 38
        },
        {
            "charLength": 1,
            "startLineNumber": 96,
            "startColumnNumber": 89,
            "endLineNumber": 96,
            "endColumnNumber": 90
        },
        {
            "charLength": 1,
            "startLineNumber": 97,
            "startColumnNumber": 21,
            "endLineNumber": 97,
            "endColumnNumber": 22
        },
        {
            "charLength": 1,
            "startLineNumber": 97,
            "startColumnNumber": 32,
            "endLineNumber": 97,
            "endColumnNumber": 33
        },
        {
            "charLength": 1,
            "startLineNumber": 97,
            "startColumnNumber": 40,
            "endLineNumber": 97,
            "endColumnNumber": 41
        },
        {
            "charLength": 1,
            "startLineNumber": 107,
            "startColumnNumber": 39,
            "endLineNumber": 107,
            "endColumnNumber": 40
        },
        {
            "charLength": 1,
            "startLineNumber": 107,
            "startColumnNumber": 46,
            "endLineNumber": 107,
            "endColumnNumber": 47
        },
        {
            "charLength": 1,
            "startLineNumber": 108,
            "startColumnNumber": 45,
            "endLineNumber": 108,
            "endColumnNumber": 46
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 5
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 5
        },
        {
            "firstKey": 0,
            "secondKey": 3,
            "layout": 5
        },
        {
            "firstKey": 0,
            "secondKey": 4,
            "layout": 5
        },
        {
            "firstKey": 0,
            "secondKey": 5,
            "layout": 5
        },
        {
            "firstKey": 0,
            "secondKey": 6,
            "layout": 5
        },
        {
            "firstKey": 0,
            "secondKey": 7,
            "layout": 5
        },
        {
            "firstKey": 0,
            "secondKey": 8,
            "layout": 5
        },
        {
            "firstKey": 0,
            "secondKey": 9,
            "layout": 5
        },
        {
            "firstKey": 0,
            "secondKey": 10,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 7
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 3,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 4,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 5,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 6,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 7,
            "layout": 5
        },
        {
            "firstKey": 1,
            "secondKey": 8,
            "layout": 7
        },
        {
            "firstKey": 1,
            "secondKey": 9,
            "layout": 7
        },
        {
            "firstKey": 1,
            "secondKey": 10,
            "layout": 7
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 6
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 3,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 4,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 5,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 6,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 7,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 8,
            "layout": 6
        },
        {
            "firstKey": 2,
            "secondKey": 9,
            "layout": 6
        },
        {
            "firstKey": 2,
            "secondKey": 10,
            "layout": 6
        },
        {
            "firstKey": 3,
            "secondKey": 0,
            "layout": 14
        },
        {
            "firstKey": 3,
            "secondKey": 1,
            "layout": 12
        },
        {
            "firstKey": 3,
            "secondKey": 2,
            "layout": 12
        },
        {
            "firstKey": 3,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 3,
            "secondKey": 5,
            "layout": 6
        },
        {
            "firstKey": 3,
            "secondKey": 6,
            "layout": 6
        },
        {
            "firstKey": 3,
            "secondKey": 7,
            "layout": 7
        },
        {
            "firstKey": 3,
            "secondKey": 8,
            "layout": 14
        },
        {
            "firstKey": 3,
            "secondKey": 9,
            "layout": 14
        },
        {
            "firstKey": 3,
            "secondKey": 10,
            "layout": 14
        },
        {
            "firstKey": 4,
            "secondKey": 0,
            "layout": 13
        },
        {
            "firstKey": 4,
            "secondKey": 1,
            "layout": 11
        },
        {
            "firstKey": 4,
            "secondKey": 2,
            "layout": 11
        },
        {
            "firstKey": 4,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 4,
            "secondKey": 5,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 6,
            "layout": 5
        },
        {
            "firstKey": 4,
            "secondKey": 7,
            "layout": 6
        },
        {
            "firstKey": 4,
            "secondKey": 8,
            "layout": 13
        },
        {
            "firstKey": 4,
            "secondKey": 9,
            "layout": 13
        },
        {
            "firstKey": 4,
            "secondKey": 10,
            "layout": 13
        },
        {
            "firstKey": 5,
            "secondKey": 0,
            "layout": 11
        },
        {
            "firstKey": 5,
            "secondKey": 1,
            "layout": 9
        },
        {
            "firstKey": 5,
            "secondKey": 2,
            "layout": 9
        },
        {
            "firstKey": 5,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 5,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 5,
            "secondKey": 6,
            "layout": 1
        },
        {
            "firstKey": 5,
            "secondKey": 7,
            "layout": 4
        },
        {
            "firstKey": 5,
            "secondKey": 8,
            "layout": 11
        },
        {
            "firstKey": 5,
            "secondKey": 9,
            "layout": 11
        },
        {
            "firstKey": 5,
            "secondKey": 10,
            "layout": 11
        },
        {
            "firstKey": 6,
            "secondKey": 0,
            "layout": 11
        },
        {
            "firstKey": 6,
            "secondKey": 1,
            "layout": 9
        },
        {
            "firstKey": 6,
            "secondKey": 2,
            "layout": 9
        },
        {
            "firstKey": 6,
            "secondKey": 3,
            "layout": 3
        },
        {
            "firstKey": 6,
            "secondKey": 4,
            "layout": 3
        },
        {
            "firstKey": 6,
            "secondKey": 5,
            "layout": 1
        },
        {
            "firstKey": 6,
            "secondKey": 7,
            "layout": 4
        },
        {
            "firstKey": 6,
            "secondKey": 8,
            "layout": 11
        },
        {
            "firstKey": 6,
            "secondKey": 9,
            "layout": 11
        },
        {
            "firstKey": 6,
            "secondKey": 10,
            "layout": 11
        },
        {
            "firstKey": 7,
            "secondKey": 0,
            "layout": 9
        },
        {
            "firstKey": 7,
            "secondKey": 1,
            "layout": 7
        },
        {
            "firstKey": 7,
            "secondKey": 2,
            "layout": 7
        },
        {
            "firstKey": 7,
            "secondKey": 3,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 4,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 5,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 6,
            "layout": 2
        },
        {
            "firstKey": 7,
            "secondKey": 8,
            "layout": 9
        },
        {
            "firstKey": 7,
            "secondKey": 9,
            "layout": 9
        },
        {
            "firstKey": 7,
            "secondKey": 10,
            "layout": 9
        },
        {
            "firstKey": 8,
            "secondKey": 0,
            "layout": 7
        },
        {
            "firstKey": 8,
            "secondKey": 1,
            "layout": 7
        },
        {
            "firstKey": 8,
            "secondKey": 2,
            "layout": 7
        },
        {
            "firstKey": 8,
            "secondKey": 3,
            "layout": 7
        },
        {
            "firstKey": 8,
            "secondKey": 4,
            "layout": 7
        },
        {
            "firstKey": 8,
            "secondKey": 5,
            "layout": 7
        },
        {
            "firstKey": 8,
            "secondKey": 6,
            "layout": 7
        },
        {
            "firstKey": 8,
            "secondKey": 7,
            "layout": 7
        },
        {
            "firstKey": 8,
            "secondKey": 9,
            "layout": 2
        },
        {
            "firstKey": 8,
            "secondKey": 10,
            "layout": 5
        },
        {
            "firstKey": 9,
            "secondKey": 0,
            "layout": 8
        },
        {
            "firstKey": 9,
            "secondKey": 1,
            "layout": 8
        },
        {
            "firstKey": 9,
            "secondKey": 2,
            "layout": 8
        },
        {
            "firstKey": 9,
            "secondKey": 3,
            "layout": 8
        },
        {
            "firstKey": 9,
            "secondKey": 4,
            "layout": 8
        },
        {
            "firstKey": 9,
            "secondKey": 5,
            "layout": 8
        },
        {
            "firstKey": 9,
            "secondKey": 6,
            "layout": 8
        },
        {
            "firstKey": 9,
            "secondKey": 7,
            "layout": 8
        },
        {
            "firstKey": 9,
            "secondKey": 8,
            "layout": 3
        },
        {
            "firstKey": 9,
            "secondKey": 10,
            "layout": 6
        },
        {
            "firstKey": 10,
            "secondKey": 0,
            "layout": 8
        },
        {
            "firstKey": 10,
            "secondKey": 1,
            "layout": 8
        },
        {
            "firstKey": 10,
            "secondKey": 2,
            "layout": 8
        },
        {
            "firstKey": 10,
            "secondKey": 3,
            "layout": 8
        },
        {
            "firstKey": 10,
            "secondKey": 4,
            "layout": 8
        },
        {
            "firstKey": 10,
            "secondKey": 5,
            "layout": 8
        },
        {
            "firstKey": 10,
            "secondKey": 6,
            "layout": 8
        },
        {
            "firstKey": 10,
            "secondKey": 7,
            "layout": 8
        },
        {
            "firstKey": 10,
            "secondKey": 8,
            "layout": 6
        },
        {
            "firstKey": 10,
            "secondKey": 9,
            "layout": 6
        }
    ]
}