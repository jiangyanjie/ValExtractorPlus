{
    "id": 383,
    "expression": "methodHeaders",
    "projectName": "square@retrofit",
    "commitID": "78e190d989aa9642df890588b69d12e7c11a3f20",
    "filePath": "retrofit/src/main/java/retrofit/http/RequestBuilder.java",
    "occurrences": 2,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "methodHeaders",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 13,
                "startLineNumber": 94,
                "startColumnNumber": 8,
                "endLineNumber": 94,
                "endColumnNumber": 21
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 21,
                        "startLineNumber": 94,
                        "startColumnNumber": 8,
                        "endLineNumber": 94,
                        "endColumnNumber": 29
                    },
                    "nodeContext": "methodHeaders != null",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 71,
                        "startLineNumber": 94,
                        "startColumnNumber": 4,
                        "endLineNumber": 96,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "if (methodHeaders != null) {\n  headers.addAll(methodHeaders);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 10,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1834,
                        "startLineNumber": 58,
                        "startColumnNumber": 54,
                        "endLineNumber": 111,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  String apiUrl=this.apiUrl;\n  StringBuilder url=new StringBuilder(apiUrl);\n  if (apiUrl.endsWith(\"/\")) {\n    url.deleteCharAt(url.length() - 1);\n  }\n  url.append(buildRelativeUrl());\n  if (methodInfo.hasQueryParams) {\n    boolean first=true;\n    String requestQuery=methodInfo.requestQuery;\n    if (requestQuery != null) {\n      url.append(requestQuery);\n      first=false;\n    }\n    String[] requestQueryName=methodInfo.requestQueryName;\n    for (int i=0; i < requestQueryName.length; i++) {\n      String query=requestQueryName[i];\n      if (query != null) {\n        String value=URLEncoder.encode(String.valueOf(args[i]),\"UTF-8\");\n        url.append(first ? '?' : '&').append(query).append('=').append(value);\n        first=false;\n      }\n    }\n  }\n  List<retrofit.http.client.Header> headers=new ArrayList<retrofit.http.client.Header>();\n  if (this.headers != null) {\n    headers.addAll(this.headers);\n  }\n  List<Header> methodHeaders=methodInfo.headers;\n  if (methodHeaders != null) {\n    headers.addAll(methodHeaders);\n  }\n  String[] requestParamHeader=methodInfo.requestParamHeader;\n  if (requestParamHeader != null) {\n    for (int i=0; i < requestParamHeader.length; i++) {\n      String name=requestParamHeader[i];\n      if (name == null)       continue;\n      Object arg=args[i];\n      if (arg != null) {\n        headers.add(new retrofit.http.client.Header(name,String.valueOf(arg)));\n      }\n    }\n  }\n  return new Request(methodInfo.requestMethod,url.toString(),headers,buildBody());\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 291,
                    "astHeight": 15
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2106,
                        "startLineNumber": 53,
                        "startColumnNumber": 2,
                        "endLineNumber": 111,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "/** \n * Construct a  {@link Request} from the supplied information. You <strong>must</strong> call{@link #methodInfo},  {@link #apiUrl},  {@link #args}, and  {@link #headers} before invoking thismethod.\n */\nRequest build() throws UnsupportedEncodingException {\n  String apiUrl=this.apiUrl;\n  StringBuilder url=new StringBuilder(apiUrl);\n  if (apiUrl.endsWith(\"/\")) {\n    url.deleteCharAt(url.length() - 1);\n  }\n  url.append(buildRelativeUrl());\n  if (methodInfo.hasQueryParams) {\n    boolean first=true;\n    String requestQuery=methodInfo.requestQuery;\n    if (requestQuery != null) {\n      url.append(requestQuery);\n      first=false;\n    }\n    String[] requestQueryName=methodInfo.requestQueryName;\n    for (int i=0; i < requestQueryName.length; i++) {\n      String query=requestQueryName[i];\n      if (query != null) {\n        String value=URLEncoder.encode(String.valueOf(args[i]),\"UTF-8\");\n        url.append(first ? '?' : '&').append(query).append('=').append(value);\n        first=false;\n      }\n    }\n  }\n  List<retrofit.http.client.Header> headers=new ArrayList<retrofit.http.client.Header>();\n  if (this.headers != null) {\n    headers.addAll(this.headers);\n  }\n  List<Header> methodHeaders=methodInfo.headers;\n  if (methodHeaders != null) {\n    headers.addAll(methodHeaders);\n  }\n  String[] requestParamHeader=methodInfo.requestParamHeader;\n  if (requestParamHeader != null) {\n    for (int i=0; i < requestParamHeader.length; i++) {\n      String name=requestParamHeader[i];\n      if (name == null)       continue;\n      Object arg=args[i];\n      if (arg != null) {\n        headers.add(new retrofit.http.client.Header(name,String.valueOf(arg)));\n      }\n    }\n  }\n  return new Request(methodInfo.requestMethod,url.toString(),headers,buildBody());\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 298,
                    "astHeight": 16
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 21,
                    "startLineNumber": 94,
                    "startColumnNumber": 8,
                    "endLineNumber": 94,
                    "endColumnNumber": 29
                },
                "nodeContext": "methodHeaders != null",
                "nodeType": "InfixExpression",
                "astNodeNumber": 3,
                "astHeight": 2
            },
            "tokenLength": 1,
            "type": "java.util.List<retrofit.http.client.Header>"
        },
        {
            "nodeContext": "methodHeaders",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 13,
                "startLineNumber": 95,
                "startColumnNumber": 21,
                "endLineNumber": 95,
                "endColumnNumber": 34
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 29,
                        "startLineNumber": 95,
                        "startColumnNumber": 6,
                        "endLineNumber": 95,
                        "endColumnNumber": 35
                    },
                    "nodeContext": "headers.addAll(methodHeaders)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 30,
                        "startLineNumber": 95,
                        "startColumnNumber": 6,
                        "endLineNumber": 95,
                        "endColumnNumber": 36
                    },
                    "nodeContext": "headers.addAll(methodHeaders);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 5,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 44,
                        "startLineNumber": 94,
                        "startColumnNumber": 31,
                        "endLineNumber": 96,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  headers.addAll(methodHeaders);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 6,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 71,
                        "startLineNumber": 94,
                        "startColumnNumber": 4,
                        "endLineNumber": 96,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "if (methodHeaders != null) {\n  headers.addAll(methodHeaders);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 10,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1834,
                        "startLineNumber": 58,
                        "startColumnNumber": 54,
                        "endLineNumber": 111,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  String apiUrl=this.apiUrl;\n  StringBuilder url=new StringBuilder(apiUrl);\n  if (apiUrl.endsWith(\"/\")) {\n    url.deleteCharAt(url.length() - 1);\n  }\n  url.append(buildRelativeUrl());\n  if (methodInfo.hasQueryParams) {\n    boolean first=true;\n    String requestQuery=methodInfo.requestQuery;\n    if (requestQuery != null) {\n      url.append(requestQuery);\n      first=false;\n    }\n    String[] requestQueryName=methodInfo.requestQueryName;\n    for (int i=0; i < requestQueryName.length; i++) {\n      String query=requestQueryName[i];\n      if (query != null) {\n        String value=URLEncoder.encode(String.valueOf(args[i]),\"UTF-8\");\n        url.append(first ? '?' : '&').append(query).append('=').append(value);\n        first=false;\n      }\n    }\n  }\n  List<retrofit.http.client.Header> headers=new ArrayList<retrofit.http.client.Header>();\n  if (this.headers != null) {\n    headers.addAll(this.headers);\n  }\n  List<Header> methodHeaders=methodInfo.headers;\n  if (methodHeaders != null) {\n    headers.addAll(methodHeaders);\n  }\n  String[] requestParamHeader=methodInfo.requestParamHeader;\n  if (requestParamHeader != null) {\n    for (int i=0; i < requestParamHeader.length; i++) {\n      String name=requestParamHeader[i];\n      if (name == null)       continue;\n      Object arg=args[i];\n      if (arg != null) {\n        headers.add(new retrofit.http.client.Header(name,String.valueOf(arg)));\n      }\n    }\n  }\n  return new Request(methodInfo.requestMethod,url.toString(),headers,buildBody());\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 291,
                    "astHeight": 15
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 2106,
                        "startLineNumber": 53,
                        "startColumnNumber": 2,
                        "endLineNumber": 111,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "/** \n * Construct a  {@link Request} from the supplied information. You <strong>must</strong> call{@link #methodInfo},  {@link #apiUrl},  {@link #args}, and  {@link #headers} before invoking thismethod.\n */\nRequest build() throws UnsupportedEncodingException {\n  String apiUrl=this.apiUrl;\n  StringBuilder url=new StringBuilder(apiUrl);\n  if (apiUrl.endsWith(\"/\")) {\n    url.deleteCharAt(url.length() - 1);\n  }\n  url.append(buildRelativeUrl());\n  if (methodInfo.hasQueryParams) {\n    boolean first=true;\n    String requestQuery=methodInfo.requestQuery;\n    if (requestQuery != null) {\n      url.append(requestQuery);\n      first=false;\n    }\n    String[] requestQueryName=methodInfo.requestQueryName;\n    for (int i=0; i < requestQueryName.length; i++) {\n      String query=requestQueryName[i];\n      if (query != null) {\n        String value=URLEncoder.encode(String.valueOf(args[i]),\"UTF-8\");\n        url.append(first ? '?' : '&').append(query).append('=').append(value);\n        first=false;\n      }\n    }\n  }\n  List<retrofit.http.client.Header> headers=new ArrayList<retrofit.http.client.Header>();\n  if (this.headers != null) {\n    headers.addAll(this.headers);\n  }\n  List<Header> methodHeaders=methodInfo.headers;\n  if (methodHeaders != null) {\n    headers.addAll(methodHeaders);\n  }\n  String[] requestParamHeader=methodInfo.requestParamHeader;\n  if (requestParamHeader != null) {\n    for (int i=0; i < requestParamHeader.length; i++) {\n      String name=requestParamHeader[i];\n      if (name == null)       continue;\n      Object arg=args[i];\n      if (arg != null) {\n        headers.add(new retrofit.http.client.Header(name,String.valueOf(arg)));\n      }\n    }\n  }\n  return new Request(methodInfo.requestMethod,url.toString(),headers,buildBody());\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 298,
                    "astHeight": 16
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 30,
                    "startLineNumber": 95,
                    "startColumnNumber": 6,
                    "endLineNumber": 95,
                    "endColumnNumber": 36
                },
                "nodeContext": "headers.addAll(methodHeaders);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 5,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "java.util.List<retrofit.http.client.Header>"
        }
    ],
    "positionList": [
        {
            "charLength": 13,
            "startLineNumber": 94,
            "startColumnNumber": 8,
            "endLineNumber": 94,
            "endColumnNumber": 21
        },
        {
            "charLength": 13,
            "startLineNumber": 95,
            "startColumnNumber": 21,
            "endLineNumber": 95,
            "endColumnNumber": 34
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 1
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 3
        }
    ]
}