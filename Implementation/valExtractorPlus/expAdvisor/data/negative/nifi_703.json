{
    "id": 703,
    "expression": "processGroupId",
    "projectName": "nifi",
    "commitID": "d65e6b25630fa918ede2cd6922dc777e816679c3",
    "filePath": "nifi-nar-bundles/nifi-extension-utils/nifi-reporting-utils/src/main/java/org/apache/nifi/reporting/util/provenance/ProvenanceEventConsumer.java",
    "occurrences": 3,
    "isArithmeticExpression": 1,
    "isGetTypeMethod": 1,
    "expressionList": [
        {
            "nodeContext": "processGroupId",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 14,
                "startLineNumber": 244,
                "startColumnNumber": 24,
                "endLineNumber": 244,
                "endColumnNumber": 38
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
                    "nodePosition": {
                        "charLength": 22,
                        "startLineNumber": 244,
                        "startColumnNumber": 24,
                        "endLineNumber": 244,
                        "endColumnNumber": 46
                    },
                    "nodeContext": "processGroupId == null",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 50,
                        "startLineNumber": 244,
                        "startColumnNumber": 24,
                        "endLineNumber": 244,
                        "endColumnNumber": 74
                    },
                    "nodeContext": "processGroupId == null || processGroupId.isEmpty()",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 113,
                        "startLineNumber": 244,
                        "startColumnNumber": 20,
                        "endLineNumber": 246,
                        "endColumnNumber": 21
                    },
                    "nodeContext": "if (processGroupId == null || processGroupId.isEmpty()) {\n  continue;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 10,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 814,
                        "startLineNumber": 237,
                        "startColumnNumber": 110,
                        "endLineNumber": 250,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  if (componentMapHolder == null) {\n    continue;\n  }\n  final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n  if (processGroupId == null || processGroupId.isEmpty()) {\n    continue;\n  }\n  if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n    continue;\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 50,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 908,
                        "startLineNumber": 237,
                        "startColumnNumber": 16,
                        "endLineNumber": 250,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (!componentIds.isEmpty() && !componentIds.contains(provenanceEventRecord.getComponentId())) {\n  if (componentMapHolder == null) {\n    continue;\n  }\n  final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n  if (processGroupId == null || processGroupId.isEmpty()) {\n    continue;\n  }\n  if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n    continue;\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 63,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 1333,
                        "startLineNumber": 236,
                        "startColumnNumber": 81,
                        "endLineNumber": 258,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  if (!componentIds.isEmpty() && !componentIds.contains(provenanceEventRecord.getComponentId())) {\n    if (componentMapHolder == null) {\n      continue;\n    }\n    final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n    if (processGroupId == null || processGroupId.isEmpty()) {\n      continue;\n    }\n    if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n      continue;\n    }\n  }\n  if (!eventTypes.isEmpty() && !eventTypes.contains(provenanceEventRecord.getEventType())) {\n    continue;\n  }\n  if (componentTypeRegex != null && !componentTypeRegex.matcher(provenanceEventRecord.getComponentType()).matches()) {\n    continue;\n  }\n  filteredEvents.add(provenanceEventRecord);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 100,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1402,
                        "startLineNumber": 236,
                        "startColumnNumber": 12,
                        "endLineNumber": 258,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "for (ProvenanceEventRecord provenanceEventRecord : provenanceEvents) {\n  if (!componentIds.isEmpty() && !componentIds.contains(provenanceEventRecord.getComponentId())) {\n    if (componentMapHolder == null) {\n      continue;\n    }\n    final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n    if (processGroupId == null || processGroupId.isEmpty()) {\n      continue;\n    }\n    if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n      continue;\n    }\n  }\n  if (!eventTypes.isEmpty() && !eventTypes.contains(provenanceEventRecord.getEventType())) {\n    continue;\n  }\n  if (componentTypeRegex != null && !componentTypeRegex.matcher(provenanceEventRecord.getComponentType()).matches()) {\n    continue;\n  }\n  filteredEvents.add(provenanceEventRecord);\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 106,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 1539,
                        "startLineNumber": 233,
                        "startColumnNumber": 33,
                        "endLineNumber": 261,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  List<ProvenanceEventRecord> filteredEvents=new ArrayList<>();\n  for (  ProvenanceEventRecord provenanceEventRecord : provenanceEvents) {\n    if (!componentIds.isEmpty() && !componentIds.contains(provenanceEventRecord.getComponentId())) {\n      if (componentMapHolder == null) {\n        continue;\n      }\n      final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n      if (processGroupId == null || processGroupId.isEmpty()) {\n        continue;\n      }\n      if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n        continue;\n      }\n    }\n    if (!eventTypes.isEmpty() && !eventTypes.contains(provenanceEventRecord.getEventType())) {\n      continue;\n    }\n    if (componentTypeRegex != null && !componentTypeRegex.matcher(provenanceEventRecord.getComponentType()).matches()) {\n      continue;\n    }\n    filteredEvents.add(provenanceEventRecord);\n  }\n  return filteredEvents;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 121,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1618,
                        "startLineNumber": 233,
                        "startColumnNumber": 8,
                        "endLineNumber": 263,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (isFilteringEnabled()) {\n  List<ProvenanceEventRecord> filteredEvents=new ArrayList<>();\n  for (  ProvenanceEventRecord provenanceEventRecord : provenanceEvents) {\n    if (!componentIds.isEmpty() && !componentIds.contains(provenanceEventRecord.getComponentId())) {\n      if (componentMapHolder == null) {\n        continue;\n      }\n      final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n      if (processGroupId == null || processGroupId.isEmpty()) {\n        continue;\n      }\n      if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n        continue;\n      }\n    }\n    if (!eventTypes.isEmpty() && !eventTypes.contains(provenanceEventRecord.getEventType())) {\n      continue;\n    }\n    if (componentTypeRegex != null && !componentTypeRegex.matcher(provenanceEventRecord.getComponentType()).matches()) {\n      continue;\n    }\n    filteredEvents.add(provenanceEventRecord);\n  }\n  return filteredEvents;\n}\n else {\n  return provenanceEvents;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 127,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1634,
                        "startLineNumber": 232,
                        "startColumnNumber": 138,
                        "endLineNumber": 264,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (isFilteringEnabled()) {\n    List<ProvenanceEventRecord> filteredEvents=new ArrayList<>();\n    for (    ProvenanceEventRecord provenanceEventRecord : provenanceEvents) {\n      if (!componentIds.isEmpty() && !componentIds.contains(provenanceEventRecord.getComponentId())) {\n        if (componentMapHolder == null) {\n          continue;\n        }\n        final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n        if (processGroupId == null || processGroupId.isEmpty()) {\n          continue;\n        }\n        if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n          continue;\n        }\n      }\n      if (!eventTypes.isEmpty() && !eventTypes.contains(provenanceEventRecord.getEventType())) {\n        continue;\n      }\n      if (componentTypeRegex != null && !componentTypeRegex.matcher(provenanceEventRecord.getComponentType()).matches()) {\n        continue;\n      }\n      filteredEvents.add(provenanceEventRecord);\n    }\n    return filteredEvents;\n  }\n else {\n    return provenanceEvents;\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 128,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1768,
                        "startLineNumber": 232,
                        "startColumnNumber": 4,
                        "endLineNumber": 264,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "private List<ProvenanceEventRecord> filterEvents(ComponentMapHolder componentMapHolder,List<ProvenanceEventRecord> provenanceEvents){\n  if (isFilteringEnabled()) {\n    List<ProvenanceEventRecord> filteredEvents=new ArrayList<>();\n    for (    ProvenanceEventRecord provenanceEventRecord : provenanceEvents) {\n      if (!componentIds.isEmpty() && !componentIds.contains(provenanceEventRecord.getComponentId())) {\n        if (componentMapHolder == null) {\n          continue;\n        }\n        final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n        if (processGroupId == null || processGroupId.isEmpty()) {\n          continue;\n        }\n        if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n          continue;\n        }\n      }\n      if (!eventTypes.isEmpty() && !eventTypes.contains(provenanceEventRecord.getEventType())) {\n        continue;\n      }\n      if (componentTypeRegex != null && !componentTypeRegex.matcher(provenanceEventRecord.getComponentType()).matches()) {\n        continue;\n      }\n      filteredEvents.add(provenanceEventRecord);\n    }\n    return filteredEvents;\n  }\n else {\n    return provenanceEvents;\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 147,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 50,
                    "startLineNumber": 244,
                    "startColumnNumber": 24,
                    "endLineNumber": 244,
                    "endColumnNumber": 74
                },
                "nodeContext": "processGroupId == null || processGroupId.isEmpty()",
                "nodeType": "InfixExpression",
                "astNodeNumber": 7,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        },
        {
            "nodeContext": "processGroupId",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 14,
                "startLineNumber": 244,
                "startColumnNumber": 50,
                "endLineNumber": 244,
                "endColumnNumber": 64
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
                    "nodePosition": {
                        "charLength": 24,
                        "startLineNumber": 244,
                        "startColumnNumber": 50,
                        "endLineNumber": 244,
                        "endColumnNumber": 74
                    },
                    "nodeContext": "processGroupId.isEmpty()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 3,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 50,
                        "startLineNumber": 244,
                        "startColumnNumber": 24,
                        "endLineNumber": 244,
                        "endColumnNumber": 74
                    },
                    "nodeContext": "processGroupId == null || processGroupId.isEmpty()",
                    "nodeType": "InfixExpression",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 113,
                        "startLineNumber": 244,
                        "startColumnNumber": 20,
                        "endLineNumber": 246,
                        "endColumnNumber": 21
                    },
                    "nodeContext": "if (processGroupId == null || processGroupId.isEmpty()) {\n  continue;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 10,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 814,
                        "startLineNumber": 237,
                        "startColumnNumber": 110,
                        "endLineNumber": 250,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  if (componentMapHolder == null) {\n    continue;\n  }\n  final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n  if (processGroupId == null || processGroupId.isEmpty()) {\n    continue;\n  }\n  if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n    continue;\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 50,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 908,
                        "startLineNumber": 237,
                        "startColumnNumber": 16,
                        "endLineNumber": 250,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (!componentIds.isEmpty() && !componentIds.contains(provenanceEventRecord.getComponentId())) {\n  if (componentMapHolder == null) {\n    continue;\n  }\n  final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n  if (processGroupId == null || processGroupId.isEmpty()) {\n    continue;\n  }\n  if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n    continue;\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 63,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 1333,
                        "startLineNumber": 236,
                        "startColumnNumber": 81,
                        "endLineNumber": 258,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  if (!componentIds.isEmpty() && !componentIds.contains(provenanceEventRecord.getComponentId())) {\n    if (componentMapHolder == null) {\n      continue;\n    }\n    final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n    if (processGroupId == null || processGroupId.isEmpty()) {\n      continue;\n    }\n    if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n      continue;\n    }\n  }\n  if (!eventTypes.isEmpty() && !eventTypes.contains(provenanceEventRecord.getEventType())) {\n    continue;\n  }\n  if (componentTypeRegex != null && !componentTypeRegex.matcher(provenanceEventRecord.getComponentType()).matches()) {\n    continue;\n  }\n  filteredEvents.add(provenanceEventRecord);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 100,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1402,
                        "startLineNumber": 236,
                        "startColumnNumber": 12,
                        "endLineNumber": 258,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "for (ProvenanceEventRecord provenanceEventRecord : provenanceEvents) {\n  if (!componentIds.isEmpty() && !componentIds.contains(provenanceEventRecord.getComponentId())) {\n    if (componentMapHolder == null) {\n      continue;\n    }\n    final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n    if (processGroupId == null || processGroupId.isEmpty()) {\n      continue;\n    }\n    if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n      continue;\n    }\n  }\n  if (!eventTypes.isEmpty() && !eventTypes.contains(provenanceEventRecord.getEventType())) {\n    continue;\n  }\n  if (componentTypeRegex != null && !componentTypeRegex.matcher(provenanceEventRecord.getComponentType()).matches()) {\n    continue;\n  }\n  filteredEvents.add(provenanceEventRecord);\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 106,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 1539,
                        "startLineNumber": 233,
                        "startColumnNumber": 33,
                        "endLineNumber": 261,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  List<ProvenanceEventRecord> filteredEvents=new ArrayList<>();\n  for (  ProvenanceEventRecord provenanceEventRecord : provenanceEvents) {\n    if (!componentIds.isEmpty() && !componentIds.contains(provenanceEventRecord.getComponentId())) {\n      if (componentMapHolder == null) {\n        continue;\n      }\n      final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n      if (processGroupId == null || processGroupId.isEmpty()) {\n        continue;\n      }\n      if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n        continue;\n      }\n    }\n    if (!eventTypes.isEmpty() && !eventTypes.contains(provenanceEventRecord.getEventType())) {\n      continue;\n    }\n    if (componentTypeRegex != null && !componentTypeRegex.matcher(provenanceEventRecord.getComponentType()).matches()) {\n      continue;\n    }\n    filteredEvents.add(provenanceEventRecord);\n  }\n  return filteredEvents;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 121,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1618,
                        "startLineNumber": 233,
                        "startColumnNumber": 8,
                        "endLineNumber": 263,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (isFilteringEnabled()) {\n  List<ProvenanceEventRecord> filteredEvents=new ArrayList<>();\n  for (  ProvenanceEventRecord provenanceEventRecord : provenanceEvents) {\n    if (!componentIds.isEmpty() && !componentIds.contains(provenanceEventRecord.getComponentId())) {\n      if (componentMapHolder == null) {\n        continue;\n      }\n      final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n      if (processGroupId == null || processGroupId.isEmpty()) {\n        continue;\n      }\n      if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n        continue;\n      }\n    }\n    if (!eventTypes.isEmpty() && !eventTypes.contains(provenanceEventRecord.getEventType())) {\n      continue;\n    }\n    if (componentTypeRegex != null && !componentTypeRegex.matcher(provenanceEventRecord.getComponentType()).matches()) {\n      continue;\n    }\n    filteredEvents.add(provenanceEventRecord);\n  }\n  return filteredEvents;\n}\n else {\n  return provenanceEvents;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 127,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1634,
                        "startLineNumber": 232,
                        "startColumnNumber": 138,
                        "endLineNumber": 264,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (isFilteringEnabled()) {\n    List<ProvenanceEventRecord> filteredEvents=new ArrayList<>();\n    for (    ProvenanceEventRecord provenanceEventRecord : provenanceEvents) {\n      if (!componentIds.isEmpty() && !componentIds.contains(provenanceEventRecord.getComponentId())) {\n        if (componentMapHolder == null) {\n          continue;\n        }\n        final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n        if (processGroupId == null || processGroupId.isEmpty()) {\n          continue;\n        }\n        if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n          continue;\n        }\n      }\n      if (!eventTypes.isEmpty() && !eventTypes.contains(provenanceEventRecord.getEventType())) {\n        continue;\n      }\n      if (componentTypeRegex != null && !componentTypeRegex.matcher(provenanceEventRecord.getComponentType()).matches()) {\n        continue;\n      }\n      filteredEvents.add(provenanceEventRecord);\n    }\n    return filteredEvents;\n  }\n else {\n    return provenanceEvents;\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 128,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1768,
                        "startLineNumber": 232,
                        "startColumnNumber": 4,
                        "endLineNumber": 264,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "private List<ProvenanceEventRecord> filterEvents(ComponentMapHolder componentMapHolder,List<ProvenanceEventRecord> provenanceEvents){\n  if (isFilteringEnabled()) {\n    List<ProvenanceEventRecord> filteredEvents=new ArrayList<>();\n    for (    ProvenanceEventRecord provenanceEventRecord : provenanceEvents) {\n      if (!componentIds.isEmpty() && !componentIds.contains(provenanceEventRecord.getComponentId())) {\n        if (componentMapHolder == null) {\n          continue;\n        }\n        final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n        if (processGroupId == null || processGroupId.isEmpty()) {\n          continue;\n        }\n        if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n          continue;\n        }\n      }\n      if (!eventTypes.isEmpty() && !eventTypes.contains(provenanceEventRecord.getEventType())) {\n        continue;\n      }\n      if (componentTypeRegex != null && !componentTypeRegex.matcher(provenanceEventRecord.getComponentType()).matches()) {\n        continue;\n      }\n      filteredEvents.add(provenanceEventRecord);\n    }\n    return filteredEvents;\n  }\n else {\n    return provenanceEvents;\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 147,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 50,
                    "startLineNumber": 244,
                    "startColumnNumber": 24,
                    "endLineNumber": 244,
                    "endColumnNumber": 74
                },
                "nodeContext": "processGroupId == null || processGroupId.isEmpty()",
                "nodeType": "InfixExpression",
                "astNodeNumber": 7,
                "astHeight": 3
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        },
        {
            "nodeContext": "processGroupId",
            "nodeType": "SimpleName",
            "nodePosition": {
                "charLength": 14,
                "startLineNumber": 247,
                "startColumnNumber": 66,
                "endLineNumber": 247,
                "endColumnNumber": 80
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 57,
                        "startLineNumber": 247,
                        "startColumnNumber": 24,
                        "endLineNumber": 247,
                        "endColumnNumber": 81
                    },
                    "nodeContext": "componentMapHolder.getProcessGroupIdStack(processGroupId)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 66,
                        "startLineNumber": 247,
                        "startColumnNumber": 24,
                        "endLineNumber": 247,
                        "endColumnNumber": 90
                    },
                    "nodeContext": "componentMapHolder.getProcessGroupIdStack(processGroupId).stream()",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 6,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                    "nodePosition": {
                        "charLength": 113,
                        "startLineNumber": 247,
                        "startColumnNumber": 24,
                        "endLineNumber": 247,
                        "endColumnNumber": 137
                    },
                    "nodeContext": "componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 15,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 176,
                        "startLineNumber": 247,
                        "startColumnNumber": 20,
                        "endLineNumber": 249,
                        "endColumnNumber": 21
                    },
                    "nodeContext": "if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n  continue;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 18,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 814,
                        "startLineNumber": 237,
                        "startColumnNumber": 110,
                        "endLineNumber": 250,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  if (componentMapHolder == null) {\n    continue;\n  }\n  final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n  if (processGroupId == null || processGroupId.isEmpty()) {\n    continue;\n  }\n  if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n    continue;\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 50,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 908,
                        "startLineNumber": 237,
                        "startColumnNumber": 16,
                        "endLineNumber": 250,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "if (!componentIds.isEmpty() && !componentIds.contains(provenanceEventRecord.getComponentId())) {\n  if (componentMapHolder == null) {\n    continue;\n  }\n  final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n  if (processGroupId == null || processGroupId.isEmpty()) {\n    continue;\n  }\n  if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n    continue;\n  }\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 63,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
                    "nodePosition": {
                        "charLength": 1333,
                        "startLineNumber": 236,
                        "startColumnNumber": 81,
                        "endLineNumber": 258,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "{\n  if (!componentIds.isEmpty() && !componentIds.contains(provenanceEventRecord.getComponentId())) {\n    if (componentMapHolder == null) {\n      continue;\n    }\n    final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n    if (processGroupId == null || processGroupId.isEmpty()) {\n      continue;\n    }\n    if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n      continue;\n    }\n  }\n  if (!eventTypes.isEmpty() && !eventTypes.contains(provenanceEventRecord.getEventType())) {\n    continue;\n  }\n  if (componentTypeRegex != null && !componentTypeRegex.matcher(provenanceEventRecord.getComponentType()).matches()) {\n    continue;\n  }\n  filteredEvents.add(provenanceEventRecord);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 100,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1402,
                        "startLineNumber": 236,
                        "startColumnNumber": 12,
                        "endLineNumber": 258,
                        "endColumnNumber": 13
                    },
                    "nodeContext": "for (ProvenanceEventRecord provenanceEventRecord : provenanceEvents) {\n  if (!componentIds.isEmpty() && !componentIds.contains(provenanceEventRecord.getComponentId())) {\n    if (componentMapHolder == null) {\n      continue;\n    }\n    final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n    if (processGroupId == null || processGroupId.isEmpty()) {\n      continue;\n    }\n    if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n      continue;\n    }\n  }\n  if (!eventTypes.isEmpty() && !eventTypes.contains(provenanceEventRecord.getEventType())) {\n    continue;\n  }\n  if (componentTypeRegex != null && !componentTypeRegex.matcher(provenanceEventRecord.getComponentType()).matches()) {\n    continue;\n  }\n  filteredEvents.add(provenanceEventRecord);\n}\n",
                    "nodeType": "EnhancedForStatement",
                    "astNodeNumber": 106,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 1539,
                        "startLineNumber": 233,
                        "startColumnNumber": 33,
                        "endLineNumber": 261,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  List<ProvenanceEventRecord> filteredEvents=new ArrayList<>();\n  for (  ProvenanceEventRecord provenanceEventRecord : provenanceEvents) {\n    if (!componentIds.isEmpty() && !componentIds.contains(provenanceEventRecord.getComponentId())) {\n      if (componentMapHolder == null) {\n        continue;\n      }\n      final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n      if (processGroupId == null || processGroupId.isEmpty()) {\n        continue;\n      }\n      if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n        continue;\n      }\n    }\n    if (!eventTypes.isEmpty() && !eventTypes.contains(provenanceEventRecord.getEventType())) {\n      continue;\n    }\n    if (componentTypeRegex != null && !componentTypeRegex.matcher(provenanceEventRecord.getComponentType()).matches()) {\n      continue;\n    }\n    filteredEvents.add(provenanceEventRecord);\n  }\n  return filteredEvents;\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 121,
                    "astHeight": 10
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1618,
                        "startLineNumber": 233,
                        "startColumnNumber": 8,
                        "endLineNumber": 263,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (isFilteringEnabled()) {\n  List<ProvenanceEventRecord> filteredEvents=new ArrayList<>();\n  for (  ProvenanceEventRecord provenanceEventRecord : provenanceEvents) {\n    if (!componentIds.isEmpty() && !componentIds.contains(provenanceEventRecord.getComponentId())) {\n      if (componentMapHolder == null) {\n        continue;\n      }\n      final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n      if (processGroupId == null || processGroupId.isEmpty()) {\n        continue;\n      }\n      if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n        continue;\n      }\n    }\n    if (!eventTypes.isEmpty() && !eventTypes.contains(provenanceEventRecord.getEventType())) {\n      continue;\n    }\n    if (componentTypeRegex != null && !componentTypeRegex.matcher(provenanceEventRecord.getComponentType()).matches()) {\n      continue;\n    }\n    filteredEvents.add(provenanceEventRecord);\n  }\n  return filteredEvents;\n}\n else {\n  return provenanceEvents;\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 127,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 1634,
                        "startLineNumber": 232,
                        "startColumnNumber": 138,
                        "endLineNumber": 264,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (isFilteringEnabled()) {\n    List<ProvenanceEventRecord> filteredEvents=new ArrayList<>();\n    for (    ProvenanceEventRecord provenanceEventRecord : provenanceEvents) {\n      if (!componentIds.isEmpty() && !componentIds.contains(provenanceEventRecord.getComponentId())) {\n        if (componentMapHolder == null) {\n          continue;\n        }\n        final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n        if (processGroupId == null || processGroupId.isEmpty()) {\n          continue;\n        }\n        if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n          continue;\n        }\n      }\n      if (!eventTypes.isEmpty() && !eventTypes.contains(provenanceEventRecord.getEventType())) {\n        continue;\n      }\n      if (componentTypeRegex != null && !componentTypeRegex.matcher(provenanceEventRecord.getComponentType()).matches()) {\n        continue;\n      }\n      filteredEvents.add(provenanceEventRecord);\n    }\n    return filteredEvents;\n  }\n else {\n    return provenanceEvents;\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 128,
                    "astHeight": 12
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1768,
                        "startLineNumber": 232,
                        "startColumnNumber": 4,
                        "endLineNumber": 264,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "private List<ProvenanceEventRecord> filterEvents(ComponentMapHolder componentMapHolder,List<ProvenanceEventRecord> provenanceEvents){\n  if (isFilteringEnabled()) {\n    List<ProvenanceEventRecord> filteredEvents=new ArrayList<>();\n    for (    ProvenanceEventRecord provenanceEventRecord : provenanceEvents) {\n      if (!componentIds.isEmpty() && !componentIds.contains(provenanceEventRecord.getComponentId())) {\n        if (componentMapHolder == null) {\n          continue;\n        }\n        final String processGroupId=componentMapHolder.getProcessGroupId(provenanceEventRecord.getComponentId(),provenanceEventRecord.getComponentType());\n        if (processGroupId == null || processGroupId.isEmpty()) {\n          continue;\n        }\n        if (componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))) {\n          continue;\n        }\n      }\n      if (!eventTypes.isEmpty() && !eventTypes.contains(provenanceEventRecord.getEventType())) {\n        continue;\n      }\n      if (componentTypeRegex != null && !componentTypeRegex.matcher(provenanceEventRecord.getComponentType()).matches()) {\n        continue;\n      }\n      filteredEvents.add(provenanceEventRecord);\n    }\n    return filteredEvents;\n  }\n else {\n    return provenanceEvents;\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 147,
                    "astHeight": 13
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
                "nodePosition": {
                    "charLength": 113,
                    "startLineNumber": 247,
                    "startColumnNumber": 24,
                    "endLineNumber": 247,
                    "endColumnNumber": 137
                },
                "nodeContext": "componentMapHolder.getProcessGroupIdStack(processGroupId).stream().noneMatch(pgid -> componentIds.contains(pgid))",
                "nodeType": "MethodInvocation",
                "astNodeNumber": 15,
                "astHeight": 4
            },
            "tokenLength": 1,
            "type": "java.lang.String"
        }
    ],
    "positionList": [
        {
            "charLength": 14,
            "startLineNumber": 244,
            "startColumnNumber": 24,
            "endLineNumber": 244,
            "endColumnNumber": 38
        },
        {
            "charLength": 14,
            "startLineNumber": 244,
            "startColumnNumber": 50,
            "endLineNumber": 244,
            "endColumnNumber": 64
        },
        {
            "charLength": 14,
            "startLineNumber": 247,
            "startColumnNumber": 66,
            "endLineNumber": 247,
            "endColumnNumber": 80
        }
    ],
    "layoutRelationDataList": [
        {
            "firstKey": 0,
            "secondKey": 1,
            "layout": 1
        },
        {
            "firstKey": 0,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 1,
            "secondKey": 0,
            "layout": 1
        },
        {
            "firstKey": 1,
            "secondKey": 2,
            "layout": 3
        },
        {
            "firstKey": 2,
            "secondKey": 0,
            "layout": 4
        },
        {
            "firstKey": 2,
            "secondKey": 1,
            "layout": 4
        }
    ]
}