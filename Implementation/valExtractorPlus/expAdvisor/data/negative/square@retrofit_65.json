{
    "id": 65,
    "expression": "\"\\r\\nContent-Length: \"",
    "projectName": "square@retrofit",
    "commitID": "5795931d159f0a591e5dad3d9de6f8d0e9785413",
    "filePath": "retrofit/src/main/java/retrofit/mime/MultipartTypedOutput.java",
    "occurrences": 1,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "\"\\r\\nContent-Length: \"",
            "nodeType": "StringLiteral",
            "nodePosition": {
                "charLength": 22,
                "startLineNumber": 188,
                "startColumnNumber": 23,
                "endLineNumber": 188,
                "endColumnNumber": 45
            },
            "astNodeNumber": 1,
            "astHeight": 1,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
                    "nodePosition": {
                        "charLength": 38,
                        "startLineNumber": 188,
                        "startColumnNumber": 8,
                        "endLineNumber": 188,
                        "endColumnNumber": 46
                    },
                    "nodeContext": "headers.append(\"\\r\\nContent-Length: \")",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 4,
                    "astHeight": 2
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 53,
                        "startLineNumber": 188,
                        "startColumnNumber": 8,
                        "endLineNumber": 188,
                        "endColumnNumber": 61
                    },
                    "nodeContext": "headers.append(\"\\r\\nContent-Length: \").append(length)",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 7,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 54,
                        "startLineNumber": 188,
                        "startColumnNumber": 8,
                        "endLineNumber": 188,
                        "endColumnNumber": 62
                    },
                    "nodeContext": "headers.append(\"\\r\\nContent-Length: \").append(length);\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 8,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 72,
                        "startLineNumber": 187,
                        "startColumnNumber": 24,
                        "endLineNumber": 189,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "{\n  headers.append(\"\\r\\nContent-Length: \").append(length);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 9,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 90,
                        "startLineNumber": 187,
                        "startColumnNumber": 6,
                        "endLineNumber": 189,
                        "endColumnNumber": 7
                    },
                    "nodeContext": "if (length != -1) {\n  headers.append(\"\\r\\nContent-Length: \").append(length);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 14,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
                    "nodePosition": {
                        "charLength": 813,
                        "startLineNumber": 170,
                        "startColumnNumber": 8,
                        "endLineNumber": 196,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 98,
                    "astHeight": 7
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 922,
                        "startLineNumber": 170,
                        "startColumnNumber": 4,
                        "endLineNumber": 198,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "try {\n  StringBuilder headers=new StringBuilder(128);\n  headers.append(\"Content-Disposition: form-data; name=\\\"\");\n  headers.append(name);\n  String fileName=value.fileName();\n  if (fileName != null) {\n    headers.append(\"\\\"; filename=\\\"\");\n    headers.append(fileName);\n  }\n  headers.append(\"\\\"\\r\\nContent-Type: \");\n  headers.append(value.mimeType());\n  long length=value.length();\n  if (length != -1) {\n    headers.append(\"\\r\\nContent-Length: \").append(length);\n  }\n  headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n  headers.append(transferEncoding);\n  headers.append(\"\\r\\n\\r\\n\");\n  return headers.toString().getBytes(\"UTF-8\");\n}\n catch (IOException ex) {\n  throw new RuntimeException(\"Unable to write multipart header\",ex);\n}\n",
                    "nodeType": "TryStatement",
                    "astNodeNumber": 111,
                    "astHeight": 8
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 932,
                        "startLineNumber": 169,
                        "startColumnNumber": 93,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "{\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 112,
                    "astHeight": 9
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 1023,
                        "startLineNumber": 169,
                        "startColumnNumber": 2,
                        "endLineNumber": 199,
                        "endColumnNumber": 3
                    },
                    "nodeContext": "private static byte[] buildHeader(String name,String transferEncoding,TypedOutput value){\n  try {\n    StringBuilder headers=new StringBuilder(128);\n    headers.append(\"Content-Disposition: form-data; name=\\\"\");\n    headers.append(name);\n    String fileName=value.fileName();\n    if (fileName != null) {\n      headers.append(\"\\\"; filename=\\\"\");\n      headers.append(fileName);\n    }\n    headers.append(\"\\\"\\r\\nContent-Type: \");\n    headers.append(value.mimeType());\n    long length=value.length();\n    if (length != -1) {\n      headers.append(\"\\r\\nContent-Length: \").append(length);\n    }\n    headers.append(\"\\r\\nContent-Transfer-Encoding: \");\n    headers.append(transferEncoding);\n    headers.append(\"\\r\\n\\r\\n\");\n    return headers.toString().getBytes(\"UTF-8\");\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(\"Unable to write multipart header\",ex);\n  }\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 131,
                    "astHeight": 10
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 54,
                    "startLineNumber": 188,
                    "startColumnNumber": 8,
                    "endLineNumber": 188,
                    "endColumnNumber": 62
                },
                "nodeContext": "headers.append(\"\\r\\nContent-Length: \").append(length);\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 8,
                "astHeight": 4
            },
            "tokenLength": 2,
            "type": "java.lang.String"
        }
    ],
    "positionList": [
        {
            "charLength": 22,
            "startLineNumber": 188,
            "startColumnNumber": 23,
            "endLineNumber": 188,
            "endColumnNumber": 45
        }
    ],
    "layoutRelationDataList": []
}