{
  "id" : 8,
  "expression" : "TimeLexerSpeed.class.getClassLoader()",
  "projectName" : "antlr@antlr4",
  "commitID" : "ab0655598ed4ddeff075fafe301ef4d57bd0017d",
  "filePath" : "runtime-testsuite/test/org/antlr/v4/test/runtime/java/api/perf/TimeLexerSpeed.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "TimeLexerSpeed.class.getClassLoader()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 378,
      "startColumnNumber" : 24,
      "endLineNumber" : 378,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 378,
        "startColumnNumber" : 24,
        "endLineNumber" : 378,
        "endColumnNumber" : 99
      },
      "nodeContext" : "TimeLexerSpeed.class.getClassLoader().getResourceAsStream(Parser_java_file)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 378,
        "startColumnNumber" : 19,
        "endLineNumber" : 378,
        "endColumnNumber" : 97
      },
      "nodeContext" : "is=TimeLexerSpeed.class.getClassLoader().getResourceAsStream(Parser_java_file)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 378,
        "startColumnNumber" : 7,
        "endLineNumber" : 378,
        "endColumnNumber" : 97
      },
      "nodeContext" : "InputStream is=TimeLexerSpeed.class.getClassLoader().getResourceAsStream(Parser_java_file)",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 609,
        "startLineNumber" : 378,
        "startColumnNumber" : 2,
        "endLineNumber" : 390,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try (InputStream is=TimeLexerSpeed.class.getClassLoader().getResourceAsStream(Parser_java_file)){\n  long size=getResourceSize(TimeLexerSpeed.class.getClassLoader(),Parser_java_file);\n  CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n  JavaLexer lexer=new JavaLexer(input);\n  double avg=tokenize(lexer,n,clearLexerDFACache);\n  String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n  if (output)   System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols%s\\n\",currentMethodName,(int)avg,n,input.size(),clearLexerDFACache ? \" DFA cleared\" : \"\");\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 89,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 722,
        "startLineNumber" : 376,
        "startColumnNumber" : 83,
        "endLineNumber" : 391,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ClassLoader TimeLexerSpeed.class.getClassLoader()=TimeLexerSpeed.class.getClassLoader();\n  try (InputStream is=TimeLexerSpeed.class.getClassLoader().getResourceAsStream(Parser_java_file)){\n    long size=getResourceSize(TimeLexerSpeed.class.getClassLoader(),Parser_java_file);\n    CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n    JavaLexer lexer=new JavaLexer(input);\n    double avg=tokenize(lexer,n,clearLexerDFACache);\n    String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n    if (output)     System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols%s\\n\",currentMethodName,(int)avg,n,input.size(),clearLexerDFACache ? \" DFA cleared\" : \"\");\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 376,
        "startColumnNumber" : 1,
        "endLineNumber" : 391,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void lex_new_java_utf8(int n,boolean clearLexerDFACache) throws Exception {\n  ClassLoader TimeLexerSpeed.class.getClassLoader()=TimeLexerSpeed.class.getClassLoader();\n  try (InputStream is=TimeLexerSpeed.class.getClassLoader().getResourceAsStream(Parser_java_file)){\n    long size=getResourceSize(TimeLexerSpeed.class.getClassLoader(),Parser_java_file);\n    CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n    JavaLexer lexer=new JavaLexer(input);\n    double avg=tokenize(lexer,n,clearLexerDFACache);\n    String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n    if (output)     System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols%s\\n\",currentMethodName,(int)avg,n,input.size(),clearLexerDFACache ? \" DFA cleared\" : \"\");\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 12
    } ],
    "tokenLength" : 2,
    "type" : "java.lang.ClassLoader"
  }, {
    "nodeContext" : "TimeLexerSpeed.class.getClassLoader()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 379,
      "startColumnNumber" : 31,
      "endLineNumber" : 379,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 379,
        "startColumnNumber" : 15,
        "endLineNumber" : 379,
        "endColumnNumber" : 86
      },
      "nodeContext" : "getResourceSize(TimeLexerSpeed.class.getClassLoader(),Parser_java_file)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 379,
        "startColumnNumber" : 8,
        "endLineNumber" : 379,
        "endColumnNumber" : 84
      },
      "nodeContext" : "size=getResourceSize(TimeLexerSpeed.class.getClassLoader(),Parser_java_file)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 379,
        "startColumnNumber" : 3,
        "endLineNumber" : 379,
        "endColumnNumber" : 86
      },
      "nodeContext" : "long size=getResourceSize(TimeLexerSpeed.class.getClassLoader(),Parser_java_file);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 512,
        "startLineNumber" : 378,
        "startColumnNumber" : 71,
        "endLineNumber" : 390,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  long size=getResourceSize(TimeLexerSpeed.class.getClassLoader(),Parser_java_file);\n  CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n  JavaLexer lexer=new JavaLexer(input);\n  double avg=tokenize(lexer,n,clearLexerDFACache);\n  String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n  if (output)   System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols%s\\n\",currentMethodName,(int)avg,n,input.size(),clearLexerDFACache ? \" DFA cleared\" : \"\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 609,
        "startLineNumber" : 378,
        "startColumnNumber" : 2,
        "endLineNumber" : 390,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try (InputStream is=TimeLexerSpeed.class.getClassLoader().getResourceAsStream(Parser_java_file)){\n  long size=getResourceSize(TimeLexerSpeed.class.getClassLoader(),Parser_java_file);\n  CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n  JavaLexer lexer=new JavaLexer(input);\n  double avg=tokenize(lexer,n,clearLexerDFACache);\n  String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n  if (output)   System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols%s\\n\",currentMethodName,(int)avg,n,input.size(),clearLexerDFACache ? \" DFA cleared\" : \"\");\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 89,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 722,
        "startLineNumber" : 376,
        "startColumnNumber" : 83,
        "endLineNumber" : 391,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ClassLoader TimeLexerSpeed.class.getClassLoader()=TimeLexerSpeed.class.getClassLoader();\n  try (InputStream is=TimeLexerSpeed.class.getClassLoader().getResourceAsStream(Parser_java_file)){\n    long size=getResourceSize(TimeLexerSpeed.class.getClassLoader(),Parser_java_file);\n    CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n    JavaLexer lexer=new JavaLexer(input);\n    double avg=tokenize(lexer,n,clearLexerDFACache);\n    String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n    if (output)     System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols%s\\n\",currentMethodName,(int)avg,n,input.size(),clearLexerDFACache ? \" DFA cleared\" : \"\");\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 376,
        "startColumnNumber" : 1,
        "endLineNumber" : 391,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void lex_new_java_utf8(int n,boolean clearLexerDFACache) throws Exception {\n  ClassLoader TimeLexerSpeed.class.getClassLoader()=TimeLexerSpeed.class.getClassLoader();\n  try (InputStream is=TimeLexerSpeed.class.getClassLoader().getResourceAsStream(Parser_java_file)){\n    long size=getResourceSize(TimeLexerSpeed.class.getClassLoader(),Parser_java_file);\n    CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n    JavaLexer lexer=new JavaLexer(input);\n    double avg=tokenize(lexer,n,clearLexerDFACache);\n    String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n    if (output)     System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols%s\\n\",currentMethodName,(int)avg,n,input.size(),clearLexerDFACache ? \" DFA cleared\" : \"\");\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 12
    } ],
    "tokenLength" : 2,
    "type" : "java.lang.ClassLoader"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 378,
    "startColumnNumber" : 24,
    "endLineNumber" : 378,
    "endColumnNumber" : 61
  }, {
    "charLength" : 37,
    "startLineNumber" : 379,
    "startColumnNumber" : 31,
    "endLineNumber" : 379,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ],
  "name" : "loader",
  "nodePosition" : {
    "charLength" : 6,
    "startLineNumber" : 377,
    "startColumnNumber" : 14,
    "endLineNumber" : 377,
    "endColumnNumber" : 20
  }
}