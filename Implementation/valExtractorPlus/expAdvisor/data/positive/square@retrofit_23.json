{
  "id" : 23,
  "expression" : "methodInfo.headers",
  "projectName" : "square@retrofit",
  "commitID" : "78e190d989aa9642df890588b69d12e7c11a3f20",
  "filePath" : "retrofit/src/main/java/retrofit/http/RequestBuilder.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "methodInfo.headers",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 94,
      "startColumnNumber" : 8,
      "endLineNumber" : 94,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 34
      },
      "nodeContext" : "methodInfo.headers != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (methodInfo.headers != null) {\n  headers.addAll(methodInfo.headers);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1514,
        "startLineNumber" : 58,
        "startColumnNumber" : 54,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String apiUrl=this.apiUrl;\n  StringBuilder url=new StringBuilder(apiUrl);\n  if (apiUrl.endsWith(\"/\")) {\n    url.deleteCharAt(url.length() - 1);\n  }\n  url.append(buildRelativeUrl());\n  if (methodInfo.hasQueryParams) {\n    boolean first=true;\n    String requestQuery=methodInfo.requestQuery;\n    if (requestQuery != null) {\n      url.append(requestQuery);\n      first=false;\n    }\n    String[] requestQueryName=methodInfo.requestQueryName;\n    for (int i=0; i < requestQueryName.length; i++) {\n      String query=requestQueryName[i];\n      if (query != null) {\n        String value=URLEncoder.encode(String.valueOf(args[i]),\"UTF-8\");\n        url.append(first ? '?' : '&').append(query).append('=').append(value);\n        first=false;\n      }\n    }\n  }\n  List<retrofit.http.client.Header> headers=new ArrayList<retrofit.http.client.Header>();\n  if (this.headers != null) {\n    headers.addAll(this.headers);\n  }\n  List<Header> methodInfo.headers=methodInfo.headers;\n  if (methodInfo.headers != null) {\n    headers.addAll(methodInfo.headers);\n  }\n  String[] requestParamHeader=methodInfo.requestParamHeader;\n  if (requestParamHeader != null) {\n    for (int i=0; i < requestParamHeader.length; i++) {\n      String name=requestParamHeader[i];\n      if (name == null)       continue;\n      Object arg=args[i];\n      if (arg != null) {\n        headers.add(new retrofit.http.client.Header(name,String.valueOf(arg)));\n      }\n    }\n  }\n  return new Request(methodInfo.requestMethod,url.toString(),headers,buildBody());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 293,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1773,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Construct a  {@link Request} from the supplied information. You <strong>must</strong> call{@link #methodInfo},  {@link #apiUrl},  {@link #args}, and  {@link #headers} before invoking thismethod.\n */\nRequest build() throws UnsupportedEncodingException {\n  String apiUrl=this.apiUrl;\n  StringBuilder url=new StringBuilder(apiUrl);\n  if (apiUrl.endsWith(\"/\")) {\n    url.deleteCharAt(url.length() - 1);\n  }\n  url.append(buildRelativeUrl());\n  if (methodInfo.hasQueryParams) {\n    boolean first=true;\n    String requestQuery=methodInfo.requestQuery;\n    if (requestQuery != null) {\n      url.append(requestQuery);\n      first=false;\n    }\n    String[] requestQueryName=methodInfo.requestQueryName;\n    for (int i=0; i < requestQueryName.length; i++) {\n      String query=requestQueryName[i];\n      if (query != null) {\n        String value=URLEncoder.encode(String.valueOf(args[i]),\"UTF-8\");\n        url.append(first ? '?' : '&').append(query).append('=').append(value);\n        first=false;\n      }\n    }\n  }\n  List<retrofit.http.client.Header> headers=new ArrayList<retrofit.http.client.Header>();\n  if (this.headers != null) {\n    headers.addAll(this.headers);\n  }\n  List<Header> methodInfo.headers=methodInfo.headers;\n  if (methodInfo.headers != null) {\n    headers.addAll(methodInfo.headers);\n  }\n  String[] requestParamHeader=methodInfo.requestParamHeader;\n  if (requestParamHeader != null) {\n    for (int i=0; i < requestParamHeader.length; i++) {\n      String name=requestParamHeader[i];\n      if (name == null)       continue;\n      Object arg=args[i];\n      if (arg != null) {\n        headers.add(new retrofit.http.client.Header(name,String.valueOf(arg)));\n      }\n    }\n  }\n  return new Request(methodInfo.requestMethod,url.toString(),headers,buildBody());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 300,
      "astHeight" : 16
    } ],
    "tokenLength" : 2,
    "type" : "java.util.List<retrofit.http.client.Header>"
  }, {
    "nodeContext" : "methodInfo.headers",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 95,
      "startColumnNumber" : 21,
      "endLineNumber" : 95,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 95,
        "startColumnNumber" : 6,
        "endLineNumber" : 95,
        "endColumnNumber" : 40
      },
      "nodeContext" : "headers.addAll(methodInfo.headers)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 95,
        "startColumnNumber" : 6,
        "endLineNumber" : 95,
        "endColumnNumber" : 42
      },
      "nodeContext" : "headers.addAll(methodInfo.headers);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 94,
        "startColumnNumber" : 31,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  headers.addAll(methodInfo.headers);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (methodInfo.headers != null) {\n  headers.addAll(methodInfo.headers);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1514,
        "startLineNumber" : 58,
        "startColumnNumber" : 54,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String apiUrl=this.apiUrl;\n  StringBuilder url=new StringBuilder(apiUrl);\n  if (apiUrl.endsWith(\"/\")) {\n    url.deleteCharAt(url.length() - 1);\n  }\n  url.append(buildRelativeUrl());\n  if (methodInfo.hasQueryParams) {\n    boolean first=true;\n    String requestQuery=methodInfo.requestQuery;\n    if (requestQuery != null) {\n      url.append(requestQuery);\n      first=false;\n    }\n    String[] requestQueryName=methodInfo.requestQueryName;\n    for (int i=0; i < requestQueryName.length; i++) {\n      String query=requestQueryName[i];\n      if (query != null) {\n        String value=URLEncoder.encode(String.valueOf(args[i]),\"UTF-8\");\n        url.append(first ? '?' : '&').append(query).append('=').append(value);\n        first=false;\n      }\n    }\n  }\n  List<retrofit.http.client.Header> headers=new ArrayList<retrofit.http.client.Header>();\n  if (this.headers != null) {\n    headers.addAll(this.headers);\n  }\n  List<Header> methodInfo.headers=methodInfo.headers;\n  if (methodInfo.headers != null) {\n    headers.addAll(methodInfo.headers);\n  }\n  String[] requestParamHeader=methodInfo.requestParamHeader;\n  if (requestParamHeader != null) {\n    for (int i=0; i < requestParamHeader.length; i++) {\n      String name=requestParamHeader[i];\n      if (name == null)       continue;\n      Object arg=args[i];\n      if (arg != null) {\n        headers.add(new retrofit.http.client.Header(name,String.valueOf(arg)));\n      }\n    }\n  }\n  return new Request(methodInfo.requestMethod,url.toString(),headers,buildBody());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 293,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1773,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Construct a  {@link Request} from the supplied information. You <strong>must</strong> call{@link #methodInfo},  {@link #apiUrl},  {@link #args}, and  {@link #headers} before invoking thismethod.\n */\nRequest build() throws UnsupportedEncodingException {\n  String apiUrl=this.apiUrl;\n  StringBuilder url=new StringBuilder(apiUrl);\n  if (apiUrl.endsWith(\"/\")) {\n    url.deleteCharAt(url.length() - 1);\n  }\n  url.append(buildRelativeUrl());\n  if (methodInfo.hasQueryParams) {\n    boolean first=true;\n    String requestQuery=methodInfo.requestQuery;\n    if (requestQuery != null) {\n      url.append(requestQuery);\n      first=false;\n    }\n    String[] requestQueryName=methodInfo.requestQueryName;\n    for (int i=0; i < requestQueryName.length; i++) {\n      String query=requestQueryName[i];\n      if (query != null) {\n        String value=URLEncoder.encode(String.valueOf(args[i]),\"UTF-8\");\n        url.append(first ? '?' : '&').append(query).append('=').append(value);\n        first=false;\n      }\n    }\n  }\n  List<retrofit.http.client.Header> headers=new ArrayList<retrofit.http.client.Header>();\n  if (this.headers != null) {\n    headers.addAll(this.headers);\n  }\n  List<Header> methodInfo.headers=methodInfo.headers;\n  if (methodInfo.headers != null) {\n    headers.addAll(methodInfo.headers);\n  }\n  String[] requestParamHeader=methodInfo.requestParamHeader;\n  if (requestParamHeader != null) {\n    for (int i=0; i < requestParamHeader.length; i++) {\n      String name=requestParamHeader[i];\n      if (name == null)       continue;\n      Object arg=args[i];\n      if (arg != null) {\n        headers.add(new retrofit.http.client.Header(name,String.valueOf(arg)));\n      }\n    }\n  }\n  return new Request(methodInfo.requestMethod,url.toString(),headers,buildBody());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 300,
      "astHeight" : 16
    } ],
    "tokenLength" : 2,
    "type" : "java.util.List<retrofit.http.client.Header>"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 94,
    "startColumnNumber" : 8,
    "endLineNumber" : 94,
    "endColumnNumber" : 26
  }, {
    "charLength" : 18,
    "startLineNumber" : 95,
    "startColumnNumber" : 21,
    "endLineNumber" : 95,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ],
  "name" : "methodHeaders",
  "nodePosition" : {
    "charLength" : 13,
    "startLineNumber" : 93,
    "startColumnNumber" : 17,
    "endLineNumber" : 93,
    "endColumnNumber" : 30
  }
}