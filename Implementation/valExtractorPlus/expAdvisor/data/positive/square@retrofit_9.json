{
  "id" : 9,
  "expression" : "body.length()",
  "projectName" : "square@retrofit",
  "commitID" : "63cd5c8e26a3d2041dec6709d9a5ca3e410718d6",
  "filePath" : "retrofit/src/main/java/retrofit/RestAdapter.java",
  "occurrences" : 3,
  "expressionList" : [ {
    "nodeContext" : "body.length()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 416,
      "startColumnNumber" : 19,
      "endLineNumber" : 416,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 416,
        "startColumnNumber" : 19,
        "endLineNumber" : 416,
        "endColumnNumber" : 42
      },
      "nodeContext" : "body.length() + \"-byte\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 416,
        "startColumnNumber" : 8,
        "endLineNumber" : 416,
        "endColumnNumber" : 40
      },
      "nodeContext" : "bodySize=body.length() + \"-byte\"",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 416,
        "startColumnNumber" : 8,
        "endLineNumber" : 416,
        "endColumnNumber" : 42
      },
      "nodeContext" : "bodySize=body.length() + \"-byte\";\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 409,
        "startColumnNumber" : 24,
        "endLineNumber" : 435,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  String bodyMime=body.mimeType();\n  if (bodyMime != null) {\n    log.log(\"Content-Type: \" + bodyMime);\n  }\n  long body.length()=body.length();\n  bodySize=body.length() + \"-byte\";\n  if (body.length() != -1) {\n    log.log(\"Content-Length: \" + body.length());\n  }\n  if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n    if (!request.getHeaders().isEmpty()) {\n      log.log(\"\");\n    }\n    if (!(body instanceof TypedByteArray)) {\n      request=Utils.readBodyToBytesIfNecessary(request);\n      body=request.getBody();\n    }\n    byte[] bodyBytes=((TypedByteArray)body).getBytes();\n    String bodyCharset=MimeUtil.parseCharset(body.mimeType());\n    log.log(new String(bodyBytes,bodyCharset));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 715,
        "startLineNumber" : 409,
        "startColumnNumber" : 6,
        "endLineNumber" : 435,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (body != null) {\n  String bodyMime=body.mimeType();\n  if (bodyMime != null) {\n    log.log(\"Content-Type: \" + bodyMime);\n  }\n  long body.length()=body.length();\n  bodySize=body.length() + \"-byte\";\n  if (body.length() != -1) {\n    log.log(\"Content-Length: \" + body.length());\n  }\n  if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n    if (!request.getHeaders().isEmpty()) {\n      log.log(\"\");\n    }\n    if (!(body instanceof TypedByteArray)) {\n      request=Utils.readBodyToBytesIfNecessary(request);\n      body=request.getBody();\n    }\n    byte[] bodyBytes=((TypedByteArray)body).getBytes();\n    String bodyCharset=MimeUtil.parseCharset(body.mimeType());\n    log.log(new String(bodyBytes,bodyCharset));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 131,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 977,
        "startLineNumber" : 402,
        "startColumnNumber" : 58,
        "endLineNumber" : 438,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  Header header : request.getHeaders()) {\n    log.log(header.toString());\n  }\n  String bodySize=\"no\";\n  TypedOutput body=request.getBody();\n  if (body != null) {\n    String bodyMime=body.mimeType();\n    if (bodyMime != null) {\n      log.log(\"Content-Type: \" + bodyMime);\n    }\n    long body.length()=body.length();\n    bodySize=body.length() + \"-byte\";\n    if (body.length() != -1) {\n      log.log(\"Content-Length: \" + body.length());\n    }\n    if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n      if (!request.getHeaders().isEmpty()) {\n        log.log(\"\");\n      }\n      if (!(body instanceof TypedByteArray)) {\n        request=Utils.readBodyToBytesIfNecessary(request);\n        body=request.getBody();\n      }\n      byte[] bodyBytes=((TypedByteArray)body).getBytes();\n      String bodyCharset=MimeUtil.parseCharset(body.mimeType());\n      log.log(new String(bodyBytes,bodyCharset));\n    }\n  }\n  log.log(String.format(\"---> END %s (%s body)\",name,bodySize));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1031,
        "startLineNumber" : 402,
        "startColumnNumber" : 4,
        "endLineNumber" : 438,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (logLevel.ordinal() >= LogLevel.HEADERS.ordinal()) {\n  for (  Header header : request.getHeaders()) {\n    log.log(header.toString());\n  }\n  String bodySize=\"no\";\n  TypedOutput body=request.getBody();\n  if (body != null) {\n    String bodyMime=body.mimeType();\n    if (bodyMime != null) {\n      log.log(\"Content-Type: \" + bodyMime);\n    }\n    long body.length()=body.length();\n    bodySize=body.length() + \"-byte\";\n    if (body.length() != -1) {\n      log.log(\"Content-Length: \" + body.length());\n    }\n    if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n      if (!request.getHeaders().isEmpty()) {\n        log.log(\"\");\n      }\n      if (!(body instanceof TypedByteArray)) {\n        request=Utils.readBodyToBytesIfNecessary(request);\n        body=request.getBody();\n      }\n      byte[] bodyBytes=((TypedByteArray)body).getBytes();\n      String bodyCharset=MimeUtil.parseCharset(body.mimeType());\n      log.log(new String(bodyBytes,bodyCharset));\n    }\n  }\n  log.log(String.format(\"---> END %s (%s body)\",name,bodySize));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 182,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1202,
        "startLineNumber" : 399,
        "startColumnNumber" : 80,
        "endLineNumber" : 441,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  log.log(String.format(\"---> %s %s %s\",name,request.getMethod(),request.getUrl()));\n  if (logLevel.ordinal() >= LogLevel.HEADERS.ordinal()) {\n    for (    Header header : request.getHeaders()) {\n      log.log(header.toString());\n    }\n    String bodySize=\"no\";\n    TypedOutput body=request.getBody();\n    if (body != null) {\n      String bodyMime=body.mimeType();\n      if (bodyMime != null) {\n        log.log(\"Content-Type: \" + bodyMime);\n      }\n      long body.length()=body.length();\n      bodySize=body.length() + \"-byte\";\n      if (body.length() != -1) {\n        log.log(\"Content-Length: \" + body.length());\n      }\n      if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n        if (!request.getHeaders().isEmpty()) {\n          log.log(\"\");\n        }\n        if (!(body instanceof TypedByteArray)) {\n          request=Utils.readBodyToBytesIfNecessary(request);\n          body=request.getBody();\n        }\n        byte[] bodyBytes=((TypedByteArray)body).getBytes();\n        String bodyCharset=MimeUtil.parseCharset(body.mimeType());\n        log.log(new String(bodyBytes,bodyCharset));\n      }\n    }\n    log.log(String.format(\"---> END %s (%s body)\",name,bodySize));\n  }\n  return request;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1379,
        "startLineNumber" : 398,
        "startColumnNumber" : 2,
        "endLineNumber" : 441,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Log request headers and body. Consumes request body and returns identical replacement. \n */\nRequest logAndReplaceRequest(String name,Request request) throws IOException {\n  log.log(String.format(\"---> %s %s %s\",name,request.getMethod(),request.getUrl()));\n  if (logLevel.ordinal() >= LogLevel.HEADERS.ordinal()) {\n    for (    Header header : request.getHeaders()) {\n      log.log(header.toString());\n    }\n    String bodySize=\"no\";\n    TypedOutput body=request.getBody();\n    if (body != null) {\n      String bodyMime=body.mimeType();\n      if (bodyMime != null) {\n        log.log(\"Content-Type: \" + bodyMime);\n      }\n      long body.length()=body.length();\n      bodySize=body.length() + \"-byte\";\n      if (body.length() != -1) {\n        log.log(\"Content-Length: \" + body.length());\n      }\n      if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n        if (!request.getHeaders().isEmpty()) {\n          log.log(\"\");\n        }\n        if (!(body instanceof TypedByteArray)) {\n          request=Utils.readBodyToBytesIfNecessary(request);\n          body=request.getBody();\n        }\n        byte[] bodyBytes=((TypedByteArray)body).getBytes();\n        String bodyCharset=MimeUtil.parseCharset(body.mimeType());\n        log.log(new String(bodyBytes,bodyCharset));\n      }\n    }\n    log.log(String.format(\"---> END %s (%s body)\",name,bodySize));\n  }\n  return request;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 215,
      "astHeight" : 15
    } ],
    "tokenLength" : 2,
    "type" : "long"
  }, {
    "nodeContext" : "body.length()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 417,
      "startColumnNumber" : 12,
      "endLineNumber" : 417,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 417,
        "startColumnNumber" : 12,
        "endLineNumber" : 417,
        "endColumnNumber" : 31
      },
      "nodeContext" : "body.length() != -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 417,
        "startColumnNumber" : 8,
        "endLineNumber" : 419,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (body.length() != -1) {\n  log.log(\"Content-Length: \" + body.length());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 409,
        "startColumnNumber" : 24,
        "endLineNumber" : 435,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  String bodyMime=body.mimeType();\n  if (bodyMime != null) {\n    log.log(\"Content-Type: \" + bodyMime);\n  }\n  long body.length()=body.length();\n  bodySize=body.length() + \"-byte\";\n  if (body.length() != -1) {\n    log.log(\"Content-Length: \" + body.length());\n  }\n  if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n    if (!request.getHeaders().isEmpty()) {\n      log.log(\"\");\n    }\n    if (!(body instanceof TypedByteArray)) {\n      request=Utils.readBodyToBytesIfNecessary(request);\n      body=request.getBody();\n    }\n    byte[] bodyBytes=((TypedByteArray)body).getBytes();\n    String bodyCharset=MimeUtil.parseCharset(body.mimeType());\n    log.log(new String(bodyBytes,bodyCharset));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 715,
        "startLineNumber" : 409,
        "startColumnNumber" : 6,
        "endLineNumber" : 435,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (body != null) {\n  String bodyMime=body.mimeType();\n  if (bodyMime != null) {\n    log.log(\"Content-Type: \" + bodyMime);\n  }\n  long body.length()=body.length();\n  bodySize=body.length() + \"-byte\";\n  if (body.length() != -1) {\n    log.log(\"Content-Length: \" + body.length());\n  }\n  if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n    if (!request.getHeaders().isEmpty()) {\n      log.log(\"\");\n    }\n    if (!(body instanceof TypedByteArray)) {\n      request=Utils.readBodyToBytesIfNecessary(request);\n      body=request.getBody();\n    }\n    byte[] bodyBytes=((TypedByteArray)body).getBytes();\n    String bodyCharset=MimeUtil.parseCharset(body.mimeType());\n    log.log(new String(bodyBytes,bodyCharset));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 131,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 977,
        "startLineNumber" : 402,
        "startColumnNumber" : 58,
        "endLineNumber" : 438,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  Header header : request.getHeaders()) {\n    log.log(header.toString());\n  }\n  String bodySize=\"no\";\n  TypedOutput body=request.getBody();\n  if (body != null) {\n    String bodyMime=body.mimeType();\n    if (bodyMime != null) {\n      log.log(\"Content-Type: \" + bodyMime);\n    }\n    long body.length()=body.length();\n    bodySize=body.length() + \"-byte\";\n    if (body.length() != -1) {\n      log.log(\"Content-Length: \" + body.length());\n    }\n    if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n      if (!request.getHeaders().isEmpty()) {\n        log.log(\"\");\n      }\n      if (!(body instanceof TypedByteArray)) {\n        request=Utils.readBodyToBytesIfNecessary(request);\n        body=request.getBody();\n      }\n      byte[] bodyBytes=((TypedByteArray)body).getBytes();\n      String bodyCharset=MimeUtil.parseCharset(body.mimeType());\n      log.log(new String(bodyBytes,bodyCharset));\n    }\n  }\n  log.log(String.format(\"---> END %s (%s body)\",name,bodySize));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1031,
        "startLineNumber" : 402,
        "startColumnNumber" : 4,
        "endLineNumber" : 438,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (logLevel.ordinal() >= LogLevel.HEADERS.ordinal()) {\n  for (  Header header : request.getHeaders()) {\n    log.log(header.toString());\n  }\n  String bodySize=\"no\";\n  TypedOutput body=request.getBody();\n  if (body != null) {\n    String bodyMime=body.mimeType();\n    if (bodyMime != null) {\n      log.log(\"Content-Type: \" + bodyMime);\n    }\n    long body.length()=body.length();\n    bodySize=body.length() + \"-byte\";\n    if (body.length() != -1) {\n      log.log(\"Content-Length: \" + body.length());\n    }\n    if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n      if (!request.getHeaders().isEmpty()) {\n        log.log(\"\");\n      }\n      if (!(body instanceof TypedByteArray)) {\n        request=Utils.readBodyToBytesIfNecessary(request);\n        body=request.getBody();\n      }\n      byte[] bodyBytes=((TypedByteArray)body).getBytes();\n      String bodyCharset=MimeUtil.parseCharset(body.mimeType());\n      log.log(new String(bodyBytes,bodyCharset));\n    }\n  }\n  log.log(String.format(\"---> END %s (%s body)\",name,bodySize));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 182,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1202,
        "startLineNumber" : 399,
        "startColumnNumber" : 80,
        "endLineNumber" : 441,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  log.log(String.format(\"---> %s %s %s\",name,request.getMethod(),request.getUrl()));\n  if (logLevel.ordinal() >= LogLevel.HEADERS.ordinal()) {\n    for (    Header header : request.getHeaders()) {\n      log.log(header.toString());\n    }\n    String bodySize=\"no\";\n    TypedOutput body=request.getBody();\n    if (body != null) {\n      String bodyMime=body.mimeType();\n      if (bodyMime != null) {\n        log.log(\"Content-Type: \" + bodyMime);\n      }\n      long body.length()=body.length();\n      bodySize=body.length() + \"-byte\";\n      if (body.length() != -1) {\n        log.log(\"Content-Length: \" + body.length());\n      }\n      if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n        if (!request.getHeaders().isEmpty()) {\n          log.log(\"\");\n        }\n        if (!(body instanceof TypedByteArray)) {\n          request=Utils.readBodyToBytesIfNecessary(request);\n          body=request.getBody();\n        }\n        byte[] bodyBytes=((TypedByteArray)body).getBytes();\n        String bodyCharset=MimeUtil.parseCharset(body.mimeType());\n        log.log(new String(bodyBytes,bodyCharset));\n      }\n    }\n    log.log(String.format(\"---> END %s (%s body)\",name,bodySize));\n  }\n  return request;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1379,
        "startLineNumber" : 398,
        "startColumnNumber" : 2,
        "endLineNumber" : 441,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Log request headers and body. Consumes request body and returns identical replacement. \n */\nRequest logAndReplaceRequest(String name,Request request) throws IOException {\n  log.log(String.format(\"---> %s %s %s\",name,request.getMethod(),request.getUrl()));\n  if (logLevel.ordinal() >= LogLevel.HEADERS.ordinal()) {\n    for (    Header header : request.getHeaders()) {\n      log.log(header.toString());\n    }\n    String bodySize=\"no\";\n    TypedOutput body=request.getBody();\n    if (body != null) {\n      String bodyMime=body.mimeType();\n      if (bodyMime != null) {\n        log.log(\"Content-Type: \" + bodyMime);\n      }\n      long body.length()=body.length();\n      bodySize=body.length() + \"-byte\";\n      if (body.length() != -1) {\n        log.log(\"Content-Length: \" + body.length());\n      }\n      if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n        if (!request.getHeaders().isEmpty()) {\n          log.log(\"\");\n        }\n        if (!(body instanceof TypedByteArray)) {\n          request=Utils.readBodyToBytesIfNecessary(request);\n          body=request.getBody();\n        }\n        byte[] bodyBytes=((TypedByteArray)body).getBytes();\n        String bodyCharset=MimeUtil.parseCharset(body.mimeType());\n        log.log(new String(bodyBytes,bodyCharset));\n      }\n    }\n    log.log(String.format(\"---> END %s (%s body)\",name,bodySize));\n  }\n  return request;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 215,
      "astHeight" : 15
    } ],
    "tokenLength" : 2,
    "type" : "long"
  }, {
    "nodeContext" : "body.length()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 418,
      "startColumnNumber" : 39,
      "endLineNumber" : 418,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 418,
        "startColumnNumber" : 18,
        "endLineNumber" : 418,
        "endColumnNumber" : 52
      },
      "nodeContext" : "\"Content-Length: \" + body.length()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 418,
        "startColumnNumber" : 10,
        "endLineNumber" : 418,
        "endColumnNumber" : 53
      },
      "nodeContext" : "log.log(\"Content-Length: \" + body.length())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 418,
        "startColumnNumber" : 10,
        "endLineNumber" : 418,
        "endColumnNumber" : 55
      },
      "nodeContext" : "log.log(\"Content-Length: \" + body.length());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 417,
        "startColumnNumber" : 30,
        "endLineNumber" : 419,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  log.log(\"Content-Length: \" + body.length());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 417,
        "startColumnNumber" : 8,
        "endLineNumber" : 419,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (body.length() != -1) {\n  log.log(\"Content-Length: \" + body.length());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 409,
        "startColumnNumber" : 24,
        "endLineNumber" : 435,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  String bodyMime=body.mimeType();\n  if (bodyMime != null) {\n    log.log(\"Content-Type: \" + bodyMime);\n  }\n  long body.length()=body.length();\n  bodySize=body.length() + \"-byte\";\n  if (body.length() != -1) {\n    log.log(\"Content-Length: \" + body.length());\n  }\n  if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n    if (!request.getHeaders().isEmpty()) {\n      log.log(\"\");\n    }\n    if (!(body instanceof TypedByteArray)) {\n      request=Utils.readBodyToBytesIfNecessary(request);\n      body=request.getBody();\n    }\n    byte[] bodyBytes=((TypedByteArray)body).getBytes();\n    String bodyCharset=MimeUtil.parseCharset(body.mimeType());\n    log.log(new String(bodyBytes,bodyCharset));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 715,
        "startLineNumber" : 409,
        "startColumnNumber" : 6,
        "endLineNumber" : 435,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (body != null) {\n  String bodyMime=body.mimeType();\n  if (bodyMime != null) {\n    log.log(\"Content-Type: \" + bodyMime);\n  }\n  long body.length()=body.length();\n  bodySize=body.length() + \"-byte\";\n  if (body.length() != -1) {\n    log.log(\"Content-Length: \" + body.length());\n  }\n  if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n    if (!request.getHeaders().isEmpty()) {\n      log.log(\"\");\n    }\n    if (!(body instanceof TypedByteArray)) {\n      request=Utils.readBodyToBytesIfNecessary(request);\n      body=request.getBody();\n    }\n    byte[] bodyBytes=((TypedByteArray)body).getBytes();\n    String bodyCharset=MimeUtil.parseCharset(body.mimeType());\n    log.log(new String(bodyBytes,bodyCharset));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 131,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 977,
        "startLineNumber" : 402,
        "startColumnNumber" : 58,
        "endLineNumber" : 438,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  Header header : request.getHeaders()) {\n    log.log(header.toString());\n  }\n  String bodySize=\"no\";\n  TypedOutput body=request.getBody();\n  if (body != null) {\n    String bodyMime=body.mimeType();\n    if (bodyMime != null) {\n      log.log(\"Content-Type: \" + bodyMime);\n    }\n    long body.length()=body.length();\n    bodySize=body.length() + \"-byte\";\n    if (body.length() != -1) {\n      log.log(\"Content-Length: \" + body.length());\n    }\n    if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n      if (!request.getHeaders().isEmpty()) {\n        log.log(\"\");\n      }\n      if (!(body instanceof TypedByteArray)) {\n        request=Utils.readBodyToBytesIfNecessary(request);\n        body=request.getBody();\n      }\n      byte[] bodyBytes=((TypedByteArray)body).getBytes();\n      String bodyCharset=MimeUtil.parseCharset(body.mimeType());\n      log.log(new String(bodyBytes,bodyCharset));\n    }\n  }\n  log.log(String.format(\"---> END %s (%s body)\",name,bodySize));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1031,
        "startLineNumber" : 402,
        "startColumnNumber" : 4,
        "endLineNumber" : 438,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (logLevel.ordinal() >= LogLevel.HEADERS.ordinal()) {\n  for (  Header header : request.getHeaders()) {\n    log.log(header.toString());\n  }\n  String bodySize=\"no\";\n  TypedOutput body=request.getBody();\n  if (body != null) {\n    String bodyMime=body.mimeType();\n    if (bodyMime != null) {\n      log.log(\"Content-Type: \" + bodyMime);\n    }\n    long body.length()=body.length();\n    bodySize=body.length() + \"-byte\";\n    if (body.length() != -1) {\n      log.log(\"Content-Length: \" + body.length());\n    }\n    if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n      if (!request.getHeaders().isEmpty()) {\n        log.log(\"\");\n      }\n      if (!(body instanceof TypedByteArray)) {\n        request=Utils.readBodyToBytesIfNecessary(request);\n        body=request.getBody();\n      }\n      byte[] bodyBytes=((TypedByteArray)body).getBytes();\n      String bodyCharset=MimeUtil.parseCharset(body.mimeType());\n      log.log(new String(bodyBytes,bodyCharset));\n    }\n  }\n  log.log(String.format(\"---> END %s (%s body)\",name,bodySize));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 182,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1202,
        "startLineNumber" : 399,
        "startColumnNumber" : 80,
        "endLineNumber" : 441,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  log.log(String.format(\"---> %s %s %s\",name,request.getMethod(),request.getUrl()));\n  if (logLevel.ordinal() >= LogLevel.HEADERS.ordinal()) {\n    for (    Header header : request.getHeaders()) {\n      log.log(header.toString());\n    }\n    String bodySize=\"no\";\n    TypedOutput body=request.getBody();\n    if (body != null) {\n      String bodyMime=body.mimeType();\n      if (bodyMime != null) {\n        log.log(\"Content-Type: \" + bodyMime);\n      }\n      long body.length()=body.length();\n      bodySize=body.length() + \"-byte\";\n      if (body.length() != -1) {\n        log.log(\"Content-Length: \" + body.length());\n      }\n      if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n        if (!request.getHeaders().isEmpty()) {\n          log.log(\"\");\n        }\n        if (!(body instanceof TypedByteArray)) {\n          request=Utils.readBodyToBytesIfNecessary(request);\n          body=request.getBody();\n        }\n        byte[] bodyBytes=((TypedByteArray)body).getBytes();\n        String bodyCharset=MimeUtil.parseCharset(body.mimeType());\n        log.log(new String(bodyBytes,bodyCharset));\n      }\n    }\n    log.log(String.format(\"---> END %s (%s body)\",name,bodySize));\n  }\n  return request;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1379,
        "startLineNumber" : 398,
        "startColumnNumber" : 2,
        "endLineNumber" : 441,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Log request headers and body. Consumes request body and returns identical replacement. \n */\nRequest logAndReplaceRequest(String name,Request request) throws IOException {\n  log.log(String.format(\"---> %s %s %s\",name,request.getMethod(),request.getUrl()));\n  if (logLevel.ordinal() >= LogLevel.HEADERS.ordinal()) {\n    for (    Header header : request.getHeaders()) {\n      log.log(header.toString());\n    }\n    String bodySize=\"no\";\n    TypedOutput body=request.getBody();\n    if (body != null) {\n      String bodyMime=body.mimeType();\n      if (bodyMime != null) {\n        log.log(\"Content-Type: \" + bodyMime);\n      }\n      long body.length()=body.length();\n      bodySize=body.length() + \"-byte\";\n      if (body.length() != -1) {\n        log.log(\"Content-Length: \" + body.length());\n      }\n      if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n        if (!request.getHeaders().isEmpty()) {\n          log.log(\"\");\n        }\n        if (!(body instanceof TypedByteArray)) {\n          request=Utils.readBodyToBytesIfNecessary(request);\n          body=request.getBody();\n        }\n        byte[] bodyBytes=((TypedByteArray)body).getBytes();\n        String bodyCharset=MimeUtil.parseCharset(body.mimeType());\n        log.log(new String(bodyBytes,bodyCharset));\n      }\n    }\n    log.log(String.format(\"---> END %s (%s body)\",name,bodySize));\n  }\n  return request;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 215,
      "astHeight" : 15
    } ],
    "tokenLength" : 2,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 416,
    "startColumnNumber" : 19,
    "endLineNumber" : 416,
    "endColumnNumber" : 32
  }, {
    "charLength" : 13,
    "startLineNumber" : 417,
    "startColumnNumber" : 12,
    "endLineNumber" : 417,
    "endColumnNumber" : 25
  }, {
    "charLength" : 13,
    "startLineNumber" : 418,
    "startColumnNumber" : 39,
    "endLineNumber" : 418,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ],
  "name" : "bodyLength",
  "nodePosition" : {
    "charLength" : 10,
    "startLineNumber" : 415,
    "startColumnNumber" : 13,
    "endLineNumber" : 415,
    "endColumnNumber" : 23
  }
}