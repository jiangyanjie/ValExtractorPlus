{
  "id" : 13,
  "expression" : "((String)entry.getKey()).trim()",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "dd2ce20687f14f1a501c54ef75eeb56d1bd501f5",
  "filePath" : "spring-core/src/main/java/org/springframework/core/io/support/SpringFactoriesLoader.java",
  "occurrences" : 1,
  "expressionList" : [ {
    "nodeContext" : "((String)entry.getKey()).trim()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 143,
      "startColumnNumber" : 17,
      "endLineNumber" : 143,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 9,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 143,
        "startColumnNumber" : 6,
        "endLineNumber" : 143,
        "endColumnNumber" : 68
      },
      "nodeContext" : "result.add(((String)entry.getKey()).trim(),factoryName.trim())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 143,
        "startColumnNumber" : 6,
        "endLineNumber" : 143,
        "endColumnNumber" : 70
      },
      "nodeContext" : "result.add(((String)entry.getKey()).trim(),factoryName.trim());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 142,
        "startColumnNumber" : 103,
        "endLineNumber" : 144,
        "endColumnNumber" : 6
      },
      "nodeContext" : "{\n  result.add(((String)entry.getKey()).trim(),factoryName.trim());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 142,
        "startColumnNumber" : 5,
        "endLineNumber" : 144,
        "endColumnNumber" : 6
      },
      "nodeContext" : "for (String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n  result.add(((String)entry.getKey()).trim(),factoryName.trim());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 31,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 140,
        "startColumnNumber" : 56,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String ((String)entry.getKey()).trim()=((String)entry.getKey()).trim();\n  for (  String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n    result.add(((String)entry.getKey()).trim(),factoryName.trim());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 304,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Map.Entry<?,?> entry : properties.entrySet()) {\n  String ((String)entry.getKey()).trim()=((String)entry.getKey()).trim();\n  for (  String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n    result.add(((String)entry.getKey()).trim(),factoryName.trim());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 59,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 471,
        "startLineNumber" : 136,
        "startColumnNumber" : 34,
        "endLineNumber" : 146,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  URL url=urls.nextElement();\n  UrlResource resource=new UrlResource(url);\n  Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n  for (  Map.Entry<?,?> entry : properties.entrySet()) {\n    String ((String)entry.getKey()).trim()=((String)entry.getKey()).trim();\n    for (    String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n      result.add(((String)entry.getKey()).trim(),factoryName.trim());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 136,
        "startColumnNumber" : 3,
        "endLineNumber" : 146,
        "endColumnNumber" : 4
      },
      "nodeContext" : "while (urls.hasMoreElements()) {\n  URL url=urls.nextElement();\n  UrlResource resource=new UrlResource(url);\n  Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n  for (  Map.Entry<?,?> entry : properties.entrySet()) {\n    String ((String)entry.getKey()).trim()=((String)entry.getKey()).trim();\n    for (    String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n      result.add(((String)entry.getKey()).trim(),factoryName.trim());\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 90,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 131,
        "startColumnNumber" : 6,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Enumeration<URL> urls=(classLoader != null ? classLoader.getResources(FACTORIES_RESOURCE_LOCATION) : ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n  result=new LinkedMultiValueMap<>();\n  while (urls.hasMoreElements()) {\n    URL url=urls.nextElement();\n    UrlResource resource=new UrlResource(url);\n    Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n    for (    Map.Entry<?,?> entry : properties.entrySet()) {\n      String ((String)entry.getKey()).trim()=((String)entry.getKey()).trim();\n      for (      String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n        result.add(((String)entry.getKey()).trim(),factoryName.trim());\n      }\n    }\n  }\n  cache.put(classLoader,result);\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 938,
        "startLineNumber" : 131,
        "startColumnNumber" : 2,
        "endLineNumber" : 153,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  Enumeration<URL> urls=(classLoader != null ? classLoader.getResources(FACTORIES_RESOURCE_LOCATION) : ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n  result=new LinkedMultiValueMap<>();\n  while (urls.hasMoreElements()) {\n    URL url=urls.nextElement();\n    UrlResource resource=new UrlResource(url);\n    Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n    for (    Map.Entry<?,?> entry : properties.entrySet()) {\n      String ((String)entry.getKey()).trim()=((String)entry.getKey()).trim();\n      for (      String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n        result.add(((String)entry.getKey()).trim(),factoryName.trim());\n      }\n    }\n  }\n  cache.put(classLoader,result);\n  return result;\n}\n catch (IOException ex) {\n  throw new IllegalArgumentException(\"Unable to load factories from location [\" + FACTORIES_RESOURCE_LOCATION + \"]\",ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 143,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1095,
        "startLineNumber" : 125,
        "startColumnNumber" : 97,
        "endLineNumber" : 154,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  MultiValueMap<String,String> result=cache.get(classLoader);\n  if (result != null) {\n    return result;\n  }\n  try {\n    Enumeration<URL> urls=(classLoader != null ? classLoader.getResources(FACTORIES_RESOURCE_LOCATION) : ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n    result=new LinkedMultiValueMap<>();\n    while (urls.hasMoreElements()) {\n      URL url=urls.nextElement();\n      UrlResource resource=new UrlResource(url);\n      Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n      for (      Map.Entry<?,?> entry : properties.entrySet()) {\n        String ((String)entry.getKey()).trim()=((String)entry.getKey()).trim();\n        for (        String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n          result.add(((String)entry.getKey()).trim(),factoryName.trim());\n        }\n      }\n    }\n    cache.put(classLoader,result);\n    return result;\n  }\n catch (  IOException ex) {\n    throw new IllegalArgumentException(\"Unable to load factories from location [\" + FACTORIES_RESOURCE_LOCATION + \"]\",ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1189,
        "startLineNumber" : 125,
        "startColumnNumber" : 1,
        "endLineNumber" : 154,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static Map<String,List<String>> loadSpringFactories(@Nullable ClassLoader classLoader){\n  MultiValueMap<String,String> result=cache.get(classLoader);\n  if (result != null) {\n    return result;\n  }\n  try {\n    Enumeration<URL> urls=(classLoader != null ? classLoader.getResources(FACTORIES_RESOURCE_LOCATION) : ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n    result=new LinkedMultiValueMap<>();\n    while (urls.hasMoreElements()) {\n      URL url=urls.nextElement();\n      UrlResource resource=new UrlResource(url);\n      Properties properties=PropertiesLoaderUtils.loadProperties(resource);\n      for (      Map.Entry<?,?> entry : properties.entrySet()) {\n        String ((String)entry.getKey()).trim()=((String)entry.getKey()).trim();\n        for (        String factoryName : StringUtils.commaDelimitedListToStringArray((String)entry.getValue())) {\n          result.add(((String)entry.getKey()).trim(),factoryName.trim());\n        }\n      }\n    }\n    cache.put(classLoader,result);\n    return result;\n  }\n catch (  IOException ex) {\n    throw new IllegalArgumentException(\"Unable to load factories from location [\" + FACTORIES_RESOURCE_LOCATION + \"]\",ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 185,
      "astHeight" : 17
    } ],
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 143,
    "startColumnNumber" : 17,
    "endLineNumber" : 143,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ],
  "name" : "factoryClassName",
  "nodePosition" : {
    "charLength" : 16,
    "startLineNumber" : 141,
    "startColumnNumber" : 12,
    "endLineNumber" : 141,
    "endColumnNumber" : 28
  }
}