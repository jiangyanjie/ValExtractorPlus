{
  "id" : 5,
  "expression" : "discoveryClient.getServices()",
  "projectName" : "alibaba@spring-cloud-alibaba",
  "commitID" : "3cf4b7cead480fede484162d28086b6b67e576ce",
  "filePath" : "spring-cloud-alibaba-dubbo/src/main/java/org/springframework/cloud/alibaba/dubbo/metadata/repository/DubboServiceMetadataRepository.java",
  "occurrences" : 1,
  "expressionList" : [ {
    "nodeContext" : "discoveryClient.getServices()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 469,
      "startColumnNumber" : 47,
      "endLineNumber" : 469,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 469,
        "startColumnNumber" : 33,
        "endLineNumber" : 469,
        "endColumnNumber" : 77
      },
      "nodeContext" : "new HashSet<>(discoveryClient.getServices())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 469,
        "startColumnNumber" : 12,
        "endLineNumber" : 469,
        "endColumnNumber" : 75
      },
      "nodeContext" : "subscribedServices=new HashSet<>(discoveryClient.getServices())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 469,
        "startColumnNumber" : 12,
        "endLineNumber" : 469,
        "endColumnNumber" : 77
      },
      "nodeContext" : "subscribedServices=new HashSet<>(discoveryClient.getServices());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 548,
        "startLineNumber" : 467,
        "startColumnNumber" : 85,
        "endLineNumber" : 477,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<String> discoveryClient.getServices()=discoveryClient.getServices();\n  subscribedServices=new HashSet<>(discoveryClient.getServices());\n  if (logger.isWarnEnabled()) {\n    logger.warn(\"Current application will subscribe all discoveryClient.getServices()(size:{}) in registry, \" + \"a lot of memory and CPU cycles may be used, \" + \"thus it's strongly recommend you using the externalized property '{}' \"+ \"to specify the discoveryClient.getServices()\",subscribedServices.size(),\"dubbo.cloud.subscribed-discoveryClient.getServices()\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 714,
        "startLineNumber" : 467,
        "startColumnNumber" : 8,
        "endLineNumber" : 479,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (ALL_DUBBO_SERVICES.equals(dubboCloudProperties.getSubscribedServices())) {\n  List<String> discoveryClient.getServices()=discoveryClient.getServices();\n  subscribedServices=new HashSet<>(discoveryClient.getServices());\n  if (logger.isWarnEnabled()) {\n    logger.warn(\"Current application will subscribe all discoveryClient.getServices()(size:{}) in registry, \" + \"a lot of memory and CPU cycles may be used, \" + \"thus it's strongly recommend you using the externalized property '{}' \"+ \"to specify the discoveryClient.getServices()\",subscribedServices.size(),\"dubbo.cloud.subscribed-discoveryClient.getServices()\");\n  }\n}\n else {\n  subscribedServices=new HashSet<>(dubboCloudProperties.subscribedServices());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 771,
        "startLineNumber" : 465,
        "startColumnNumber" : 42,
        "endLineNumber" : 482,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (ALL_DUBBO_SERVICES.equals(dubboCloudProperties.getSubscribedServices())) {\n    List<String> discoveryClient.getServices()=discoveryClient.getServices();\n    subscribedServices=new HashSet<>(discoveryClient.getServices());\n    if (logger.isWarnEnabled()) {\n      logger.warn(\"Current application will subscribe all discoveryClient.getServices()(size:{}) in registry, \" + \"a lot of memory and CPU cycles may be used, \" + \"thus it's strongly recommend you using the externalized property '{}' \"+ \"to specify the discoveryClient.getServices()\",subscribedServices.size(),\"dubbo.cloud.subscribed-discoveryClient.getServices()\");\n    }\n  }\n else {\n    subscribedServices=new HashSet<>(dubboCloudProperties.subscribedServices());\n  }\n  excludeSelf(subscribedServices);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 808,
        "startLineNumber" : 465,
        "startColumnNumber" : 4,
        "endLineNumber" : 482,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void initSubscribedServices(){\n  if (ALL_DUBBO_SERVICES.equals(dubboCloudProperties.getSubscribedServices())) {\n    List<String> discoveryClient.getServices()=discoveryClient.getServices();\n    subscribedServices=new HashSet<>(discoveryClient.getServices());\n    if (logger.isWarnEnabled()) {\n      logger.warn(\"Current application will subscribe all discoveryClient.getServices()(size:{}) in registry, \" + \"a lot of memory and CPU cycles may be used, \" + \"thus it's strongly recommend you using the externalized property '{}' \"+ \"to specify the discoveryClient.getServices()\",subscribedServices.size(),\"dubbo.cloud.subscribed-discoveryClient.getServices()\");\n    }\n  }\n else {\n    subscribedServices=new HashSet<>(dubboCloudProperties.subscribedServices());\n  }\n  excludeSelf(subscribedServices);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 67,
      "astHeight" : 10
    } ],
    "tokenLength" : 2,
    "type" : "java.util.List<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 469,
    "startColumnNumber" : 47,
    "endLineNumber" : 469,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ ],
  "name" : "services",
  "nodePosition" : {
    "charLength" : 8,
    "startLineNumber" : 468,
    "startColumnNumber" : 25,
    "endLineNumber" : 468,
    "endColumnNumber" : 33
  }
}