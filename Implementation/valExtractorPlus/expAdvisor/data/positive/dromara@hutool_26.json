{
  "id" : 26,
  "expression" : "file.listFiles()",
  "projectName" : "dromara@hutool",
  "commitID" : "c33e2d89712025d94a6f8ed8391deffc58ce70a4",
  "filePath" : "hutool-core/src/main/java/cn/hutool/core/lang/ClassScanner.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "file.listFiles()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 249,
      "startColumnNumber" : 14,
      "endLineNumber" : 249,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 249,
        "startColumnNumber" : 6,
        "endLineNumber" : 249,
        "endColumnNumber" : 30
      },
      "nodeContext" : "null != file.listFiles()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 249,
        "startColumnNumber" : 3,
        "endLineNumber" : 253,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (null != file.listFiles()) {\n  for (  File subFile : file.listFiles()) {\n    scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 247,
        "startColumnNumber" : 33,
        "endLineNumber" : 254,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final File[] file.listFiles()=file.listFiles();\n  if (null != file.listFiles()) {\n    for (    File subFile : file.listFiles()) {\n      scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 252,
        "startLineNumber" : 247,
        "startColumnNumber" : 9,
        "endLineNumber" : 254,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (file.isDirectory()) {\n  final File[] file.listFiles()=file.listFiles();\n  if (null != file.listFiles()) {\n    for (    File subFile : file.listFiles()) {\n      scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 720,
        "startLineNumber" : 231,
        "startColumnNumber" : 2,
        "endLineNumber" : 254,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (file.isFile()) {\n  final String fileName=file.getAbsolutePath();\n  if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n    final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n    addIfAccept(className);\n  }\n else   if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n    try {\n      scanJar(new JarFile(file));\n    }\n catch (    IOException e) {\n      throw new IORuntimeException(e);\n    }\n  }\n}\n else if (file.isDirectory()) {\n  final File[] file.listFiles()=file.listFiles();\n  if (null != file.listFiles()) {\n    for (    File subFile : file.listFiles()) {\n      scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 122,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 772,
        "startLineNumber" : 230,
        "startColumnNumber" : 50,
        "endLineNumber" : 255,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (file.isFile()) {\n    final String fileName=file.getAbsolutePath();\n    if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n      final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n      addIfAccept(className);\n    }\n else     if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n      try {\n        scanJar(new JarFile(file));\n      }\n catch (      IOException e) {\n        throw new IORuntimeException(e);\n      }\n    }\n  }\n else   if (file.isDirectory()) {\n    final File[] file.listFiles()=file.listFiles();\n    if (null != file.listFiles()) {\n      for (      File subFile : file.listFiles()) {\n        scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 902,
        "startLineNumber" : 224,
        "startColumnNumber" : 1,
        "endLineNumber" : 255,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 扫描文件或目录中的类\n * @param file    文件或目录\n * @param rootDir 包名对应classpath绝对路径\n */\nprivate void scanFile(File file,String rootDir){\n  if (file.isFile()) {\n    final String fileName=file.getAbsolutePath();\n    if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n      final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n      addIfAccept(className);\n    }\n else     if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n      try {\n        scanJar(new JarFile(file));\n      }\n catch (      IOException e) {\n        throw new IORuntimeException(e);\n      }\n    }\n  }\n else   if (file.isDirectory()) {\n    final File[] file.listFiles()=file.listFiles();\n    if (null != file.listFiles()) {\n      for (      File subFile : file.listFiles()) {\n        scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 15
    } ],
    "tokenLength" : 2,
    "type" : "java.io.File[]"
  }, {
    "nodeContext" : "file.listFiles()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 250,
      "startColumnNumber" : 24,
      "endLineNumber" : 250,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 250,
        "startColumnNumber" : 4,
        "endLineNumber" : 252,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (File subFile : file.listFiles()) {\n  scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 249,
        "startColumnNumber" : 20,
        "endLineNumber" : 253,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  for (  File subFile : file.listFiles()) {\n    scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 249,
        "startColumnNumber" : 3,
        "endLineNumber" : 253,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (null != file.listFiles()) {\n  for (  File subFile : file.listFiles()) {\n    scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 247,
        "startColumnNumber" : 33,
        "endLineNumber" : 254,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final File[] file.listFiles()=file.listFiles();\n  if (null != file.listFiles()) {\n    for (    File subFile : file.listFiles()) {\n      scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 252,
        "startLineNumber" : 247,
        "startColumnNumber" : 9,
        "endLineNumber" : 254,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (file.isDirectory()) {\n  final File[] file.listFiles()=file.listFiles();\n  if (null != file.listFiles()) {\n    for (    File subFile : file.listFiles()) {\n      scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 720,
        "startLineNumber" : 231,
        "startColumnNumber" : 2,
        "endLineNumber" : 254,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (file.isFile()) {\n  final String fileName=file.getAbsolutePath();\n  if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n    final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n    addIfAccept(className);\n  }\n else   if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n    try {\n      scanJar(new JarFile(file));\n    }\n catch (    IOException e) {\n      throw new IORuntimeException(e);\n    }\n  }\n}\n else if (file.isDirectory()) {\n  final File[] file.listFiles()=file.listFiles();\n  if (null != file.listFiles()) {\n    for (    File subFile : file.listFiles()) {\n      scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 122,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 772,
        "startLineNumber" : 230,
        "startColumnNumber" : 50,
        "endLineNumber" : 255,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (file.isFile()) {\n    final String fileName=file.getAbsolutePath();\n    if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n      final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n      addIfAccept(className);\n    }\n else     if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n      try {\n        scanJar(new JarFile(file));\n      }\n catch (      IOException e) {\n        throw new IORuntimeException(e);\n      }\n    }\n  }\n else   if (file.isDirectory()) {\n    final File[] file.listFiles()=file.listFiles();\n    if (null != file.listFiles()) {\n      for (      File subFile : file.listFiles()) {\n        scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 902,
        "startLineNumber" : 224,
        "startColumnNumber" : 1,
        "endLineNumber" : 255,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 扫描文件或目录中的类\n * @param file    文件或目录\n * @param rootDir 包名对应classpath绝对路径\n */\nprivate void scanFile(File file,String rootDir){\n  if (file.isFile()) {\n    final String fileName=file.getAbsolutePath();\n    if (fileName.endsWith(FileUtil.CLASS_EXT)) {\n      final String className=fileName.substring(rootDir.length(),fileName.length() - 6).replace(File.separatorChar,CharUtil.DOT);\n      addIfAccept(className);\n    }\n else     if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {\n      try {\n        scanJar(new JarFile(file));\n      }\n catch (      IOException e) {\n        throw new IORuntimeException(e);\n      }\n    }\n  }\n else   if (file.isDirectory()) {\n    final File[] file.listFiles()=file.listFiles();\n    if (null != file.listFiles()) {\n      for (      File subFile : file.listFiles()) {\n        scanFile(subFile,(null == rootDir) ? subPathBeforePackage(file) : rootDir);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 15
    } ],
    "tokenLength" : 2,
    "type" : "java.io.File[]"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 249,
    "startColumnNumber" : 14,
    "endLineNumber" : 249,
    "endColumnNumber" : 30
  }, {
    "charLength" : 16,
    "startLineNumber" : 250,
    "startColumnNumber" : 24,
    "endLineNumber" : 250,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ],
  "name" : "files",
  "nodePosition" : {
    "charLength" : 5,
    "startLineNumber" : 248,
    "startColumnNumber" : 16,
    "endLineNumber" : 248,
    "endColumnNumber" : 21
  }
}