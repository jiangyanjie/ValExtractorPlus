{
  "id" : 15,
  "expression" : "getDataType(1)",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "59ed3e1cc9aea1a3aeebfdf4dae108c905985dc1",
  "filePath" : "Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/stackeditor/StackEditorDnDTest.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "getDataType(1)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 382,
      "startColumnNumber" : 14,
      "endLineNumber" : 382,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 382,
        "startColumnNumber" : 14,
        "endLineNumber" : 382,
        "endColumnNumber" : 52
      },
      "nodeContext" : "getDataType(1).isEquivalent(tableType)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 382,
        "startColumnNumber" : 3,
        "endLineNumber" : 382,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertTrue(getDataType(1).isEquivalent(tableType))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 382,
        "startColumnNumber" : 3,
        "endLineNumber" : 382,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertTrue(getDataType(1).isEquivalent(tableType));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 624,
        "startLineNumber" : 372,
        "startColumnNumber" : 6,
        "endLineNumber" : 391,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertEquals(20,model.getNumComponents());\n  assertEquals(0x1e,model.getLength());\n  DataType newType=programDTM.getDataType(\"/double\");\n  assertNotNull(newType);\n  DataType getDataType(1)=getDataType(1);\n  DataType tableType=getDataTypeAtRow(1);\n  assertTrue(getDataType(1).isEquivalent(tableType));\n  addAtPoint(newType,1,0);\n  assertEquals(20,model.getNumComponents());\n  assertEquals(0x1e,model.getLength());\n  DataType newStackType=getDataType(1);\n  assertSame(\"Type should not have been replaced\",getDataType(1),newStackType);\n  assertEquals(\"double doesn't fit within 4 bytes, need 8 bytes\",model.getStatus());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 655,
        "startLineNumber" : 372,
        "startColumnNumber" : 2,
        "endLineNumber" : 394,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  assertEquals(20,model.getNumComponents());\n  assertEquals(0x1e,model.getLength());\n  DataType newType=programDTM.getDataType(\"/double\");\n  assertNotNull(newType);\n  DataType getDataType(1)=getDataType(1);\n  DataType tableType=getDataTypeAtRow(1);\n  assertTrue(getDataType(1).isEquivalent(tableType));\n  addAtPoint(newType,1,0);\n  assertEquals(20,model.getNumComponents());\n  assertEquals(0x1e,model.getLength());\n  DataType newStackType=getDataType(1);\n  assertSame(\"Type should not have been replaced\",getDataType(1),newStackType);\n  assertEquals(\"double doesn't fit within 4 bytes, need 8 bytes\",model.getStatus());\n}\n  finally {\n  cleanup();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 99,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 693,
        "startLineNumber" : 371,
        "startColumnNumber" : 60,
        "endLineNumber" : 395,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  try {\n    assertEquals(20,model.getNumComponents());\n    assertEquals(0x1e,model.getLength());\n    DataType newType=programDTM.getDataType(\"/double\");\n    assertNotNull(newType);\n    DataType getDataType(1)=getDataType(1);\n    DataType tableType=getDataTypeAtRow(1);\n    assertTrue(getDataType(1).isEquivalent(tableType));\n    addAtPoint(newType,1,0);\n    assertEquals(20,model.getNumComponents());\n    assertEquals(0x1e,model.getLength());\n    DataType newStackType=getDataType(1);\n    assertSame(\"Type should not have been replaced\",getDataType(1),newStackType);\n    assertEquals(\"double doesn't fit within 4 bytes, need 8 bytes\",model.getStatus());\n  }\n  finally {\n    cleanup();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 758,
        "startLineNumber" : 370,
        "startColumnNumber" : 1,
        "endLineNumber" : 395,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testDragNDropAddLargerNoFit() throws Exception {\n  try {\n    assertEquals(20,model.getNumComponents());\n    assertEquals(0x1e,model.getLength());\n    DataType newType=programDTM.getDataType(\"/double\");\n    assertNotNull(newType);\n    DataType getDataType(1)=getDataType(1);\n    DataType tableType=getDataTypeAtRow(1);\n    assertTrue(getDataType(1).isEquivalent(tableType));\n    addAtPoint(newType,1,0);\n    assertEquals(20,model.getNumComponents());\n    assertEquals(0x1e,model.getLength());\n    DataType newStackType=getDataType(1);\n    assertSame(\"Type should not have been replaced\",getDataType(1),newStackType);\n    assertEquals(\"double doesn't fit within 4 bytes, need 8 bytes\",model.getStatus());\n  }\n  finally {\n    cleanup();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 9
    } ],
    "tokenLength" : 2,
    "type" : "ghidra.program.model.data.DataType"
  }, {
    "nodeContext" : "getDataType(1)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 389,
      "startColumnNumber" : 52,
      "endLineNumber" : 389,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 389,
        "startColumnNumber" : 3,
        "endLineNumber" : 389,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertSame(\"Type should not have been replaced\",getDataType(1),newStackType)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 389,
        "startColumnNumber" : 3,
        "endLineNumber" : 389,
        "endColumnNumber" : 81
      },
      "nodeContext" : "assertSame(\"Type should not have been replaced\",getDataType(1),newStackType);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 624,
        "startLineNumber" : 372,
        "startColumnNumber" : 6,
        "endLineNumber" : 391,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertEquals(20,model.getNumComponents());\n  assertEquals(0x1e,model.getLength());\n  DataType newType=programDTM.getDataType(\"/double\");\n  assertNotNull(newType);\n  DataType getDataType(1)=getDataType(1);\n  DataType tableType=getDataTypeAtRow(1);\n  assertTrue(getDataType(1).isEquivalent(tableType));\n  addAtPoint(newType,1,0);\n  assertEquals(20,model.getNumComponents());\n  assertEquals(0x1e,model.getLength());\n  DataType newStackType=getDataType(1);\n  assertSame(\"Type should not have been replaced\",getDataType(1),newStackType);\n  assertEquals(\"double doesn't fit within 4 bytes, need 8 bytes\",model.getStatus());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 655,
        "startLineNumber" : 372,
        "startColumnNumber" : 2,
        "endLineNumber" : 394,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  assertEquals(20,model.getNumComponents());\n  assertEquals(0x1e,model.getLength());\n  DataType newType=programDTM.getDataType(\"/double\");\n  assertNotNull(newType);\n  DataType getDataType(1)=getDataType(1);\n  DataType tableType=getDataTypeAtRow(1);\n  assertTrue(getDataType(1).isEquivalent(tableType));\n  addAtPoint(newType,1,0);\n  assertEquals(20,model.getNumComponents());\n  assertEquals(0x1e,model.getLength());\n  DataType newStackType=getDataType(1);\n  assertSame(\"Type should not have been replaced\",getDataType(1),newStackType);\n  assertEquals(\"double doesn't fit within 4 bytes, need 8 bytes\",model.getStatus());\n}\n  finally {\n  cleanup();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 99,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 693,
        "startLineNumber" : 371,
        "startColumnNumber" : 60,
        "endLineNumber" : 395,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  try {\n    assertEquals(20,model.getNumComponents());\n    assertEquals(0x1e,model.getLength());\n    DataType newType=programDTM.getDataType(\"/double\");\n    assertNotNull(newType);\n    DataType getDataType(1)=getDataType(1);\n    DataType tableType=getDataTypeAtRow(1);\n    assertTrue(getDataType(1).isEquivalent(tableType));\n    addAtPoint(newType,1,0);\n    assertEquals(20,model.getNumComponents());\n    assertEquals(0x1e,model.getLength());\n    DataType newStackType=getDataType(1);\n    assertSame(\"Type should not have been replaced\",getDataType(1),newStackType);\n    assertEquals(\"double doesn't fit within 4 bytes, need 8 bytes\",model.getStatus());\n  }\n  finally {\n    cleanup();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 758,
        "startLineNumber" : 370,
        "startColumnNumber" : 1,
        "endLineNumber" : 395,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testDragNDropAddLargerNoFit() throws Exception {\n  try {\n    assertEquals(20,model.getNumComponents());\n    assertEquals(0x1e,model.getLength());\n    DataType newType=programDTM.getDataType(\"/double\");\n    assertNotNull(newType);\n    DataType getDataType(1)=getDataType(1);\n    DataType tableType=getDataTypeAtRow(1);\n    assertTrue(getDataType(1).isEquivalent(tableType));\n    addAtPoint(newType,1,0);\n    assertEquals(20,model.getNumComponents());\n    assertEquals(0x1e,model.getLength());\n    DataType newStackType=getDataType(1);\n    assertSame(\"Type should not have been replaced\",getDataType(1),newStackType);\n    assertEquals(\"double doesn't fit within 4 bytes, need 8 bytes\",model.getStatus());\n  }\n  finally {\n    cleanup();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 8
    } ],
    "tokenLength" : 2,
    "type" : "ghidra.program.model.data.DataType"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 382,
    "startColumnNumber" : 14,
    "endLineNumber" : 382,
    "endColumnNumber" : 28
  }, {
    "charLength" : 14,
    "startLineNumber" : 389,
    "startColumnNumber" : 52,
    "endLineNumber" : 389,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ],
  "name" : "existingStackType",
  "nodePosition" : {
    "charLength" : 17,
    "startLineNumber" : 380,
    "startColumnNumber" : 12,
    "endLineNumber" : 380,
    "endColumnNumber" : 29
  }
}