{
  "id" : 5,
  "expression" : "bkpt.getString(\"type\")",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "5e324104a5f95f78f8cc945d552c1d5f56b862e6",
  "filePath" : "Ghidra/Debug/Debugger-agent-gdb/src/main/java/agent/gdb/manager/breakpoint/GdbBreakpointInfo.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "bkpt.getString(\"type\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 101,
      "startColumnNumber" : 53,
      "endLineNumber" : 101,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 101,
        "startColumnNumber" : 27,
        "endLineNumber" : 101,
        "endColumnNumber" : 76
      },
      "nodeContext" : "GdbBreakpointType.fromStr(bkpt.getString(\"type\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 101,
        "startColumnNumber" : 20,
        "endLineNumber" : 101,
        "endColumnNumber" : 74
      },
      "nodeContext" : "type=GdbBreakpointType.fromStr(bkpt.getString(\"type\"))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 101,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 76
      },
      "nodeContext" : "GdbBreakpointType type=GdbBreakpointType.fromStr(bkpt.getString(\"type\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1247,
        "startLineNumber" : 97,
        "startColumnNumber" : 56,
        "endLineNumber" : 130,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  long number=Long.parseLong(bkpt.getString(\"number\"));\n  String bkpt.getString(\"type\")=bkpt.getString(\"type\");\n  GdbBreakpointType type=GdbBreakpointType.fromStr(bkpt.getString(\"type\"));\n  GdbBreakpointDisp disp=GdbBreakpointDisp.fromStr(bkpt.getString(\"disp\"));\n  boolean enabled=\"y\".equals(bkpt.getString(\"enabled\"));\n  String addr=bkpt.getString(\"addr\");\n  String what=bkpt.getString(\"at\");\n  if (what == null) {\n    what=bkpt.getString(\"what\");\n  }\n  String catchType=bkpt.getString(\"catch-type\");\n  String origLoc=bkpt.getString(\"original-location\");\n  String pending=bkpt.getString(\"pending\");\n  int times=Integer.parseInt(bkpt.getString(\"times\"));\n  List<GdbBreakpointLocation> locations=new ArrayList<>();\n  if (type == GdbBreakpointType.CATCHPOINT) {\n  }\n else   if (\"<MULTIPLE>\".equals(addr)) {\n    allLocs.stream().filter(l -> l.getNumber() == number).forEachOrdered(locations::add);\n  }\n else {\n    List<Integer> iids=parseIids(bkpt);\n    if (iids == null) {\n      iids=curIid == null ? List.of() : List.of(curIid);\n    }\n    locations.add(new GdbBreakpointLocation(number,1,true,addr,iids));\n  }\n  return new GdbBreakpointInfo(number,type,bkpt.getString(\"type\"),disp,addr,what,catchType,origLoc,pending,enabled,times,locations);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 227,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1625,
        "startLineNumber" : 88,
        "startColumnNumber" : 1,
        "endLineNumber" : 130,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Parse the usual  {@code bkpt} fields\n * @param bkpt the breakpoint field list\n * @param allLocs all (sub)locations given in the info or table body\n * @param curIid in case of missing {@code thread-ids} field, the current inferior id\n * @return the info\n */\npublic static GdbBreakpointInfo parseBkpt(GdbMiFieldList bkpt,List<GdbBreakpointLocation> allLocs,Integer curIid){\n  long number=Long.parseLong(bkpt.getString(\"number\"));\n  String bkpt.getString(\"type\")=bkpt.getString(\"type\");\n  GdbBreakpointType type=GdbBreakpointType.fromStr(bkpt.getString(\"type\"));\n  GdbBreakpointDisp disp=GdbBreakpointDisp.fromStr(bkpt.getString(\"disp\"));\n  boolean enabled=\"y\".equals(bkpt.getString(\"enabled\"));\n  String addr=bkpt.getString(\"addr\");\n  String what=bkpt.getString(\"at\");\n  if (what == null) {\n    what=bkpt.getString(\"what\");\n  }\n  String catchType=bkpt.getString(\"catch-type\");\n  String origLoc=bkpt.getString(\"original-location\");\n  String pending=bkpt.getString(\"pending\");\n  int times=Integer.parseInt(bkpt.getString(\"times\"));\n  List<GdbBreakpointLocation> locations=new ArrayList<>();\n  if (type == GdbBreakpointType.CATCHPOINT) {\n  }\n else   if (\"<MULTIPLE>\".equals(addr)) {\n    allLocs.stream().filter(l -> l.getNumber() == number).forEachOrdered(locations::add);\n  }\n else {\n    List<Integer> iids=parseIids(bkpt);\n    if (iids == null) {\n      iids=curIid == null ? List.of() : List.of(curIid);\n    }\n    locations.add(new GdbBreakpointLocation(number,1,true,addr,iids));\n  }\n  return new GdbBreakpointInfo(number,type,bkpt.getString(\"type\"),disp,addr,what,catchType,origLoc,pending,enabled,times,locations);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 249,
      "astHeight" : 12
    } ],
    "tokenLength" : 3,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "bkpt.getString(\"type\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 128,
      "startColumnNumber" : 45,
      "endLineNumber" : 128,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 128,
        "startColumnNumber" : 9,
        "endLineNumber" : 129,
        "endColumnNumber" : 38
      },
      "nodeContext" : "new GdbBreakpointInfo(number,type,bkpt.getString(\"type\"),disp,addr,what,catchType,origLoc,pending,enabled,times,locations)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 18,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 128,
        "startColumnNumber" : 2,
        "endLineNumber" : 129,
        "endColumnNumber" : 39
      },
      "nodeContext" : "return new GdbBreakpointInfo(number,type,bkpt.getString(\"type\"),disp,addr,what,catchType,origLoc,pending,enabled,times,locations);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 19,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1247,
        "startLineNumber" : 97,
        "startColumnNumber" : 56,
        "endLineNumber" : 130,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  long number=Long.parseLong(bkpt.getString(\"number\"));\n  String bkpt.getString(\"type\")=bkpt.getString(\"type\");\n  GdbBreakpointType type=GdbBreakpointType.fromStr(bkpt.getString(\"type\"));\n  GdbBreakpointDisp disp=GdbBreakpointDisp.fromStr(bkpt.getString(\"disp\"));\n  boolean enabled=\"y\".equals(bkpt.getString(\"enabled\"));\n  String addr=bkpt.getString(\"addr\");\n  String what=bkpt.getString(\"at\");\n  if (what == null) {\n    what=bkpt.getString(\"what\");\n  }\n  String catchType=bkpt.getString(\"catch-type\");\n  String origLoc=bkpt.getString(\"original-location\");\n  String pending=bkpt.getString(\"pending\");\n  int times=Integer.parseInt(bkpt.getString(\"times\"));\n  List<GdbBreakpointLocation> locations=new ArrayList<>();\n  if (type == GdbBreakpointType.CATCHPOINT) {\n  }\n else   if (\"<MULTIPLE>\".equals(addr)) {\n    allLocs.stream().filter(l -> l.getNumber() == number).forEachOrdered(locations::add);\n  }\n else {\n    List<Integer> iids=parseIids(bkpt);\n    if (iids == null) {\n      iids=curIid == null ? List.of() : List.of(curIid);\n    }\n    locations.add(new GdbBreakpointLocation(number,1,true,addr,iids));\n  }\n  return new GdbBreakpointInfo(number,type,bkpt.getString(\"type\"),disp,addr,what,catchType,origLoc,pending,enabled,times,locations);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 227,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1625,
        "startLineNumber" : 88,
        "startColumnNumber" : 1,
        "endLineNumber" : 130,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Parse the usual  {@code bkpt} fields\n * @param bkpt the breakpoint field list\n * @param allLocs all (sub)locations given in the info or table body\n * @param curIid in case of missing {@code thread-ids} field, the current inferior id\n * @return the info\n */\npublic static GdbBreakpointInfo parseBkpt(GdbMiFieldList bkpt,List<GdbBreakpointLocation> allLocs,Integer curIid){\n  long number=Long.parseLong(bkpt.getString(\"number\"));\n  String bkpt.getString(\"type\")=bkpt.getString(\"type\");\n  GdbBreakpointType type=GdbBreakpointType.fromStr(bkpt.getString(\"type\"));\n  GdbBreakpointDisp disp=GdbBreakpointDisp.fromStr(bkpt.getString(\"disp\"));\n  boolean enabled=\"y\".equals(bkpt.getString(\"enabled\"));\n  String addr=bkpt.getString(\"addr\");\n  String what=bkpt.getString(\"at\");\n  if (what == null) {\n    what=bkpt.getString(\"what\");\n  }\n  String catchType=bkpt.getString(\"catch-type\");\n  String origLoc=bkpt.getString(\"original-location\");\n  String pending=bkpt.getString(\"pending\");\n  int times=Integer.parseInt(bkpt.getString(\"times\"));\n  List<GdbBreakpointLocation> locations=new ArrayList<>();\n  if (type == GdbBreakpointType.CATCHPOINT) {\n  }\n else   if (\"<MULTIPLE>\".equals(addr)) {\n    allLocs.stream().filter(l -> l.getNumber() == number).forEachOrdered(locations::add);\n  }\n else {\n    List<Integer> iids=parseIids(bkpt);\n    if (iids == null) {\n      iids=curIid == null ? List.of() : List.of(curIid);\n    }\n    locations.add(new GdbBreakpointLocation(number,1,true,addr,iids));\n  }\n  return new GdbBreakpointInfo(number,type,bkpt.getString(\"type\"),disp,addr,what,catchType,origLoc,pending,enabled,times,locations);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 249,
      "astHeight" : 12
    } ],
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 101,
    "startColumnNumber" : 53,
    "endLineNumber" : 101,
    "endColumnNumber" : 75
  }, {
    "charLength" : 22,
    "startLineNumber" : 128,
    "startColumnNumber" : 45,
    "endLineNumber" : 128,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ],
  "name" : "typeName",
  "nodePosition" : {
    "charLength" : 8,
    "startLineNumber" : 100,
    "startColumnNumber" : 9,
    "endLineNumber" : 100,
    "endColumnNumber" : 17
  }
}