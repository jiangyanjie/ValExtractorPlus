{
  "id" : 2,
  "expression" : "\"No available admin service\"",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/ServiceExceptionTest.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "\"No available admin service\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 44,
      "startColumnNumber" : 33,
      "endLineNumber" : 44,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 44,
        "endColumnNumber" : 61
      },
      "nodeContext" : "errorAttributes.put(\"message\",\"No available admin service\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 44,
        "endColumnNumber" : 63
      },
      "nodeContext" : "errorAttributes.put(\"message\",\"No available admin service\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1204,
        "startLineNumber" : 37,
        "startColumnNumber" : 41,
        "endLineNumber" : 66,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String \"No available admin service\"=\"No available admin service\";\n  String errorCode=\"errorCode\";\n  String status=\"500\";\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"status\",status);\n  errorAttributes.put(\"message\",\"No available admin service\");\n  errorAttributes.put(\"timestamp\",LocalDateTime.now().format(DateTimeFormatter.ISO_LOCAL_DATE_TIME));\n  errorAttributes.put(\"exception\",ServiceException.class.getName());\n  errorAttributes.put(\"errorCode\",errorCode);\n  HttpStatusCodeException adminException=new HttpServerErrorException(HttpStatus.INTERNAL_SERVER_ERROR,\"admin server error\",new Gson().toJson(errorAttributes).getBytes(),Charset.defaultCharset());\n  when(userService.findByUserId(any(String.class))).thenThrow(adminException);\n  App app=generateSampleApp();\n  try {\n    appController.create(app);\n  }\n catch (  HttpStatusCodeException e) {\n    @SuppressWarnings(\"unchecked\") Map<String,String> attr=new Gson().fromJson(e.getResponseBodyAsString(),Map.class);\n    Assert.assertEquals(\"No available admin service\",attr.get(\"message\"));\n    Assert.assertEquals(errorCode,attr.get(\"errorCode\"));\n    Assert.assertEquals(status,attr.get(\"status\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 182,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1249,
        "startLineNumber" : 36,
        "startColumnNumber" : 1,
        "endLineNumber" : 66,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testAdminServiceException(){\n  String \"No available admin service\"=\"No available admin service\";\n  String errorCode=\"errorCode\";\n  String status=\"500\";\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"status\",status);\n  errorAttributes.put(\"message\",\"No available admin service\");\n  errorAttributes.put(\"timestamp\",LocalDateTime.now().format(DateTimeFormatter.ISO_LOCAL_DATE_TIME));\n  errorAttributes.put(\"exception\",ServiceException.class.getName());\n  errorAttributes.put(\"errorCode\",errorCode);\n  HttpStatusCodeException adminException=new HttpServerErrorException(HttpStatus.INTERNAL_SERVER_ERROR,\"admin server error\",new Gson().toJson(errorAttributes).getBytes(),Charset.defaultCharset());\n  when(userService.findByUserId(any(String.class))).thenThrow(adminException);\n  App app=generateSampleApp();\n  try {\n    appController.create(app);\n  }\n catch (  HttpStatusCodeException e) {\n    @SuppressWarnings(\"unchecked\") Map<String,String> attr=new Gson().fromJson(e.getResponseBodyAsString(),Map.class);\n    Assert.assertEquals(\"No available admin service\",attr.get(\"message\"));\n    Assert.assertEquals(errorCode,attr.get(\"errorCode\"));\n    Assert.assertEquals(status,attr.get(\"status\"));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 188,
      "astHeight" : 11
    } ],
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"No available admin service\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 62,
      "startColumnNumber" : 23,
      "endLineNumber" : 62,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 62,
        "startColumnNumber" : 3,
        "endLineNumber" : 62,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Assert.assertEquals(\"No available admin service\",attr.get(\"message\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 62,
        "startColumnNumber" : 3,
        "endLineNumber" : 62,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Assert.assertEquals(\"No available admin service\",attr.get(\"message\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 300,
        "startLineNumber" : 59,
        "startColumnNumber" : 38,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  @SuppressWarnings(\"unchecked\") Map<String,String> attr=new Gson().fromJson(e.getResponseBodyAsString(),Map.class);\n  Assert.assertEquals(\"No available admin service\",attr.get(\"message\"));\n  Assert.assertEquals(errorCode,attr.get(\"errorCode\"));\n  Assert.assertEquals(status,attr.get(\"status\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 334,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "catch (HttpStatusCodeException e) {\n  @SuppressWarnings(\"unchecked\") Map<String,String> attr=new Gson().fromJson(e.getResponseBodyAsString(),Map.class);\n  Assert.assertEquals(\"No available admin service\",attr.get(\"message\"));\n  Assert.assertEquals(errorCode,attr.get(\"errorCode\"));\n  Assert.assertEquals(status,attr.get(\"status\"));\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 57,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 372,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  appController.create(app);\n}\n catch (HttpStatusCodeException e) {\n  @SuppressWarnings(\"unchecked\") Map<String,String> attr=new Gson().fromJson(e.getResponseBodyAsString(),Map.class);\n  Assert.assertEquals(\"No available admin service\",attr.get(\"message\"));\n  Assert.assertEquals(errorCode,attr.get(\"errorCode\"));\n  Assert.assertEquals(status,attr.get(\"status\"));\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1204,
        "startLineNumber" : 37,
        "startColumnNumber" : 41,
        "endLineNumber" : 66,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String \"No available admin service\"=\"No available admin service\";\n  String errorCode=\"errorCode\";\n  String status=\"500\";\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"status\",status);\n  errorAttributes.put(\"message\",\"No available admin service\");\n  errorAttributes.put(\"timestamp\",LocalDateTime.now().format(DateTimeFormatter.ISO_LOCAL_DATE_TIME));\n  errorAttributes.put(\"exception\",ServiceException.class.getName());\n  errorAttributes.put(\"errorCode\",errorCode);\n  HttpStatusCodeException adminException=new HttpServerErrorException(HttpStatus.INTERNAL_SERVER_ERROR,\"admin server error\",new Gson().toJson(errorAttributes).getBytes(),Charset.defaultCharset());\n  when(userService.findByUserId(any(String.class))).thenThrow(adminException);\n  App app=generateSampleApp();\n  try {\n    appController.create(app);\n  }\n catch (  HttpStatusCodeException e) {\n    @SuppressWarnings(\"unchecked\") Map<String,String> attr=new Gson().fromJson(e.getResponseBodyAsString(),Map.class);\n    Assert.assertEquals(\"No available admin service\",attr.get(\"message\"));\n    Assert.assertEquals(errorCode,attr.get(\"errorCode\"));\n    Assert.assertEquals(status,attr.get(\"status\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 182,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1249,
        "startLineNumber" : 36,
        "startColumnNumber" : 1,
        "endLineNumber" : 66,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testAdminServiceException(){\n  String \"No available admin service\"=\"No available admin service\";\n  String errorCode=\"errorCode\";\n  String status=\"500\";\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"status\",status);\n  errorAttributes.put(\"message\",\"No available admin service\");\n  errorAttributes.put(\"timestamp\",LocalDateTime.now().format(DateTimeFormatter.ISO_LOCAL_DATE_TIME));\n  errorAttributes.put(\"exception\",ServiceException.class.getName());\n  errorAttributes.put(\"errorCode\",errorCode);\n  HttpStatusCodeException adminException=new HttpServerErrorException(HttpStatus.INTERNAL_SERVER_ERROR,\"admin server error\",new Gson().toJson(errorAttributes).getBytes(),Charset.defaultCharset());\n  when(userService.findByUserId(any(String.class))).thenThrow(adminException);\n  App app=generateSampleApp();\n  try {\n    appController.create(app);\n  }\n catch (  HttpStatusCodeException e) {\n    @SuppressWarnings(\"unchecked\") Map<String,String> attr=new Gson().fromJson(e.getResponseBodyAsString(),Map.class);\n    Assert.assertEquals(\"No available admin service\",attr.get(\"message\"));\n    Assert.assertEquals(errorCode,attr.get(\"errorCode\"));\n    Assert.assertEquals(status,attr.get(\"status\"));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 188,
      "astHeight" : 11
    } ],
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 44,
    "startColumnNumber" : 33,
    "endLineNumber" : 44,
    "endColumnNumber" : 61
  }, {
    "charLength" : 28,
    "startLineNumber" : 62,
    "startColumnNumber" : 23,
    "endLineNumber" : 62,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ],
  "name" : "errorMsg",
  "nodePosition" : {
    "charLength" : 8,
    "startLineNumber" : 38,
    "startColumnNumber" : 9,
    "endLineNumber" : 38,
    "endColumnNumber" : 17
  }
}