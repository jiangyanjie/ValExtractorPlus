{
  "id" : 39,
  "expression" : "WitnessFinder.INSTANCE",
  "projectName" : "apache@skywalking",
  "commitID" : "e0a4c44036b33eadc0add7f91a2e5fd6caca7098",
  "filePath" : "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/AbstractClassEnhancePluginDefine.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "WitnessFinder.INSTANCE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 70,
      "startColumnNumber" : 21,
      "endLineNumber" : 70,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 70,
        "startColumnNumber" : 21,
        "endLineNumber" : 70,
        "endColumnNumber" : 75
      },
      "nodeContext" : "WitnessFinder.INSTANCE.exist(witnessClass,classLoader)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 70,
        "startColumnNumber" : 20,
        "endLineNumber" : 70,
        "endColumnNumber" : 75
      },
      "nodeContext" : "!WitnessFinder.INSTANCE.exist(witnessClass,classLoader)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 70,
        "startColumnNumber" : 16,
        "endLineNumber" : 73,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!WitnessFinder.INSTANCE.exist(witnessClass,classLoader)) {\n  LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness class {} is not existed.\",transformClassName,interceptorDefineClassName,witnessClass);\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 69,
        "startColumnNumber" : 55,
        "endLineNumber" : 74,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!WitnessFinder.INSTANCE.exist(witnessClass,classLoader)) {\n    LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness class {} is not existed.\",transformClassName,interceptorDefineClassName,witnessClass);\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 299,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (String witnessClass : witnessClasses) {\n  if (!WitnessFinder.INSTANCE.exist(witnessClass,classLoader)) {\n    LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness class {} is not existed.\",transformClassName,interceptorDefineClassName,witnessClass);\n    return null;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 68,
        "startColumnNumber" : 36,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  String witnessClass : witnessClasses) {\n    if (!WitnessFinder.INSTANCE.exist(witnessClass,classLoader)) {\n      LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness class {} is not existed.\",transformClassName,interceptorDefineClassName,witnessClass);\n      return null;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (witnessClasses != null) {\n  for (  String witnessClass : witnessClasses) {\n    if (!WitnessFinder.INSTANCE.exist(witnessClass,classLoader)) {\n      LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness class {} is not existed.\",transformClassName,interceptorDefineClassName,witnessClass);\n      return null;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1579,
        "startLineNumber" : 54,
        "startColumnNumber" : 80,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String interceptorDefineClassName=this.getClass().getName();\n  String transformClassName=typeDescription.getTypeName();\n  if (StringUtil.isEmpty(transformClassName)) {\n    LOGGER.warn(\"classname of being intercepted is not defined by {}.\",interceptorDefineClassName);\n    return null;\n  }\n  LOGGER.debug(\"prepare to enhance class {} by {}.\",transformClassName,interceptorDefineClassName);\n  WitnessFinder WitnessFinder.INSTANCE=WitnessFinder.INSTANCE;\n  String[] witnessClasses=witnessClasses();\n  if (witnessClasses != null) {\n    for (    String witnessClass : witnessClasses) {\n      if (!WitnessFinder.INSTANCE.exist(witnessClass,classLoader)) {\n        LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness class {} is not existed.\",transformClassName,interceptorDefineClassName,witnessClass);\n        return null;\n      }\n    }\n  }\n  List<WitnessMethod> witnessMethods=witnessMethods();\n  if (!CollectionUtil.isEmpty(witnessMethods)) {\n    for (    WitnessMethod witnessMethod : witnessMethods) {\n      if (!WitnessFinder.INSTANCE.exist(witnessMethod,classLoader)) {\n        LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness method {} is not existed.\",transformClassName,interceptorDefineClassName,witnessMethod);\n        return null;\n      }\n    }\n  }\n  DynamicType.Builder<?> newClassBuilder=this.enhance(typeDescription,builder,classLoader,context);\n  context.initializationStageCompleted();\n  LOGGER.debug(\"enhance class {} by {} completely.\",transformClassName,interceptorDefineClassName);\n  return newClassBuilder;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2116,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Main entrance of enhancing the class.\n * @param typeDescription target class description.\n * @param builder         byte-buddy's builder to manipulate target class's bytecode.\n * @param classLoader     load the given transformClass\n * @return the new builder, or <code>null</code> if not be enhanced.\n * @throws PluginException when set builder failure.\n */\npublic DynamicType.Builder<?> define(TypeDescription typeDescription,DynamicType.Builder<?> builder,ClassLoader classLoader,EnhanceContext context) throws PluginException {\n  String interceptorDefineClassName=this.getClass().getName();\n  String transformClassName=typeDescription.getTypeName();\n  if (StringUtil.isEmpty(transformClassName)) {\n    LOGGER.warn(\"classname of being intercepted is not defined by {}.\",interceptorDefineClassName);\n    return null;\n  }\n  LOGGER.debug(\"prepare to enhance class {} by {}.\",transformClassName,interceptorDefineClassName);\n  WitnessFinder WitnessFinder.INSTANCE=WitnessFinder.INSTANCE;\n  String[] witnessClasses=witnessClasses();\n  if (witnessClasses != null) {\n    for (    String witnessClass : witnessClasses) {\n      if (!WitnessFinder.INSTANCE.exist(witnessClass,classLoader)) {\n        LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness class {} is not existed.\",transformClassName,interceptorDefineClassName,witnessClass);\n        return null;\n      }\n    }\n  }\n  List<WitnessMethod> witnessMethods=witnessMethods();\n  if (!CollectionUtil.isEmpty(witnessMethods)) {\n    for (    WitnessMethod witnessMethod : witnessMethods) {\n      if (!WitnessFinder.INSTANCE.exist(witnessMethod,classLoader)) {\n        LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness method {} is not existed.\",transformClassName,interceptorDefineClassName,witnessMethod);\n        return null;\n      }\n    }\n  }\n  DynamicType.Builder<?> newClassBuilder=this.enhance(typeDescription,builder,classLoader,context);\n  context.initializationStageCompleted();\n  LOGGER.debug(\"enhance class {} by {} completely.\",transformClassName,interceptorDefineClassName);\n  return newClassBuilder;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 192,
      "astHeight" : 11
    } ],
    "tokenLength" : 2,
    "type" : "org.apache.skywalking.apm.agent.core.plugin.WitnessFinder"
  }, {
    "nodeContext" : "WitnessFinder.INSTANCE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 79,
      "startColumnNumber" : 21,
      "endLineNumber" : 79,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 79,
        "startColumnNumber" : 21,
        "endLineNumber" : 79,
        "endColumnNumber" : 76
      },
      "nodeContext" : "WitnessFinder.INSTANCE.exist(witnessMethod,classLoader)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 79,
        "startColumnNumber" : 20,
        "endLineNumber" : 79,
        "endColumnNumber" : 76
      },
      "nodeContext" : "!WitnessFinder.INSTANCE.exist(witnessMethod,classLoader)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 79,
        "startColumnNumber" : 16,
        "endLineNumber" : 82,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!WitnessFinder.INSTANCE.exist(witnessMethod,classLoader)) {\n  LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness method {} is not existed.\",transformClassName,interceptorDefineClassName,witnessMethod);\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 78,
        "startColumnNumber" : 63,
        "endLineNumber" : 83,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!WitnessFinder.INSTANCE.exist(witnessMethod,classLoader)) {\n    LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness method {} is not existed.\",transformClassName,interceptorDefineClassName,witnessMethod);\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 310,
        "startLineNumber" : 78,
        "startColumnNumber" : 12,
        "endLineNumber" : 83,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (WitnessMethod witnessMethod : witnessMethods) {\n  if (!WitnessFinder.INSTANCE.exist(witnessMethod,classLoader)) {\n    LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness method {} is not existed.\",transformClassName,interceptorDefineClassName,witnessMethod);\n    return null;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 328,
        "startLineNumber" : 77,
        "startColumnNumber" : 53,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  WitnessMethod witnessMethod : witnessMethods) {\n    if (!WitnessFinder.INSTANCE.exist(witnessMethod,classLoader)) {\n      LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness method {} is not existed.\",transformClassName,interceptorDefineClassName,witnessMethod);\n      return null;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 373,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!CollectionUtil.isEmpty(witnessMethods)) {\n  for (  WitnessMethod witnessMethod : witnessMethods) {\n    if (!WitnessFinder.INSTANCE.exist(witnessMethod,classLoader)) {\n      LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness method {} is not existed.\",transformClassName,interceptorDefineClassName,witnessMethod);\n      return null;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1579,
        "startLineNumber" : 54,
        "startColumnNumber" : 80,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String interceptorDefineClassName=this.getClass().getName();\n  String transformClassName=typeDescription.getTypeName();\n  if (StringUtil.isEmpty(transformClassName)) {\n    LOGGER.warn(\"classname of being intercepted is not defined by {}.\",interceptorDefineClassName);\n    return null;\n  }\n  LOGGER.debug(\"prepare to enhance class {} by {}.\",transformClassName,interceptorDefineClassName);\n  WitnessFinder WitnessFinder.INSTANCE=WitnessFinder.INSTANCE;\n  String[] witnessClasses=witnessClasses();\n  if (witnessClasses != null) {\n    for (    String witnessClass : witnessClasses) {\n      if (!WitnessFinder.INSTANCE.exist(witnessClass,classLoader)) {\n        LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness class {} is not existed.\",transformClassName,interceptorDefineClassName,witnessClass);\n        return null;\n      }\n    }\n  }\n  List<WitnessMethod> witnessMethods=witnessMethods();\n  if (!CollectionUtil.isEmpty(witnessMethods)) {\n    for (    WitnessMethod witnessMethod : witnessMethods) {\n      if (!WitnessFinder.INSTANCE.exist(witnessMethod,classLoader)) {\n        LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness method {} is not existed.\",transformClassName,interceptorDefineClassName,witnessMethod);\n        return null;\n      }\n    }\n  }\n  DynamicType.Builder<?> newClassBuilder=this.enhance(typeDescription,builder,classLoader,context);\n  context.initializationStageCompleted();\n  LOGGER.debug(\"enhance class {} by {} completely.\",transformClassName,interceptorDefineClassName);\n  return newClassBuilder;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2116,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Main entrance of enhancing the class.\n * @param typeDescription target class description.\n * @param builder         byte-buddy's builder to manipulate target class's bytecode.\n * @param classLoader     load the given transformClass\n * @return the new builder, or <code>null</code> if not be enhanced.\n * @throws PluginException when set builder failure.\n */\npublic DynamicType.Builder<?> define(TypeDescription typeDescription,DynamicType.Builder<?> builder,ClassLoader classLoader,EnhanceContext context) throws PluginException {\n  String interceptorDefineClassName=this.getClass().getName();\n  String transformClassName=typeDescription.getTypeName();\n  if (StringUtil.isEmpty(transformClassName)) {\n    LOGGER.warn(\"classname of being intercepted is not defined by {}.\",interceptorDefineClassName);\n    return null;\n  }\n  LOGGER.debug(\"prepare to enhance class {} by {}.\",transformClassName,interceptorDefineClassName);\n  WitnessFinder WitnessFinder.INSTANCE=WitnessFinder.INSTANCE;\n  String[] witnessClasses=witnessClasses();\n  if (witnessClasses != null) {\n    for (    String witnessClass : witnessClasses) {\n      if (!WitnessFinder.INSTANCE.exist(witnessClass,classLoader)) {\n        LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness class {} is not existed.\",transformClassName,interceptorDefineClassName,witnessClass);\n        return null;\n      }\n    }\n  }\n  List<WitnessMethod> witnessMethods=witnessMethods();\n  if (!CollectionUtil.isEmpty(witnessMethods)) {\n    for (    WitnessMethod witnessMethod : witnessMethods) {\n      if (!WitnessFinder.INSTANCE.exist(witnessMethod,classLoader)) {\n        LOGGER.warn(\"enhance class {} by plugin {} is not working. Because witness method {} is not existed.\",transformClassName,interceptorDefineClassName,witnessMethod);\n        return null;\n      }\n    }\n  }\n  DynamicType.Builder<?> newClassBuilder=this.enhance(typeDescription,builder,classLoader,context);\n  context.initializationStageCompleted();\n  LOGGER.debug(\"enhance class {} by {} completely.\",transformClassName,interceptorDefineClassName);\n  return newClassBuilder;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 192,
      "astHeight" : 11
    } ],
    "tokenLength" : 2,
    "type" : "org.apache.skywalking.apm.agent.core.plugin.WitnessFinder"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 70,
    "startColumnNumber" : 21,
    "endLineNumber" : 70,
    "endColumnNumber" : 43
  }, {
    "charLength" : 22,
    "startLineNumber" : 79,
    "startColumnNumber" : 21,
    "endLineNumber" : 79,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ],
  "name" : "finder",
  "nodePosition" : {
    "charLength" : 6,
    "startLineNumber" : 63,
    "startColumnNumber" : 22,
    "endLineNumber" : 63,
    "endColumnNumber" : 28
  }
}