{
  "id" : 44,
  "expression" : "type == null ? \"null\" : type.getClass().getName()",
  "projectName" : "google@gson",
  "commitID" : "883ce465d5514ee9fd28a73c0891869d0b744d4a",
  "filePath" : "gson/src/main/java/com/google/gson/Types.java",
  "occurrences" : 1,
  "expressionList" : [ {
    "nodeContext" : "type == null ? \"null\" : type.getClass().getName()",
    "nodeType" : "ConditionalExpression",
    "nodePosition" : {
      "charLength" : 49,
      "startLineNumber" : 143,
      "startColumnNumber" : 65,
      "endLineNumber" : 143,
      "endColumnNumber" : 114
    },
    "astNodeNumber" : 10,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 142,
        "startColumnNumber" : 41,
        "endLineNumber" : 143,
        "endColumnNumber" : 74
      },
      "nodeContext" : "\"Expected a Class, ParameterizedType, or \" + \"GenericArrayType, but <\" + type + \"> is of type \"+ type == null ? \"null\" : type.getClass().getName()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 142,
        "startColumnNumber" : 12,
        "endLineNumber" : 143,
        "endColumnNumber" : 75
      },
      "nodeContext" : "new IllegalArgumentException(\"Expected a Class, ParameterizedType, or \" + \"GenericArrayType, but <\" + type + \"> is of type \"+ type == null ? \"null\" : type.getClass().getName())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 142,
        "startColumnNumber" : 6,
        "endLineNumber" : 143,
        "endColumnNumber" : 76
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Expected a Class, ParameterizedType, or \" + \"GenericArrayType, but <\" + type + \"> is of type \"+ type == null ? \"null\" : type.getClass().getName());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 300,
        "startLineNumber" : 140,
        "startColumnNumber" : 11,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String type == null ? \"null\" : type.getClass().getName()=type == null ? \"null\" : type.getClass().getName();\n  throw new IllegalArgumentException(\"Expected a Class, ParameterizedType, or \" + \"GenericArrayType, but <\" + type + \"> is of type \"+ type == null ? \"null\" : type.getClass().getName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 407,
        "startLineNumber" : 137,
        "startColumnNumber" : 11,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (type instanceof WildcardType) {\n  return getRawType(((WildcardType)type).getUpperBounds()[0]);\n}\n else {\n  String type == null ? \"null\" : type.getClass().getName()=type == null ? \"null\" : type.getClass().getName();\n  throw new IllegalArgumentException(\"Expected a Class, ParameterizedType, or \" + \"GenericArrayType, but <\" + type + \"> is of type \"+ type == null ? \"null\" : type.getClass().getName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 474,
        "startLineNumber" : 132,
        "startColumnNumber" : 11,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (type instanceof TypeVariable) {\n  return Object.class;\n}\n else if (type instanceof WildcardType) {\n  return getRawType(((WildcardType)type).getUpperBounds()[0]);\n}\n else {\n  String type == null ? \"null\" : type.getClass().getName()=type == null ? \"null\" : type.getClass().getName();\n  throw new IllegalArgumentException(\"Expected a Class, ParameterizedType, or \" + \"GenericArrayType, but <\" + type + \"> is of type \"+ type == null ? \"null\" : type.getClass().getName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 64,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 663,
        "startLineNumber" : 128,
        "startColumnNumber" : 11,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (type instanceof GenericArrayType) {\n  Type componentType=((GenericArrayType)type).getGenericComponentType();\n  return Array.newInstance(getRawType(componentType),0).getClass();\n}\n else if (type instanceof TypeVariable) {\n  return Object.class;\n}\n else if (type instanceof WildcardType) {\n  return getRawType(((WildcardType)type).getUpperBounds()[0]);\n}\n else {\n  String type == null ? \"null\" : type.getClass().getName()=type == null ? \"null\" : type.getClass().getName();\n  throw new IllegalArgumentException(\"Expected a Class, ParameterizedType, or \" + \"GenericArrayType, but <\" + type + \"> is of type \"+ type == null ? \"null\" : type.getClass().getName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 92,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 893,
        "startLineNumber" : 118,
        "startColumnNumber" : 11,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (type instanceof ParameterizedType) {\n  ParameterizedType parameterizedType=(ParameterizedType)type;\n  Type rawType=parameterizedType.getRawType();\n  checkArgument(rawType instanceof Class);\n  return (Class<?>)rawType;\n}\n else if (type instanceof GenericArrayType) {\n  Type componentType=((GenericArrayType)type).getGenericComponentType();\n  return Array.newInstance(getRawType(componentType),0).getClass();\n}\n else if (type instanceof TypeVariable) {\n  return Object.class;\n}\n else if (type instanceof WildcardType) {\n  return getRawType(((WildcardType)type).getUpperBounds()[0]);\n}\n else {\n  String type == null ? \"null\" : type.getClass().getName()=type == null ? \"null\" : type.getClass().getName();\n  throw new IllegalArgumentException(\"Expected a Class, ParameterizedType, or \" + \"GenericArrayType, but <\" + type + \"> is of type \"+ type == null ? \"null\" : type.getClass().getName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 129,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (type instanceof Class<?>) {\n  return (Class<?>)type;\n}\n else if (type instanceof ParameterizedType) {\n  ParameterizedType parameterizedType=(ParameterizedType)type;\n  Type rawType=parameterizedType.getRawType();\n  checkArgument(rawType instanceof Class);\n  return (Class<?>)rawType;\n}\n else if (type instanceof GenericArrayType) {\n  Type componentType=((GenericArrayType)type).getGenericComponentType();\n  return Array.newInstance(getRawType(componentType),0).getClass();\n}\n else if (type instanceof TypeVariable) {\n  return Object.class;\n}\n else if (type instanceof WildcardType) {\n  return getRawType(((WildcardType)type).getUpperBounds()[0]);\n}\n else {\n  String type == null ? \"null\" : type.getClass().getName()=type == null ? \"null\" : type.getClass().getName();\n  throw new IllegalArgumentException(\"Expected a Class, ParameterizedType, or \" + \"GenericArrayType, but <\" + type + \"> is of type \"+ type == null ? \"null\" : type.getClass().getName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 144,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1006,
        "startLineNumber" : 113,
        "startColumnNumber" : 47,
        "endLineNumber" : 145,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (type instanceof Class<?>) {\n    return (Class<?>)type;\n  }\n else   if (type instanceof ParameterizedType) {\n    ParameterizedType parameterizedType=(ParameterizedType)type;\n    Type rawType=parameterizedType.getRawType();\n    checkArgument(rawType instanceof Class);\n    return (Class<?>)rawType;\n  }\n else   if (type instanceof GenericArrayType) {\n    Type componentType=((GenericArrayType)type).getGenericComponentType();\n    return Array.newInstance(getRawType(componentType),0).getClass();\n  }\n else   if (type instanceof TypeVariable) {\n    return Object.class;\n  }\n else   if (type instanceof WildcardType) {\n    return getRawType(((WildcardType)type).getUpperBounds()[0]);\n  }\n else {\n    String type == null ? \"null\" : type.getClass().getName()=type == null ? \"null\" : type.getClass().getName();\n    throw new IllegalArgumentException(\"Expected a Class, ParameterizedType, or \" + \"GenericArrayType, but <\" + type + \"> is of type \"+ type == null ? \"null\" : type.getClass().getName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1050,
        "startLineNumber" : 113,
        "startColumnNumber" : 2,
        "endLineNumber" : 145,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static Class<?> getRawType(Type type){\n  if (type instanceof Class<?>) {\n    return (Class<?>)type;\n  }\n else   if (type instanceof ParameterizedType) {\n    ParameterizedType parameterizedType=(ParameterizedType)type;\n    Type rawType=parameterizedType.getRawType();\n    checkArgument(rawType instanceof Class);\n    return (Class<?>)rawType;\n  }\n else   if (type instanceof GenericArrayType) {\n    Type componentType=((GenericArrayType)type).getGenericComponentType();\n    return Array.newInstance(getRawType(componentType),0).getClass();\n  }\n else   if (type instanceof TypeVariable) {\n    return Object.class;\n  }\n else   if (type instanceof WildcardType) {\n    return getRawType(((WildcardType)type).getUpperBounds()[0]);\n  }\n else {\n    String type == null ? \"null\" : type.getClass().getName()=type == null ? \"null\" : type.getClass().getName();\n    throw new IllegalArgumentException(\"Expected a Class, ParameterizedType, or \" + \"GenericArrayType, but <\" + type + \"> is of type \"+ type == null ? \"null\" : type.getClass().getName());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 16
    } ],
    "tokenLength" : 7,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 49,
    "startLineNumber" : 143,
    "startColumnNumber" : 65,
    "endLineNumber" : 143,
    "endColumnNumber" : 114
  } ],
  "layoutRelationDataList" : [ ],
  "name" : "className",
  "nodePosition" : {
    "charLength" : 9,
    "startLineNumber" : 141,
    "startColumnNumber" : 13,
    "endLineNumber" : 141,
    "endColumnNumber" : 22
  }
}