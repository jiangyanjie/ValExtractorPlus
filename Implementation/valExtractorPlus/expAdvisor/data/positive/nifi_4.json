{
    "id": 4,
    "expression": "NiFiUserUtils.getNiFiUser()",
    "projectName": "nifi",
    "commitID": "f851a9e96fa72cb7fe8a5a2bcb177e3e59ec1f61",
    "filePath": "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/ProcessGroupResource.java",
    "occurrences": 2,
    "isArithmeticExpression": 0,
    "isGetTypeMethod": 0,
    "expressionList": [
        {
            "nodeContext": "NiFiUserUtils.getNiFiUser()",
            "nodeType": "MethodInvocation",
            "nodePosition": {
                "charLength": 27,
                "startLineNumber": 1706,
                "startColumnNumber": 84,
                "endLineNumber": 1706,
                "endColumnNumber": 111
            },
            "astNodeNumber": 3,
            "astHeight": 2,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 100,
                        "startLineNumber": 1706,
                        "startColumnNumber": 12,
                        "endLineNumber": 1706,
                        "endColumnNumber": 112
                    },
                    "nodeContext": "serviceFacade.resolveInheritedControllerServices(flowSnapshot,groupId,NiFiUserUtils.getNiFiUser())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 8,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 101,
                        "startLineNumber": 1706,
                        "startColumnNumber": 12,
                        "endLineNumber": 1706,
                        "endColumnNumber": 113
                    },
                    "nodeContext": "serviceFacade.resolveInheritedControllerServices(flowSnapshot,groupId,NiFiUserUtils.getNiFiUser());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 9,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
                    "nodePosition": {
                        "charLength": 908,
                        "startLineNumber": 1697,
                        "startColumnNumber": 104,
                        "endLineNumber": 1710,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "{\n  final VersionedFlowSnapshot flowSnapshot=getFlowFromRegistry(versionControlInfo);\n  serviceFacade.discoverCompatibleBundles(flowSnapshot.getFlowContents());\n  serviceFacade.resolveInheritedControllerServices(flowSnapshot,groupId,NiFiUserUtils.getNiFiUser());\n  requestProcessGroupEntity.setVersionedFlowSnapshot(flowSnapshot);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 31,
                    "astHeight": 5
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 1004,
                        "startLineNumber": 1697,
                        "startColumnNumber": 8,
                        "endLineNumber": 1710,
                        "endColumnNumber": 9
                    },
                    "nodeContext": "if (versionControlInfo != null && requestProcessGroupEntity.getVersionedFlowSnapshot() == null) {\n  final VersionedFlowSnapshot flowSnapshot=getFlowFromRegistry(versionControlInfo);\n  serviceFacade.discoverCompatibleBundles(flowSnapshot.getFlowContents());\n  serviceFacade.resolveInheritedControllerServices(flowSnapshot,groupId,NiFiUserUtils.getNiFiUser());\n  requestProcessGroupEntity.setVersionedFlowSnapshot(flowSnapshot);\n}\n",
                    "nodeType": "IfStatement",
                    "astNodeNumber": 41,
                    "astHeight": 6
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
                    "nodePosition": {
                        "charLength": 8392,
                        "startLineNumber": 1656,
                        "startColumnNumber": 62,
                        "endLineNumber": 1785,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "{\n  if (requestProcessGroupEntity == null || requestProcessGroupEntity.getComponent() == null) {\n    throw new IllegalArgumentException(\"Process group details must be specified.\");\n  }\n  if (requestProcessGroupEntity.getRevision() == null || (requestProcessGroupEntity.getRevision().getVersion() == null || requestProcessGroupEntity.getRevision().getVersion() != 0)) {\n    throw new IllegalArgumentException(\"A revision of 0 must be specified when creating a new Process group.\");\n  }\n  if (requestProcessGroupEntity.getComponent().getId() != null) {\n    throw new IllegalArgumentException(\"Process group ID cannot be specified.\");\n  }\n  final PositionDTO proposedPosition=requestProcessGroupEntity.getComponent().getPosition();\n  if (proposedPosition != null) {\n    if (proposedPosition.getX() == null || proposedPosition.getY() == null) {\n      throw new IllegalArgumentException(\"The x and y coordinate of the proposed position must be specified.\");\n    }\n  }\n  if (StringUtils.isBlank(requestProcessGroupEntity.getComponent().getName()) && requestProcessGroupEntity.getComponent().getVersionControlInformation() == null) {\n    throw new IllegalArgumentException(\"The group name is required when the group is not imported from version control.\");\n  }\n  if (requestProcessGroupEntity.getComponent().getParentGroupId() != null && !groupId.equals(requestProcessGroupEntity.getComponent().getParentGroupId())) {\n    throw new IllegalArgumentException(String.format(\"If specified, the parent process group id %s must be the same as specified in the URI %s\",requestProcessGroupEntity.getComponent().getParentGroupId(),groupId));\n  }\n  requestProcessGroupEntity.getComponent().setParentGroupId(groupId);\n  final VersionControlInformationDTO versionControlInfo=requestProcessGroupEntity.getComponent().getVersionControlInformation();\n  if (versionControlInfo != null && requestProcessGroupEntity.getVersionedFlowSnapshot() == null) {\n    final VersionedFlowSnapshot flowSnapshot=getFlowFromRegistry(versionControlInfo);\n    serviceFacade.discoverCompatibleBundles(flowSnapshot.getFlowContents());\n    serviceFacade.resolveInheritedControllerServices(flowSnapshot,groupId,NiFiUserUtils.getNiFiUser());\n    requestProcessGroupEntity.setVersionedFlowSnapshot(flowSnapshot);\n  }\n  if (versionControlInfo != null) {\n    final VersionedFlowSnapshot flowSnapshot=requestProcessGroupEntity.getVersionedFlowSnapshot();\n    serviceFacade.verifyImportProcessGroup(versionControlInfo,flowSnapshot.getFlowContents(),groupId);\n  }\n  if (isReplicateRequest()) {\n    return replicate(HttpMethod.POST,requestProcessGroupEntity);\n  }\n else   if (isDisconnectedFromCluster()) {\n    verifyDisconnectedNodeModification(requestProcessGroupEntity.isDisconnectedNodeAcknowledged());\n  }\n  return withWriteLock(serviceFacade,requestProcessGroupEntity,lookup -> {\n    final Authorizable processGroup=lookup.getProcessGroup(groupId).getAuthorizable();\n    processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n    final VersionedFlowSnapshot versionedFlowSnapshot=requestProcessGroupEntity.getVersionedFlowSnapshot();\n    if (versionedFlowSnapshot != null) {\n      final Set<ConfigurableComponent> restrictedComponents=FlowRegistryUtils.getRestrictedComponents(versionedFlowSnapshot.getFlowContents(),serviceFacade);\n      restrictedComponents.forEach(restrictedComponent -> {\n        final ComponentAuthorizable restrictedComponentAuthorizable=lookup.getConfigurableComponent(restrictedComponent);\n        authorizeRestrictions(authorizer,restrictedComponentAuthorizable);\n      }\n);\n    }\n  }\n,() -> {\n    final VersionedFlowSnapshot versionedFlowSnapshot=requestProcessGroupEntity.getVersionedFlowSnapshot();\n    if (versionedFlowSnapshot != null) {\n      serviceFacade.verifyComponentTypes(versionedFlowSnapshot.getFlowContents());\n    }\n  }\n,processGroupEntity -> {\n    final ProcessGroupDTO processGroup=processGroupEntity.getComponent();\n    processGroup.setId(generateUuid());\n    final VersionedFlowSnapshot flowSnapshot=processGroupEntity.getVersionedFlowSnapshot();\n    if (flowSnapshot != null && StringUtils.isNotBlank(flowSnapshot.getFlowContents().getName()) && StringUtils.isBlank(processGroup.getName())) {\n      processGroup.setName(flowSnapshot.getFlowContents().getName());\n    }\n    final Revision revision=getRevision(processGroupEntity,processGroup.getId());\n    ProcessGroupEntity entity=serviceFacade.createProcessGroup(revision,groupId,processGroup);\n    if (flowSnapshot != null) {\n      final RevisionDTO revisionDto=entity.getRevision();\n      final String newGroupId=entity.getComponent().getId();\n      final Revision newGroupRevision=new Revision(revisionDto.getVersion(),revisionDto.getClientId(),newGroupId);\n      flowSnapshot.getFlowContents().setPosition(null);\n      entity=serviceFacade.updateProcessGroupContents(newGroupRevision,newGroupId,versionControlInfo,flowSnapshot,getIdGenerationSeed().orElse(null),false,true,true);\n    }\n    populateRemainingProcessGroupEntityContent(entity);\n    String uri=entity.getUri();\n    return generateCreatedResponse(URI.create(uri),entity).build();\n  }\n);\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 530,
                    "astHeight": 15
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
                    "nodePosition": {
                        "charLength": 10373,
                        "startLineNumber": 1617,
                        "startColumnNumber": 4,
                        "endLineNumber": 1785,
                        "endColumnNumber": 5
                    },
                    "nodeContext": "/** \n * Adds the specified process group.\n * @param httpServletRequest request\n * @param groupId The group id\n * @param requestProcessGroupEntity A processGroupEntity\n * @return A processGroupEntity\n * @throws IOException if the request indicates that the Process Group should be imported from a Flow Registry and NiFi is unable to communicate with the Flow Registry\n */\n@POST @Consumes(MediaType.APPLICATION_JSON) @Produces(MediaType.APPLICATION_JSON) @Path(\"{id}/process-groups\") @ApiOperation(value=\"Creates a process group\",response=ProcessGroupEntity.class,authorizations={@Authorization(value=\"Write - /process-groups/{uuid}\")}) @ApiResponses(value={@ApiResponse(code=400,message=\"NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.\"),@ApiResponse(code=401,message=\"Client could not be authenticated.\"),@ApiResponse(code=403,message=\"Client is not authorized to make this request.\"),@ApiResponse(code=404,message=\"The specified resource could not be found.\"),@ApiResponse(code=409,message=\"The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.\")}) public Response createProcessGroup(@Context final HttpServletRequest httpServletRequest,@ApiParam(value=\"The process group id.\",required=true) @PathParam(\"id\") final String groupId,@ApiParam(value=\"The process group configuration details.\",required=true) final ProcessGroupEntity requestProcessGroupEntity){\n  if (requestProcessGroupEntity == null || requestProcessGroupEntity.getComponent() == null) {\n    throw new IllegalArgumentException(\"Process group details must be specified.\");\n  }\n  if (requestProcessGroupEntity.getRevision() == null || (requestProcessGroupEntity.getRevision().getVersion() == null || requestProcessGroupEntity.getRevision().getVersion() != 0)) {\n    throw new IllegalArgumentException(\"A revision of 0 must be specified when creating a new Process group.\");\n  }\n  if (requestProcessGroupEntity.getComponent().getId() != null) {\n    throw new IllegalArgumentException(\"Process group ID cannot be specified.\");\n  }\n  final PositionDTO proposedPosition=requestProcessGroupEntity.getComponent().getPosition();\n  if (proposedPosition != null) {\n    if (proposedPosition.getX() == null || proposedPosition.getY() == null) {\n      throw new IllegalArgumentException(\"The x and y coordinate of the proposed position must be specified.\");\n    }\n  }\n  if (StringUtils.isBlank(requestProcessGroupEntity.getComponent().getName()) && requestProcessGroupEntity.getComponent().getVersionControlInformation() == null) {\n    throw new IllegalArgumentException(\"The group name is required when the group is not imported from version control.\");\n  }\n  if (requestProcessGroupEntity.getComponent().getParentGroupId() != null && !groupId.equals(requestProcessGroupEntity.getComponent().getParentGroupId())) {\n    throw new IllegalArgumentException(String.format(\"If specified, the parent process group id %s must be the same as specified in the URI %s\",requestProcessGroupEntity.getComponent().getParentGroupId(),groupId));\n  }\n  requestProcessGroupEntity.getComponent().setParentGroupId(groupId);\n  final VersionControlInformationDTO versionControlInfo=requestProcessGroupEntity.getComponent().getVersionControlInformation();\n  if (versionControlInfo != null && requestProcessGroupEntity.getVersionedFlowSnapshot() == null) {\n    final VersionedFlowSnapshot flowSnapshot=getFlowFromRegistry(versionControlInfo);\n    serviceFacade.discoverCompatibleBundles(flowSnapshot.getFlowContents());\n    serviceFacade.resolveInheritedControllerServices(flowSnapshot,groupId,NiFiUserUtils.getNiFiUser());\n    requestProcessGroupEntity.setVersionedFlowSnapshot(flowSnapshot);\n  }\n  if (versionControlInfo != null) {\n    final VersionedFlowSnapshot flowSnapshot=requestProcessGroupEntity.getVersionedFlowSnapshot();\n    serviceFacade.verifyImportProcessGroup(versionControlInfo,flowSnapshot.getFlowContents(),groupId);\n  }\n  if (isReplicateRequest()) {\n    return replicate(HttpMethod.POST,requestProcessGroupEntity);\n  }\n else   if (isDisconnectedFromCluster()) {\n    verifyDisconnectedNodeModification(requestProcessGroupEntity.isDisconnectedNodeAcknowledged());\n  }\n  return withWriteLock(serviceFacade,requestProcessGroupEntity,lookup -> {\n    final Authorizable processGroup=lookup.getProcessGroup(groupId).getAuthorizable();\n    processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n    final VersionedFlowSnapshot versionedFlowSnapshot=requestProcessGroupEntity.getVersionedFlowSnapshot();\n    if (versionedFlowSnapshot != null) {\n      final Set<ConfigurableComponent> restrictedComponents=FlowRegistryUtils.getRestrictedComponents(versionedFlowSnapshot.getFlowContents(),serviceFacade);\n      restrictedComponents.forEach(restrictedComponent -> {\n        final ComponentAuthorizable restrictedComponentAuthorizable=lookup.getConfigurableComponent(restrictedComponent);\n        authorizeRestrictions(authorizer,restrictedComponentAuthorizable);\n      }\n);\n    }\n  }\n,() -> {\n    final VersionedFlowSnapshot versionedFlowSnapshot=requestProcessGroupEntity.getVersionedFlowSnapshot();\n    if (versionedFlowSnapshot != null) {\n      serviceFacade.verifyComponentTypes(versionedFlowSnapshot.getFlowContents());\n    }\n  }\n,processGroupEntity -> {\n    final ProcessGroupDTO processGroup=processGroupEntity.getComponent();\n    processGroup.setId(generateUuid());\n    final VersionedFlowSnapshot flowSnapshot=processGroupEntity.getVersionedFlowSnapshot();\n    if (flowSnapshot != null && StringUtils.isNotBlank(flowSnapshot.getFlowContents().getName()) && StringUtils.isBlank(processGroup.getName())) {\n      processGroup.setName(flowSnapshot.getFlowContents().getName());\n    }\n    final Revision revision=getRevision(processGroupEntity,processGroup.getId());\n    ProcessGroupEntity entity=serviceFacade.createProcessGroup(revision,groupId,processGroup);\n    if (flowSnapshot != null) {\n      final RevisionDTO revisionDto=entity.getRevision();\n      final String newGroupId=entity.getComponent().getId();\n      final Revision newGroupRevision=new Revision(revisionDto.getVersion(),revisionDto.getClientId(),newGroupId);\n      flowSnapshot.getFlowContents().setPosition(null);\n      entity=serviceFacade.updateProcessGroupContents(newGroupRevision,newGroupId,versionControlInfo,flowSnapshot,getIdGenerationSeed().orElse(null),false,true,true);\n    }\n    populateRemainingProcessGroupEntityContent(entity);\n    String uri=entity.getUri();\n    return generateCreatedResponse(URI.create(uri),entity).build();\n  }\n);\n}\n",
                    "nodeType": "MethodDeclaration",
                    "astNodeNumber": 650,
                    "astHeight": 16
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 101,
                    "startLineNumber": 1706,
                    "startColumnNumber": 12,
                    "endLineNumber": 1706,
                    "endColumnNumber": 113
                },
                "nodeContext": "serviceFacade.resolveInheritedControllerServices(flowSnapshot,groupId,NiFiUserUtils.getNiFiUser());\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 9,
                "astHeight": 4
            },
            "tokenLength": 2,
            "type": "org.apache.nifi.authorization.user.NiFiUser"
        },
        {
            "nodeContext": "NiFiUserUtils.getNiFiUser()",
            "nodeType": "MethodInvocation",
            "nodePosition": {
                "charLength": 27,
                "startLineNumber": 1729,
                "startColumnNumber": 76,
                "endLineNumber": 1729,
                "endColumnNumber": 103
            },
            "astNodeNumber": 3,
            "astHeight": 2,
            "parentDataList": [
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
                    "nodePosition": {
                        "charLength": 84,
                        "startLineNumber": 1729,
                        "startColumnNumber": 20,
                        "endLineNumber": 1729,
                        "endColumnNumber": 104
                    },
                    "nodeContext": "processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser())",
                    "nodeType": "MethodInvocation",
                    "astNodeNumber": 10,
                    "astHeight": 3
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                    "nodePosition": {
                        "charLength": 85,
                        "startLineNumber": 1729,
                        "startColumnNumber": 20,
                        "endLineNumber": 1729,
                        "endColumnNumber": 105
                    },
                    "nodeContext": "processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n",
                    "nodeType": "ExpressionStatement",
                    "astNodeNumber": 11,
                    "astHeight": 4
                },
                {
                    "locationInParent": "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
                    "nodePosition": {
                        "charLength": 1186,
                        "startLineNumber": 1727,
                        "startColumnNumber": 26,
                        "endLineNumber": 1742,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "{\n  final Authorizable processGroup=lookup.getProcessGroup(groupId).getAuthorizable();\n  processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n  final VersionedFlowSnapshot versionedFlowSnapshot=requestProcessGroupEntity.getVersionedFlowSnapshot();\n  if (versionedFlowSnapshot != null) {\n    final Set<ConfigurableComponent> restrictedComponents=FlowRegistryUtils.getRestrictedComponents(versionedFlowSnapshot.getFlowContents(),serviceFacade);\n    restrictedComponents.forEach(restrictedComponent -> {\n      final ComponentAuthorizable restrictedComponentAuthorizable=lookup.getConfigurableComponent(restrictedComponent);\n      authorizeRestrictions(authorizer,restrictedComponentAuthorizable);\n    }\n);\n  }\n}\n",
                    "nodeType": "Block",
                    "astNodeNumber": 77,
                    "astHeight": 11
                },
                {
                    "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
                    "nodePosition": {
                        "charLength": 1196,
                        "startLineNumber": 1727,
                        "startColumnNumber": 16,
                        "endLineNumber": 1742,
                        "endColumnNumber": 17
                    },
                    "nodeContext": "lookup -> {\n  final Authorizable processGroup=lookup.getProcessGroup(groupId).getAuthorizable();\n  processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n  final VersionedFlowSnapshot versionedFlowSnapshot=requestProcessGroupEntity.getVersionedFlowSnapshot();\n  if (versionedFlowSnapshot != null) {\n    final Set<ConfigurableComponent> restrictedComponents=FlowRegistryUtils.getRestrictedComponents(versionedFlowSnapshot.getFlowContents(),serviceFacade);\n    restrictedComponents.forEach(restrictedComponent -> {\n      final ComponentAuthorizable restrictedComponentAuthorizable=lookup.getConfigurableComponent(restrictedComponent);\n      authorizeRestrictions(authorizer,restrictedComponentAuthorizable);\n    }\n);\n  }\n}\n",
                    "nodeType": "LambdaExpression",
                    "astNodeNumber": 80,
                    "astHeight": 12
                }
            ],
            "currentLineData": {
                "locationInParent": "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
                "nodePosition": {
                    "charLength": 85,
                    "startLineNumber": 1729,
                    "startColumnNumber": 20,
                    "endLineNumber": 1729,
                    "endColumnNumber": 105
                },
                "nodeContext": "processGroup.authorize(authorizer,RequestAction.WRITE,NiFiUserUtils.getNiFiUser());\n",
                "nodeType": "ExpressionStatement",
                "astNodeNumber": 11,
                "astHeight": 4
            },
            "tokenLength": 2,
            "type": "org.apache.nifi.authorization.user.NiFiUser"
        }
    ],
    "positionList": [
        {
            "charLength": 27,
            "startLineNumber": 1706,
            "startColumnNumber": 84,
            "endLineNumber": 1706,
            "endColumnNumber": 111
        },
        {
            "charLength": 27,
            "startLineNumber": 1729,
            "startColumnNumber": 76,
            "endLineNumber": 1729,
            "endColumnNumber": 103
        }
    ],
    "layoutRelationDataList": []
}