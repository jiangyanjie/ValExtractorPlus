{
  "id" : 23,
  "expression" : "each.getPreviousColumn().getIdentifier().getValue()",
  "projectName" : "apache@shardingsphere",
  "commitID" : "2e33b07fd41a1e5fd64e83334ae8cfbcc69c9563",
  "filePath" : "shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptAlterTableTokenGenerator.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "each.getPreviousColumn().getIdentifier().getValue()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 51,
      "startLineNumber" : 192,
      "startColumnNumber" : 68,
      "endLineNumber" : 192,
      "endColumnNumber" : 119
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 192,
        "startColumnNumber" : 16,
        "endLineNumber" : 192,
        "endColumnNumber" : 119
      },
      "nodeContext" : "getEncryptRule().findAssistedQueryColumn(tableName,each.getPreviousColumn().getIdentifier().getValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 344,
        "startLineNumber" : 192,
        "startColumnNumber" : 16,
        "endLineNumber" : 194,
        "endColumnNumber" : 148
      },
      "nodeContext" : "getEncryptRule().findAssistedQueryColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_assisted\",\", CHANGE COLUMN \" + optional))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 367,
        "startLineNumber" : 192,
        "startColumnNumber" : 16,
        "endLineNumber" : 194,
        "endColumnNumber" : 171
      },
      "nodeContext" : "getEncryptRule().findAssistedQueryColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_assisted\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 51,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 369,
        "startLineNumber" : 192,
        "startColumnNumber" : 16,
        "endLineNumber" : 194,
        "endColumnNumber" : 172
      },
      "nodeContext" : "getEncryptRule().findAssistedQueryColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_assisted\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 52,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 190,
        "startColumnNumber" : 50,
        "endLineNumber" : 198,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String each.getPreviousColumn().getIdentifier().getValue()=each.getPreviousColumn().getIdentifier().getValue();\n  getEncryptRule().findAssistedQueryColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_assisted\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n  getEncryptRule().findPlainColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_plain\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 887,
        "startLineNumber" : 190,
        "startColumnNumber" : 12,
        "endLineNumber" : 198,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (null != each.getPreviousColumn()) {\n  String each.getPreviousColumn().getIdentifier().getValue()=each.getPreviousColumn().getIdentifier().getValue();\n  getEncryptRule().findAssistedQueryColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_assisted\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n  getEncryptRule().findPlainColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_plain\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 117,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1150,
        "startLineNumber" : 186,
        "startColumnNumber" : 75,
        "endLineNumber" : 199,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  result.addAll(getPreviousColumnTokens(tableName,each));\n  result.addAll(getColumnTokens(tableName,each));\n  each.getColumnPosition().flatMap(columnPositionSegment -> getColumnPositionToken(tableName,columnPositionSegment)).ifPresent(result::add);\n  if (null != each.getPreviousColumn()) {\n    String each.getPreviousColumn().getIdentifier().getValue()=each.getPreviousColumn().getIdentifier().getValue();\n    getEncryptRule().findAssistedQueryColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_assisted\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n    getEncryptRule().findPlainColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_plain\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1217,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 199,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ChangeColumnDefinitionSegment each : changeColumnDefinitions) {\n  result.addAll(getPreviousColumnTokens(tableName,each));\n  result.addAll(getColumnTokens(tableName,each));\n  each.getColumnPosition().flatMap(columnPositionSegment -> getColumnPositionToken(tableName,columnPositionSegment)).ifPresent(result::add);\n  if (null != each.getPreviousColumn()) {\n    String each.getPreviousColumn().getIdentifier().getValue()=each.getPreviousColumn().getIdentifier().getValue();\n    getEncryptRule().findAssistedQueryColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_assisted\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n    getEncryptRule().findPlainColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_plain\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 158,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1310,
        "startLineNumber" : 184,
        "startColumnNumber" : 152,
        "endLineNumber" : 201,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Collection<SQLToken> result=new LinkedList<>();\n  for (  ChangeColumnDefinitionSegment each : changeColumnDefinitions) {\n    result.addAll(getPreviousColumnTokens(tableName,each));\n    result.addAll(getColumnTokens(tableName,each));\n    each.getColumnPosition().flatMap(columnPositionSegment -> getColumnPositionToken(tableName,columnPositionSegment)).ifPresent(result::add);\n    if (null != each.getPreviousColumn()) {\n      String each.getPreviousColumn().getIdentifier().getValue()=each.getPreviousColumn().getIdentifier().getValue();\n      getEncryptRule().findAssistedQueryColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_assisted\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n      getEncryptRule().findPlainColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_plain\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 173,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1456,
        "startLineNumber" : 184,
        "startColumnNumber" : 4,
        "endLineNumber" : 201,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private Collection<SQLToken> getChangeColumnTokens(final String tableName,final Collection<ChangeColumnDefinitionSegment> changeColumnDefinitions){\n  Collection<SQLToken> result=new LinkedList<>();\n  for (  ChangeColumnDefinitionSegment each : changeColumnDefinitions) {\n    result.addAll(getPreviousColumnTokens(tableName,each));\n    result.addAll(getColumnTokens(tableName,each));\n    each.getColumnPosition().flatMap(columnPositionSegment -> getColumnPositionToken(tableName,columnPositionSegment)).ifPresent(result::add);\n    if (null != each.getPreviousColumn()) {\n      String each.getPreviousColumn().getIdentifier().getValue()=each.getPreviousColumn().getIdentifier().getValue();\n      getEncryptRule().findAssistedQueryColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_assisted\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n      getEncryptRule().findPlainColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_plain\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 17
    } ],
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "each.getPreviousColumn().getIdentifier().getValue()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 51,
      "startLineNumber" : 195,
      "startColumnNumber" : 60,
      "endLineNumber" : 195,
      "endColumnNumber" : 111
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 195,
        "startColumnNumber" : 16,
        "endLineNumber" : 195,
        "endColumnNumber" : 111
      },
      "nodeContext" : "getEncryptRule().findPlainColumn(tableName,each.getPreviousColumn().getIdentifier().getValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 195,
        "startColumnNumber" : 16,
        "endLineNumber" : 197,
        "endColumnNumber" : 145
      },
      "nodeContext" : "getEncryptRule().findPlainColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_plain\",\", CHANGE COLUMN \" + optional))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 356,
        "startLineNumber" : 195,
        "startColumnNumber" : 16,
        "endLineNumber" : 197,
        "endColumnNumber" : 168
      },
      "nodeContext" : "getEncryptRule().findPlainColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_plain\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 51,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 195,
        "startColumnNumber" : 16,
        "endLineNumber" : 197,
        "endColumnNumber" : 169
      },
      "nodeContext" : "getEncryptRule().findPlainColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_plain\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 52,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 190,
        "startColumnNumber" : 50,
        "endLineNumber" : 198,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String each.getPreviousColumn().getIdentifier().getValue()=each.getPreviousColumn().getIdentifier().getValue();\n  getEncryptRule().findAssistedQueryColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_assisted\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n  getEncryptRule().findPlainColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_plain\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 887,
        "startLineNumber" : 190,
        "startColumnNumber" : 12,
        "endLineNumber" : 198,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (null != each.getPreviousColumn()) {\n  String each.getPreviousColumn().getIdentifier().getValue()=each.getPreviousColumn().getIdentifier().getValue();\n  getEncryptRule().findAssistedQueryColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_assisted\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n  getEncryptRule().findPlainColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_plain\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 117,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1150,
        "startLineNumber" : 186,
        "startColumnNumber" : 75,
        "endLineNumber" : 199,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  result.addAll(getPreviousColumnTokens(tableName,each));\n  result.addAll(getColumnTokens(tableName,each));\n  each.getColumnPosition().flatMap(columnPositionSegment -> getColumnPositionToken(tableName,columnPositionSegment)).ifPresent(result::add);\n  if (null != each.getPreviousColumn()) {\n    String each.getPreviousColumn().getIdentifier().getValue()=each.getPreviousColumn().getIdentifier().getValue();\n    getEncryptRule().findAssistedQueryColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_assisted\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n    getEncryptRule().findPlainColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_plain\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1217,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 199,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ChangeColumnDefinitionSegment each : changeColumnDefinitions) {\n  result.addAll(getPreviousColumnTokens(tableName,each));\n  result.addAll(getColumnTokens(tableName,each));\n  each.getColumnPosition().flatMap(columnPositionSegment -> getColumnPositionToken(tableName,columnPositionSegment)).ifPresent(result::add);\n  if (null != each.getPreviousColumn()) {\n    String each.getPreviousColumn().getIdentifier().getValue()=each.getPreviousColumn().getIdentifier().getValue();\n    getEncryptRule().findAssistedQueryColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_assisted\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n    getEncryptRule().findPlainColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_plain\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 158,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1310,
        "startLineNumber" : 184,
        "startColumnNumber" : 152,
        "endLineNumber" : 201,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Collection<SQLToken> result=new LinkedList<>();\n  for (  ChangeColumnDefinitionSegment each : changeColumnDefinitions) {\n    result.addAll(getPreviousColumnTokens(tableName,each));\n    result.addAll(getColumnTokens(tableName,each));\n    each.getColumnPosition().flatMap(columnPositionSegment -> getColumnPositionToken(tableName,columnPositionSegment)).ifPresent(result::add);\n    if (null != each.getPreviousColumn()) {\n      String each.getPreviousColumn().getIdentifier().getValue()=each.getPreviousColumn().getIdentifier().getValue();\n      getEncryptRule().findAssistedQueryColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_assisted\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n      getEncryptRule().findPlainColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_plain\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 173,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1456,
        "startLineNumber" : 184,
        "startColumnNumber" : 4,
        "endLineNumber" : 201,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private Collection<SQLToken> getChangeColumnTokens(final String tableName,final Collection<ChangeColumnDefinitionSegment> changeColumnDefinitions){\n  Collection<SQLToken> result=new LinkedList<>();\n  for (  ChangeColumnDefinitionSegment each : changeColumnDefinitions) {\n    result.addAll(getPreviousColumnTokens(tableName,each));\n    result.addAll(getColumnTokens(tableName,each));\n    each.getColumnPosition().flatMap(columnPositionSegment -> getColumnPositionToken(tableName,columnPositionSegment)).ifPresent(result::add);\n    if (null != each.getPreviousColumn()) {\n      String each.getPreviousColumn().getIdentifier().getValue()=each.getPreviousColumn().getIdentifier().getValue();\n      getEncryptRule().findAssistedQueryColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_assisted\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n      getEncryptRule().findPlainColumn(tableName,each.getPreviousColumn().getIdentifier().getValue()).map(optional -> new EncryptAlterTableToken(each.getStopIndex() + 1,each.getColumnDefinition().getColumnName().getStopIndex(),each.getColumnDefinition().getColumnName().getIdentifier().getValue() + \"_plain\",\", CHANGE COLUMN \" + optional)).ifPresent(result::add);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 17
    } ],
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 51,
    "startLineNumber" : 192,
    "startColumnNumber" : 68,
    "endLineNumber" : 192,
    "endColumnNumber" : 119
  }, {
    "charLength" : 51,
    "startLineNumber" : 195,
    "startColumnNumber" : 60,
    "endLineNumber" : 195,
    "endColumnNumber" : 111
  } ],
  "layoutRelationDataList" : [ ],
  "name" : "previousColumnName",
  "nodePosition" : {
    "charLength" : 18,
    "startLineNumber" : 191,
    "startColumnNumber" : 23,
    "endLineNumber" : 191,
    "endColumnNumber" : 41
  }
}