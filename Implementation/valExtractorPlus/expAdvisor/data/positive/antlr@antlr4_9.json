{
  "id" : 9,
  "expression" : "PerfDir + \"/\" + fileName",
  "projectName" : "antlr@antlr4",
  "commitID" : "ab0655598ed4ddeff075fafe301ef4d57bd0017d",
  "filePath" : "runtime-testsuite/test/org/antlr/v4/test/runtime/java/api/perf/TimeLexerSpeed.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "PerfDir + \"/\" + fileName",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 414,
      "startColumnNumber" : 51,
      "endLineNumber" : 414,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 414,
        "startColumnNumber" : 24,
        "endLineNumber" : 414,
        "endColumnNumber" : 76
      },
      "nodeContext" : "loader.getResourceAsStream(PerfDir + \"/\" + fileName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 414,
        "startColumnNumber" : 19,
        "endLineNumber" : 414,
        "endColumnNumber" : 74
      },
      "nodeContext" : "is=loader.getResourceAsStream(PerfDir + \"/\" + fileName)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 414,
        "startColumnNumber" : 7,
        "endLineNumber" : 414,
        "endColumnNumber" : 74
      },
      "nodeContext" : "InputStream is=loader.getResourceAsStream(PerfDir + \"/\" + fileName)",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 414,
        "startColumnNumber" : 2,
        "endLineNumber" : 427,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try (InputStream is=loader.getResourceAsStream(PerfDir + \"/\" + fileName)){\n  long size=getResourceSize(loader,PerfDir + \"/\" + fileName);\n  CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n  graphemesLexer lexer=new graphemesLexer(input);\n  double avg=tokenize(lexer,n,clearLexerDFACache);\n  String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n  if (output)   System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols from %s%s\\n\",currentMethodName,(int)avg,n,input.size(),fileName,clearLexerDFACache ? \" DFA cleared\" : \"\");\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 89,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 732,
        "startLineNumber" : 411,
        "startColumnNumber" : 104,
        "endLineNumber" : 428,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String PerfDir + \"/\" + fileName=PerfDir + \"/\" + fileName;\n  ClassLoader loader=TimeLexerSpeed.class.getClassLoader();\n  try (InputStream is=loader.getResourceAsStream(PerfDir + \"/\" + fileName)){\n    long size=getResourceSize(loader,PerfDir + \"/\" + fileName);\n    CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n    graphemesLexer lexer=new graphemesLexer(input);\n    double avg=tokenize(lexer,n,clearLexerDFACache);\n    String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n    if (output)     System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols from %s%s\\n\",currentMethodName,(int)avg,n,input.size(),fileName,clearLexerDFACache ? \" DFA cleared\" : \"\");\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 833,
        "startLineNumber" : 411,
        "startColumnNumber" : 1,
        "endLineNumber" : 428,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void lex_new_grapheme_utf8(String fileName,int n,boolean clearLexerDFACache) throws Exception {\n  String PerfDir + \"/\" + fileName=PerfDir + \"/\" + fileName;\n  ClassLoader loader=TimeLexerSpeed.class.getClassLoader();\n  try (InputStream is=loader.getResourceAsStream(PerfDir + \"/\" + fileName)){\n    long size=getResourceSize(loader,PerfDir + \"/\" + fileName);\n    CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n    graphemesLexer lexer=new graphemesLexer(input);\n    double avg=tokenize(lexer,n,clearLexerDFACache);\n    String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n    if (output)     System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols from %s%s\\n\",currentMethodName,(int)avg,n,input.size(),fileName,clearLexerDFACache ? \" DFA cleared\" : \"\");\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 12
    } ],
    "tokenLength" : 5,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PerfDir + \"/\" + fileName",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 415,
      "startColumnNumber" : 39,
      "endLineNumber" : 415,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 415,
        "startColumnNumber" : 15,
        "endLineNumber" : 415,
        "endColumnNumber" : 63
      },
      "nodeContext" : "getResourceSize(loader,PerfDir + \"/\" + fileName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 415,
        "startColumnNumber" : 8,
        "endLineNumber" : 415,
        "endColumnNumber" : 61
      },
      "nodeContext" : "size=getResourceSize(loader,PerfDir + \"/\" + fileName)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 415,
        "startColumnNumber" : 3,
        "endLineNumber" : 415,
        "endColumnNumber" : 63
      },
      "nodeContext" : "long size=getResourceSize(loader,PerfDir + \"/\" + fileName);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 516,
        "startLineNumber" : 414,
        "startColumnNumber" : 66,
        "endLineNumber" : 427,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  long size=getResourceSize(loader,PerfDir + \"/\" + fileName);\n  CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n  graphemesLexer lexer=new graphemesLexer(input);\n  double avg=tokenize(lexer,n,clearLexerDFACache);\n  String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n  if (output)   System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols from %s%s\\n\",currentMethodName,(int)avg,n,input.size(),fileName,clearLexerDFACache ? \" DFA cleared\" : \"\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 414,
        "startColumnNumber" : 2,
        "endLineNumber" : 427,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try (InputStream is=loader.getResourceAsStream(PerfDir + \"/\" + fileName)){\n  long size=getResourceSize(loader,PerfDir + \"/\" + fileName);\n  CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n  graphemesLexer lexer=new graphemesLexer(input);\n  double avg=tokenize(lexer,n,clearLexerDFACache);\n  String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n  if (output)   System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols from %s%s\\n\",currentMethodName,(int)avg,n,input.size(),fileName,clearLexerDFACache ? \" DFA cleared\" : \"\");\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 89,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 732,
        "startLineNumber" : 411,
        "startColumnNumber" : 104,
        "endLineNumber" : 428,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String PerfDir + \"/\" + fileName=PerfDir + \"/\" + fileName;\n  ClassLoader loader=TimeLexerSpeed.class.getClassLoader();\n  try (InputStream is=loader.getResourceAsStream(PerfDir + \"/\" + fileName)){\n    long size=getResourceSize(loader,PerfDir + \"/\" + fileName);\n    CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n    graphemesLexer lexer=new graphemesLexer(input);\n    double avg=tokenize(lexer,n,clearLexerDFACache);\n    String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n    if (output)     System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols from %s%s\\n\",currentMethodName,(int)avg,n,input.size(),fileName,clearLexerDFACache ? \" DFA cleared\" : \"\");\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 833,
        "startLineNumber" : 411,
        "startColumnNumber" : 1,
        "endLineNumber" : 428,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void lex_new_grapheme_utf8(String fileName,int n,boolean clearLexerDFACache) throws Exception {\n  String PerfDir + \"/\" + fileName=PerfDir + \"/\" + fileName;\n  ClassLoader loader=TimeLexerSpeed.class.getClassLoader();\n  try (InputStream is=loader.getResourceAsStream(PerfDir + \"/\" + fileName)){\n    long size=getResourceSize(loader,PerfDir + \"/\" + fileName);\n    CharStream input=CharStreams.fromStream(is,StandardCharsets.UTF_8,size);\n    graphemesLexer lexer=new graphemesLexer(input);\n    double avg=tokenize(lexer,n,clearLexerDFACache);\n    String currentMethodName=new Exception().getStackTrace()[0].getMethodName();\n    if (output)     System.out.printf(\"%27s average time %5dus over %4d runs of %5d symbols from %s%s\\n\",currentMethodName,(int)avg,n,input.size(),fileName,clearLexerDFACache ? \" DFA cleared\" : \"\");\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 12
    } ],
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 414,
    "startColumnNumber" : 51,
    "endLineNumber" : 414,
    "endColumnNumber" : 75
  }, {
    "charLength" : 24,
    "startLineNumber" : 415,
    "startColumnNumber" : 39,
    "endLineNumber" : 415,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ],
  "name" : "resourceName",
  "nodePosition" : {
    "charLength" : 12,
    "startLineNumber" : 412,
    "startColumnNumber" : 9,
    "endLineNumber" : 412,
    "endColumnNumber" : 21
  }
}