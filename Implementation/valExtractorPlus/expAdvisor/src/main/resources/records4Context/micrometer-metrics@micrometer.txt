5494daaee9014e3bf372e87db45d268d416f71e7###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/MeterRegistry.java###/MeterRegistry.java###io.micrometer.core.instrument.MeterRegistry###accept:Meter.Id ###filter.accept(id)==MeterFilterReply.DENY###reply###filter.accept(id)###581:36:581:78
bfe364919a9bf44049b81831fca865706f05c9a2###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/cache/EhCache2Metrics.java###/EhCache2Metrics.java###io.micrometer.core.instrument.binder.cache.EhCache2Metrics###getStats:###returngetCache()!=null?getCache().getStatistics():null;###cache###getCache()###141:9:141:71
7fb4fa85232ade3a6b636a066f837c9c5992d1e5###/micrometer-metrics_micrometer/implementations/micrometer-registry-elastic/src/main/java/io/micrometer/elastic/ElasticMeterRegistry.java###/ElasticMeterRegistry.java###io.micrometer.elastic.ElasticMeterRegistry###writeFunctionTimer:FunctionTimer ###builder.append(",\"sum\":").append(timer.totalTime(getBaseTimeUnit()));###sum###timer.totalTime(getBaseTimeUnit())###345:13:345:85
32afec08e7402ed8c5491672cb038e548edc0782###/micrometer-metrics_micrometer/implementations/micrometer-registry-azure-monitor/src/main/java/io/micrometer/azuremonitor/AzureMonitorMeterRegistry.java###/AzureMonitorMeterRegistry.java###io.micrometer.azuremonitor.AzureMonitorMeterRegistry###trackFunctionTimer:FunctionTimer ###mt.setCount(castCountToInt(timer.count()));###count###timer.count()###148:9:148:52
ad00dcd994d09d1979f3777f743f8358657261f9###/micrometer-metrics_micrometer/implementations/micrometer-registry-azure-monitor/src/main/java/io/micrometer/azuremonitor/AzureMonitorMeterRegistry.java###/AzureMonitorMeterRegistry.java###io.micrometer.azuremonitor.AzureMonitorMeterRegistry###trackFunctionTimer:FunctionTimer ###mt.setCount(castCountToInt(timer.count()));###count###timer.count()###160:9:160:52
8207d1ab3848132c28672bcc1d69c6d6099b0939###/micrometer-metrics_micrometer/micrometer-core/src/test/java/io/micrometer/core/instrument/binder/jpa/HibernateMetricsTest.java###/HibernateMetricsTest.java###io.micrometer.core.instrument.binder.jpa.HibernateMetricsTest###shouldExposeMetricsWhenStatsEnabled:###HibernateMetrics.monitor(registry,createEntityManagerFactoryMock(true),"entityManagerFactory");###entityManagerFactory###createEntityManagerFactoryMock(true)###63:9:63:106
335c529937fdba3ab2841383e4dd36c6601b4f05###/micrometer-metrics_micrometer/implementations/micrometer-registry-influx/src/main/java/io/micrometer/influx/InfluxMeterRegistry.java###/InfluxMeterRegistry.java###io.micrometer.influx.InfluxMeterRegistry###writeMeter:Meter ###returnStream.of(influxLineProtocol(m.getId(),"unknown",fields.stream()));###id###m.getId()###165:9:165:85
346bfd4aa8246843c8692942feebdd14355c62af###/micrometer-metrics_micrometer/implementations/micrometer-registry-cloudwatch/src/main/java/io/micrometer/cloudwatch/CloudWatchMeterRegistry.java###/CloudWatchMeterRegistry.java###io.micrometer.cloudwatch.CloudWatchMeterRegistry###sendMetricData:List<MetricDatum> ###latch.await(config.readTimeout().toMillis(),TimeUnit.MILLISECONDS);###readTimeoutMillis###config.readTimeout().toMillis()###146:13:146:81
bfe364919a9bf44049b81831fca865706f05c9a2###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/cache/HazelcastCacheMetrics.java###/HazelcastCacheMetrics.java###io.micrometer.core.instrument.binder.cache.HazelcastCacheMetrics###nearCacheMetrics:MeterRegistry ###if(cache.getLocalMapStats()!=null&&cache.getLocalMapStats().getNearCacheStats()!=null)###localMapStats###cache.getLocalMapStats()###156:9:176:10
c39283c8240d4f9d142ed6cffaf17d83ef55d658###/micrometer-metrics_micrometer/implementations/micrometer-registry-azure-monitor/src/main/java/io/micrometer/azuremonitor/AzureMonitorMeterRegistry.java###/AzureMonitorMeterRegistry.java###io.micrometer.azuremonitor.AzureMonitorMeterRegistry###trackTimer:Timer ###mt.setCount(castCountToInt(timer.count()));###count###timer.count()###137:9:137:52
80ceae7fce6432a810801de5b9c3f104b9ab5cf4###/micrometer-metrics_micrometer/implementations/micrometer-registry-cloudwatch2/src/main/java/io/micrometer/cloudwatch2/CloudWatchMeterRegistry.java###/CloudWatchMeterRegistry.java###io.micrometer.cloudwatch2.CloudWatchMeterRegistry.Batch###timerData:Timer ###metrics.add(metricDatum(timer.getId(),"count","count",timer.count()));###count###timer.count()###168:13:168:86
e6ff3c2fe9542608a33a62b10fdf1222cd60feae###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/internal/TimedExecutor.java###/TimedExecutor.java###io.micrometer.core.instrument.internal.TimedExecutor###TimedExecutor:MeterRegistry Executor String Iterable<Tag> ###this.executionTimer=registry.timer("executor.execution",Tags.concat(tags,"name",executorName));###finalTags###Tags.concat(tags,"name",executorName)###37:9:37:109
7d28dff9a9d379dd075b8440c5b35c4ee5a6f841###/micrometer-metrics_micrometer/implementations/micrometer-registry-datadog/src/test/java/io/micrometer/datadog/DatadogMetricMetadataTest.java###/DatadogMetricMetadataTest.java###io.micrometer.datadog.DatadogMetricMetadataTest###escapesStringsInDescription:###assertThat(metricMetadata.editMetadataBody()).isEqualTo("{\"type\":\"count\",\"description\":\"The\\/\\\"recentcpuusage\\\"fortheJavaVirtualMachineprocess\"}");###expectedBody###"{\"type\":\"count\",\"description\":\"The\\/\\\"recentcpuusage\\\"fortheJavaVirtualMachineprocess\"}"###39:9:39:178
750de3981b5be145c2e8b1bf26c5587d03931507###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/kafka/KafkaConsumerMetrics.java###/KafkaConsumerMetrics.java###io.micrometer.core.instrument.binder.kafka.KafkaConsumerMetrics###nameTag:ObjectName ###tags=Tags.concat(tags,"client.id",name.getKeyProperty("client-id"));###clientId###name.getKeyProperty("client-id")###233:13:233:85
d12078a5867492f77ea315106fe82a6fcf73e14c###/micrometer-metrics_micrometer/micrometer-core/src/test/java/io/micrometer/core/instrument/CounterTest.java###/CounterTest.java###io.micrometer.core.instrument.CounterTest###functionTrackingCounter:MeterRegistry ###AtomicLongn=registry.more().counter("tracking",emptyList(),newAtomicLong(0));###n###newAtomicLong(0)###64:9:64:92
d12078a5867492f77ea315106fe82a6fcf73e14c###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/simple/SimpleTimer.java###/SimpleTimer.java###io.micrometer.core.instrument.simple.SimpleTimer###record:long TimeUnit ###totalTime.add(TimeUnit.NANOSECONDS.convert(amount,unit));###nanoAmount###TimeUnit.NANOSECONDS.convert(amount,unit)###42:13:42:71
4e5d0f0d4d9b89bab276e76a983f4aff66f1ea8a###/micrometer-metrics_micrometer/implementations/micrometer-registry-opentsdb/src/main/java/io/micrometer/opentsdb/OpenTSDBMeterRegistry.java###/OpenTSDBMeterRegistry.java###io.micrometer.opentsdb.OpenTSDBMeterRegistry###writeLongTaskTimer:LongTaskTimer ###finalValueAtPercentile[]percentileValues=timer.takeSnapshot().percentileValues();###histogramSnapshot###timer.takeSnapshot()###329:9:329:94
58490a1a94a1056a6a14ab87e6eeca50055a505d###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/spectator/SpectatorMeterRegistry.java###/SpectatorMeterRegistry.java###io.micrometer.core.instrument.spectator.SpectatorMeterRegistry###register:Meter ###AbstractMeter<io.micrometer.core.instrument.Meter>spectatorMeter=newAbstractMeter<io.micrometer.core.instrument.Meter>(spectatorClock,spectatorId(registry,meter.getName(),meter.getTags()),meter){@OverridepublicIterable<Measurement>measure(){returnstream(ref.get().measure().spliterator(),false).map(m->{Iterable<Tag>formattedTags=m.getTags().stream().map(t->Tag.of(tagFormatter.formatTagKey(t.getKey()),tagFormatter.formatTagValue(t.getValue()))).collect(toList());returnnewMeasurement(spectatorId(registry,tagFormatter.formatName(m.getName()),formattedTags),clock.wallTime(),m.getValue());}).collect(toList());}};###id###spectatorId(registry,meter.getName(),meter.getTags())###173:9:183:11
80ceae7fce6432a810801de5b9c3f104b9ab5cf4###/micrometer-metrics_micrometer/implementations/micrometer-registry-cloudwatch2/src/main/java/io/micrometer/cloudwatch2/CloudWatchMeterRegistry.java###/CloudWatchMeterRegistry.java###io.micrometer.cloudwatch2.CloudWatchMeterRegistry.Batch###summaryData:DistributionSummary ###metrics.add(metricDatum(summary.getId(),"count",summary.count()));###count###summary.count()###180:13:180:81
8b4963fe6dbfadc1fb6c99f59c393e516b199901###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/ipc/http/OkHttpSender.java###/OkHttpSender.java###io.micrometer.core.ipc.http.OkHttpSender###send:Request ###RequestBodybody=RequestBody.create(MediaType.get(contentType+";charset=utf-8"),request.getEntity());###entity###request.getEntity()###45:13:45:120
64d83226531fffb795a089c8a6d10c1408c0e56c###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/ipc/http/OkHttpSender.java###/OkHttpSender.java###io.micrometer.core.ipc.http.OkHttpSender###send:Request ###RequestBodybody=RequestBody.create(MediaType.get(contentType+";charset=utf-8"),request.getEntity());###entity###request.getEntity()###45:13:45:120
8882febba7c1204e05088bc2a9e996a1dd508d31###/micrometer-metrics_micrometer/implementations/micrometer-registry-statsd/src/test/java/io/micrometer/statsd/StatsdMeterRegistryTest.java###/StatsdMeterRegistryTest.java###io.micrometer.statsd.StatsdMeterRegistryTest###timerSentAsDatadogDistribution_whenPercentileHistogramEnabled:###registry=StatsdMeterRegistry.builder(configWithFlavor(StatsdFlavor.DATADOG)).clock(clock).lineSink(toLineSink(lines)).build();###config###configWithFlavor(StatsdFlavor.DATADOG)###390:9:393:26
123e2714315bd51ceaf394f138d544d6c2c47b22###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/spectator/SpectatorTimer.java###/SpectatorTimer.java###io.micrometer.core.instrument.spectator.SpectatorTimer###record:long TimeUnit ###timer.record(unit.toNanos(amount),TimeUnit.NANOSECONDS);###nanoAmount###unit.toNanos(amount)###37:9:37:66
3b6e727952de7b020aa0878953d2e575c9aaf4c5###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/mongodb/MongoMetricsConnectionPoolListener.java###/MongoMetricsConnectionPoolListener.java###io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener###connectionRemoved:ConnectionRemovedEvent ###poolSize.get(event.getConnectionId().getServerId()).decrementAndGet();###gauge###poolSize.get(event.getConnectionId().getServerId())###114:9:115:36
9b6d7e16fa15cfb5dd2cd28b711a2a6358d43f2d###/micrometer-metrics_micrometer/implementations/micrometer-registry-elastic/src/main/java/io/micrometer/elastic/ElasticMeterRegistry.java###/ElasticMeterRegistry.java###io.micrometer.elastic.ElasticMeterRegistry###writeFunctionTimer:FunctionTimer ###builder.append(",\"mean\":").append(timer.mean(getBaseTimeUnit()));###mean###timer.mean(getBaseTimeUnit())###344:17:344:84
2cc97552b191bb05276e1cdbd34045a4cb1e0a62###/micrometer-metrics_micrometer/micrometer-core/src/test/java/io/micrometer/core/instrument/binder/kafka/KafkaClientMetricsIntegrationTest.java###/KafkaClientMetricsIntegrationTest.java###io.micrometer.core.instrument.binder.kafka.KafkaClientMetricsIntegrationTest###shouldManageProducerAndConsumerMetrics:###newKafkaClientMetrics(consumer).bindTo(registry);###consumerKafkaMetrics###newKafkaClientMetrics(consumer)###73:9:73:59
ae7d3cfcce5dcd834530365cfef9d9fd29e9ef4d###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/jvm/JvmGcMetrics.java###/JvmGcMetrics.java###io.micrometer.core.instrument.binder.jvm.JvmGcMetrics###bindTo:MeterRegistry ###Timer.builder("jvm.gc.concurrent.phase.time").tags(tags).tags("action",notificationInfo.getGcAction(),"cause",notificationInfo.getGcCause()).description("Timespentinconcurrentphase").register(registry).record(notificationInfo.getGcInfo().getDuration(),TimeUnit.MILLISECONDS);###gcAction###notificationInfo.getGcAction()###124:33:129:116
c03634a81861dffba1ab2a8f4f82b6b1be1e17e5###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/MeterRegistry.java###/MeterRegistry.java###io.micrometer.core.instrument.MeterRegistry.Search###meters:###if(valueAsserts.containsKey(measurement.getStatistic())&&Math.abs(valueAsserts.get(measurement.getStatistic())-measurement.getValue())>1e-7)###value###valueAsserts.get(measurement.getStatistic())###358:25:361:26
b6f1218bdc84d97eeb64b7f4b559009f808c6672###/micrometer-metrics_micrometer/implementations/micrometer-registry-prometheus/src/main/java/io/micrometer/prometheus/PrometheusMeterRegistry.java###/PrometheusMeterRegistry.java###io.micrometer.prometheus.PrometheusMeterRegistry###newDistributionSummary:Meter.Id DistributionStatisticConfig double ###samples.add(newCollector.MetricFamilySamples.Sample(conventionName+"_bucket",histogramKeys,histogramValues,c.count()));###sampleName###conventionName+"_bucket"###150:29:151:109
3b6e727952de7b020aa0878953d2e575c9aaf4c5###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/mongodb/MongoMetricsConnectionPoolListener.java###/MongoMetricsConnectionPoolListener.java###io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener###waitQueueExited:ConnectionPoolWaitQueueExitedEvent ###waitQueueSize.get(event.getServerId()).decrementAndGet();###gauge###waitQueueSize.get(event.getServerId())###102:9:103:36
c8b965adad06243bc71c076ccb64c024831e1d15###/micrometer-metrics_micrometer/implementations/micrometer-registry-dynatrace/src/test/java/io/micrometer/dynatrace/DynatraceMeterRegistryTest.java###/DynatraceMeterRegistryTest.java###io.micrometer.dynatrace.DynatraceMeterRegistryTest###writeCustomMetrics:###meterRegistry.gauge("my.gauge",1d);###number###1d###209:9:209:45
80ceae7fce6432a810801de5b9c3f104b9ab5cf4###/micrometer-metrics_micrometer/implementations/micrometer-registry-cloudwatch/src/main/java/io/micrometer/cloudwatch/CloudWatchMeterRegistry.java###/CloudWatchMeterRegistry.java###io.micrometer.cloudwatch.CloudWatchMeterRegistry.Batch###functionTimerData:FunctionTimer ###MetricDatumcount=metricDatum(timer.getId(),"count",timer.count());###count###timer.count()###222:13:222:83
2cc97552b191bb05276e1cdbd34045a4cb1e0a62###/micrometer-metrics_micrometer/micrometer-core/src/test/java/io/micrometer/core/instrument/binder/kafka/KafkaClientMetricsIntegrationTest.java###/KafkaClientMetricsIntegrationTest.java###io.micrometer.core.instrument.binder.kafka.KafkaClientMetricsIntegrationTest###shouldManageProducerAndConsumerMetrics:###newKafkaClientMetrics(producer).bindTo(registry);###producerKafkaMetrics###newKafkaClientMetrics(producer)###58:9:58:59
003dc29517002a538f9bf24e325706fb5177f489###/micrometer-metrics_micrometer/implementations/micrometer-registry-cloudwatch2/src/main/java/io/micrometer/cloudwatch2/CloudWatchMeterRegistry.java###/CloudWatchMeterRegistry.java###io.micrometer.cloudwatch2.CloudWatchMeterRegistry###sendMetricData:List<MetricDatum> ###latch.await(config.readTimeout().toMillis(),TimeUnit.MILLISECONDS);###readTimeoutMillis###config.readTimeout().toMillis()###141:13:141:81
3b6e727952de7b020aa0878953d2e575c9aaf4c5###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/mongodb/MongoMetricsConnectionPoolListener.java###/MongoMetricsConnectionPoolListener.java###io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener###connectionCheckedIn:ConnectionCheckedInEvent ###checkedOutCount.get(event.getConnectionId().getServerId()).decrementAndGet();###gauge###checkedOutCount.get(event.getConnectionId().getServerId())###90:9:91:36
494560d915435587a9158fb055b531f9f9741512###/micrometer-metrics_micrometer/implementations/micrometer-registry-datadog/src/main/java/io/micrometer/datadog/DatadogMeterRegistry.java###/DatadogMeterRegistry.java###io.micrometer.datadog.DatadogMeterRegistry###publish:###URLpostTimeSeriesEndpoint=URIUtils.toURL(config.uri()+"/api/v1/series?api_key="+config.apiKey());###uriString###config.uri()+"/api/v1/series?api_key="+config.apiKey()###77:9:77:113
93a9638690c1e9e509fcf56b9bf500c798f6f3f3###/micrometer-metrics_micrometer/implementations/micrometer-registry-elastic/src/main/java/io/micrometer/elastic/ElasticMeterRegistry.java###/ElasticMeterRegistry.java###io.micrometer.elastic.ElasticMeterRegistry###writeFunctionTimer:FunctionTimer ###builder.append(",\"mean\":").append(timer.mean(getBaseTimeUnit()));###mean###timer.mean(getBaseTimeUnit())###348:17:348:84
a27bdc1fac39fdc3d33059f88e6caf19405b0826###/micrometer-metrics_micrometer/implementations/micrometer-registry-appoptics/src/main/java/io/micrometer/appoptics/AppOpticsMeterRegistry.java###/AppOpticsMeterRegistry.java###io.micrometer.appoptics.AppOpticsMeterRegistry###writeTimer:Timer ###returnOptional.of(write(timer.getId(),"timer",Fields.Count.tag(),decimal(snapshot.count()),Fields.Sum.tag(),decimal(snapshot.total(getBaseTimeUnit())),Fields.Max.tag(),decimal(snapshot.max(getBaseTimeUnit()))));###count###snapshot.count()###176:13:179:82
f7c7d66d90127c940079004478abf88a9a1676e2###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/tomcat/TomcatMetrics.java###/TomcatMetrics.java###io.micrometer.core.instrument.binder.tomcat.TomcatMetrics###nameTag:ObjectName ###returnTags.of("name",name.getKeyProperty("name").replaceAll("\"",""));###nameTagValue###name.getKeyProperty("name")###256:13:256:86
da19a7eceebf7cecddac035b74144b985db1bc17###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/hystrix/MicrometerMetricsPublisherCommand.java###/MicrometerMetricsPublisherCommand.java###io.micrometer.core.instrument.binder.hystrix.MicrometerMetricsPublisherCommand###initialize:###Timer.builder(NAME_HYSTRIX_LATENCY_EXECUTION).tags(tags).register(meterRegistry).record(executionLatency,TimeUnit.MILLISECONDS);###latencyExecution###Timer.builder(NAME_HYSTRIX_LATENCY_EXECUTION).tags(tags).register(meterRegistry)###124:21:127:74
08029d9eb83cd16c02ae7c550cb473e4cc70f432###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/mongodb/MongoMetricsConnectionPoolListener.java###/MongoMetricsConnectionPoolListener.java###io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener###waitQueueEntered:ConnectionPoolWaitQueueEnteredEvent ###waitQueueSize.get(event.getServerId()).incrementAndGet();###gauge###waitQueueSize.get(event.getServerId())###97:9:98:36
e73018a4dc8df433a09ea03ee18c5cbb2e8d0958###/micrometer-metrics_micrometer/implementations/micrometer-registry-appoptics/src/main/java/io/micrometer/appoptics/AppOpticsMeterRegistry.java###/AppOpticsMeterRegistry.java###io.micrometer.appoptics.AppOpticsMeterRegistry###writeGauge:Gauge ###returnOptional.of(write(gauge.getId(),"gauge",Fields.Value.tag(),decimal(gauge.value())));###value###gauge.value()###138:9:138:103
e6ff3c2fe9542608a33a62b10fdf1222cd60feae###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/internal/TimedScheduledExecutorService.java###/TimedScheduledExecutorService.java###io.micrometer.core.instrument.internal.TimedScheduledExecutorService###TimedScheduledExecutorService:MeterRegistry ScheduledExecutorService String Iterable<Tag> ###this.executionTimer=registry.timer("executor",Tags.concat(tags,"name",executorServiceName));###finalTags###Tags.concat(tags,"name",executorServiceName)###43:9:43:106
f4a3e6fb6d0d65785e5415b500fe92f63f82614a###/micrometer-metrics_micrometer/implementations/micrometer-registry-cloudwatch/src/main/java/io/micrometer/cloudwatch/CloudWatchMeterRegistry.java###/CloudWatchMeterRegistry.java###io.micrometer.cloudwatch.CloudWatchMeterRegistry.Batch###functionCounterData:FunctionCounter ###returnStream.of(metricDatum(counter.getId(),"count",counter.count()));###count###counter.count()###177:13:177:86
67d5d021ea19d64ea9426f6fbcdbe06f10654c25###/micrometer-metrics_micrometer/micrometer-spring-legacy/src/test/java/io/micrometer/spring/autoconfigure/web/client/RestTemplateMetricsConfigurationTest.java###/RestTemplateMetricsConfigurationTest.java###io.micrometer.spring.autoconfigure.web.client.RestTemplateMetricsConfigurationTest###asyncRestTemplatesInContextAreInstrumented:###asyncClient.getForEntity(rootUri+"/it/2",String.class).get();###future###asyncClient.getForEntity(rootUri+"/it/2",String.class)###91:9:91:73
f5ea2a69d81a656ff38233d4f1aedc79e3317c45###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/FunctionTimer.java###/FunctionTimer.java###io.micrometer.core.instrument.FunctionTimer###mean:TimeUnit ###returncount()==0?0:totalTime(unit)/count();###count###count()###56:9:56:61
3b6e727952de7b020aa0878953d2e575c9aaf4c5###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/mongodb/MongoMetricsConnectionPoolListener.java###/MongoMetricsConnectionPoolListener.java###io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener###connectionAdded:ConnectionAddedEvent ###poolSize.get(event.getConnectionId().getServerId()).incrementAndGet();###gauge###poolSize.get(event.getConnectionId().getServerId())###108:9:109:36
e6ff3c2fe9542608a33a62b10fdf1222cd60feae###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/internal/TimedExecutorService.java###/TimedExecutorService.java###io.micrometer.core.instrument.internal.TimedExecutorService###TimedExecutorService:MeterRegistry ExecutorService String Iterable<Tag> ###this.executionTimer=registry.timer("executor",Tags.concat(tags,"name",executorServiceName));###finalTags###Tags.concat(tags,"name",executorServiceName)###43:9:43:106
a27bdc1fac39fdc3d33059f88e6caf19405b0826###/micrometer-metrics_micrometer/implementations/micrometer-registry-appoptics/src/main/java/io/micrometer/appoptics/AppOpticsMeterRegistry.java###/AppOpticsMeterRegistry.java###io.micrometer.appoptics.AppOpticsMeterRegistry###writeFunctionTimer:FunctionTimer ###returnOptional.of(write(timer.getId(),"functionTimer",Fields.Count.tag(),decimal(timer.count()),Fields.Sum.tag(),decimal(timer.totalTime(getBaseTimeUnit()))));###count###timer.count()###165:13:167:85
9cf7c93251381feac93e548d5f7d65ac55daf05a###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/distribution/TimeWindowMax.java###/TimeWindowMax.java###io.micrometer.core.instrument.distribution.TimeWindowMax###rotate:###longtimeSinceLastRotateMillis=clock.wallTime()-lastRotateTimestampMillis;###wallTime###clock.wallTime()###119:9:119:87
8207d1ab3848132c28672bcc1d69c6d6099b0939###/micrometer-metrics_micrometer/micrometer-core/src/test/java/io/micrometer/core/instrument/binder/jpa/HibernateMetricsTest.java###/HibernateMetricsTest.java###io.micrometer.core.instrument.binder.jpa.HibernateMetricsTest###shouldNotExposeMetricsWhenStatsNotEnabled:###HibernateMetrics.monitor(registry,createEntityManagerFactoryMock(false),"entityManagerFactory");###entityManagerFactory###createEntityManagerFactoryMock(false)###113:9:113:107
fc37580df416b1438a2f14e0f60b1009a6c42662###/micrometer-metrics_micrometer/implementations/micrometer-registry-statsd/src/main/java/io/micrometer/statsd/StatsdMeterRegistry.java###/StatsdMeterRegistry.java###io.micrometer.statsd.StatsdMeterRegistry###newMeter:Meter.Id Meter.Type Iterable<Measurement> ###processor.onNext(line.count((long)ms.getValue(),ms.getStatistic()))###stat###ms.getStatistic()###319:46:319:115
32afec08e7402ed8c5491672cb038e548edc0782###/micrometer-metrics_micrometer/implementations/micrometer-registry-azure-monitor/src/main/java/io/micrometer/azuremonitor/AzureMonitorMeterRegistry.java###/AzureMonitorMeterRegistry.java###io.micrometer.azuremonitor.AzureMonitorMeterRegistry###trackTimer:Timer ###mt.setCount(castCountToInt(timer.count()));###count###timer.count()###139:9:139:52
ae7d3cfcce5dcd834530365cfef9d9fd29e9ef4d###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/jvm/JvmGcMetrics.java###/JvmGcMetrics.java###io.micrometer.core.instrument.binder.jvm.JvmGcMetrics###JvmGcMetrics:Iterable<Tag> ###youngGenPoolName=mbean.getName();###name###mbean.getName()###77:17:77:52
3b6e727952de7b020aa0878953d2e575c9aaf4c5###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/mongodb/MongoMetricsConnectionPoolListener.java###/MongoMetricsConnectionPoolListener.java###io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener###waitQueueEntered:ConnectionPoolWaitQueueEnteredEvent ###waitQueueSize.get(event.getServerId()).incrementAndGet();###gauge###waitQueueSize.get(event.getServerId())###96:9:97:36
4a598db0e4b73af3dc88c794e87ac2038e38837f###/micrometer-metrics_micrometer/implementations/micrometer-registry-datadog/src/main/java/io/micrometer/datadog/DatadogNamingConvention.java###/DatadogNamingConvention.java###io.micrometer.datadog.DatadogNamingConvention###tagKey:String ###returnNamingConvention.camelCase.tagKey(key);###sanitized###key###55:9:55:55
84a0830654ad32191d7a5e2bcb530653e00cf19a###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/kafka/KafkaMetrics.java###/KafkaMetrics.java###io.micrometer.core.instrument.binder.kafka.KafkaMetrics###checkAndBindMetrics:MeterRegistry ###this.metrics.set(this.metricsSupplier.get());###currentMetrics###this.metricsSupplier.get()###163:9:163:54
ad00dcd994d09d1979f3777f743f8358657261f9###/micrometer-metrics_micrometer/implementations/micrometer-registry-azure-monitor/src/main/java/io/micrometer/azuremonitor/AzureMonitorMeterRegistry.java###/AzureMonitorMeterRegistry.java###io.micrometer.azuremonitor.AzureMonitorMeterRegistry###trackTimer:Timer ###mt.setCount(castCountToInt(timer.count()));###count###timer.count()###151:9:151:52
d415f85fe3789e83581b819db3f45458aad916dc###/micrometer-metrics_micrometer/implementations/micrometer-registry-elastic/src/main/java/io/micrometer/elastic/ElasticMeterRegistry.java###/ElasticMeterRegistry.java###io.micrometer.elastic.ElasticMeterRegistry###writeFunctionTimer:FunctionTimer ###builder.append(",\"mean\":").append(timer.mean(getBaseTimeUnit()));###mean###timer.mean(getBaseTimeUnit())###326:17:326:84
0411360c503123bb2a0486c563d239bdb5006241###/micrometer-metrics_micrometer/implementations/micrometer-registry-humio/src/main/java/io/micrometer/humio/HumioMeterRegistry.java###/HumioMeterRegistry.java###io.micrometer.humio.HumioMeterRegistry###writeEvent:OutputStream Meter long Consumer<StringBuilder> ###sb.append(",\"").append(tag.getKey()).append("\":\"").append(tag.getValue()).append('"');###key###tag.getKey()###246:13:246:102
b6f1218bdc84d97eeb64b7f4b559009f808c6672###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram.java###/FixedBoundaryVictoriaMetricsHistogram.java###io.micrometer.core.instrument.distribution.FixedBoundaryVictoriaMetricsHistogram###getBucketIdxAndOffset:double ###doublem=((value/Math.pow(10,e10))-1)*DECIMAL_MULTIPLIER;###pow###Math.pow(10,e10)###155:9:155:75
a5f14597ec68c27ee3faf2ad064e25c991565688###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/jetty/JettyConnectionMetrics.java###/JettyConnectionMetrics.java###io.micrometer.core.instrument.binder.jetty.JettyConnectionMetrics###onOpened:Connection ###connectionSamples.put(connection,Timer.start(registry));###started###Timer.start(registry)###113:13:113:70
8882febba7c1204e05088bc2a9e996a1dd508d31###/micrometer-metrics_micrometer/implementations/micrometer-registry-statsd/src/test/java/io/micrometer/statsd/StatsdMeterRegistryTest.java###/StatsdMeterRegistryTest.java###io.micrometer.statsd.StatsdMeterRegistryTest###summarySentAsDatadogDistribution_whenPercentileHistogramEnabled:###registry=StatsdMeterRegistry.builder(configWithFlavor(StatsdFlavor.DATADOG)).clock(clock).lineSink(toLineSink(lines)).build();###config###configWithFlavor(StatsdFlavor.DATADOG)###376:9:379:26
f134f4051f791f521516c1e5eee5c9994ff78189###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/ipc/http/HttpUrlConnectionSender.java###/HttpUrlConnectionSender.java###io.micrometer.core.ipc.http.HttpUrlConnectionSender###send:Request ###con.setRequestMethod(request.getMethod().toString());###method###request.getMethod()###51:13:51:66
92b331cea76367c5c1690ea252a095e3cd4de0e7###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/okhttp3/OkHttpMetricsEventListener.java###/OkHttpMetricsEventListener.java###io.micrometer.core.instrument.binder.okhttp3.OkHttpMetricsEventListener###time:CallState ###Stringuri=state.response==null?"UNKNOWN":(state.response.code()==404||state.response.code()==301?"NOT_FOUND":urlMapper.apply(state.request));###request###state.request###103:9:104:123
b2a679dd4fae23f097a6d58698c5427eaa2f0e92###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/mongodb/MongoMetricsConnectionPoolListener.java###/MongoMetricsConnectionPoolListener.java###io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener###registerGauge:ServerId String String Map<ServerId,AtomicInteger> ###metrics.put(serverId,newAtomicInteger());###value###newAtomicInteger()###121:9:121:52
28d3c605be81f4d83aa5ad93266bf691fa9c492d###/micrometer-metrics_micrometer/implementations/micrometer-registry-datadog/src/main/java/io/micrometer/datadog/DatadogMeterRegistry.java###/DatadogMeterRegistry.java###io.micrometer.datadog.DatadogMeterRegistry###publish:###httpClient.post(datadogEndpoint).withJsonContent(batch.stream().flatMap(meter->meter.apply(m->writeMeter(m,metadataToSend),m->writeMeter(m,metadataToSend),timer->writeTimer(timer,metadataToSend),summary->writeSummary(summary,metadataToSend),m->writeMeter(m,metadataToSend),m->writeMeter(m,metadataToSend),m->writeMeter(m,metadataToSend),timer->writeTimer(timer,metadataToSend),m->writeMeter(m,metadataToSend))).collect(joining(",","{\"series\":[","]}"))).send().onSuccess(response->logger.debug("successfullysent{}metricstodatadog",batch.size())).onError(response->logger.error("failedtosendmetricstodatadog:{}",response.body()));###body###batch.stream().flatMap(meter->meter.apply(m->writeMeter(m,metadataToSend),m->writeMeter(m,metadataToSend),timer->writeTimer(timer,metadataToSend),summary->writeSummary(summary,metadataToSend),m->writeMeter(m,metadataToSend),m->writeMeter(m,metadataToSend),m->writeMeter(m,metadataToSend),timer->writeTimer(timer,metadataToSend),m->writeMeter(m,metadataToSend))).collect(joining(",","{\"series\":[","]}"))###107:17:122:118
2a0478a97d931ef52216be43697f1a87903e1474###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/mongodb/MongoMetricsConnectionPoolListener.java###/MongoMetricsConnectionPoolListener.java###io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener###registerGauge:ServerId String String Map<ServerId,AtomicInteger> ###metrics.put(serverId,newAtomicInteger());###value###newAtomicInteger()###119:9:119:52
f5ea2a69d81a656ff38233d4f1aedc79e3317c45###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/DistributionSummary.java###/DistributionSummary.java###io.micrometer.core.instrument.DistributionSummary###mean:###returncount()==0?0:totalAmount()/count();###count###count()###62:9:62:59
80ceae7fce6432a810801de5b9c3f104b9ab5cf4###/micrometer-metrics_micrometer/implementations/micrometer-registry-cloudwatch/src/main/java/io/micrometer/cloudwatch/CloudWatchMeterRegistry.java###/CloudWatchMeterRegistry.java###io.micrometer.cloudwatch.CloudWatchMeterRegistry.Batch###timerData:Timer ###metrics.add(metricDatum(timer.getId(),"count","count",timer.count()));###count###timer.count()###175:13:175:86
f4a3e6fb6d0d65785e5415b500fe92f63f82614a###/micrometer-metrics_micrometer/implementations/micrometer-registry-kairos/src/main/java/io/micrometer/kairos/KairosMeterRegistry.java###/KairosMeterRegistry.java###io.micrometer.kairos.KairosMeterRegistry###writeFunctionCounter:FunctionCounter ###returnStream.of(writeMetric(counter.getId(),config().clock().wallTime(),counter.count()));###count###counter.count()###138:9:138:102
d272f8468f959ca40201cc7c4c3abac0de515c2c###/micrometer-metrics_micrometer/micrometer-spring-legacy/src/main/java/io/micrometer/spring/web/ControllerMetrics.java###/ControllerMetrics.java###io.micrometer.spring.web.ControllerMetrics###tagWithException:Throwable ###RequestContextHolder.getRequestAttributes().setAttribute(EXCEPTION_ATTRIBUTE,t,RequestAttributes.SCOPE_REQUEST);###attributes###RequestContextHolder.getRequestAttributes()###65:9:65:123
4a598db0e4b73af3dc88c794e87ac2038e38837f###/micrometer-metrics_micrometer/implementations/micrometer-registry-datadog/src/main/java/io/micrometer/datadog/DatadogNamingConvention.java###/DatadogNamingConvention.java###io.micrometer.datadog.DatadogNamingConvention###name:String Meter.Type String ###Stringsanitized=NamingConvention.camelCase.name(name,type,baseUnit);###sanitized###name###33:9:33:82
a27bdc1fac39fdc3d33059f88e6caf19405b0826###/micrometer-metrics_micrometer/implementations/micrometer-registry-appoptics/src/main/java/io/micrometer/appoptics/AppOpticsMeterRegistry.java###/AppOpticsMeterRegistry.java###io.micrometer.appoptics.AppOpticsMeterRegistry###writeLongTaskTimer:LongTaskTimer ###returnOptional.of(write(timer.getId(),"longTaskTimer",Fields.Count.tag(),decimal(timer.activeTasks()),Fields.Sum.tag(),decimal(timer.duration(getBaseTimeUnit()))));###activeTasks###timer.activeTasks()###199:13:201:84
acce709987b6434c8b5ed492dd230070adb6868f###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/config/validate/PropertyValidator.java###/PropertyValidator.java###io.micrometer.core.instrument.config.validate.PropertyValidator###getTimeUnit:MeterRegistryConfig String ###returnDurationValidator.validateTimeUnit(prefixedProperty(config,property),config.get(prefixedProperty(config,property)));###prefixedProperty###prefixedProperty(config,property)###40:9:41:65
5ae0349c5b032a6f788b05e68f2f61376c748a5e###/micrometer-metrics_micrometer/micrometer-core/src/test/java/io/micrometer/core/instrument/binder/jpa/HibernateMetricsTest.java###/HibernateMetricsTest.java###io.micrometer.core.instrument.binder.jpa.HibernateMetricsTest###shouldNotExposeMetricsWhenStatsNotEnabled:###HibernateMetrics.monitor(registry,createEntityManagerFactoryMock(false),"entityManagerFactory");###entityManagerFactory###createEntityManagerFactoryMock(false)###112:9:112:107
cba21899806743f4a5afe6c4979a8403a616b07e###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/LongTaskTimer.java###/LongTaskTimer.java###io.micrometer.core.instrument.LongTaskTimer###mean:TimeUnit ###returnactiveTasks()==0?0:duration(unit)/activeTasks();###activeTasks###activeTasks()###147:9:147:72
c39283c8240d4f9d142ed6cffaf17d83ef55d658###/micrometer-metrics_micrometer/implementations/micrometer-registry-azure-monitor/src/main/java/io/micrometer/azuremonitor/AzureMonitorMeterRegistry.java###/AzureMonitorMeterRegistry.java###io.micrometer.azuremonitor.AzureMonitorMeterRegistry###trackDistributionSummary:DistributionSummary ###mt.setCount(castCountToInt(summary.count()));###count###summary.count()###128:9:128:54
5ac9d36b412102e05f5d516894d399fc3e3fcf94###/micrometer-metrics_micrometer/implementations/micrometer-registry-influx/src/main/java/io/micrometer/influx/InfluxMeterRegistry.java###/InfluxMeterRegistry.java###io.micrometer.influx.InfluxMeterRegistry###createDatabaseIfNecessary:###httpClient.post(config.uri()+"/query?q="+URLEncoder.encode(createDatabaseQuery,"UTF-8")).withBasicAuthentication(config.userName(),config.password()).send().onSuccess(response->{logger.debug("influxdatabase{}isreadytoreceivemetrics",config.db());databaseExists=true;}).onError(response->logger.error("unabletocreatedatabase'{}':{}",config.db(),response.body()));###requestBuilder###httpClient.post(config.uri()+"/query?q="+URLEncoder.encode(createDatabaseQuery,"UTF-8")).withBasicAuthentication(config.userName(),config.password())###88:13:96:124
14476a06d4b146b006016109f8ec1f38e2a36c2d###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/MeterRegistry.java###/MeterRegistry.java###io.micrometer.core.instrument.MeterRegistry###accept:Meter.Id ###if(filter.accept(id)==MeterFilterReply.DENY)###reply###filter.accept(id)###601:13:602:30
c66f5556e31fe3ca363b40f2fd86b8d6d6f85c00###/micrometer-metrics_micrometer/implementations/micrometer-registry-azure-monitor/src/main/java/io/micrometer/azuremonitor/AzureMonitorMeterRegistry.java###/AzureMonitorMeterRegistry.java###io.micrometer.azuremonitor.AzureMonitorMeterRegistry###trackFunctionCounter:FunctionCounter ###mt.setValue(counter.count());###count###counter.count()###149:9:149:38
3f96ab8966afbfe1d22efd06ba930b1be677c59a###/micrometer-metrics_micrometer/src/main/java/org/springframework/metrics/collector/prometheus/PrometheusMetricCollector.java###/PrometheusMetricCollector.java###org.springframework.metrics.collector.prometheus.PrometheusMetricCollector###withNameAndTags:SimpleCollector.Builder<B,C> String Iterable<Tag> ###returnbuilder.name(name).help("").labelNames(StreamSupport.stream(tags.spliterator(),false).map(Tag::getKey).collect(Collectors.toList()).toArray(newString[]{})).register(registry).labels(StreamSupport.stream(tags.spliterator(),false).map(Tag::getValue).collect(Collectors.toList()).toArray(newString[]{}));###collector###builder.name(name).help("").labelNames(StreamSupport.stream(tags.spliterator(),false).map(Tag::getKey).collect(Collectors.toList()).toArray(newString[]{})).register(registry)###61:9:72:51
d6dba6c861c2a0e635dcbf0551eb32478010310c###/micrometer-metrics_micrometer/src/main/java/org/springframework/metrics/instrument/prometheus/PrometheusMeterRegistry.java###/PrometheusMeterRegistry.java###org.springframework.metrics.instrument.prometheus.PrometheusMeterRegistry.register.collector.new Collector###collect:###returnCollections.singletonList(newMetricFamilySamples(meter.getName(),Type.UNTYPED,"",samples));###type###Type.UNTYPED###162:17:162:120
08029d9eb83cd16c02ae7c550cb473e4cc70f432###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/mongodb/MongoMetricsConnectionPoolListener.java###/MongoMetricsConnectionPoolListener.java###io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener###connectionRemoved:ConnectionRemovedEvent ###poolSize.get(event.getConnectionId().getServerId()).decrementAndGet();###gauge###poolSize.get(event.getConnectionId().getServerId())###116:9:117:36
0823a83fc4fe49e24a6e36a608beb61f0c990326###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/cache/JCacheMetrics.java###/JCacheMetrics.java###io.micrometer.core.instrument.binder.cache.JCacheMetrics###JCacheMetrics:Cache<?,?> Iterable<Tag> ###StringcacheManagerUri=cache.getCacheManager().getURI().toString().replace(':','.');###cacheManager###cache.getCacheManager()###80:13:81:40
b835dfe9310ef0ac0202885f1547b85f3d0832b8###/micrometer-metrics_micrometer/implementations/micrometer-registry-datadog/src/main/java/io/micrometer/datadog/DatadogMeterRegistry.java###/DatadogMeterRegistry.java###io.micrometer.datadog.DatadogMeterRegistry###publish:###postTimeSeriesEndpoint=URI.create(config.uri()+"/api/v1/series?api_key="+config.apiKey()).toURL();###uriString###config.uri()+"/api/v1/series?api_key="+config.apiKey()###75:13:75:117
80ceae7fce6432a810801de5b9c3f104b9ab5cf4###/micrometer-metrics_micrometer/implementations/micrometer-registry-cloudwatch2/src/main/java/io/micrometer/cloudwatch2/CloudWatchMeterRegistry.java###/CloudWatchMeterRegistry.java###io.micrometer.cloudwatch2.CloudWatchMeterRegistry.Batch###functionTimerData:FunctionTimer ###MetricDatumcount=metricDatum(timer.getId(),"count",timer.count());###count###timer.count()###215:13:215:83
57c476d0519f98ac4a0c3b6b91235e9826dcb63b###/micrometer-metrics_micrometer/micrometer-observation-test/src/main/java/io/micrometer/core/tck/ObservationRegistryCompatibilityKit.java###/ObservationRegistryCompatibilityKit.java###io.micrometer.core.tck.ObservationRegistryCompatibilityKit###supplierShouldNotBeParentScopedIfParentIsNull:###Observation.tryScoped(null,()->{assertThat(registry.getCurrentObservation()).isNull();return"test";});###supplier###()->{assertThat(registry.getCurrentObservation()).isNull();return"test";}###366:9:371:20
c39283c8240d4f9d142ed6cffaf17d83ef55d658###/micrometer-metrics_micrometer/implementations/micrometer-registry-azure-monitor/src/main/java/io/micrometer/azuremonitor/AzureMonitorMeterRegistry.java###/AzureMonitorMeterRegistry.java###io.micrometer.azuremonitor.AzureMonitorMeterRegistry###trackFunctionTimer:FunctionTimer ###mt.setCount(castCountToInt(timer.count()));###count###timer.count()###146:9:146:52
c66f5556e31fe3ca363b40f2fd86b8d6d6f85c00###/micrometer-metrics_micrometer/implementations/micrometer-registry-azure-monitor/src/main/java/io/micrometer/azuremonitor/AzureMonitorMeterRegistry.java###/AzureMonitorMeterRegistry.java###io.micrometer.azuremonitor.AzureMonitorMeterRegistry###trackCounter:Counter ###mt.setValue(counter.count());###count###counter.count()###142:9:142:38
f14111e9c92f20b8494f7e8117929189f3ff9859###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/logging/LoggingMeterRegistry.java###/LoggingMeterRegistry.java###io.micrometer.core.instrument.logging.LoggingMeterRegistry###publish:###loggingSink.accept(print.id()+"throughput="+print.unitlessRate(snapshot.count())+"mean="+print.time(snapshot.mean(getBaseTimeUnit()))+"max="+print.time(snapshot.max(getBaseTimeUnit())));###count###snapshot.count()###116:37:118:100
64d83226531fffb795a089c8a6d10c1408c0e56c###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/ipc/http/OkHttpSender.java###/OkHttpSender.java###io.micrometer.core.ipc.http.OkHttpSender###send:Request ###requestBuilder.method(request.getMethod().toString(),body);###requestMethod###request.getMethod().toString()###46:13:46:73
f14111e9c92f20b8494f7e8117929189f3ff9859###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/logging/LoggingMeterRegistry.java###/LoggingMeterRegistry.java###io.micrometer.core.instrument.logging.LoggingMeterRegistry###publish:###loggingSink.accept(print.id()+"throughput="+print.unitlessRate(snapshot.count())+"mean="+print.value(snapshot.mean())+"max="+print.value(snapshot.max()));###count###snapshot.count()###123:37:125:84
ce53b1ca88e19f56a3df296127b23211c21cd423###/micrometer-metrics_micrometer/implementations/micrometer-registry-statsd/src/test/java/io/micrometer/statsd/internal/BufferingFluxTest.java###/BufferingFluxTest.java###io.micrometer.statsd.internal.BufferingFluxTest###bufferMessagesCanBeAppended:###Flux<String>source=Flux.just(stats.toArray(newString[0])).delayElements(Duration.ofMillis(1));###lines###stats.toArray(newString[0])###126:9:127:54
08029d9eb83cd16c02ae7c550cb473e4cc70f432###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/mongodb/MongoMetricsConnectionPoolListener.java###/MongoMetricsConnectionPoolListener.java###io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener###waitQueueExited:ConnectionPoolWaitQueueExitedEvent ###waitQueueSize.get(event.getServerId()).decrementAndGet();###gauge###waitQueueSize.get(event.getServerId())###104:9:105:36
a99d397ccf95c6b34fc10e7bc395564d203e48f4###/micrometer-metrics_micrometer/micrometer-core/src/test/java/io/micrometer/core/ipc/http/RequestTest.java###/RequestTest.java###io.micrometer.core.ipc.http.RequestTest###compressShouldAddContentEncodingHeader:###HttpSender.Request.Builderbuilder=HttpSender.Request.build("https://micrometer.io/",mock(HttpSender.class)).compress();###sender###mock(HttpSender.class)###36:9:36:132
3bd86b6540e938e1f485ce4619120d74a77357a5###/micrometer-metrics_micrometer/implementations/micrometer-registry-new-relic/src/main/java/io/micrometer/newrelic/NewRelicMeterRegistry.java###/NewRelicMeterRegistry.java###io.micrometer.newrelic.NewRelicMeterRegistry###writeFunctionCounter:FunctionCounter ###returnStream.of(event(counter.getId(),newAttribute("throughput",counter.count())));###count###counter.count()###126:9:126:96
a27bdc1fac39fdc3d33059f88e6caf19405b0826###/micrometer-metrics_micrometer/implementations/micrometer-registry-appoptics/src/main/java/io/micrometer/appoptics/AppOpticsMeterRegistry.java###/AppOpticsMeterRegistry.java###io.micrometer.appoptics.AppOpticsMeterRegistry###writeFunctionCounter:FunctionCounter ###returnOptional.of(write(counter.getId(),"functionCounter",Fields.Value.tag(),decimal(counter.count())));###count###counter.count()###157:13:157:121
cd656654958acb62606ed3a0b5a70b61c09c97cc###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/ipc/http/OkHttpSender.java###/OkHttpSender.java###io.micrometer.core.ipc.http.OkHttpSender###send:Request ###StringrequestMethod=request.getMethod().toString();###method###request.getMethod()###52:9:52:63
d12078a5867492f77ea315106fe82a6fcf73e14c###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/dropwizard/DropwizardTimer.java###/DropwizardTimer.java###io.micrometer.core.instrument.dropwizard.DropwizardTimer###record:long TimeUnit ###totalTime.addAndGet(TimeUnit.NANOSECONDS.convert(amount,unit));###nanoAmount###TimeUnit.NANOSECONDS.convert(amount,unit)###41:13:41:77
70220c7d1f9f20762282a08587e9866800676634###/micrometer-metrics_micrometer/micrometer-jersey2/src/main/java/io/micrometer/jersey2/server/MetricsRequestEventListener.java###/MetricsRequestEventListener.java###io.micrometer.jersey2.server.MetricsRequestEventListener###onEvent:RequestEvent ###shortTaskTimings.put(event.getContainerRequest(),Timer.Sample.start(registry));###containerRequest###event.getContainerRequest()###70:17:70:97
347f6ed26b465225e692ed4a9938be6fe92a5ebe###/micrometer-metrics_micrometer/implementations/micrometer-registry-elastic/src/main/java/io/micrometer/elastic/ElasticMeterRegistry.java###/ElasticMeterRegistry.java###io.micrometer.elastic.ElasticMeterRegistry###createIndexTemplateIfNeeded:###httpClient.put(config.host()+ES_METRICS_TEMPLATE).withBasicAuthentication(config.userName(),config.password()).withJsonContent(TEMPLATE_BODY).send().onError(response->logger.error("failedtoaddmetricstemplatetoelastic:{}",response.body()));###uri###config.host()+ES_METRICS_TEMPLATE###137:13:141:122
74f4a413b032419a22d60e889ecac0c14b5d030e###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/jetty/JettyClientMetrics.java###/JettyClientMetrics.java###io.micrometer.core.instrument.binder.jetty.JettyClientMetrics###onQueued:Request ###DistributionSummary.builder(contentSizeMetricName).description("ContentsizesforJettyHTTPclientrequests").tags(tagsProvider.httpRequestTags(result)).register(registry).record(requestLength);###httpRequestTags###tagsProvider.httpRequestTags(result)###56:17:60:48
aa612899f12a2aa6863c2c73370a9e29037ca9f3###/micrometer-metrics_micrometer/implementations/micrometer-registry-elastic/src/main/java/io/micrometer/elastic/ElasticMeterRegistry.java###/ElasticMeterRegistry.java###io.micrometer.elastic.ElasticMeterRegistry###createIndexTemplateIfNeeded:###httpClient.put(config.host()+ES_METRICS_TEMPLATE).withBasicAuthentication(config.userName(),config.password()).withJsonContent(TEMPLATE_BODY).send().onError(response->logger.error("failedtoaddmetricstemplatetoelastic:{}",response.body()));###uri###config.host()+ES_METRICS_TEMPLATE###131:13:135:122
ab1d0bbbb8bcb299c76e8f511fbe2b0fe8ef8deb###/micrometer-metrics_micrometer/implementations/micrometer-registry-wavefront/src/test/java/io/micrometer/wavefront/WavefrontMeterRegistryTest.java###/WavefrontMeterRegistryTest.java###io.micrometer.wavefront.WavefrontMeterRegistryTest###configureDefaultSenderWithCustomConfig:###WavefrontClientsender=WavefrontMeterRegistry.getDefaultSenderBuilder(customConfig).build();###builder###WavefrontMeterRegistry.getDefaultSenderBuilder(customConfig)###155:9:155:103
08029d9eb83cd16c02ae7c550cb473e4cc70f432###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/mongodb/MongoMetricsConnectionPoolListener.java###/MongoMetricsConnectionPoolListener.java###io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener###connectionAdded:ConnectionAddedEvent ###poolSize.get(event.getConnectionId().getServerId()).incrementAndGet();###gauge###poolSize.get(event.getConnectionId().getServerId())###110:9:111:36
8fc97f8e029530b7ef422156e847f1d75391761e###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/internal/DefaultLongTaskTimer.java###/DefaultLongTaskTimer.java###io.micrometer.core.instrument.internal.DefaultLongTaskTimer###takeSnapshot:###percentileValue=priorActiveTask.duration(TimeUnit.NANOSECONDS)+((percentileValue-priorActiveTask.duration(TimeUnit.NANOSECONDS))*(rank-(int)rank));###priorPercentileValue###priorActiveTask.duration(TimeUnit.NANOSECONDS)###160:29:162:66
df585bf82c3acde899e5ab1a6d40c92154ac31ab###/micrometer-metrics_micrometer/implementations/micrometer-registry-dynatrace/src/main/java/io/micrometer/dynatrace/DynatraceConfig.java###/DynatraceConfig.java###io.micrometer.dynatrace.DynatraceConfig###uri:###returngetUrlString(this,"uri").required().get();###uri###getUrlString(this,"uri")###52:13:52:63
b6f1218bdc84d97eeb64b7f4b559009f808c6672###/micrometer-metrics_micrometer/implementations/micrometer-registry-prometheus/src/main/java/io/micrometer/prometheus/PrometheusMeterRegistry.java###/PrometheusMeterRegistry.java###io.micrometer.prometheus.PrometheusMeterRegistry###newTimer:Meter.Id DistributionStatisticConfig PauseDetector ###samples.add(newCollector.MetricFamilySamples.Sample(conventionName+"_bucket",histogramKeys,histogramValues,c.count()));###sampleName###conventionName+"_bucket"###230:29:231:109
f760e2441ee5724971a37af9857f33d32dc3174b###/micrometer-metrics_micrometer/micrometer-spring-legacy/src/main/java/io/micrometer/spring/SpringEnvironmentMeterFilter.java###/SpringEnvironmentMeterFilter.java###io.micrometer.spring.SpringEnvironmentMeterFilter###get:String Class<V> ###returnconversionService.convert(environment.getProperty("spring.metrics.filter."+k),vClass);###val###environment.getProperty("spring.metrics.filter."+k)###38:13:38:109
6688f1f30a20123d396e62f8cdaae2103778aaea###/micrometer-metrics_micrometer/implementations/micrometer-registry-elastic/src/main/java/io/micrometer/elastic/ElasticMeterRegistry.java###/ElasticMeterRegistry.java###io.micrometer.elastic.ElasticMeterRegistry###writeFunctionTimer:FunctionTimer ###builder.append(",\"sum\":").append(timer.totalTime(getBaseTimeUnit()));###sum###timer.totalTime(getBaseTimeUnit())###323:13:323:85
de39a2495abb8ba0a49f1cf7ed0de86a4771d4b0###/micrometer-metrics_micrometer/implementations/micrometer-registry-elastic/src/main/java/io/micrometer/elastic/ElasticMeterRegistry.java###/ElasticMeterRegistry.java###io.micrometer.elastic.ElasticMeterRegistry###publish:###logger.debug("successfullysent{}metricstoelastic",batch.size());###numberOfSentItems###batch.size()###172:33:172:103
eaee83043b9367c88ae6becb0e754cec446ff176###/micrometer-metrics_micrometer/implementations/micrometer-registry-prometheus/src/test/java/io/micrometer/prometheus/PrometheusMeterRegistryTest.java###/PrometheusMeterRegistryTest.java###io.micrometer.prometheus.PrometheusMeterRegistryTest###openMetricsScrapeWithExemplars:###assertThat(registry.scrape(TextFormat.CONTENT_TYPE_OPENMETRICS_100)).startsWith("#TYPEmy_countercounter\n").contains("#HELPmy_counter\n").contains("my_counter_total1.0#{span_id=\"testSpanId\",trace_id=\"testTraceId\"}1.0").endsWith("#EOF\n");###scraped###registry.scrape(TextFormat.CONTENT_TYPE_OPENMETRICS_100)###649:9:653:38
374282344019860b0c90d79d26940bd2ffdbf41b###/micrometer-metrics_micrometer/implementations/micrometer-registry-kairos/src/main/java/io/micrometer/kairos/KairosMeterRegistry.java###/KairosMeterRegistry.java###io.micrometer.kairos.KairosMeterRegistry###writeFunctionCounter:FunctionCounter ###returnStream.of(writeMetric(counter.getId(),config().clock().wallTime(),counter.count()));###count###counter.count()###135:9:135:102
ac69c4935749806d63f4dad9dab6045251c53704###/micrometer-metrics_micrometer/implementations/micrometer-registry-stackdriver/src/main/java/io/micrometer/stackdriver/StackdriverMeterRegistry.java###/StackdriverMeterRegistry.java###io.micrometer.stackdriver.StackdriverMeterRegistry.Batch###createMetricDescriptorIfNecessary:MetricServiceClient Meter.Id MetricDescriptor.ValueType String ###MetricDescriptordescriptor=MetricDescriptor.newBuilder().setType(metricType(id,statistic)).setDescription(id.getDescription()==null?"":id.getDescription()).setMetricKind(MetricDescriptor.MetricKind.GAUGE).setValueType(valueType).build();###metricType###metricType(id,statistic)###363:17:368:34
ae7d3cfcce5dcd834530365cfef9d9fd29e9ef4d###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/jvm/JvmGcMetrics.java###/JvmGcMetrics.java###io.micrometer.core.instrument.binder.jvm.JvmGcMetrics###bindTo:MeterRegistry ###Timer.builder("jvm.gc.concurrent.phase.time").tags(tags).tags("action",notificationInfo.getGcAction(),"cause",notificationInfo.getGcCause()).description("Timespentinconcurrentphase").register(registry).record(notificationInfo.getGcInfo().getDuration(),TimeUnit.MILLISECONDS);###gcCause###notificationInfo.getGcCause()###124:33:129:116
652e46131a3c74519ac7d3204c4377db63985cc6###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/logging/LogbackMetrics.java###/LogbackMetrics.java###io.micrometer.core.instrument.binder.logging.LogbackMetrics###bindTo:MeterRegistry ###context.addTurboFilter(newMetricsTurboFilter(registry,tags));###filter###newMetricsTurboFilter(registry,tags)###55:9:55:72
daad7f3a7b83ab00217245b5fa68e2ee61464915###/micrometer-metrics_micrometer/implementations/micrometer-registry-new-relic/src/main/java/io/micrometer/newrelic/NewRelicMeterRegistry.java###/NewRelicMeterRegistry.java###io.micrometer.newrelic.NewRelicMeterRegistry###writeCounter:FunctionCounter ###returnStream.of(event(counter.getId(),newAttribute("throughput",counter.count())));###count###counter.count()###130:9:130:96
a27bdc1fac39fdc3d33059f88e6caf19405b0826###/micrometer-metrics_micrometer/implementations/micrometer-registry-appoptics/src/main/java/io/micrometer/appoptics/AppOpticsMeterRegistry.java###/AppOpticsMeterRegistry.java###io.micrometer.appoptics.AppOpticsMeterRegistry###writeCounter:Counter ###returnOptional.of(write(counter.getId(),"counter",Fields.Value.tag(),decimal(counter.count())));###count###counter.count()###148:13:148:113
fecfcb0c4c7e383acc14c65124825d0851736656###/micrometer-metrics_micrometer/implementations/micrometer-registry-humio/src/main/java/io/micrometer/humio/HumioMeterRegistry.java###/HumioMeterRegistry.java###io.micrometer.humio.HumioMeterRegistry.Batch###writeFunctionCounter:FunctionCounter ###returnwriteEvent(counter,event("count",counter.count()));###count###counter.count()###191:13:191:73
190abf2e0a529b76acdc839f30a5bbc22cb58fa9###/micrometer-metrics_micrometer/implementations/micrometer-registry-graphite/src/main/java/io/micrometer/graphite/GraphiteMeterRegistry.java###/GraphiteMeterRegistry.java###io.micrometer.graphite.GraphiteMeterRegistry###defaultGraphiteReporter:GraphiteConfig Clock MetricRegistry ###sender=newGraphite(newInetSocketAddress(config.host(),config.port()));###address###newInetSocketAddress(config.host(),config.port())###62:17:62:92
4d38516898f420c6fbafbaa41e729d1eaf5ff797###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/spectator/step/FunctionTrackingStepCounter.java###/FunctionTrackingStepCounter.java###io.micrometer.core.instrument.spectator.step.FunctionTrackingStepCounter###pollFunction:###longabsoluteCount=(long)f.applyAsDouble(ref.get());###t###ref.get()###67:13:67:68
5ae0349c5b032a6f788b05e68f2f61376c748a5e###/micrometer-metrics_micrometer/micrometer-core/src/test/java/io/micrometer/core/instrument/binder/jpa/HibernateMetricsTest.java###/HibernateMetricsTest.java###io.micrometer.core.instrument.binder.jpa.HibernateMetricsTest###shouldExposeMetricsWhenStatsEnabled:###HibernateMetrics.monitor(registry,createEntityManagerFactoryMock(true),"entityManagerFactory");###entityManagerFactory###createEntityManagerFactoryMock(true)###62:9:62:106
32afec08e7402ed8c5491672cb038e548edc0782###/micrometer-metrics_micrometer/implementations/micrometer-registry-azure-monitor/src/main/java/io/micrometer/azuremonitor/AzureMonitorMeterRegistry.java###/AzureMonitorMeterRegistry.java###io.micrometer.azuremonitor.AzureMonitorMeterRegistry###trackDistributionSummary:DistributionSummary ###mt.setCount(castCountToInt(summary.count()));###count###summary.count()###130:9:130:54
f5ea2a69d81a656ff38233d4f1aedc79e3317c45###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/Timer.java###/Timer.java###io.micrometer.core.instrument.Timer###mean:TimeUnit ###returncount()==0?0:totalTime(unit)/count();###count###count()###190:9:190:61
0f877f64f9905f0e2ffe13350baa28b398ba35ae###/micrometer-metrics_micrometer/implementations/micrometer-registry-influx/src/main/java/io/micrometer/influx/InfluxMeterRegistry.java###/InfluxMeterRegistry.java###io.micrometer.influx.InfluxMeterRegistry###writeMeter:Meter ###fields.add(newField(fieldKey,measurement.getValue()));###value###measurement.getValue()###233:13:233:69
df585bf82c3acde899e5ab1a6d40c92154ac31ab###/micrometer-metrics_micrometer/implementations/micrometer-registry-dynatrace/src/main/java/io/micrometer/dynatrace/DynatraceConfig.java###/DynatraceConfig.java###io.micrometer.dynatrace.DynatraceConfig###apiToken:###returngetSecret(this,"apiToken").required().get();###secret###getSecret(this,"apiToken")###45:13:45:65
c6a99f1742b0c337bf477bf384df060f8a144f00###/micrometer-metrics_micrometer/implementations/micrometer-registry-cloudwatch/src/main/java/io/micrometer/cloudwatch/CloudWatchMeterRegistry.java###/CloudWatchMeterRegistry.java###io.micrometer.cloudwatch.CloudWatchMeterRegistry###sendMetricData:List<MetricDatum> ###latch.await(config.readTimeout().toMillis(),TimeUnit.MILLISECONDS);###readTimeoutMillis###config.readTimeout().toMillis()###124:13:124:81
7e9b5b73d3f49d6dd038a6e8a6b5134501788295###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/kafka/KafkaMetrics.java###/KafkaMetrics.java###io.micrometer.core.instrument.binder.kafka.KafkaMetrics###checkAndBindMetrics:MeterRegistry ###bindMeter(registry,metric,meterName,meterTags(metric));###tags###meterTags(metric)###188:21:188:79
e73018a4dc8df433a09ea03ee18c5cbb2e8d0958###/micrometer-metrics_micrometer/implementations/micrometer-registry-appoptics/src/main/java/io/micrometer/appoptics/AppOpticsMeterRegistry.java###/AppOpticsMeterRegistry.java###io.micrometer.appoptics.AppOpticsMeterRegistry###writeTimeGauge:TimeGauge ###returnOptional.of(write(timeGauge.getId(),"timeGauge",Fields.Value.tag(),decimal(timeGauge.value(getBaseTimeUnit()))));###value###timeGauge.value(getBaseTimeUnit())###142:9:142:132
8fc97f8e029530b7ef422156e847f1d75391761e###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/internal/DefaultLongTaskTimer.java###/DefaultLongTaskTimer.java###io.micrometer.core.instrument.internal.DefaultLongTaskTimer.SampleImpl###toString:###return"SampleImpl{"+"duration(seconds)="+duration(TimeUnit.SECONDS)+","+"duration(nanos)="+duration(TimeUnit.NANOSECONDS)+","+"startTimeNanos="+startTime+'}';###durationInNanoseconds###duration(TimeUnit.NANOSECONDS)###229:13:233:25
8843b9b56c41d7a0c31d35a4945a3f03471ff84f###/micrometer-metrics_micrometer/implementations/micrometer-registry-influx/src/main/java/io/micrometer/influx/InfluxMeterRegistry.java###/InfluxMeterRegistry.java###io.micrometer.influx.InfluxMeterRegistry###writeMeter:Meter ###fields.add(newField(fieldKey,measurement.getValue()));###value###measurement.getValue()###156:13:156:69
4e5d0f0d4d9b89bab276e76a983f4aff66f1ea8a###/micrometer-metrics_micrometer/implementations/micrometer-registry-opentsdb/src/main/java/io/micrometer/opentsdb/OpenTSDBMeterRegistry.java###/OpenTSDBMeterRegistry.java###io.micrometer.opentsdb.OpenTSDBMeterRegistry###writeTimer:Timer ###finalValueAtPercentile[]percentileValues=timer.takeSnapshot().percentileValues();###histogramSnapshot###timer.takeSnapshot()###221:9:221:94
750de3981b5be145c2e8b1bf26c5587d03931507###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/kafka/KafkaConsumerMetrics.java###/KafkaConsumerMetrics.java###io.micrometer.core.instrument.binder.kafka.KafkaConsumerMetrics###nameTag:ObjectName ###tags=Tags.concat(tags,"topic",name.getKeyProperty("topic"));###topic###name.getKeyProperty("topic")###237:13:237:77
3b6e727952de7b020aa0878953d2e575c9aaf4c5###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/mongodb/MongoMetricsConnectionPoolListener.java###/MongoMetricsConnectionPoolListener.java###io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener###connectionCheckedOut:ConnectionCheckedOutEvent ###checkedOutCount.get(event.getConnectionId().getServerId()).incrementAndGet();###gauge###checkedOutCount.get(event.getConnectionId().getServerId())###84:9:85:36
1f996f9ad5adc38c515c546ca519c66939aa8f4b###/micrometer-metrics_micrometer/implementations/micrometer-registry-elastic/src/main/java/io/micrometer/elastic/ElasticMeterRegistry.java###/ElasticMeterRegistry.java###io.micrometer.elastic.ElasticMeterRegistry###writeFunctionTimer:FunctionTimer ###builder.append(",\"sum\":").append(timer.totalTime(getBaseTimeUnit()));###sum###timer.totalTime(getBaseTimeUnit())###335:13:335:85
063e33945c35f0fc5a6e29fbd7b34321abd5edf3###/micrometer-metrics_micrometer/samples/micrometer-samples-core/src/main/java/io/micrometer/core/samples/TimerSample.java###/TimerSample.java###io.micrometer.core.samples.TimerSample###main:String[] ###timer.record(latencyForThisSecond.get(),TimeUnit.MILLISECONDS);###latency###latencyForThisSecond.get()###60:25:60:89
3b22ab47ff5f985a14bbd63e60441ae6da8d6799###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/logging/Log4j2Metrics.java###/Log4j2Metrics.java###io.micrometer.core.instrument.binder.logging.Log4j2Metrics###close:###configuration.getRootLogger().removeFilter(metricsFilter);###rootLoggerConfig###configuration.getRootLogger()###82:13:82:71
30cc70d17ccea17727582634523218a7dda72c14###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/kafka/KafkaMetrics.java###/KafkaMetrics.java###io.micrometer.core.instrument.binder.kafka.KafkaMetrics###checkAndBindMetrics:MeterRegistry ###List<Tag>tags=other.getId().getTags();###otherId###other.getId()###198:25:198:66
acce709987b6434c8b5ed492dd230070adb6868f###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/config/validate/PropertyValidator.java###/PropertyValidator.java###io.micrometer.core.instrument.config.validate.PropertyValidator###getDuration:MeterRegistryConfig String ###returnDurationValidator.validate(prefixedProperty(config,property),config.get(prefixedProperty(config,property)));###prefixedProperty###prefixedProperty(config,property)###35:9:36:65
abf2991796e38f304c100592900edc502f9c023c###/micrometer-metrics_micrometer/implementations/micrometer-registry-wavefront/src/main/java/io/micrometer/wavefront/WavefrontMeterRegistry.java###/WavefrontMeterRegistry.java###io.micrometer.wavefront.WavefrontMeterRegistry###publishMeter:Meter ###publishMetric(meter.getId().withTag(measurement.getStatistic()),null,wallTime,measurement.getValue());###id###meter.getId().withTag(measurement.getStatistic())###225:13:225:118
80ceae7fce6432a810801de5b9c3f104b9ab5cf4###/micrometer-metrics_micrometer/implementations/micrometer-registry-cloudwatch/src/main/java/io/micrometer/cloudwatch/CloudWatchMeterRegistry.java###/CloudWatchMeterRegistry.java###io.micrometer.cloudwatch.CloudWatchMeterRegistry.Batch###summaryData:DistributionSummary ###metrics.add(metricDatum(summary.getId(),"count",summary.count()));###count###summary.count()###187:13:187:81
f6bed7357c4f4260043ca4e7ab676431c603ecb0###/micrometer-metrics_micrometer/micrometer-spring-legacy/src/test/java/io/micrometer/spring/web/MetricsRestTemplateInterceptorTest.java###/MetricsRestTemplateInterceptorTest.java###io.micrometer.spring.web.MetricsRestTemplateInterceptorTest###interceptRestTemplate:###restTemplate.setInterceptors(singletonList(newMetricsRestTemplateInterceptor(registry,newRestTemplateTagConfigurer(),newMetricsConfigurationProperties())));###properties###newMetricsConfigurationProperties()###42:9:45:13
606a2c7fcee72b6081a298bffaad329455762daa###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/kafka/KafkaMetrics.java###/KafkaMetrics.java###io.micrometer.core.instrument.binder.kafka.KafkaMetrics###checkAndBindMetrics:MeterRegistry ###this.metrics.set(this.metricsSupplier.get());###currentMetrics###this.metricsSupplier.get()###164:13:164:58
ad00dcd994d09d1979f3777f743f8358657261f9###/micrometer-metrics_micrometer/implementations/micrometer-registry-azure-monitor/src/main/java/io/micrometer/azuremonitor/AzureMonitorMeterRegistry.java###/AzureMonitorMeterRegistry.java###io.micrometer.azuremonitor.AzureMonitorMeterRegistry###trackDistributionSummary:DistributionSummary ###mt.setCount(castCountToInt(summary.count()));###count###summary.count()###142:9:142:54
96bd266bd9d29c0a6f925e5b7b1d60f8326d2ab1###/micrometer-metrics_micrometer/implementations/micrometer-registry-kairos/src/main/java/io/micrometer/kairos/KairosMeterRegistry.java###/KairosMeterRegistry.java###io.micrometer.kairos.KairosMeterRegistry###writeCustomMetric:Meter ###newKairosMetricBuilder().field("name",ms.getStatistic().getTagValueRepresentation()).datapoints(wallTime,ms.getValue()).tags(getConventionTags(meter.getId())).build()###tags###getConventionTags(meter.getId())###163:28:167:33
d96bda2457ad3297e4ba643fc12725d0883d3b8d###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/kafka/KafkaMetrics.java###/KafkaMetrics.java###io.micrometer.core.instrument.binder.kafka.KafkaMetrics###checkAndBindMetrics:MeterRegistry ###bindMeter(registry,metric,meterName,meterTags(metric));###tags###meterTags(metric)###161:17:161:75
3b22ab47ff5f985a14bbd63e60441ae6da8d6799###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/logging/Log4j2Metrics.java###/Log4j2Metrics.java###io.micrometer.core.instrument.binder.logging.Log4j2Metrics###bindTo:MeterRegistry ###configuration.getRootLogger().addFilter(metricsFilter);###rootLoggerConfig###configuration.getRootLogger()###71:9:71:64
8b1273849004b19965db4f4865a6921fd4663ed2###/micrometer-metrics_micrometer/implementations/micrometer-registry-graphite/src/main/java/io/micrometer/graphite/GraphiteMeterRegistry.java###/GraphiteMeterRegistry.java###io.micrometer.graphite.GraphiteMeterRegistry###defaultGraphiteReporter:GraphiteConfig Clock MetricRegistry ###sender=newGraphite(newInetSocketAddress(config.host(),config.port()));###address###newInetSocketAddress(config.host(),config.port())###63:17:63:92
da19a7eceebf7cecddac035b74144b985db1bc17###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/hystrix/MicrometerMetricsPublisherCommand.java###/MicrometerMetricsPublisherCommand.java###io.micrometer.core.instrument.binder.hystrix.MicrometerMetricsPublisherCommand###initialize:###Timer.builder(NAME_HYSTRIX_LATENCY_TOTAL).tags(tags).register(meterRegistry).record(totalLatency,TimeUnit.MILLISECONDS);###latencyTotal###Timer.builder(NAME_HYSTRIX_LATENCY_TOTAL).tags(tags).register(meterRegistry)###113:21:116:70
3a8e41af342eb9d03839ec37283ca462335b9964###/micrometer-metrics_micrometer/implementations/micrometer-registry-prometheus/src/main/java/io/micrometer/prometheus/PrometheusMeterRegistry.java###/PrometheusMeterRegistry.java###io.micrometer.prometheus.PrometheusMeterRegistry###collectorByName:Meter.Id ###returnnewMicrometerCollector(id,config().namingConvention(),prometheusConfig).register(registry);###micrometerCollector###newMicrometerCollector(id,config().namingConvention(),prometheusConfig)###416:17:416:118
684aa9fbc5ebafa74016026b46153b343da7cf65###/micrometer-metrics_micrometer/micrometer-core/src/main/java/io/micrometer/core/ipc/http/HttpUrlConnectionSender.java###/HttpUrlConnectionSender.java###io.micrometer.core.ipc.http.HttpUrlConnectionSender###send:Request ###con.setRequestMethod(request.getMethod().toString());###method###request.getMethod()###47:13:47:66
06c498c41cc74d9be654145d8a248acb9106493a###/micrometer-metrics_micrometer/implementations/micrometer-registry-appoptics/src/main/java/io/micrometer/appoptics/AppOpticsMeterRegistry.java###/AppOpticsMeterRegistry.java###io.micrometer.appoptics.AppOpticsMeterRegistry###publish:###httpClient.post(config.uri()).withBasicAuthentication(config.apiToken(),"").withJsonContent(meters.stream().collect(joining(",",getBodyMeasurementsPrefix(),BODY_MEASUREMENTS_SUFFIX))).send().onSuccess(response->{if(!response.body().contains("\"failed\":0")){logger.error("failedtosendatleastsomemetricstoappoptics:{}",response.body());}else{logger.debug("successfullysent{}metricstoappoptics",batch.size());}}).onError(response->logger.error("failedtosendmetricstoappoptics:{}",response.body()));###bodyMeasurementsPrefix###getBodyMeasurementsPrefix()###128:17:140:120
f912bf45d2741e92b5972cba9f17c4ee130fdff5###/micrometer-metrics_micrometer/implementations/micrometer-registry-elastic/src/main/java/io/micrometer/elastic/ElasticMeterRegistry.java###/ElasticMeterRegistry.java###io.micrometer.elastic.ElasticMeterRegistry###publish:###logger.debug("successfullysent{}metricstoelastic",batch.size());###numberOfSentItems###batch.size()###178:33:178:103
