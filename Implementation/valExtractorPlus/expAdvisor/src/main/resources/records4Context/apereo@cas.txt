da3cdbe05c98e09ba6b28f67cb86859215224354###/apereo_cas/support/cas-server-support-dynamodb-core/src/main/java/org/apereo/cas/dynamodb/DynamoDbTableUtils.java###/DynamoDbTableUtils.java###org.apereo.cas.dynamodb.DynamoDbTableUtils###waitForTableDescription:DynamoDbClient String TableStatus int int ###table=dynamo.describeTable(DescribeTableRequest.builder().tableName(tableName).build()).table();###tableRequest###DescribeTableRequest.builder().tableName(tableName).build()###203:17:203:115
0f992fa17790f6ab7b150f4745873decdbbd07b3###/apereo_cas/support/cas-server-support-syncope-authentication/src/test/java/org/apereo/cas/syncope/authentication/SyncopePersonAttributeDaoTests.java###/SyncopePersonAttributeDaoTests.java###org.apereo.cas.syncope.authentication.SyncopePersonAttributeDaoTests###notFound:###assertTrue(attributeRepository.getPeopleWithMultivaluedAttributes(Map.of("anotherProp",List.of("casuser")),IPersonAttributeDaoFilter.alwaysChoose()).isEmpty());###people###attributeRepository.getPeopleWithMultivaluedAttributes(Map.of("anotherProp",List.of("casuser")),IPersonAttributeDaoFilter.alwaysChoose())###69:9:70:113
9275757c59dcc33ccededf2121bea13cb91222eb###/apereo_cas/support/cas-server-support-simple-mfa-core/src/main/java/org/apereo/cas/mfa/simple/web/flow/CasSimpleMultifactorSendTokenAction.java###/CasSimpleMultifactorSendTokenAction.java###org.apereo.cas.mfa.simple.web.flow.CasSimpleMultifactorSendTokenAction###getOrCreateToken:RequestContext Principal ###returnOptional.ofNullable(WebUtils.getSimpleMultifactorAuthenticationToken(requestContext,CasSimpleMultifactorAuthenticationTicket.class)).filter(token->!token.isExpired()).orElseGet(()->{WebUtils.removeSimpleMultifactorAuthenticationToken(requestContext);valservice=WebUtils.getService(requestContext);valtoken=ticketFactory.create(service,CollectionUtils.wrap(CasSimpleMultifactorAuthenticationConstants.PROPERTY_PRINCIPAL,principal));LOGGER.debug("Createdmultifactorauthenticationtoken[{}]forservice[{}]",token.getId(),service);returntoken;});###currentToken###WebUtils.getSimpleMultifactorAuthenticationToken(requestContext,CasSimpleMultifactorAuthenticationTicket.class)###153:9:162:16
8c04d7509f5e5c952f682f58ab037bc035b78196###/apereo_cas/support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/dynareg/OidcDynamicClientRegistrationEndpointController.java###/OidcDynamicClientRegistrationEndpointController.java###org.apereo.cas.oidc.web.controllers.dynareg.OidcDynamicClientRegistrationEndpointController###handleRequestInternal:String HttpServletRequest HttpServletResponse ###registeredService.setLogoutUrl(org.springframework.util.StringUtils.collectionToCommaDelimitedString(registrationRequest.getPostLogoutRedirectUris()));###urls###org.springframework.util.StringUtils.collectionToCommaDelimitedString(registrationRequest.getPostLogoutRedirectUris())###164:13:165:137
095c6599e523bcc2a16156fcc20a3041c968f3a6###/apereo_cas/support/cas-server-support-oidc/src/test/java/org/apereo/cas/oidc/authn/OidcPrivateKeyJwtAuthenticatorTests.java###/OidcPrivateKeyJwtAuthenticatorTests.java###org.apereo.cas.oidc.authn.OidcPrivateKeyJwtAuthenticatorTests###verifyAction:###valjsonWebKey=OidcJsonWebKeyStoreUtils.generateJsonWebKey(casProperties.getAuthn().getOidc().getJwks().getCore().getJwksType(),casProperties.getAuthn().getOidc().getJwks().getCore().getJwksKeySize());###core###casProperties.getAuthn().getOidc().getJwks().getCore()###66:9:68:86
ca7912988632e71f1229377e54ac94d19925930b###/apereo_cas/support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/services/OidcServicesManagerRegisteredServiceLocator.java###/OidcServicesManagerRegisteredServiceLocator.java###org.apereo.cas.oidc.services.OidcServicesManagerRegisteredServiceLocator###OidcServicesManagerRegisteredServiceLocator:###match=CollectionUtils.firstElement(service.getAttributes().get(OAuth20Constants.CLIENT_ID)).map(Object::toString).stream().anyMatch(clientId->oidcService.getClientId().equalsIgnoreCase(clientId));###clientIdAttribute###service.getAttributes().get(OAuth20Constants.CLIENT_ID)###35:21:38:101
e50cab9530baf01d0e4d4b6fb6774b7adaf787cc###/apereo_cas/support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/builders/authn/DefaultAuthnContextClassRefBuilder.java###/DefaultAuthnContextClassRefBuilder.java###org.apereo.cas.support.saml.web.idp.profile.builders.authn.DefaultAuthnContextClassRefBuilder###build:SamlProfileBuilderContext ###LOGGER.debug("Using[{}]asindicatedbySAMLregisteredservice[{}]",context.getRegisteredService().getRequiredAuthenticationContextClass(),context.getRegisteredService().getName());###requiredClass###context.getRegisteredService().getRequiredAuthenticationContextClass()###34:13:36:59
0f5c47865098a46aeed356c3f5a4cb1a6d993dac###/apereo_cas/support/cas-server-support-oauth/src/test/java/org/apereo/cas/ticket/code/OAuth20DefaultOAuthCodeFactoryTests.java###/OAuth20DefaultOAuthCodeFactoryTests.java###org.apereo.cas.ticket.code.OAuth20DefaultOAuthCodeFactoryTests###verifyOperationWithExpPolicy:###valtoken=defaultOAuthCodeFactory.create(RegisteredServiceTestUtils.getService("https://code.oauth.org"),RegisteredServiceTestUtils.getAuthentication(),newMockTicketGrantingTicket("casuser"),Set.of("Scope1","Scope2"),"code-challenge","plain","clientid-code",Map.of(),OAuth20ResponseTypes.CODE,OAuth20GrantTypes.AUTHORIZATION_CODE);###tgt###newMockTicketGrantingTicket("casuser")###35:9:40:78
aaefa5f36a888ab5ad57c36b1259b87e07275096###/apereo_cas/support/cas-server-support-oauth-core-api/src/main/java/org/apereo/cas/support/oauth/web/endpoints/OAuth20AuthorizeEndpointController.java###/OAuth20AuthorizeEndpointController.java###org.apereo.cas.support.oauth.web.endpoints.OAuth20AuthorizeEndpointController###buildAuthorizationForRequest:OAuthRegisteredService JEEContext String Service Authentication ###valholder=AccessTokenRequestDataHolder.builder().service(service).authentication(authentication).registeredService(registeredService).ticketGrantingTicket(ticketGrantingTicket).grantType(OAuth20GrantTypes.valueOf(grantType)).codeChallenge(codeChallenge).codeChallengeMethod(codeChallengeMethod).scopes(scopes).clientId(clientId).claims(claims).build();###accessTokenDataBuilder###AccessTokenRequestDataHolder.builder()###249:9:260:22
0b4c6421ad19f5694ad6ae51054f0ada6de1258c###/apereo_cas/support/cas-server-support-person-directory/src/test/java/org/apereo/cas/DefaultAttributeDefinitionStoreTests.java###/DefaultAttributeDefinitionStoreTests.java###org.apereo.cas.DefaultAttributeDefinitionStoreTests###verifyMappedToMultipleNames:###valattrs=store.resolveAttributeValues(CoreAuthenticationTestUtils.getAttributes(),CoreAuthenticationTestUtils.getRegisteredService());###attributes###CoreAuthenticationTestUtils.getAttributes()###104:9:104:147
01d2904db4fec4e6e79f2a5bc72c14787e82ed49###/apereo_cas/core/cas-server-core-util-api/src/main/java/org/apereo/cas/util/cipher/BaseBinaryCipherExecutor.java###/BaseBinaryCipherExecutor.java###org.apereo.cas.util.cipher.BaseBinaryCipherExecutor###ensureEncryptionKeyExists:String int ###LOGGER.warn("Generatedencryptionkey[{}]ofsize[{}].ThegeneratedkeyMUSTbeaddedtoCASsettingsundersetting[{}].",EncodingUtils.encodeBase64(genEncryptionKey),encryptionKeySize,getEncryptionKeySetting());###encodedKey###EncodingUtils.encodeBase64(genEncryptionKey)###148:17:149:113
0b4c6421ad19f5694ad6ae51054f0ada6de1258c###/apereo_cas/support/cas-server-support-person-directory/src/test/java/org/apereo/cas/DefaultAttributeDefinitionStoreTests.java###/DefaultAttributeDefinitionStoreTests.java###org.apereo.cas.DefaultAttributeDefinitionStoreTests###verifyAttributeDefinitionsAsMap:###valattrs=store.resolveAttributeValues(CoreAuthenticationTestUtils.getAttributes(),service);###attributes###CoreAuthenticationTestUtils.getAttributes()###195:9:195:104
98b74b92f65cdc9134d0d82d572c5baba5f1eb06###/apereo_cas/support/cas-server-support-aup-core/src/main/java/org/apereo/cas/aup/BaseAcceptableUsagePolicyRepository.java###/BaseAcceptableUsagePolicyRepository.java###org.apereo.cas.aup.BaseAcceptableUsagePolicyRepository###verify:RequestContext ###valprincipal=WebUtils.getAuthentication(requestContext).getPrincipal();###authentication###WebUtils.getAuthentication(requestContext)###52:9:52:83
75a2fe8fda6134f1434939e9f806d0cfdd4aad57###/apereo_cas/support/cas-server-support-oidc/src/test/java/org/apereo/cas/oidc/web/controllers/dynareg/OidcClientConfigurationEndpointControllerTests.java###/OidcClientConfigurationEndpointControllerTests.java###org.apereo.cas.oidc.web.controllers.dynareg.OidcClientConfigurationEndpointControllerTests###verifyOperation:###servicesManager.save(getOidcRegisteredService(clientId));###service###getOidcRegisteredService(clientId)###45:9:45:66
818fcbfaa428f5b1be115ea66ba6aea97e91f30d###/apereo_cas/support/cas-server-support-dynamodb-core/src/main/java/org/apereo/cas/dynamodb/DynamoDbTableUtils.java###/DynamoDbTableUtils.java###org.apereo.cas.dynamodb.DynamoDbTableUtils###createTable:DynamoDbClient AbstractDynamoDbProperties String boolean List<AttributeDefinition> List<KeySchemaElement> ###valrequest=CreateTableRequest.builder().attributeDefinitions(attributeDefinitions).keySchema(keySchemaElements).provisionedThroughput(throughput).tableName(tableName).billingMode(BillingMode.fromValue(dynamoDbProperties.getBillingMode().name())).build();###billingMode###BillingMode.fromValue(dynamoDbProperties.getBillingMode().name())###129:9:135:22
2ef01db30d87e14824bd49b3a04bc779d4c4af34###/apereo_cas/core/cas-server-core-webflow/src/main/java/org/apereo/cas/web/flow/config/CasWebflowContextConfiguration.java###/CasWebflowContextConfiguration.java###org.apereo.cas.web.flow.config.CasWebflowContextConfiguration###logoutFlowHandlerMapping:###valinterceptors=newObject[]{localeChangeInterceptor(),resourceUrlProviderExposingInterceptor()};###interceptor###resourceUrlProviderExposingInterceptor()###197:9:197:110
2ef01db30d87e14824bd49b3a04bc779d4c4af34###/apereo_cas/core/cas-server-core-webflow/src/main/java/org/apereo/cas/web/flow/config/CasWebflowContextConfiguration.java###/CasWebflowContextConfiguration.java###org.apereo.cas.web.flow.config.CasWebflowContextConfiguration###casDefaultWebflowExecutionPlanConfigurer:###plan.registerWebflowInterceptor(resourceUrlProviderExposingInterceptor());###interceptor###resourceUrlProviderExposingInterceptor()###311:13:311:87
d3e7a72f7f8e66ecf4f144c7fa0c83689902bb3c###/apereo_cas/support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/ticket/OidcPushedAuthorizationUriExpirationPolicyBuilder.java###/OidcPushedAuthorizationUriExpirationPolicyBuilder.java###org.apereo.cas.oidc.ticket.OidcPushedAuthorizationUriExpirationPolicyBuilder###toTicketExpirationPolicy:###valexp=Beans.newDuration(casProperties.getAuthn().getOidc().getPar().getMaxTimeToLiveInSeconds());###par###casProperties.getAuthn().getOidc().getPar()###49:9:49:110
cbfd1792bb529f1ca7c4a3729ee8d54c0feda95e###/apereo_cas/support/cas-server-support-oauth/src/test/java/org/apereo/cas/support/oauth/web/endpoints/OAuth20CallbackAuthorizeEndpointControllerTests.java###/OAuth20CallbackAuthorizeEndpointControllerTests.java###org.apereo.cas.support.oauth.web.endpoints.OAuth20CallbackAuthorizeEndpointControllerTests###verifyOperation:###assertNotNull(callbackAuthorizeController.handleRequest(request,response));###view###callbackAuthorizeController.handleRequest(request,response)###37:9:37:85
1c30e2db71a8b6ae135e7aa2eb88d6de527a847a###/apereo_cas/support/cas-server-support-service-registry-stream-hazelcast/src/main/java/org/apereo/cas/config/CasServicesStreamingHazelcastConfiguration.java###/CasServicesStreamingHazelcastConfiguration.java###org.apereo.cas.config.CasServicesStreamingHazelcastConfiguration###casRegisteredServiceHazelcastInstance:CasConfigurationProperties ###returnHazelcast.newHazelcastInstance(HazelcastConfigurationFactory.build(hzConfig,mapConfig));###config###HazelcastConfigurationFactory.build(hzConfig,mapConfig)###63:9:63:105
475a229fc7ccb041cd172f05fe8a5b389e748f37###/apereo_cas/support/cas-server-support-syncope-authentication/src/main/java/org/apereo/cas/config/SyncopeAuthenticationConfiguration.java###/SyncopeAuthenticationConfiguration.java###org.apereo.cas.config.SyncopeAuthenticationConfiguration###syncopeAuthenticationHandler:CasConfigurationProperties ConfigurableApplicationContext PrincipalFactory PasswordPolicyContext ServicesManager ###h.setCredentialSelectionPredicate(CoreAuthenticationUtils.newCredentialSelectionPredicate(syncope.getCredentialCriteria()));###predicate###CoreAuthenticationUtils.newCredentialSelectionPredicate(syncope.getCredentialCriteria())###58:9:58:133
5ad0e9b85b8faa3f9a0002ddd4068f8bbf81571e###/apereo_cas/support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/jwks/generator/OidcDefaultJsonWebKeystoreGeneratorService.java###/OidcDefaultJsonWebKeystoreGeneratorService.java###org.apereo.cas.oidc.jwks.generator.OidcDefaultJsonWebKeystoreGeneratorService###generate:Resource ###valdata=newJsonWebKeySet(jwk).toJson(JsonWebKey.OutputControlLevel.INCLUDE_PRIVATE);###jsonWebKeySet###newJsonWebKeySet(jwk)###77:9:77:97
0ab3417bb636a7880ce27905adcf44b6d1c8e5b0###/apereo_cas/support/cas-server-support-dynamodb-ticket-registry/src/test/java/org/apereo/cas/ticket/registry/DynamoDbTicketRegistryFacilitatorTests.java###/DynamoDbTicketRegistryFacilitatorTests.java###org.apereo.cas.ticket.registry.DynamoDbTicketRegistryFacilitatorTests.DynamoDbTicketRegistryFacilitatorBillingModePayPerRequestTests###verifyCreateTableWithOnDemandBilling:###assertEquals(BillingMode.PAY_PER_REQUEST,resp.table().billingModeSummary().billingMode());###respTD###resp.table()###76:17:76:108
acd765ad82c34f98f7a87383e9026bddf85f6f30###/apereo_cas/support/cas-server-support-syncope-authentication/src/main/java/org/apereo/cas/config/SyncopeAuthenticationConfiguration.java###/SyncopeAuthenticationConfiguration.java###org.apereo.cas.config.SyncopeAuthenticationConfiguration###syncopeAuthenticationHandlers:CasConfigurationProperties ConfigurableApplicationContext PrincipalFactory PasswordPolicyContext ServicesManager ###h.setCredentialSelectionPredicate(CoreAuthenticationUtils.newCredentialSelectionPredicate(syncope.getCredentialCriteria()));###predicate###CoreAuthenticationUtils.newCredentialSelectionPredicate(syncope.getCredentialCriteria())###70:17:70:141
f657bc4a35252e852966e96742a70a6bb1a9538f###/apereo_cas/support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/OidcConsentApprovalViewResolver.java###/OidcConsentApprovalViewResolver.java###org.apereo.cas.oidc.web.OidcConsentApprovalViewResolver###prepareApprovalViewModel:Map<String,Object> WebContext OAuthRegisteredService ###supportedScopes.retainAll(OAuth20Utils.getRequestedScopes(webContext));###requestedScopes###OAuth20Utils.getRequestedScopes(webContext)###64:13:64:84
e16475d005b3b6e9ff0e0662fdfcda8f0406f551###/apereo_cas/core/cas-server-core-util-api/src/main/java/org/apereo/cas/util/spring/boot/CasFeatureModuleEnabledCondition.java###/CasFeatureModuleEnabledCondition.java###org.apereo.cas.util.spring.boot.CasFeatureModuleEnabledCondition###getMatchOutcome:ConditionContext AnnotatedTypeMetadata ###valname=metadata.getAnnotationAttributes(ConditionalOnCasFeatureModule.class.getName()).get("feature").toString();###attributes###metadata.getAnnotationAttributes(ConditionalOnCasFeatureModule.class.getName())###33:9:33:126
0f5c47865098a46aeed356c3f5a4cb1a6d993dac###/apereo_cas/support/cas-server-support-oauth/src/test/java/org/apereo/cas/ticket/code/OAuth20DefaultOAuthCodeFactoryTests.java###/OAuth20DefaultOAuthCodeFactoryTests.java###org.apereo.cas.ticket.code.OAuth20DefaultOAuthCodeFactoryTests###verifyOperationWithoutExpPolicy:###valtoken=defaultOAuthCodeFactory.create(RegisteredServiceTestUtils.getService("https://noexp.oauth.org"),RegisteredServiceTestUtils.getAuthentication(),newMockTicketGrantingTicket("casuser"),Set.of("Scope1","Scope2"),"code-challenge","plain","clientid-code-noexp",Map.of(),OAuth20ResponseTypes.CODE,OAuth20GrantTypes.AUTHORIZATION_CODE);###tgt###newMockTicketGrantingTicket("casuser")###53:9:57:111
203b3811356453884b6c3d9820278cdc73d3634c###/apereo_cas/support/cas-server-support-hazelcast-ticket-registry/src/test/java/org/apereo/cas/ticket/registry/DefaultHazelcastInstanceConfigurationTests.java###/DefaultHazelcastInstanceConfigurationTests.java###org.apereo.cas.ticket.registry.DefaultHazelcastInstanceConfigurationTests###correctHazelcastInstanceIsCreated:###config.getMapConfigs().forEach((key,value)->LOGGER.info("Hazelcastmapkey[{}]",key));###mapConfigs###config.getMapConfigs()###90:9:90:100
ac90a42d6b4020124c6c01132fb990e2f925eb20###/apereo_cas/support/cas-server-support-hazelcast-discovery-aws/src/test/java/org/apereo/cas/hz/HazelcastAwsDiscoveryStrategyTests.java###/HazelcastAwsDiscoveryStrategyTests.java###org.apereo.cas.hz.HazelcastAwsDiscoveryStrategyTests###verifyAction:###assertNotNull(strategy.get(properties,mock(JoinConfig.class),mock(Config.class),mock(NetworkConfig.class)));###result###strategy.get(properties,mock(JoinConfig.class),mock(Config.class),mock(NetworkConfig.class))###39:9:39:120
475a229fc7ccb041cd172f05fe8a5b389e748f37###/apereo_cas/support/cas-server-support-syncope-authentication/src/main/java/org/apereo/cas/config/SyncopeAuthenticationConfiguration.java###/SyncopeAuthenticationConfiguration.java###org.apereo.cas.config.SyncopeAuthenticationConfiguration###syncopeAuthenticationHandler:CasConfigurationProperties ConfigurableApplicationContext PrincipalFactory PasswordPolicyContext ServicesManager ###h.setPrincipalNameTransformer(PrincipalNameTransformerUtils.newPrincipalNameTransformer(syncope.getPrincipalTransformation()));###transformer###PrincipalNameTransformerUtils.newPrincipalNameTransformer(syncope.getPrincipalTransformation())###59:9:59:136
7465be9808ba4d01254da77d4988b3b130863f29###/apereo_cas/support/cas-server-support-oauth-core-api/src/main/java/org/apereo/cas/support/oauth/web/response/accesstoken/ext/AccessTokenAuthorizationCodeGrantRequestExtractor.java###/AccessTokenAuthorizationCodeGrantRequestExtractor.java###org.apereo.cas.support.oauth.web.response.accesstoken.ext.AccessTokenAuthorizationCodeGrantRequestExtractor###getOAuthTokenFromRequest:WebContext ###returngetOAuthConfigurationContext().getCentralAuthenticationService().getTicket(getOAuthParameter(context),OAuth20Token.class);###id###getOAuthParameter(context)###162:9:162:139
0b4c6421ad19f5694ad6ae51054f0ada6de1258c###/apereo_cas/support/cas-server-support-person-directory/src/test/java/org/apereo/cas/DefaultAttributeDefinitionStoreTests.java###/DefaultAttributeDefinitionStoreTests.java###org.apereo.cas.DefaultAttributeDefinitionStoreTests###verifyEncryptedAttributeDefinitions:###valattrs=store.resolveAttributeValues(CoreAuthenticationTestUtils.getAttributes(),service);###attributes###CoreAuthenticationTestUtils.getAttributes()###128:9:128:104
7937a644ae3f3fdf669837f15ef41f55c263419a###/apereo_cas/support/cas-server-support-person-directory/src/test/java/org/apereo/cas/PersonDirectoryPrincipalResolverLdapTests.java###/PersonDirectoryPrincipalResolverLdapTests.java###org.apereo.cas.PersonDirectoryPrincipalResolverLdapTests###verifyResolver:###valresolver=CoreAuthenticationUtils.newPersonDirectoryPrincipalResolver(PrincipalFactoryUtils.newPrincipalFactory(),this.attributeRepository,CoreAuthenticationUtils.getAttributeMerger(casProperties.getAuthn().getAttributeRepository().getCore().getMerger()),casProperties.getPersonDirectory());###attributeMerger###CoreAuthenticationUtils.getAttributeMerger(casProperties.getAuthn().getAttributeRepository().getCore().getMerger())###62:9:65:49
ec859c5b292926a110a341fda92eb66f424cc135###/apereo_cas/support/cas-server-support-saml-idp/src/test/java/org/apereo/cas/support/saml/web/idp/profile/builders/nameid/SamlProfileSamlNameIdBuilderTests.java###/SamlProfileSamlNameIdBuilderTests.java###org.apereo.cas.support.saml.web.idp.profile.builders.nameid.SamlProfileSamlNameIdBuilderTests###verifyEncryptedNameIdFormat:###valsubject=samlProfileSamlSubjectBuilder.build(authnRequest,newMockHttpServletRequest(),newMockHttpServletResponse(),getAssertion(),service,adaptor,SAMLConstants.SAML2_POST_BINDING_URI,newMessageContext());###request###newMockHttpServletRequest()###155:9:156:107
22c6dbc5935de14f8715c5eaa774cbe8c6b5acc3###/apereo_cas/support/cas-server-support-jdbc-authentication/src/test/java/org/apereo/cas/config/DatabaseAuthenticationTestConfiguration.java###/DatabaseAuthenticationTestConfiguration.java###org.apereo.cas.config.DatabaseAuthenticationTestConfiguration###entityManagerFactory:JpaVendorAdapter DataSource ###returnJpaBeans.newEntityManagerFactoryBean(ctx).getObject();###factory###JpaBeans.newEntityManagerFactoryBean(ctx)###94:9:94:70
0ab3417bb636a7880ce27905adcf44b6d1c8e5b0###/apereo_cas/support/cas-server-support-dynamodb-ticket-registry/src/main/java/org/apereo/cas/ticket/registry/DynamoDbTicketRegistryFacilitator.java###/DynamoDbTicketRegistryFacilitator.java###org.apereo.cas.ticket.registry.DynamoDbTicketRegistryFacilitator###createTicketTables:boolean ###valrequest=CreateTableRequest.builder().attributeDefinitions(AttributeDefinition.builder().attributeName(ColumnNames.ID.getColumnName()).attributeType(ScalarAttributeType.S).build()).keySchema(KeySchemaElement.builder().attributeName(ColumnNames.ID.getColumnName()).keyType(KeyType.HASH).build()).provisionedThroughput(throughput).billingMode(BillingMode.fromValue(dynamoDbProperties.getBillingMode().name())).tableName(r.getProperties().getStorageName()).build();###billingMode###BillingMode.fromValue(dynamoDbProperties.getBillingMode().name())###173:13:179:26
acd765ad82c34f98f7a87383e9026bddf85f6f30###/apereo_cas/support/cas-server-support-syncope-authentication/src/main/java/org/apereo/cas/config/SyncopeAuthenticationConfiguration.java###/SyncopeAuthenticationConfiguration.java###org.apereo.cas.config.SyncopeAuthenticationConfiguration###syncopeAuthenticationHandlers:CasConfigurationProperties ConfigurableApplicationContext PrincipalFactory PasswordPolicyContext ServicesManager ###h.setPrincipalNameTransformer(PrincipalNameTransformerUtils.newPrincipalNameTransformer(syncope.getPrincipalTransformation()));###transformer###PrincipalNameTransformerUtils.newPrincipalNameTransformer(syncope.getPrincipalTransformation())###71:17:71:144
e16475d005b3b6e9ff0e0662fdfcda8f0406f551###/apereo_cas/core/cas-server-core-util-api/src/main/java/org/apereo/cas/util/spring/boot/CasFeatureModuleEnabledCondition.java###/CasFeatureModuleEnabledCondition.java###org.apereo.cas.util.spring.boot.CasFeatureModuleEnabledCondition###getMatchOutcome:ConditionContext AnnotatedTypeMetadata ###returnConditionOutcome.noMatch("CASfeaturemodule"+feature+'-'+module+"isdisabledvia"+property);###message###"CASfeaturemodule"+feature+'-'+module+"isdisabledvia"+property###39:13:39:126
