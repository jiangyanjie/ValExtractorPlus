c193f5511fe0e938af8aa9bcf6bc67323002af3a###/crate_crate/libs/dex/src/main/java/io/crate/data/TopNDistinctBatchIterator.java###/TopNDistinctBatchIterator.java###io.crate.data.TopNDistinctBatchIterator###moveNext:###booleanadded=items.add(memoizeItem.apply(source.currentElement()));###materializedItem###memoizeItem.apply(source.currentElement())###70:13:70:83
82ede364c2760350290bc36c1a21baddce95aa5c###/crate_crate/server/src/main/java/io/crate/execution/engine/indexing/UpsertResultContext.java###/UpsertResultContext.java###io.crate.execution.engine.indexing.UpsertResultContext###getHasSourceUriFailureChecker:###s.addFailedUri(sourceUriInput.value(),sourceUriFailureInput.value());###uriInputValue###sourceUriInput.value()###137:17:137:87
1acd80c15dde87d806e722a1109f11b04b604e27###/crate_crate/server/src/main/java/io/crate/planner/GCDangingArtifactsPlan.java###/GCDangingArtifactsPlan.java###io.crate.planner.GCDangingArtifactsPlan###executeOrFail:DependencyCarrier PlannerContext RowConsumer Row SubQueryResults ###dependencies.transportActionProvider().transportDeleteIndexAction().execute(newDeleteIndexRequest(IndexParts.DANGLING_INDICES_PREFIX_PATTERNS.toArray(newString[0])),listener);###deleteRequest###newDeleteIndexRequest(IndexParts.DANGLING_INDICES_PREFIX_PATTERNS.toArray(newString[0]))###49:9:52:11
572fc6a6a0043a3e2374e96c4097d3933f9bceeb###/crate_crate/server/src/main/java/io/crate/execution/engine/collect/collectors/ScoreDocRowFunction.java###/ScoreDocRowFunction.java###io.crate.execution.engine.collect.collectors.ScoreDocRowFunction###apply:ScoreDoc ###expression.setNextReader(newReaderContext(subReaderContext));###readerContext###newReaderContext(subReaderContext)###89:17:89:79
702ed74f4afb7c25df4fdf09480c9766470929cd###/crate_crate/server/src/main/java/io/crate/execution/engine/collect/sources/ShardCollectSource.java###/ShardCollectSource.java###io.crate.execution.engine.collect.sources.ShardCollectSource###createMultiShardScoreDocCollector:RoutedCollectPhase boolean CollectTask String ###Indexindex=metadata.index(indexName).getIndex();###indexMetadata###metadata.index(indexName)###317:13:317:64
f12c3b3cd619157a27659d8569c8efa2fcf751d8###/crate_crate/server/src/main/java/io/crate/execution/jobs/NodeLimits.java###/NodeLimits.java###io.crate.execution.jobs.NodeLimits###get:String ###returnunknownNodelimit;###unknown###unknownNodelimit###44:13:44:37
ef0734924ef82801506d0c30aafb3546391d9230###/crate_crate/server/src/test/java/io/crate/integrationtests/SysSnapshotsTest.java###/SysSnapshotsTest.java###io.crate.integrationtests.SysSnapshotsTest###testQueryAllColumns:###assertThat(response.columnTypes(),arrayContaining(newArrayType<>(DataTypes.STRING),newArrayType<>(DataTypes.STRING),TimestampType.INSTANCE_WITH_TZ,StringType.INSTANCE,StringType.INSTANCE,TimestampType.INSTANCE_WITH_TZ,StringType.INSTANCE,StringType.INSTANCE));###stringArray###newArrayType<>(DataTypes.STRING)###143:9:152:12
4dd37157ac1944262aa73c7efa640160eb648780###/crate_crate/server/src/test/java/io/crate/protocols/ssl/SslContextProviderServiceTest.java###/SslContextProviderServiceTest.java###io.crate.protocols.ssl.SslContextProviderServiceTest###test_service_reloads_configuration_on_change_of_symlinked_files:###Files.write(dataLink.resolve("keystore.jks"),List.of("version1"));###resolvedKeystore###dataLink.resolve("keystore.jks")###60:9:60:76
10d42df53a45048a14d82a24cd02ffbecfb18877###/crate_crate/server/src/main/java/io/crate/analyze/relations/AliasedAnalyzedRelation.java###/AliasedAnalyzedRelation.java###io.crate.analyze.relations.AliasedAnalyzedRelation###resolveField:ScopedSymbol ###ColumnIdentchildColumnName=aliasToColumnMapping.get(field.column());###column###field.column()###130:9:130:80
41577f86d5a974e039abbfdcfe222faf456d35a7###/crate_crate/server/src/main/java/io/crate/planner/operators/Collect.java###/Collect.java###io.crate.planner.operators.Collect###createPhase:PlannerContext Function<Symbol,Symbol> ###where=WhereClauseAnalyzer.resolvePartitions(where.map(binder),relation,plannerContext.transactionContext(),plannerContext.nodeContext());###boundWhere###where.map(binder)###237:9:241:43
4cfef75827fd50e15675af5a846e10047574bb63###/crate_crate/server/src/test/java/io/crate/protocols/postgres/PgClientTest.java###/PgClientTest.java###io.crate.protocols.postgres.PgClientTest###test_pg_client_can_connect_to_postgres_netty:###PostgresNettypostgresNetty=newPostgresNetty(serverNodeSettings,mock(SQLOperations.class),newStubUserManager(),networkService,authentication,nettyBootstrap,serverTransport,pageCacheRecycler,sslContextProvider);###sqlOperations###mock(SQLOperations.class)###99:9:109:11
9b830d19d769d89a316b394b78c766f1b6ca3512###/crate_crate/server/src/test/java/org/elasticsearch/action/support/replication/ReplicationOperationTests.java###/ReplicationOperationTests.java###org.elasticsearch.action.support.replication.ReplicationOperationTests.TestReplicaProxy###performOn:ShardRouting Request long long long ActionListener<ReplicationOperation.ReplicaResponse> ###assertTrue("replicarequestprocessedtwiceon["+replica+"]",request.processedOnReplicas.add(replica));###added###request.processedOnReplicas.add(replica)###626:13:626:122
77280ed87f122f001f5788d8e6602dadda24be51###/crate_crate/server/src/main/java/org/elasticsearch/index/store/Store.java###/Store.java###org.elasticsearch.index.store.Store###trimUnsafeCommits:long long Version ###finalStringtranslogUUID=existingCommits.get(existingCommits.size()-1).getUserData().get(Translog.TRANSLOG_UUID_KEY);###lastIndexCommitCommit###existingCommits.get(existingCommits.size()-1)###1530:13:1530:135
d595f9995adb8bdae605a63e1b7b7bd70f047aa9###/crate_crate/server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java###/SnapshotsService.java###org.elasticsearch.snapshots.SnapshotsService.endSnapshot.execute.new AbstractRunnable###doRun:###if(status.state().failed())###state###status.state()###1055:21:1057:22
ef53d213d88243624648d2c83c83a85089e7e47f###/crate_crate/libs/shared/src/main/java/io/crate/concurrent/limits/ConcurrencyLimit.java###/ConcurrencyLimit.java###io.crate.concurrent.limits.ConcurrencyLimit###onSample:long boolean ###intnewLimit=update(rtt,numInflight.decrementAndGet(),didDrop);###decrementedNumInflight###numInflight.decrementAndGet()###148:9:148:76
4af878c7d3dc965120e8c019a05b455237a70ae7###/crate_crate/server/src/main/java/io/crate/planner/optimizer/rule/MergeAggregateRenameAndCollectToCount.java###/MergeAggregateRenameAndCollectToCount.java###io.crate.planner.optimizer.rule.MergeAggregateRenameAndCollectToCount###apply:HashAggregate Captures TableStats TransactionContext NodeContext ###if(countAggregate.filter()!=null)###filter###countAggregate.filter()###80:9:87:10
9f21e83d7919a93decf66d72810c709b408baad5###/crate_crate/server/src/main/java/io/crate/metadata/sys/TableHealthService.java###/TableHealthService.java###io.crate.metadata.sys.TableHealthService###tableHealthFromEntry:Map.Entry<TablePartitionIdent,ShardsInfo> ###returncalculateHealth(ident,shardsInfo,tableInfo.numberOfShards());###shardsCount###tableInfo.numberOfShards()###152:9:152:79
850583ecd80521dba87b57b0fb53df979fff5128###/crate_crate/server/src/test/java/io/crate/replication/logical/MetadataTrackerTest.java###/MetadataTrackerTest.java###io.crate.replication.logical.MetadataTrackerTest###test_mappings_is_transferred_between_two_clustering_for_logical_replication:###varupdatedMappingMetadata=newMappingMetadata("test",Map.of("1","one","2","two"));###updatedMapping###Map.of("1","one","2","two")###125:9:125:98
088f722993453bdb8fcf444ea60999227ca5d992###/crate_crate/server/src/main/java/io/crate/execution/engine/indexing/UpsertResultCollectors.java###/UpsertResultCollectors.java###io.crate.execution.engine.indexing.UpsertResultCollectors.ResultRowCollector###processShardResponse:UpsertResults ShardResponse List<RowSourceInfo> ###upsertResults.addResultRows(shardResponse.getResultRows());###resultRows###shardResponse.getResultRows()###90:17:90:76
4e8737c54fea89ab98df140bbd8b1223ddacd892###/crate_crate/server/src/main/java/io/crate/execution/engine/collect/collectors/SegmentBatchIterator.java###/SegmentBatchIterator.java###io.crate.execution.engine.collect.collectors.SegmentBatchIterator###SegmentBatchIterator:CheckedFunction<LeafReaderContext,Scorer,IOException> LeafReaderContext ###this.liveDocs=leaf.reader().getLiveDocs();###reader###leaf.reader()###56:9:56:53
abd2f2ee71448bcfab7dee4111fee1c385f2147c###/crate_crate/server/src/main/java/io/crate/protocols/postgres/DelayableWriteChannel.java###/DelayableWriteChannel.java###io.crate.protocols.postgres.DelayableWriteChannel###close:###delay.releaseAll();###localDelay###delay###88:9:88:28
282f55576f68662490ceb1ac5ba2ce5fa8df0c40###/crate_crate/server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java###/InternalEngineTests.java###org.elasticsearch.index.engine.InternalEngineTests###testDoubleDeliveryReplicaAppendingOnly:###if(randomBoolean())###create###randomBoolean()###3416:9:3428:10
d0a3d013aa54371122c5b4fdb3f74eba347d24a1###/crate_crate/server/src/main/java/io/crate/planner/operators/Collect.java###/Collect.java###io.crate.planner.operators.Collect###createPhase:PlannerContext Function<Symbol,Symbol> ###where=WhereClauseAnalyzer.resolvePartitions(where.map(binder),relation,plannerContext.functions(),plannerContext.transactionContext());###boundWhere###where.map(binder)###237:9:241:50
83d8c41b7268549c78ddec960a60cc767106a313###/crate_crate/server/src/main/java/io/crate/planner/operators/LogicalPlanner.java###/LogicalPlanner.java###io.crate.planner.operators.LogicalPlanner###normalizeAndPlan:AnalyzedRelation PlannerContext SubqueryPlanner Set<PlanHint> ###returnfetchOptimizer.optimize(optimizedPlan.pruneOutputsExcept(tableStats,relation.outputs()),tableStats,coordinatorTxnCtx);###prunedPlan###optimizedPlan.pruneOutputsExcept(tableStats,relation.outputs())###234:9:238:11
a1fc029711ba5f6e115e3fe5a5295646e3c0e3c7###/crate_crate/server/src/main/java/io/crate/replication/logical/metadata/ConnectionInfo.java###/ConnectionInfo.java###io.crate.replication.logical.metadata.ConnectionInfo###fromURL:String ###settingsBuilder.putList(settingName,settingValue.split(","));###seeds###settingValue.split(",")###161:17:161:79
e31b4c831ab06e9f816d559d2841a0c9cef1fdcf###/crate_crate/server/src/main/java/org/elasticsearch/index/mapper/GeoShapeFieldMapper.java###/GeoShapeFieldMapper.java###org.elasticsearch.index.mapper.GeoShapeFieldMapper###indexShape:ParseContext Shape ###List<IndexableField>fields=newArrayList<>(Arrays.asList(fieldType().defaultStrategy().createIndexableFields(shape)));###indexableFields###fieldType().defaultStrategy().createIndexableFields(shape)###445:9:445:130
8ad9ecf201af3ef796d1d064bd7728444e57d1c8###/crate_crate/server/src/test/java/io/crate/expression/tablefunctions/AbstractTableFunctionsTest.java###/AbstractTableFunctionsTest.java###io.crate.expression.tablefunctions.AbstractTableFunctionsTest###prepareFunctions:###sqlExpressions=newSqlExpressions(Map.of(newRelationName(null,"t"),mock(DocTableRelation.class)));###relation###mock(DocTableRelation.class)###53:9:53:112
ccca7a9a908b3aebe6a949e35bd688633d04ea9a###/crate_crate/server/src/test/java/io/crate/planner/operators/LogicalPlannerTest.java###/LogicalPlannerTest.java###io.crate.planner.operators.LogicalPlannerTest###test_top_n_distinct_limits_outputs_to_the_group_keys_if_source_has_more_outputs:###assertThat(collect.collectPhase().projections(),contains(instanceOf(TopNDistinctProjection.class)));###projections###collect.collectPhase().projections()###371:9:376:11
d67dc8b3d9d6c70506d733cf95dadba475464238###/crate_crate/server/src/main/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdSettings.java###/DiskThresholdSettings.java###org.elasticsearch.cluster.routing.allocation.DiskThresholdSettings.HighDiskWatermarkValidator###settings:###returnArrays.asList(CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK_SETTING,CLUSTER_ROUTING_ALLOCATION_DISK_FLOOD_STAGE_WATERMARK_SETTING).iterator();###settings###Arrays.asList(CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK_SETTING,CLUSTER_ROUTING_ALLOCATION_DISK_FLOOD_STAGE_WATERMARK_SETTING)###138:13:141:29
ae369879dbdf37ecacdd42ab61ca76afc32cec84###/crate_crate/server/src/main/java/org/elasticsearch/node/Node.java###/Node.java###org.elasticsearch.node.Node###Node:Environment Collection<Class<? extends Plugin>> boolean ###modules.add(newRepositoriesModule(this.environment,pluginsService.filterPlugins(RepositoryPlugin.class),transportService,clusterService,threadPool,xContentRegistry));###repositoriesModule###newRepositoriesModule(this.environment,pluginsService.filterPlugins(RepositoryPlugin.class),transportService,clusterService,threadPool,xContentRegistry)###516:13:522:15
1f605c2656425b07404c0dd25fd427af2b670327###/crate_crate/server/src/main/java/io/crate/planner/operators/JoinPlanBuilder.java###/JoinPlanBuilder.java###io.crate.planner.operators.JoinPlanBuilder###buildJoinTree:List<AnalyzedRelation> Symbol List<JoinPair> Function<AnalyzedRelation,LogicalPlan> boolean ###LinkedHashMap<Set<RelationName>,JoinPair>joinPairsByRelations=JoinOperations.buildRelationsToJoinPairsMap(JoinOperations.convertImplicitJoinConditionsToJoinPairs(joinPairs,queryParts));###allJoinPairs###JoinOperations.convertImplicitJoinConditionsToJoinPairs(joinPairs,queryParts)###70:9:72:97
064d66cbd2a853b7791c9b01819f4bf806598465###/crate_crate/server/src/main/java/io/crate/metadata/cluster/AlterTableClusterStateExecutor.java###/AlterTableClusterStateExecutor.java###io.crate.metadata.cluster.AlterTableClusterStateExecutor###addExistingMeta:AlterTableRequest Map<String,Object> ###metaDelta.putIfAbsent("primary_keys",currentMeta.get("primary_keys"));###curPrimaryKeys###currentMeta.get("primary_keys")###240:13:240:84
d67dc8b3d9d6c70506d733cf95dadba475464238###/crate_crate/server/src/main/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdSettings.java###/DiskThresholdSettings.java###org.elasticsearch.cluster.routing.allocation.DiskThresholdSettings.FloodStageValidator###settings:###returnArrays.asList(CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK_SETTING,CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK_SETTING).iterator();###settings###Arrays.asList(CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK_SETTING,CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK_SETTING)###161:13:164:29
dbcc240e276309972c5b36c97fe326000ef706c8###/crate_crate/server/src/testFixtures/java/io/crate/operation/aggregation/AggregationTestCase.java###/AggregationTestCase.java###io.crate.operation.aggregation.AggregationTestCase###execPartialAggregationWithDocValues:Signature List<DataType<?>> DataType<?> IndexShard Version List<Literal<?>> ###toCollectRefs.add(newReference(newReferenceIdent(fromIndexName(shard.routingEntry().getIndexName()),Integer.toString(i)),RowGranularity.DOC,argumentTypes.get(i),i+1,null));###ident###newReferenceIdent(fromIndexName(shard.routingEntry().getIndexName()),Integer.toString(i))###305:13:314:15
109f1e4f5abea4e2a4c0efbd32b47220fb5ce418###/crate_crate/libs/shared/src/main/java/io/crate/common/collections/NumericTrieMap.java###/NumericTrieMap.java###io.crate.common.collections.NumericTrieMap###put:K V ###currentNode=currentNode.goToState(lastDigit);###nextNode###currentNode.goToState(lastDigit)###156:13:156:60
d67dc8b3d9d6c70506d733cf95dadba475464238###/crate_crate/server/src/test/java/org/elasticsearch/common/settings/SettingTests.java###/SettingTests.java###org.elasticsearch.common.settings.SettingTests.FooBarValidator###settings:###returnArrays.asList(BAZ_QUX_SETTING,QUUX_QUUZ_SETTING).iterator();###settings###Arrays.asList(BAZ_QUX_SETTING,QUUX_QUUZ_SETTING)###223:13:223:81
ae40eb576e1c80b1d891b44e85e54649483d0d67###/crate_crate/server/src/test/java/io/crate/integrationtests/SSLTransportITest.java###/SSLTransportITest.java###io.crate.integrationtests.SSLTransportITest###nodeSettings:int ###returnSettings.builder().put(super.nodeSettings(nodeOrdinal)).put("auth.host_based.enabled",true).put("auth.host_based.config.a.method","cert").put("auth.host_based.config.a.protocol","transport").put("auth.host_based.config.c.method","trust").put("auth.host_based.config.c.protocol","http").put("auth.host_based.config.d.method","trust").put("auth.host_based.config.d.protocol","pg").put(sslSettings).build();###builder###Settings.builder().put(super.nodeSettings(nodeOrdinal)).put("auth.host_based.enabled",true).put("auth.host_based.config.a.method","cert").put("auth.host_based.config.a.protocol","transport").put("auth.host_based.config.c.method","trust").put("auth.host_based.config.c.protocol","http").put("auth.host_based.config.d.method","trust").put("auth.host_based.config.d.protocol","pg").put(sslSettings)###65:9:76:22
490270546bfdd8c6cad4bfc6d8c4598199aa9e44###/crate_crate/dex/src/main/java/io/crate/data/TopNDistinctBatchIterator.java###/TopNDistinctBatchIterator.java###io.crate.data.TopNDistinctBatchIterator###moveNext:###booleanadded=items.add(memoizeItem.apply(source.currentElement()));###materializedItem###memoizeItem.apply(source.currentElement())###70:13:70:83
846d303778930c125ce3793cd89622ffc0963231###/crate_crate/server/src/test/java/io/crate/execution/ddl/RepositoryServiceTest.java###/RepositoryServiceTest.java###io.crate.execution.ddl.RepositoryServiceTest###testRepositoryIsDroppedOnFailure:###TransportDeleteRepositoryActiondeleteRepositoryAction=newTransportDeleteRepositoryAction(MockTransportService.createNewService(Settings.EMPTY,Version.CURRENT,THREAD_POOL,clusterService.getClusterSettings()),clusterService,mock(RepositoriesService.class),THREAD_POOL,indexNameExpressionResolver){@OverrideprotectedvoiddoExecute(DeleteRepositoryRequestrequest,ActionListener<AcknowledgedResponse>listener){deleteRepoCalled.set(true);listener.onResponse(mock(AcknowledgedResponse.class));}};###transportService###MockTransportService.createNewService(Settings.EMPTY,Version.CURRENT,THREAD_POOL,clusterService.getClusterSettings())###85:9:97:11
ae8560ff94532db49b0ebc1dbda6aa292fa84b10###/crate_crate/server/src/main/java/io/crate/planner/operators/ProjectSet.java###/ProjectSet.java###io.crate.planner.operators.ProjectSet###create:LogicalPlan List<Function> ###returnnewProjectSet(source,tableFunctions,source.outputs());###result###source###62:9:62:73
8978986754f00d35dad7cc50b1854eac052d7618###/crate_crate/server/src/main/java/org/elasticsearch/env/NodeEnvironment.java###/NodeEnvironment.java###org.elasticsearch.env.NodeEnvironment###resolveNodePath:Path int ###returnpath.resolve(NODES_FOLDER).resolve(Integer.toString(nodeLockId));###id###Integer.toString(nodeLockId)###342:9:342:81
25b6d5e01aef108fe840d3f09f9584ea83c14a4a###/crate_crate/server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java###/BlobStoreRepository.java###org.elasticsearch.repositories.blobstore.BlobStoreRepository###finalizeSnapshot:SnapshotId ShardGenerations long String int List<SnapshotShardFailure> long boolean Metadata boolean ActionListener<SnapshotInfo> ###finalActionListener<SnapshotInfo>allMetaListener=newGroupedActionListener<>(ActionListener.wrap(snapshotInfos->{assertsnapshotInfos.size()==1:"ShouldhaveonlyreceivedasingleSnapshotInfobutreceived"+snapshotInfos;finalSnapshotInfosnapshotInfo=snapshotInfos.iterator().next();finalRepositoryDataexistingRepositoryData=getRepositoryData();finalRepositoryDataupdatedRepositoryData=existingRepositoryData.addSnapshot(snapshotId,snapshotInfo.state(),shardGenerations);writeIndexGen(updatedRepositoryData,repositoryStateId,writeShardGens);if(writeShardGens){cleanupOldShardGens(existingRepositoryData,updatedRepositoryData);}listener.onResponse(snapshotInfo);},e->listener.onFailure(newSnapshotException(metadata.name(),snapshotId,"failedtoupdatesnapshotinrepository",e))),2+indices.size());###onUpdateFailure###e->listener.onFailure(newSnapshotException(metadata.name(),snapshotId,"failedtoupdatesnapshotinrepository",e))###770:9:782:33
c9dc9bcbd52eca8fccbb2e498b5da46dfb41c084###/crate_crate/server/src/main/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdMonitor.java###/DiskThresholdMonitor.java###org.elasticsearch.cluster.routing.allocation.DiskThresholdMonitor###onNewInfo:ClusterInfo ###finalRoutingNoderoutingNode=state.getRoutingNodes().node(node);###routingNodes###state.getRoutingNodes()###151:17:151:84
2d1d3b77c0038029f1dded1636757d47d9580626###/crate_crate/server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java###/InternalEngine.java###org.elasticsearch.index.engine.InternalEngine###flush:boolean boolean ###if(indexWriter.hasUncommittedChanges()||force||shouldPeriodicallyFlush())###hasUncommittedChanges###indexWriter.hasUncommittedChanges()###1808:17:1826:18
8978986754f00d35dad7cc50b1854eac052d7618###/crate_crate/server/src/test/java/org/elasticsearch/env/NodeRepurposeCommandTests.java###/NodeRepurposeCommandTests.java###org.elasticsearch.env.NodeRepurposeCommandTests###createIndexDataFiles:Settings int ###try(NodeEnvironmentenv=newNodeEnvironment(settings,TestEnvironment.newEnvironment(settings)))###environment###TestEnvironment.newEnvironment(settings)###259:9:271:10
9aae2a0534c7e89b6e7de5d81c6455cddb1938dd###/crate_crate/server/src/main/java/io/crate/execution/engine/indexing/BatchIteratorBackpressureExecutor.java###/BatchIteratorBackpressureExecutor.java###io.crate.execution.engine.indexing.BatchIteratorBackpressureExecutor###consumeIterator:###scheduler.schedule(this::resumeConsumption,throttleDelay.next().getMillis(),TimeUnit.MILLISECONDS);###delayInMs###throttleDelay.next().getMillis()###155:21:155:122
076b57fdf448773efc4b304b5db81e8e2a12e384###/crate_crate/server/src/main/java/io/crate/protocols/postgres/PgClient.java###/PgClient.java###io.crate.protocols.postgres.PgClient###connect:CompletableFuture<Connection> ###if(connectionInfo.sslMode()==SSLMode.REQUIRE)###sslMode###connectionInfo.sslMode()###227:17:233:18
6a7dcb53e25b0f3ffb20ee8ed09bfe545fdce2f7###/crate_crate/server/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java###/RecoverySourceHandler.java###org.elasticsearch.indices.recovery.RecoverySourceHandler###handleErrorOnSendFiles:Store StoreFileMetadata Exception ###throwcorruptIndexException;###localException###corruptIndexException###825:17:825:45
e316d4d3b9a26902d2fdd6d836a8bb156ff612b1###/crate_crate/server/src/main/java/io/crate/metadata/Functions.java###/Functions.java###io.crate.metadata.Functions###numberOfExactTypeMatches:List<TypeSignature> List<TypeSignature> ###if(actualArgumentTypes.get(i).equals(declaredArgumentTypes.get(i)))###actualArgumentType###actualArgumentTypes.get(i)###593:13:595:14
6f5b8354bea8c17602977ec7d7608866fa4147a7###/crate_crate/server/src/main/java/io/crate/operation/collect/files/CSVLineParser.java###/CSVLineParser.java###io.crate.operation.collect.files.CSVLineParser###parse:String ###jsonBuilder.field(keyList.get(i),iterator.next());###value###iterator.next()###76:13:76:64
b2cf64ab6148910bde5a95e9ff20d35865451713###/crate_crate/server/src/main/java/io/crate/metadata/sys/TableHealthService.java###/TableHealthService.java###io.crate.metadata.sys.TableHealthService###tableHealthFromEntry:Map.Entry<TablePartitionIdent,ShardsInfo> ###returncalculateHealth(ident,shardsInfo,tableInfo.numberOfShards());###shardsCount###tableInfo.numberOfShards()###168:9:168:79
b8d2472568a6f954bf7696094bc73c9fe026d6d4###/crate_crate/server/src/main/java/io/crate/execution/dsl/projection/WindowAggProjection.java###/WindowAggProjection.java###io.crate.execution.dsl.projection.WindowAggProjection###writeTo:StreamOutput ###booleanonOrAfter4_1_0=out.getVersion().onOrAfter(Version.V_4_1_0);###version###out.getVersion()###149:9:149:78
5cda8fb751bd0f035bbbbd0729686e37f2a7bb6f###/crate_crate/server/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java###/SnapshotShardsService.java###org.elasticsearch.snapshots.SnapshotShardsService.startNewShards.execute.snapshot.new ActionListener<>###onFailure:Exception ###notifyFailedSnapshotShard(snapshot,shardId,ExceptionsHelper.stackTrace(e));###failure###ExceptionsHelper.stackTrace(e)###301:25:301:102
ab5e0a4a74e4b841661333f6aa1e8f79e6737c5c###/crate_crate/server/src/main/java/io/crate/planner/operators/Get.java###/Get.java###io.crate.planner.operators.Get###build:PlannerContext ProjectionBuilder int int OrderBy Integer Row SubQueryResults ###returnnewCollect(newPKLookupPhase(plannerContext.jobId(),plannerContext.nextExecutionPhaseId(),docTableInfo.partitionedBy(),boundOutputs,idsByShardByNode),TopN.NO_LIMIT,0,boundOutputs.size(),docKeys.size(),null);###toCollect###boundOutputs###138:9:151:11
839f154516bec8bfa8a03ff8222a29f2702920e6###/crate_crate/server/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java###/TransportReplicationAction.java###org.elasticsearch.action.support.replication.TransportReplicationAction.AsyncPrimaryAction###onResponse:PrimaryShardReference ###DiscoveryNoderelocatingNode=clusterService.state().nodes().get(primary.relocatingNodeId());###clusterState###clusterService.state()###334:21:334:115
762074836b43dfd1ae585a50f5eef39451b0dec4###/crate_crate/server/src/main/java/org/elasticsearch/index/seqno/ReplicationTracker.java###/ReplicationTracker.java###org.elasticsearch.index.seqno.ReplicationTracker###getRetentionLeases:boolean ###if(routingTable.allShardsStarted())###allShardsStarted###routingTable.allShardsStarted()###250:25:252:26
0ec1efc219972c352d499da47c637aa0917707d6###/crate_crate/server/src/main/java/io/crate/external/S3ClientHelper.java###/S3ClientHelper.java###io.crate.external.S3ClientHelper###client:URI ###String[]userInfoParts=uri.getUserInfo().split(":");###userInfo###uri.getUserInfo()###95:13:95:67
c9dc9bcbd52eca8fccbb2e498b5da46dfb41c084###/crate_crate/server/src/main/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdMonitor.java###/DiskThresholdMonitor.java###org.elasticsearch.cluster.routing.allocation.DiskThresholdMonitor###onNewInfo:ClusterInfo ###indicesToMarkReadOnly.add(routing.index().getName());###indexName###routing.index().getName()###154:25:154:78
3b5d24babc0200980c504199cb64233502d6f739###/crate_crate/server/src/main/java/io/crate/execution/engine/fetch/FetchCollector.java###/FetchCollector.java###io.crate.execution.engine.fetch.FetchCollector###collect:IntContainer ###List<LeafReaderContext>leaves=borrowed.item().getTopReaderContext().leaves();###searcher###borrowed.item()###80:13:80:93
8b998727128c2f3c909c8ab90c5ee7c08bd84301###/crate_crate/server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java###/SnapshotsService.java###org.elasticsearch.snapshots.SnapshotsService.beginSnapshot.execute.new AbstractRunnable###doRun:###if(repository.getRepositoryData().getSnapshotIds().stream().anyMatch(s->s.getName().equals(snapshotName)))###repositoryData###repository.getRepositoryData()###408:17:411:18
572fc6a6a0043a3e2374e96c4097d3933f9bceeb###/crate_crate/server/src/main/java/io/crate/execution/engine/collect/collectors/LuceneBatchIterator.java###/LuceneBatchIterator.java###io.crate.execution.engine.collect.collectors.LuceneBatchIterator###tryAdvanceDocIdSetIterator:###expression.setNextReader(newReaderContext(currentLeaf));###readerContext###newReaderContext(currentLeaf)###159:17:159:74
2ced07eff1b8279f3c7c7a7a738bf34d0abff986###/crate_crate/server/src/testFixtures/java/io/crate/testing/SQLExecutor.java###/SQLExecutor.java###io.crate.testing.SQLExecutor.Builder###Builder:ClusterService int Random List<AnalysisPlugin> AbstractModule[] ###logicalReplicationService=newLogicalReplicationService(IndexScopedSettings.DEFAULT_SCOPED_SETTINGS,Settings.EMPTY,clusterService,mock(RemoteClusters.class),mock(ThreadPool.class));###threadPool###mock(ThreadPool.class)###311:13:317:15
75eb6cad52762236dbe1fd35426453f5913ff32b###/crate_crate/server/src/test/java/io/crate/planner/operators/LogicalPlannerTest.java###/LogicalPlannerTest.java###io.crate.planner.operators.LogicalPlannerTest###test_top_n_distinct_limits_outputs_to_the_group_keys_if_source_has_more_outputs:###assertThat(collect.collectPhase().projections(),contains(instanceOf(TopNDistinctProjection.class)));###projections###collect.collectPhase().projections()###372:9:377:11
7be8b58327e89dc05d33c45072f3d57cb1c63b97###/crate_crate/server/src/main/java/org/elasticsearch/transport/netty4/DualModeSSLHandler.java###/DualModeSSLHandler.java###org.elasticsearch.transport.netty4.DualModeSSLHandler###decode:ChannelHandlerContext ByteBuf List<Object> ###if(ConnectionTest.isTLS(in))###tls###ConnectionTest.isTLS(in)###68:9:77:10
762074836b43dfd1ae585a50f5eef39451b0dec4###/crate_crate/server/src/test/java/org/elasticsearch/index/seqno/PeerRecoveryRetentionLeaseExpiryTests.java###/PeerRecoveryRetentionLeaseExpiryTests.java###org.elasticsearch.index.seqno.PeerRecoveryRetentionLeaseExpiryTests###testPeerRecoveryRetentionLeasesForUnassignedCopiesExpireEventually:###replicationTracker.addPeerRecoveryRetentionLease(unknownNodeId,randomCheckpoint(),EMPTY_LISTENER);###globalCheckpoint###randomCheckpoint()###154:9:154:109
6a376daa6473fe1d0b628f29ded251533855f674###/crate_crate/server/src/main/java/io/crate/metadata/functions/SignatureBinder.java###/SignatureBinder.java###io.crate.metadata.functions.SignatureBinder###satisfiesCoercion:CoercionType DataType<?> TypeSignature ###returnfromType.getTypeSignature().equals(toTypeSignature);###fromTypeSignature###fromType.getTypeSignature()###459:17:459:76
565107ebad7d5b588daa773f639c33b39f2a2d84###/crate_crate/server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java###/SnapshotsService.java###org.elasticsearch.snapshots.SnapshotsService.beginSnapshot.execute.new AbstractRunnable###doRun:###thrownewRepositoryException(repository.getMetadata().name(),"cannotcreatesnapshotinareadonlyrepository");###repoName###repository.getMetadata().name()###473:21:473:135
f5505cbfa113aa2a5612d910fde2e29bd919e06d###/crate_crate/server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java###/SnapshotsService.java###org.elasticsearch.snapshots.SnapshotsService.processSnapshotsOnRemovedNodes.submitStateUpdateTask.new ClusterStateUpdateTask###execute:ClusterState ###shards.put(shardEntry.key,shardEntry.value);###shardId###shardEntry.key###720:37:720:82
c156914bed2a3ec0ece037b8fcda16ee48bab228###/crate_crate/server/src/main/java/org/elasticsearch/cluster/coordination/Coordinator.java###/Coordinator.java###org.elasticsearch.cluster.coordination.Coordinator###cancelCommittedPublication:###currentPublication.get().cancel("cancelCommittedPublication");###publication###currentPublication.get()###1200:17:1200:79
b48984906cb5fe7283cf2a872a3edab2e93f3538###/crate_crate/server/src/main/java/org/elasticsearch/snapshots/RestoreService.java###/RestoreService.java###org.elasticsearch.snapshots.RestoreService.RestoreInProgressUpdater###applyChanges:RestoreInProgress ###shardsBuilder.put(shard.getKey(),shard.getValue());###shardId###shard.getKey()###648:29:648:81
9bd98e06f28e4df51181e03345b6909f2ca3400a###/crate_crate/server/src/test/java/io/crate/execution/engine/collect/HandlerSideLevelCollectTest.java###/HandlerSideLevelCollectTest.java###io.crate.execution.engine.collect.HandlerSideLevelCollectTest###collect:RoutedCollectPhase ###BatchIterator<Row>bi=operation.createIterator(txnCtx,collectPhase,consumer.requiresScroll(),mock(CollectTask.class));###collectTask###mock(CollectTask.class)###133:9:133:132
73475ced83a6faef338a88db2c13663aaf2cbb30###/crate_crate/server/src/main/java/io/crate/planner/operators/JoinPlanBuilder.java###/JoinPlanBuilder.java###io.crate.planner.operators.JoinPlanBuilder###buildJoinTree:List<AnalyzedRelation> Symbol List<JoinPair> Function<AnalyzedRelation,LogicalPlan> boolean ###LinkedHashMap<Set<RelationName>,JoinPair>joinPairsByRelations=JoinOperations.buildRelationsToJoinPairsMap(JoinOperations.convertImplicitJoinConditionsToJoinPairs(joinPairs,queryParts));###allJoinPairs###JoinOperations.convertImplicitJoinConditionsToJoinPairs(joinPairs,queryParts)###68:9:70:97
75a4baad18c1d612082b032356cf960250c61082###/crate_crate/server/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java###/InternalClusterInfoService.java###org.elasticsearch.cluster.InternalClusterInfoService###buildShardLevelInfo:Logger ShardStats[] ImmutableOpenMap.Builder<String,Long> ImmutableOpenMap.Builder<ShardRouting,String> ###newShardRoutingToDataPath.put(s.getShardRouting(),s.getDataPath());###shardRouting###s.getShardRouting()###324:13:324:81
b2cf64ab6148910bde5a95e9ff20d35865451713###/crate_crate/server/src/main/java/io/crate/metadata/PartitionInfos.java###/PartitionInfos.java###io.crate.metadata.PartitionInfos###createPartitionInfo:ObjectObjectCursor<String,IndexMetadata> ###PartitionNamepartitionName=PartitionName.fromIndexOrTemplate(indexMetadataEntry.key);###indexName###indexMetadataEntry.key###65:9:65:97
451d0976b6035a002dd3dbcaca34699530b11a3f###/crate_crate/server/src/test/java/io/crate/protocols/postgres/PostgresWireProtocolTest.java###/PostgresWireProtocolTest.java###io.crate.protocols.postgres.PostgresWireProtocolTest###testPasswordMessageAuthenticationProcess:###PostgresWireProtocolctx=newPostgresWireProtocol(mock(SQLOperations.class),sessionContext->AccessControl.DISABLED,chPipeline->{},newAuthentication(){@OverridepublicAuthenticationMethodresolveAuthenticationType(Stringuser,ConnectionPropertiesconnectionProperties){returnnewAuthenticationMethod(){@Nullable@OverridepublicUserauthenticate(StringuserName,@NullableSecureStringpasswd,ConnectionPropertiesconnProperties){returnnull;}@OverridepublicStringname(){return"password";}};}},null,null,newHashMap<>());###sqlOperations###mock(SQLOperations.class)###471:9:494:46
52037e2025791140be81e7c298523f3c173d4388###/crate_crate/server/src/main/java/io/crate/expression/operator/any/AnyEqOperator.java###/AnyEqOperator.java###io.crate.expression.operator.any.AnyEqOperator###arrayLiteralEqAnyArray:Function MappedFieldType Object LuceneQueryBuilder.Context ###returnnewBooleanQuery.Builder().add(fieldType.termsQuery(terms,context.queryShardContext()),BooleanClause.Occur.MUST).add(LuceneQueryBuilder.genericFunctionFilter(function,context),BooleanClause.Occur.FILTER).build();###genericFunctionFilter###LuceneQueryBuilder.genericFunctionFilter(function,context)###95:9:98:22
ad104e7fb42a5968978fa3d030bbb1b6b7432453###/crate_crate/server/src/test/java/org/elasticsearch/transport/MockTcpTransport.java###/MockTcpTransport.java###org.elasticsearch.transport.MockTcpTransport.MockChannel###accept:Executor ###incomingChannel=newMockChannel(incomingSocket,newInetSocketAddress(incomingSocket.getLocalAddress(),incomingSocket.getPort()),profile);###localAddress###newInetSocketAddress(incomingSocket.getLocalAddress(),incomingSocket.getPort())###294:29:299:72
dbcc240e276309972c5b36c97fe326000ef706c8###/crate_crate/server/src/main/java/io/crate/execution/engine/aggregation/impl/CountAggregation.java###/CountAggregation.java###io.crate.execution.engine.aggregation.impl.CountAggregation###getDocValueAggregator:List<Reference> Function<List<String>,List<MappedFieldType>> DocTableInfo List<Literal<?>> ###if(aggregationReferences.get(0).valueType().id()==ObjectType.ID)###reference###aggregationReferences.get(0)###293:9:313:10
dfd56c6710b17d7a440c6b6b2a5c6cfef6f95400###/crate_crate/server/src/main/java/io/crate/execution/dml/upsert/InsertSourceFromCells.java###/InsertSourceFromCells.java###io.crate.execution.dml.upsert.InsertSourceFromCells###generateSourceAndCheckConstraints:Object[] ###ColumnIdentcolumn=entry.getKey().column();###reference###entry.getKey()###122:13:122:58
bc0bb3f2191d9d5482934278cf8bfc380d0f1f93###/crate_crate/server/src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java###/RecoveryTarget.java###org.elasticsearch.indices.recovery.RecoveryTarget###indexTranslogOperations:List<Translog.Operation> int long long RetentionLeases long ActionListener<Long> ###if(result.getFailure()!=null)###failure###result.getFailure()###375:17:380:18
af14e58b15ce0930faef8e0d85f0707c7fed1005###/crate_crate/server/src/main/java/org/elasticsearch/cluster/coordination/Coordinator.java###/Coordinator.java###org.elasticsearch.cluster.coordination.Coordinator###doStart:###VotingConfigurationvotingConfiguration=coordinationState.get().getLastAcceptedState().getLastCommittedConfiguration();###lastAcceptedState###coordinationState.get().getLastAcceptedState()###661:13:661:134
572fc6a6a0043a3e2374e96c4097d3933f9bceeb###/crate_crate/server/src/main/java/io/crate/execution/engine/collect/GroupByOptimizedIterator.java###/GroupByOptimizedIterator.java###io.crate.execution.engine.collect.GroupByOptimizedIterator###applyAggregatesGroupedByKey:BigArrays IndexSearcher String List<AggregationContext> List<? extends LuceneCollectorExpression<?>> List<CollectExpression<Row,?>> RamAccounting MemoryManager Version InputRow Query AtomicReference<Throwable> ###expressions.get(i).setNextReader(newReaderContext(leaf));###readerContext###newReaderContext(leaf)###298:17:298:75
5b0fc6762bf4e7321fc4a50de7b83219eca6ff37###/crate_crate/server/src/main/java/io/crate/execution/engine/collect/S3FileInputToBeRemoved.java###/S3FileInputToBeRemoved.java###io.crate.execution.engine.collect.S3FileInputToBeRemoved###addKeyUris:List<URI> ObjectListing URI Predicate<URI> ###URIkeyUri=uri.resolve("/"+summary.getBucketName()+"/"+summary.getKey());###key###summary.getKey()###82:17:82:98
1d792ac05826c07f69b696fd2f453bca29f8ec3b###/crate_crate/server/src/main/java/io/crate/execution/dsl/projection/builder/ProjectionBuilder.java###/ProjectionBuilder.java###io.crate.execution.dsl.projection.builder.ProjectionBuilder###getAggregations:Collection<Function> AggregateMode InputColumns.SourceSymbols SearchPath Function<Symbol,Symbol> ###Aggregationaggregation=newAggregation(aggregationFunction.signature(),aggregationFunction.boundSignature().getReturnType().createType(),mode.returnType(aggregationFunction),Lists2.map(aggregationInputs,subQueryAndParamBinder),subQueryAndParamBinder.apply(filterInput));###valueType###mode.returnType(aggregationFunction)###144:13:150:15
8a0696036f4a6fbb50994cb8809f7903a5f7ebc1###/crate_crate/server/src/test/java/io/crate/integrationtests/PostgresITest.java###/PostgresITest.java###io.crate.integrationtests.PostgresITest###test_geo_types_arrays:###shape.setValue("{\"coordinates\":[[0.0,0.0],[1.0,1.0]],\"type\":\"LineString\"}");###shape###"{\"coordinates\":[[0.0,0.0],[1.0,1.0]],\"type\":\"LineString\"}"###469:13:469:95
80adfc4d70918a06e42d0cbaa702fe0f3803273e###/crate_crate/libs/sql-parser/src/main/java/io/crate/sql/parser/AstBuilder.java###/AstBuilder.java###io.crate.sql.parser.AstBuilder###createDuplicateKeyContext:SqlBaseParser.InsertContext ###if(onConflictContext.conflictTarget()!=null)###conflictTarget###onConflictContext.conflictTarget()###609:13:615:14
cb6246bcf4f471585a332a9af37aa0a10bc28b8c###/crate_crate/server/src/test/java/io/crate/types/RegprocTypeTest.java###/RegprocTypeTest.java###io.crate.types.RegprocTypeTest###test_implicit_cast_regproc_to_integer:###assertThat(DataTypes.INTEGER.implicitCast(Regproc.of("func")),is(OidHash.regprocOid("func")));###proc###Regproc.of("func")###41:9:43:45
16dc3833948b46d0217b4ce7d413806e130e180a###/crate_crate/server/src/main/java/io/crate/protocols/postgres/types/PGArray.java###/PGArray.java###io.crate.protocols.postgres.types.PGArray###encodeAsUTF8Text:List<Object> ###if((char)aByte=='"')###ch###(char)aByte###192:29:194:30
89c5b8e7b1f96def563aa4c3f22b5a2de0b68d7f###/crate_crate/server/src/main/java/io/crate/analyze/relations/RelationAnalyzer.java###/RelationAnalyzer.java###io.crate.analyze.relations.RelationAnalyzer###visitQuery:Query StatementAnalysisContext ###ExpressionAnalyzerexpressionAnalyzer=newExpressionAnalyzer(functions,statementContext.transactionContext(),statementContext.paramTyeHints(),newFullQualifiedNameFieldProvider(relationAnalysisContext.sources(),relationAnalysisContext.parentSources(),statementContext.transactionContext().sessionContext().searchPath().currentSchema()),newSubqueryAnalyzer(this,statementContext));###coordinatorTxnCtx###statementContext.transactionContext()###153:9:161:59
1ff37a526cd275cb41763b00d07aef4c0796a513###/crate_crate/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java###/IndexShard.java###org.elasticsearch.index.shard.IndexShard###resetEngineToGlobalCheckpoint:###newEngineReference.set(engineFactory.newReadWriteEngine(newEngineConfig(replicationTracker)));###newReadWriteEngine###engineFactory.newReadWriteEngine(newEngineConfig(replicationTracker))###3311:13:3311:107
75a4baad18c1d612082b032356cf960250c61082###/crate_crate/server/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDecider.java###/DiskThresholdDecider.java###org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDecider###sizeOfRelocatingShards:RoutingNode boolean String ClusterInfo Metadata RoutingTable ###for(routing:node.shardsWithState(ShardRoutingState.INITIALIZING))###initializingShards###node.shardsWithState(ShardRoutingState.INITIALIZING)###100:9:114:10
2322bd7f9e34420d720311f4255e2cd379932e22###/crate_crate/server/src/testFixtures/java/io/crate/testing/SQLErrorMatcher.java###/SQLErrorMatcher.java###io.crate.testing.SQLErrorMatcher###fromPSQLException:PSQLException ###varsqlState=e.getServerErrorMessage().getSQLState();###serverErrorMessage###e.getServerErrorMessage()###102:9:102:64
88c462740b2220c5c793046bdb820584f6d9096f###/crate_crate/server/src/main/java/io/crate/replication/logical/metadata/pgcatalog/PgPublicationTablesTable.java###/PgPublicationTablesTable.java###io.crate.replication.logical.metadata.pgcatalog.PgPublicationTablesTable###rows:LogicalReplicationService Schemas ###vartables=e.getValue().tables();###pub###e.getValue()###53:21:53:56
d67dc8b3d9d6c70506d733cf95dadba475464238###/crate_crate/server/src/main/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdSettings.java###/DiskThresholdSettings.java###org.elasticsearch.cluster.routing.allocation.DiskThresholdSettings.LowDiskWatermarkValidator###settings:###returnArrays.asList(CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK_SETTING,CLUSTER_ROUTING_ALLOCATION_DISK_FLOOD_STAGE_WATERMARK_SETTING).iterator();###settings###Arrays.asList(CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK_SETTING,CLUSTER_ROUTING_ALLOCATION_DISK_FLOOD_STAGE_WATERMARK_SETTING)###115:13:118:29
064d66cbd2a853b7791c9b01819f4bf806598465###/crate_crate/server/src/main/java/io/crate/metadata/cluster/AlterTableClusterStateExecutor.java###/AlterTableClusterStateExecutor.java###io.crate.metadata.cluster.AlterTableClusterStateExecutor###addExistingMeta:AlterTableRequest Map<String,Object> ###metaDelta.put("check_constraints",currentMeta.get("check_constraints"));###curCheckConstraints###currentMeta.get("check_constraints")###244:17:244:90
855033d6afae73fd6e958db31a466369103bbf22###/crate_crate/server/src/test/java/org/elasticsearch/indices/state/CloseIndexIT.java###/CloseIndexIT.java###org.elasticsearch.indices.state.CloseIndexIT###assertIndexIsClosed:String[] ###finalIndexMetadataindexMetadata=clusterState.metadata().indices().get(index);###availableIndices###clusterState.metadata().indices()###73:13:73:94
e31b4c831ab06e9f816d559d2841a0c9cef1fdcf###/crate_crate/server/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java###/FieldMapper.java###org.elasticsearch.index.mapper.FieldMapper###doXContentAnalyzers:XContentBuilder boolean ###booleanhasDifferentSearchAnalyzer=fieldType().searchAnalyzer().name().equals(fieldType().indexAnalyzer().name())==false;###searchAnalyzerName###fieldType().searchAnalyzer().name()###484:13:484:138
e7ee9f2c1b419cd263bf757040f8445a5d7cbce7###/crate_crate/plugins/cr8-copy-s3/src/test/java/io/crate/copy/s3/S3FileInputTest.java###/S3FileInputTest.java###io.crate.copy.s3.S3FileInputTest###setUpClass:###preGlobUri=reformat(newURI("s3://fakeBucket/prefix"));###uri###newURI("s3://fakeBucket/prefix")###64:9:64:66
5603724b35dfd785882f2054526d184ac744d55f###/crate_crate/server/src/test/java/io/crate/protocols/postgres/ClientMessages.java###/ClientMessages.java###io.crate.protocols.postgres.ClientMessages###sendStartupMessage:ByteBuf String ###buffer.writeInt(3);###protocolVersion###3###48:9:48:28
dfe8f438eab22395b0e007ce77cbf15829f5f1ca###/crate_crate/server/src/main/java/org/elasticsearch/transport/TcpTransport.java###/TcpTransport.java###org.elasticsearch.transport.TcpTransport###sendErrorResponse:Version Set<String> TcpChannel Exception long String ###RemoteTransportExceptiontx=newRemoteTransportException(nodeName,newTransportAddress(channel.getLocalAddress()),action,error);###address###newTransportAddress(channel.getLocalAddress())###825:13:826:91
cb3125ee9ff0cc643881f98150893bbd6097c072###/crate_crate/server/src/main/java/io/crate/replication/logical/action/TransportCreateSubscriptionAction.java###/TransportCreateSubscriptionAction.java###io.crate.replication.logical.action.TransportCreateSubscriptionAction.updateClusterState.submitStateUpdateTask.new ClusterStateUpdateTask###execute:ClusterState ###newMetadata.subscription().put(request.name(),newSubscription(request.owner(),request.connectionInfo(),request.publications(),request.settings()));###subscription###newSubscription(request.owner(),request.connectionInfo(),request.publications(),request.settings())###122:21:127:24
933143e84a304a4228f9a0f275607537b0b3009d###/crate_crate/server/src/main/java/io/crate/protocols/postgres/PostgresWireProtocol.java###/PostgresWireProtocol.java###io.crate.protocols.postgres.PostgresWireProtocol###handleCancelRequestBody:ByteBuf Channel ###transportKillJobsNodeAction.broadcast(newKillJobsRequest(List.of(targetSession.getMostRecentJobID()),userName,"Cancellationrequestedby:"+userName));###targetJobID###targetSession.getMostRecentJobID()###841:17:844:84
01d2afde3019e5d86c864dbc77bb60a9cf459680###/crate_crate/server/src/main/java/io/crate/execution/engine/fetch/ReaderBucket.java###/ReaderBucket.java###io.crate.execution.engine.fetch.ReaderBucket###fetched:Bucket ###docs.put(cursor.value,rowIterator.next().materialize());###cells###rowIterator.next().materialize()###72:13:72:70
52037e2025791140be81e7c298523f3c173d4388###/crate_crate/server/src/main/java/io/crate/expression/scalar/SubscriptFunction.java###/SubscriptFunction.java###io.crate.expression.scalar.SubscriptFunction###toQuery:Function Function Context ###if(ArrayType.unnest(ref.valueType()).id()==ObjectType.ID)###innerType###ArrayType.unnest(ref.valueType())###254:17:256:18
206dc6ebb4e06aca1dcc332bc4eb81e6879f1dcb###/crate_crate/server/src/test/java/org/elasticsearch/test/InternalTestCluster.java###/InternalTestCluster.java###org.elasticsearch.test.InternalTestCluster###fullRestart:RestartCallback ###assertnodesByRoles.values().stream().mapToInt(List::size).sum()==nodes.size();###nodeCount###nodes.size()###1685:9:1685:90
a6efc3918f6297b08ca2be295bfc214edbb0cf2c###/crate_crate/server/src/testFixtures/java/io/crate/operation/aggregation/AggregationTestCase.java###/AggregationTestCase.java###io.crate.operation.aggregation.AggregationTestCase###execPartialAggregationWithDocValues:Signature List<DataType<?>> DataType<?> IndexShard ###varaggregation=newAggregation(signature,actualReturnType,InputColumn.mapToInputColumns(argumentTypes));###inputs###InputColumn.mapToInputColumns(argumentTypes)###273:9:277:11
f0949d8a5624ec4f9cc09654ae48e2489ba41099###/crate_crate/server/src/testFixtures/java/io/crate/operation/aggregation/AggregationTestCase.java###/AggregationTestCase.java###io.crate.operation.aggregation.AggregationTestCase###insertDataIntoShard:IndexShard Object[][] ###builder.field(Integer.toString(j),cell[j]);###value###cell[j]###369:17:369:61
8ad9ecf201af3ef796d1d064bd7728444e57d1c8###/crate_crate/server/src/test/java/io/crate/expression/tablefunctions/AbstractTableFunctionsTest.java###/AbstractTableFunctionsTest.java###io.crate.expression.tablefunctions.AbstractTableFunctionsTest###prepareFunctions:###sqlExpressions=newSqlExpressions(Map.of(newRelationName(null,"t"),mock(DocTableRelation.class)));###relationName###newRelationName(null,"t")###53:9:53:112
bbe7f58d554e981c9c673186811b4fd6b02195a8###/crate_crate/server/src/main/java/org/elasticsearch/cluster/coordination/Coordinator.java###/Coordinator.java###org.elasticsearch.cluster.coordination.Coordinator###improveConfiguration:ClusterState ###finalVotingConfigurationnewConfig=reconfigurator.reconfigure(liveNodes,clusterState.getVotingConfigExclusions().stream().map(VotingConfigExclusion::getNodeId).collect(Collectors.toSet()),getLocalNode(),clusterState.getLastAcceptedConfiguration());###excludedNodeIds###clusterState.getVotingConfigExclusions().stream().map(VotingConfigExclusion::getNodeId)###854:9:856:74
aa72e1404dbd9d30f968e640aa5188d58689cb1e###/crate_crate/libs/es-x-content/src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java###/XContentBuilder.java###org.elasticsearch.common.xcontent.XContentBuilder###unknownValue:Object ###Writerwriter=WRITERS.get(value.getClass());###clazz###value.getClass()###813:9:813:55
e47196761a999ec65678dc8f483f0db160f34e94###/crate_crate/server/src/main/java/org/elasticsearch/index/seqno/ReplicationTracker.java###/ReplicationTracker.java###org.elasticsearch.index.seqno.ReplicationTracker###getRetentionLeases:boolean ###if(partitionByExpiration.get(true)==null)###expiredLeases###partitionByExpiration.get(true)###231:9:234:10
80adfc4d70918a06e42d0cbaa702fe0f3803273e###/crate_crate/server/src/main/java/io/crate/analyze/InsertAnalyzer.java###/InsertAnalyzer.java###io.crate.analyze.InsertAnalyzer###analyze:Insert<Expression> ParamTypeHints CoordinatorTxnCtx ###Map<Reference,Symbol>onDuplicateKeyAssignments=processUpdateAssignments(tableRelation,targetColumns,typeHints,txnCtx,newNameFieldProvider(tableRelation),insert.duplicateKeyContext());###fieldProvider###newNameFieldProvider(tableRelation)###125:9:132:11
e316d4d3b9a26902d2fdd6d836a8bb156ff612b1###/crate_crate/server/src/main/java/io/crate/metadata/Functions.java###/Functions.java###io.crate.metadata.Functions###numberOfExactTypeMatches:List<TypeSignature> List<TypeSignature> ###if(actualArgumentTypes.get(i).equals(declaredArgumentTypes.get(i)))###declaredArgumentType###declaredArgumentTypes.get(i)###593:13:595:14
bd592a5d85944816ad9c05b026b4ea09369b0b49###/crate_crate/server/src/test/java/org/elasticsearch/indices/recovery/RecoverySourceHandlerTests.java###/RecoverySourceHandlerTests.java###org.elasticsearch.indices.recovery.RecoverySourceHandlerTests###testHandleExceptionOnSendFiles:###assertNull(ExceptionsHelper.unwrapCorruption(ex));###unwrappedCorruption###ExceptionsHelper.unwrapCorruption(ex)###490:13:490:63
75a4baad18c1d612082b032356cf960250c61082###/crate_crate/server/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java###/InternalClusterInfoService.java###org.elasticsearch.cluster.InternalClusterInfoService###buildShardLevelInfo:Logger ShardStats[] ImmutableOpenMap.Builder<String,Long> ImmutableOpenMap.Builder<ShardRouting,String> ###longsize=s.getStats().getStore().sizeInBytes();###storeStats###s.getStats().getStore()###325:13:325:63
9d73635fb59345b5e729b02ba0a6a72c10ae05bd###/crate_crate/server/src/main/java/io/crate/execution/ddl/tables/TransportCloseTable.java###/TransportCloseTable.java###io.crate.execution.ddl.tables.TransportCloseTable###closeRoutingTable:ClusterState AlterTableTarget DDLClusterStateService Map<Index,ClusterBlock> Map<Index,AcknowledgedResponse> ###metadata.put(IndexMetadata.builder(indexMetadata).state(IndexMetadata.State.CLOSE));###updatedMetadata###IndexMetadata.builder(indexMetadata).state(IndexMetadata.State.CLOSE)###195:17:195:101
829b67c8dd4fb1d063cc8a1a06f051484f0efa62###/crate_crate/server/src/main/java/org/elasticsearch/repositories/RepositoriesService.java###/RepositoriesService.java###org.elasticsearch.repositories.RepositoriesService###applyClusterState:ClusterChangedEvent ###RepositoriesMetadatanewMetadata=event.state().getMetadata().custom(RepositoriesMetadata.TYPE);###state###event.state()###278:13:278:110
