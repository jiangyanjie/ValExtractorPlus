e2634f2285d1c5aeacc6053a4e661f42c93a606d###/dariuszseweryn_RxAndroidBle/mockrxandroidble/src/main/java/com/polidea/rxandroidble2/mockrxandroidble/RxBleConnectionMock.java###/RxBleConnectionMock.java###com.polidea.rxandroidble2.mockrxandroidble.RxBleConnectionMock###writeCharacteristic:UUID byte[] ###returngetCharacteristic(characteristicUuid).map(newFunction<BluetoothGattCharacteristic,byte[]>(){@Overridepublicbyte[]apply(BluetoothGattCharacteristiccharacteristic){characteristic.setValue(data);returndata;}});###characteristic###getCharacteristic(characteristicUuid)###359:9:366:20
5d14396fd16df703e77b43452986604725c6fb92###/dariuszseweryn_RxAndroidBle/rxandroidble/src/main/java/com/polidea/rxandroidble/internal/operations/RxBleRadioOperationConnect.java###/RxBleRadioOperationConnect.java###com.polidea.rxandroidble.internal.operations.RxBleRadioOperationConnect###run:###bluetoothGattBehaviorSubject.onNext(bluetoothDevice.connectGatt(context,false,rxBleGattCallback.getBluetoothGattCallback()));###bluetoothGatt###bluetoothDevice.connectGatt(context,false,rxBleGattCallback.getBluetoothGattCallback())###56:9:56:136
e2634f2285d1c5aeacc6053a4e661f42c93a606d###/dariuszseweryn_RxAndroidBle/mockrxandroidble/src/main/java/com/polidea/rxandroidble2/mockrxandroidble/RxBleConnectionMock.java###/RxBleConnectionMock.java###com.polidea.rxandroidble2.mockrxandroidble.RxBleConnectionMock###readDescriptor:UUID UUID UUID ###returndiscoverServices().flatMap(newFunction<RxBleDeviceServices,SingleSource<BluetoothGattDescriptor>>(){@OverridepublicSingleSource<BluetoothGattDescriptor>apply(RxBleDeviceServicesrxBleDeviceServices){returnrxBleDeviceServices.getDescriptor(serviceUuid,characteristicUuid,descriptorUuid);}}).map(newFunction<BluetoothGattDescriptor,byte[]>(){@Overridepublicbyte[]apply(BluetoothGattDescriptorbluetoothGattDescriptor){returnbluetoothGattDescriptor.getValue();}});###descriptor###discoverServices().flatMap(newFunction<RxBleDeviceServices,SingleSource<BluetoothGattDescriptor>>(){@OverridepublicSingleSource<BluetoothGattDescriptor>apply(RxBleDeviceServicesrxBleDeviceServices){returnrxBleDeviceServices.getDescriptor(serviceUuid,characteristicUuid,descriptorUuid);}})###134:9:146:20
4f2ee63aec7801bbf397bd712a35e5223c553e82###/dariuszseweryn_RxAndroidBle/rxandroidble/src/main/java/com/polidea/rxandroidble2/internal/operations/ScanOperationApi21.java###/ScanOperationApi21.java###com.polidea.rxandroidble2.internal.operations.ScanOperationApi21.createScanCallback.new ScanCallback###onBatchScanResults:List<ScanResult> ###scanEmitter.onNext(internalScanResult);###refScanEmitter###scanEmitter###93:29:93:68
e7b29aae48532ab4295796a47ca0d841aa9cfa34###/dariuszseweryn_RxAndroidBle/rxandroidble/src/main/java/com/polidea/rxandroidble/internal/util/RxBleAdapterWrapper.java###/RxBleAdapterWrapper.java###com.polidea.rxandroidble.internal.util.RxBleAdapterWrapper###stopLeScan:ScanCallback ###bluetoothAdapter.getBluetoothLeScanner().stopScan(scanCallback);###bluetoothLeScanner###bluetoothAdapter.getBluetoothLeScanner()###53:9:53:73
70f8db83aa40de8e9466d84d0bcadd3aa6553de1###/dariuszseweryn_RxAndroidBle/rxandroidble/src/main/java/com/polidea/rxandroidble/RxBleClientImpl.java###/RxBleClientImpl.java###com.polidea.rxandroidble.RxBleClientImpl###getInstance:Context ###finalRxBleAdapterStateObservableadapterStateObservable=newRxBleAdapterStateObservable(context.getApplicationContext());###applicationContext###context.getApplicationContext()###61:9:61:133
45f1df765fe4214ac04cc17300cc52d8c97b9f75###/dariuszseweryn_RxAndroidBle/rxandroidble/src/main/java/com/polidea/rxandroidble/internal/operations/RxBleRadioOperationConnect.java###/RxBleRadioOperationConnect.java###com.polidea.rxandroidble.internal.operations.RxBleRadioOperationConnect###protectedRun:Emitter<BluetoothGatt> RadioReleaseInterface ###finalSubscriptionsubscription=getConnectedBluetoothGatt().compose(wrapWithTimeoutWhenNotAutoconnecting()).doOnUnsubscribe(newAction0(){@Overridepublicvoidcall(){radioReleaseInterface.release();}}).subscribe(emitter);###releaseRadioAction###newAction0(){@Overridepublicvoidcall(){radioReleaseInterface.release();}}###103:9:112:37
4f2ee63aec7801bbf397bd712a35e5223c553e82###/dariuszseweryn_RxAndroidBle/rxandroidble/src/main/java/com/polidea/rxandroidble2/internal/operations/ScanOperationApi21.java###/ScanOperationApi21.java###com.polidea.rxandroidble2.internal.operations.ScanOperationApi21.createScanCallback.new ScanCallback###onScanFailed:int ###scanEmitter.tryOnError(newBleScanException(errorCodeToBleErrorCode(errorCode)));###refScanEmitter###scanEmitter###102:21:102:102
d2ff2dad7de0c7138fae5ac4d566828d6f5026ae###/dariuszseweryn_RxAndroidBle/rxandroidble/src/main/java/com/polidea/rxandroidble/internal/operations/RxBleRadioOperationConnect.java###/RxBleRadioOperationConnect.java###com.polidea.rxandroidble.internal.operations.RxBleRadioOperationConnect###protectedRun:Emitter<BluetoothGatt> RadioReleaseInterface ###finalSubscriptionsubscription=getConnectedBluetoothGatt().compose(wrapWithTimeoutWhenNotAutoconnecting()).doOnUnsubscribe(newAction0(){@Overridepublicvoidcall(){radioReleaseInterface.release();}}).subscribe(emitter);###releaseRadioAction###newAction0(){@Overridepublicvoidcall(){radioReleaseInterface.release();}}###95:9:104:37
e2634f2285d1c5aeacc6053a4e661f42c93a606d###/dariuszseweryn_RxAndroidBle/mockrxandroidble/src/main/java/com/polidea/rxandroidble2/mockrxandroidble/RxBleConnectionMock.java###/RxBleConnectionMock.java###com.polidea.rxandroidble2.mockrxandroidble.RxBleConnectionMock###readCharacteristic:UUID ###returngetCharacteristic(characteristicUuid).map(newFunction<BluetoothGattCharacteristic,byte[]>(){@Overridepublicbyte[]apply(BluetoothGattCharacteristicbluetoothGattCharacteristic)throwsException{returnbluetoothGattCharacteristic.getValue();}});###characteristic###getCharacteristic(characteristicUuid)###118:9:123:12
f6e3d06786646628150889714de7eaf29be6ba07###/dariuszseweryn_RxAndroidBle/rxandroidble/src/main/java/com/polidea/rxandroidble2/internal/util/CheckerLocationPermission.java###/CheckerLocationPermission.java###com.polidea.rxandroidble2.internal.util.CheckerLocationPermission###isScanRuntimePermissionGranted:###returntrue;###allNeededPermissionsGranted###true###32:17:32:29
4f2ee63aec7801bbf397bd712a35e5223c553e82###/dariuszseweryn_RxAndroidBle/rxandroidble/src/main/java/com/polidea/rxandroidble2/internal/operations/ScanOperationApi21.java###/ScanOperationApi21.java###com.polidea.rxandroidble2.internal.operations.ScanOperationApi21.createScanCallback.new ScanCallback###onScanResult:int ScanResult ###scanEmitter.onNext(internalScanResult);###refScanEmitter###scanEmitter###82:25:82:64
37ecef5c270c792bcb9193f6dd76b8711642e0ff###/dariuszseweryn_RxAndroidBle/rxandroidble/src/main/java/com/polidea/rxandroidble/internal/operations/RxBleRadioOperationCharacteristicLongWrite.java###/RxBleRadioOperationCharacteristicLongWrite.java###com.polidea.rxandroidble.internal.operations.RxBleRadioOperationCharacteristicLongWrite.writeBatchAndObserve.fromEmitter.new Action1<Emitter<ByteAssociation<UUID>>>###call:Emitter<ByteAssociation<UUID>> ###finalSubscriptions=rxBleGattCallback.getOnCharacteristicWrite().subscribe(emitter);###onCharacteristicWrite###rxBleGattCallback.getOnCharacteristicWrite()###140:25:140:112
