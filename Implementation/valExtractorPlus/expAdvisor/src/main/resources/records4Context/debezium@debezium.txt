cd6a1f942d4197a2c748df1073b6b297c7ebd00b###/debezium_debezium/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorTask.java###/SqlServerConnectorTask.java###io.debezium.connector.sqlserver.SqlServerConnectorTask###start:Configuration ###coordinator.start(taskContext,this.queue,newSqlServerEventMetadataProvider());###metadataProvider###newSqlServerEventMetadataProvider()###135:9:135:90
b06b5aecbc4b4f2609fb1e335f835b369ddb627a###/debezium_debezium/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnector.java###/SqlServerConnector.java###io.debezium.connector.sqlserver.SqlServerConnector###taskConfigs:int ###taskConfig.put(RelationalDatabaseConnectorConfig.DATABASE_NAME.name(),connection.retrieveRealDatabaseName());###realDatabaseName###connection.retrieveRealDatabaseName()###62:13:62:123
164ab1330c5864ff12f4ff99f61a35f72167b61b###/debezium_debezium/debezium-core/src/main/java/io/debezium/jdbc/JdbcConnection.java###/JdbcConnection.java###io.debezium.jdbc.JdbcConnection###readSchema:Tables String String TableFilter ColumnNameFilter boolean ###viewIds.add(newTableId(catalogName,schemaName,tableName));###tableId###newTableId(catalogName,schemaName,tableName)###1155:17:1155:78
547ba8e0dba53996a0e931ea9ce2933eef27e640###/debezium_debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/connection/pgproto/PgProtoReplicationMessage.java###/PgProtoReplicationMessage.java###io.debezium.connector.postgresql.connection.pgproto.PgProtoReplicationMessage###transform:List<PgProto.DatumMessage> List<PgProto.TypeInfo> ###returnnewAbstractReplicationMessageColumn(columnName,type,typeInfo.map(PgProto.TypeInfo::getModifier).orElse(null),typeInfo.map(PgProto.TypeInfo::getValueOptional).orElse(Boolean.FALSE),hasTypeMetadata()){@OverridepublicObjectgetValue(PgConnectionSupplierconnection,booleanincludeUnknownDatatypes){returnPgProtoReplicationMessage.this.getValue(datum,connection,includeUnknownDatatypes);}@OverridepublicStringtoString(){returndatum.toString();}};###fullType###typeInfo.map(PgProto.TypeInfo::getModifier).orElse(null)###116:21:128:23
46b47a42b2b15743720ce6ffb179bf36f9e72ad8###/debezium_debezium/debezium-connector-oracle/src/main/java/io/debezium/connector/oracle/OracleValueConverters.java###/OracleValueConverters.java###io.debezium.connector.oracle.OracleValueConverters###convertIntervalDaySecond:Column Field Object ###r.deliver(((Number)data).longValue());###micros###((Number)data).longValue()###690:17:690:56
d13a1635d7e00a30843000459d75bf0d06e956d5###/debezium_debezium/debezium-core/src/main/java/io/debezium/relational/RelationalSnapshotChangeEventSource.java###/RelationalSnapshotChangeEventSource.java###io.debezium.relational.RelationalSnapshotChangeEventSource###determineCapturedTables:RelationalSnapshotContext<P,O> ###Set<TableId>allTableIds=determineDataCollectionsToBeSnapshotted(getAllTableIds(ctx)).collect(Collectors.toSet());###allTableIds###getAllTableIds(ctx)###181:9:181:125
172c17d207ea90417f623e282a8750144bd4b2b2###/debezium_debezium/debezium-connector-oracle/src/main/java/io/debezium/connector/oracle/logminer/parser/SelectLobParser.java###/SelectLobParser.java###io.debezium.connector.oracle.logminer.parser.SelectLobParser###parseColumnValue:String int Consumer<String> ###collector.accept(sql.substring(start,last));###value###sql.substring(start,last)###152:13:152:58
cb36b575db22ef3190906c1e6dc5747416cd0e86###/debezium_debezium/debezium-connector-mongodb/src/test/java/io/debezium/connector/mongodb/TestHelper.java###/TestHelper.java###io.debezium.connector.mongodb.TestHelper###getConfiguration:###returnConfiguration.fromSystemProperties("connector.").edit().withDefault(MongoDbConnectorConfig.HOSTS,"rs0/localhost:27017").withDefault(MongoDbConnectorConfig.AUTO_DISCOVER_MEMBERS,false).withDefault(MongoDbConnectorConfig.LOGICAL_NAME,"mongo1").build();###cfgBuilder###Configuration.fromSystemProperties("connector.").edit().withDefault(MongoDbConnectorConfig.HOSTS,"rs0/localhost:27017").withDefault(MongoDbConnectorConfig.AUTO_DISCOVER_MEMBERS,false).withDefault(MongoDbConnectorConfig.LOGICAL_NAME,"mongo1")###36:9:39:85
a02e530c804d77d471cbb06bb59f2ae4ee7d7b0c###/debezium_debezium/debezium-core/src/main/java/io/debezium/connector/AbstractSourceInfoStructMaker.java###/AbstractSourceInfoStructMaker.java###io.debezium.connector.AbstractSourceInfoStructMaker###commonStruct:T ###Structret=newStruct(schema()).put(AbstractSourceInfo.DEBEZIUM_VERSION_KEY,version).put(AbstractSourceInfo.DEBEZIUM_CONNECTOR_KEY,connector).put(AbstractSourceInfo.SERVER_NAME_KEY,serverName).put(AbstractSourceInfo.TIMESTAMP_KEY,timestamp.toEpochMilli()).put(AbstractSourceInfo.DATABASE_NAME_KEY,database).put(AbstractSourceInfo.SEQUENCE_KEY,sequence);###ret###newStruct(schema()).put(AbstractSourceInfo.DEBEZIUM_VERSION_KEY,version).put(AbstractSourceInfo.DEBEZIUM_CONNECTOR_KEY,connector).put(AbstractSourceInfo.SERVER_NAME_KEY,serverName).put(AbstractSourceInfo.TIMESTAMP_KEY,timestamp.toEpochMilli()).put(AbstractSourceInfo.DATABASE_NAME_KEY,database)###54:9:60:65
6d5308c8aa45738a5332075916b7c85350fe145b###/debezium_debezium/debezium-connector-oracle/src/main/java/io/debezium/connector/oracle/logminer/LogMinerStreamingChangeEventSource.java###/LogMinerStreamingChangeEventSource.java###io.debezium.connector.oracle.logminer.LogMinerStreamingChangeEventSource###execute:ChangeEventSourceContext OraclePartition OracleOffsetContext ###if(!isContinuousMining&&startScn.compareTo(getFirstScnInLogs(jdbcConnection))<0)###firstScn###getFirstScnInLogs(jdbcConnection)###114:17:117:18
2f92553d8f67d8dbf947fa0277a14c5dd5df05d7###/debezium_debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/RecordsStreamProducerIT.java###/RecordsStreamProducerIT.java###io.debezium.connector.postgresql.RecordsStreamProducerIT###before:###PostgresConnectorConfigconfig=newPostgresConnectorConfig(TestHelper.defaultConfig().with(PostgresConnectorConfig.INCLUDE_UNKNOWN_DATATYPES,false).with(PostgresConnectorConfig.SCHEMA_BLACKLIST,"postgis").build());###configBuilder###TestHelper.defaultConfig().with(PostgresConnectorConfig.INCLUDE_UNKNOWN_DATATYPES,false).with(PostgresConnectorConfig.SCHEMA_BLACKLIST,"postgis")###91:9:94:27
83df96ff7014e93a8388de12fa4735e14350dcba###/debezium_debezium/debezium-connector-mongodb/src/main/java/io/debezium/connector/mongodb/ReplicaSetDiscovery.java###/ReplicaSetDiscovery.java###io.debezium.connector.mongodb.ReplicaSetDiscovery###getReplicaSets:###StringaddressStr=clusterDescription.getServerDescriptions().stream().map(x->x.getAddress().toString()).collect(Collectors.joining(","));###serverDescriptions###clusterDescription.getServerDescriptions()###90:17:90:158
b20e689b2c171d3cc6566ef9b221df946c8cabf3###/debezium_debezium/debezium-core/src/main/java/io/debezium/transforms/outbox/EventRouter.java###/EventRouter.java###io.debezium.transforms.outbox.EventRouter###apply:R ###headers.add("id",eventId,eventValueSchema.field(fieldEventId).schema());###eventIdField###eventValueSchema.field(fieldEventId)###115:9:115:83
da02ca2a234564b649c4484b0f767e464cf66813###/debezium_debezium/debezium-connector-oracle/src/main/java/io/debezium/connector/oracle/OracleConnectorConfig.java###/OracleConnectorConfig.java###io.debezium.connector.oracle.OracleConnectorConfig.getHistoryRecordComparator.new HistoryRecordComparator###resolveScn:Document ###returnScn.valueOf(document.getString(SourceInfo.SCN_KEY));###scn###document.getString(SourceInfo.SCN_KEY)###479:17:479:76
0fa6f9f4646305b1c8f7a7115d4abd5fc3e91545###/debezium_debezium/debezium-connector-oracle/src/main/java/io/debezium/connector/oracle/logminer/processor/AbstractLogMinerEventProcessor.java###/AbstractLogMinerEventProcessor.java###io.debezium.connector.oracle.logminer.processor.AbstractLogMinerEventProcessor###handleStart:LogMinerEventRow ###getTransactionCache().put(transactionId,newTransaction(transactionId,row.getScn(),row.getChangeTime()));###newTransaction###newTransaction(transactionId,row.getScn(),row.getChangeTime())###226:13:226:121
24ead16c248566b020fef9f60c66f84cba0587e0###/debezium_debezium/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/antlr/listener/DefaultValueParserListener.java###/DefaultValueParserListener.java###io.debezium.connector.mysql.antlr.listener.DefaultValueParserListener###convertDefaultValue:boolean ###if(!converted&&(optionalColumn.get()!=null||!skipIfUnknownOptional))###isOptionalColumn###optionalColumn.get()!=null###92:13:95:14
b20e689b2c171d3cc6566ef9b221df946c8cabf3###/debezium_debezium/debezium-core/src/main/java/io/debezium/transforms/outbox/EventRouter.java###/EventRouter.java###io.debezium.transforms.outbox.EventRouter###apply:R ###SchemapayloadSchema=eventValueSchema.field(fieldPayload).schema();###payloadField###eventValueSchema.field(fieldPayload)###104:9:104:78
776a93f7b2afa8cd074347a72932721ebda8ee76###/debezium_debezium/debezium-testing/debezium-testing-system/src/main/java/io/debezium/testing/system/tools/kafka/OcpKafkaDeployer.java###/OcpKafkaDeployer.java###io.debezium.testing.system.tools.kafka.OcpKafkaDeployer###deploy:###Kafkakafka=kafkaOperation().createOrReplace(YAML.fromResource(yamlPath,Kafka.class));###kafka###YAML.fromResource(yamlPath,Kafka.class)###91:9:91:98
a8ea5e2256c77cfa438c1e9ae92d46f7bb79140f###/debezium_debezium/debezium-core/src/main/java/io/debezium/jdbc/JdbcConnection.java###/JdbcConnection.java###io.debezium.jdbc.JdbcConnection###readTableColumn:ResultSet TableId ColumnNameFilter ###column.type(columnMetadata.getString(6));###columnType###columnMetadata.getString(6)###1096:13:1096:54
fbd8b94e94e8fc59bac66fe09d36ca809314718e###/debezium_debezium/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/MySqlConnectorIT.java###/MySqlConnectorIT.java###io.debezium.connector.mysql.MySqlConnectorIT###shouldConsumeAllEventsFromDatabaseUsingSnapshot:###assertInsert(updates.get(2),"id",2001);###insertRecord###updates.get(2)###439:9:439:50
c1c4d3d149e1086c495d36378a4b7fffa7eadf88###/debezium_debezium/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/SnapshotReader.java###/SnapshotReader.java###io.debezium.connector.mysql.SnapshotReader###execute:###if((createTableFilters==filters&&shouldRecordTableSchema(schema,filters,id))||createTableFilters.tableFilter().test(id))###shouldRecordTableSchema###shouldRecordTableSchema(schema,filters,id)###305:33:307:34
49703d9dc95c63c88334c9ec7451d3832a05e9c9###/debezium_debezium/debezium-connector-oracle/src/main/java/io/debezium/connector/oracle/logminer/RowMapper.java###/RowMapper.java###io.debezium.connector.oracle.logminer.RowMapper###getSqlRedo:ResultSet boolean HistoryRecorder Scn String String int Timestamp String ###result.append(rs.getString(SQL_REDO));###redoSql###rs.getString(SQL_REDO)###140:13:140:51
fbd8b94e94e8fc59bac66fe09d36ca809314718e###/debezium_debezium/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/MySqlConnectorIT.java###/MySqlConnectorIT.java###io.debezium.connector.mysql.MySqlConnectorIT###shouldConsumeAllEventsFromDatabaseUsingSnapshot:###assertDelete(updates.get(0),"id",1001);###deleteRecord###updates.get(0)###437:9:437:50
c1790767108441f3b7c6e36f019fd531e5842748###/debezium_debezium/debezium-core/src/main/java/io/debezium/pipeline/EventDispatcher.java###/EventDispatcher.java###io.debezium.pipeline.EventDispatcher###dispatchDataChangeEvent:T ChangeRecordEmitter ###returnfalse;###handled###false###132:13:132:26
13d638fd43e497c6fe7ff3bf47d0abaf7eceab39###/debezium_debezium/debezium-core/src/main/java/io/debezium/relational/history/AbstractDatabaseHistory.java###/AbstractDatabaseHistory.java###io.debezium.relational.history.AbstractDatabaseHistory###record:Map<String,?> Map<String,?> String String String TableChanges ###storeRecord(newHistoryRecord(source,position,databaseName,schemaName,ddl,changes));###record###newHistoryRecord(source,position,databaseName,schemaName,ddl,changes)###67:13:67:102
bd9621c8453281615bfddca6b0f343584f62a03b###/debezium_debezium/debezium-quarkus-outbox/deployment/src/main/java/io/debezium/outbox/quarkus/deployment/OutboxEventHbmWriter.java###/OutboxEventHbmWriter.java###io.debezium.outbox.quarkus.deployment.OutboxEventHbmWriter###createPayloadAttribute:DebeziumOutboxConfig OutboxEventEntityBuildItem ###attribute.setTypeAttribute(outboxEventEntityBuildItem.getPayloadType().name().toString());###resolvedTypeName###outboxEventEntityBuildItem.getPayloadType().name().toString()###170:13:170:103
eb3f02b9c0bb7852cbb7f79920c3a466b4f42925###/debezium_debezium/debezium-core/src/main/java/io/debezium/transforms/outbox/EventRouterDelegate.java###/EventRouterDelegate.java###io.debezium.transforms.outbox.EventRouterDelegate###apply:R RecordConverter<R> ###RnewRecord=r.newRecord(eventStruct.getString(routeByField),null,defineRecordKeySchema(fieldEventKey,eventValueSchema,fallbackPayloadIdField),defineRecordKey(fieldEventKey,eventStruct,payloadId),updatedSchema,updatedValue,timestamp,headers);###recordKey###defineRecordKey(fieldEventKey,eventStruct,payloadId)###212:9:220:26
570e35eaad7056d362c30902255b61d791cc5fc1###/debezium_debezium/debezium-connector-oracle/src/test/java/io/debezium/connector/oracle/TransactionMetadataIT.java###/TransactionMetadataIT.java###io.debezium.connector.oracle.TransactionMetadataIT###transactionMetadata:###finalStringexpectedTxId=assertBeginTransaction(records.get(0));###record###records.get(0)###103:9:103:76
46b47a42b2b15743720ce6ffb179bf36f9e72ad8###/debezium_debezium/debezium-connector-oracle/src/main/java/io/debezium/connector/oracle/OracleValueConverters.java###/OracleValueConverters.java###io.debezium.connector.oracle.OracleValueConverters###convertIntervalYearMonth:Column Field Object ###r.deliver(((Number)data).longValue());###micros###((Number)data).longValue()###654:17:654:56
bb90d68903cbead0c288ff53a709f5bbb5f8a84c###/debezium_debezium/debezium-connector-oracle/src/main/java/io/debezium/connector/oracle/logminer/LogMinerHelper.java###/LogMinerHelper.java###io.debezium.connector.oracle.logminer.LogMinerHelper###getOnlineLogFilesForOffsetScn:OracleConnection Long ###redoLogFiles.put(rs.getString(1),range);###fileName###rs.getString(1)###610:21:610:62
6356784ceedad0bf213e5691bacee57b7a50d0e0###/debezium_debezium/debezium-core/src/main/java/io/debezium/cloudevents/CloudEventsConverter.java###/CloudEventsConverter.java###io.debezium.cloudevents.CloudEventsConverter###convertToCloudEventsFormat:CloudEventsMaker byte[] ###SchemaceSchema=defineSchema().withName(adjuster.adjust(maker.ceEnvelopeSchemaName())).withSchema(CloudEventsMaker.FieldName.DATACONTENTTYPE,Schema.STRING_SCHEMA).withSchema(CloudEventsMaker.FieldName.DATASCHEMA,Schema.STRING_SCHEMA).withSchema(CloudEventsMaker.FieldName.TIME,Schema.STRING_SCHEMA).withSchema(CloudEventsMaker.FieldName.EXTRAINFO,maker.ceExtrainfoSchema()).withSchema(CloudEventsMaker.FieldName.DATA,Schema.BYTES_SCHEMA).build();###ceSchemaBuilder###defineSchema().withName(adjuster.adjust(maker.ceEnvelopeSchemaName())).withSchema(CloudEventsMaker.FieldName.DATACONTENTTYPE,Schema.STRING_SCHEMA)###342:9:349:26
1be07ca4f4ff6c3f976471c1487e8cf9dbea62f9###/debezium_debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresSnapshotChangeEventSource.java###/PostgresSnapshotChangeEventSource.java###io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource###getColumnValue:ResultSet int Column ###returnnewPGmoney(rs.getString(columnIndex)).val;###sMoney###rs.getString(columnIndex)###213:21:213:71
9b6d24825ddc9cd622e909cc07dbb7ffc18afe34###/debezium_debezium/debezium-connector-cassandra/src/main/java/io/debezium/connector/cassandra/CommitLogReadHandlerImpl.java###/CommitLogReadHandlerImpl.java###io.debezium.connector.cassandra.CommitLogReadHandlerImpl###populateRegularColumns:RowData Row RowType SchemaHolder.KeyValueSchema ###value=CassandraTypeDeserializer.deserialize(cd.type,ccd);###abstractType###cd.type###428:25:428:85
0316ac7fc067de6b4b96f8084c23b1c4a8aa51e9###/debezium_debezium/debezium-connector-mongodb/src/main/java/io/debezium/connector/mongodb/Replicator.java###/Replicator.java###io.debezium.connector.mongodb.Replicator###readOplog:MongoClient ###if(!handleOplogEvent(primaryAddress,cursor.next()))###event###cursor.next()###470:17:473:18
eb27cc5c549540493803717155915197c374ade9###/debezium_debezium/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/SnapshotReaderIT.java###/SnapshotReaderIT.java###io.debezium.connector.mysql.SnapshotReaderIT###shouldCreateSnapshotOfSingleDatabase:###config=simpleConfig().build();###builder###simpleConfig()###92:9:93:26
8cac498a60fe0373c014fbafcd6fe021171c1a8c###/debezium_debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/connection/PostgresReplicationConnection.java###/PostgresReplicationConnection.java###io.debezium.connector.postgresql.connection.PostgresReplicationConnection###startStreaming:Long ###thrownewConnectException("Failedtostartreplicationstreamat"+lsn,e);###message###"Failedtostartreplicationstreamat"+lsn###305:13:305:91
e5f77b3a327e91d0ac148b4e72ae455f3351b079###/debezium_debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/connection/PostgresConnection.java###/PostgresConnection.java###io.debezium.connector.postgresql.connection.PostgresConnection###PostgresConnection:Configuration ###typeRegistry=initTypeRegistry(connection());###pgConnection###connection()###87:13:87:59
1e0859588f9e29962441d353ffe4dcc01f0b413c###/debezium_debezium/debezium-connector-mongodb/src/main/java/io/debezium/connector/mongodb/Replicator.java###/Replicator.java###io.debezium.connector.mongodb.Replicator###handleOplogEvent:ServerAddress Document ###logger.debug("Skippingeventwith\"op={}\"",event.getString("op"));###operation###event.getString("op")###549:13:549:82
b8bafdb4c6fe5d2cc3e24b5937bbdeec6f2cb2a0###/debezium_debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/connection/PostgresReplicationConnection.java###/PostgresReplicationConnection.java###io.debezium.connector.postgresql.connection.PostgresReplicationConnection###initPublication:###try(Statementstmt=pgConnection().createStatement();ResultSetrs=stmt.executeQuery(selectPublication))###conn###pgConnection()###137:17:177:18
1d829982f07b08a508e7a849660826ddeb0a0b29###/debezium_debezium/debezium-connector-oracle/src/main/java/io/debezium/connector/oracle/OracleConnectorTask.java###/OracleConnectorTask.java###io.debezium.connector.oracle.OracleConnectorTask###start:Configuration ###coordinator.start(taskContext,this.queue,newOracleEventMetadataProvider());###metadataProvider###newOracleEventMetadataProvider()###105:9:105:87
72f8c06bb617274bbfdf6f62bc59ad12704847e6###/debezium_debezium/debezium-embedded/src/test/java/io/debezium/embedded/EmbeddedEngineTest.java###/EmbeddedEngineTest.java###io.debezium.embedded.EmbeddedEngineTest###shouldRunEngineWithConsumerSettingOffsets:###offsets.set(CUSTOM_SOURCE_OFFSET_PARTITION,1L);###EXPECTED_CUSTOM_OFFSET###1L###361:25:361:73
83fee1cbfc98d90be1b7551a2802688193a2c1e2###/debezium_debezium/debezium-connector-oracle/src/main/java/io/debezium/connector/oracle/OracleSnapshotChangeEventSource.java###/OracleSnapshotChangeEventSource.java###io.debezium.connector.oracle.OracleSnapshotChangeEventSource###getLatestTableDdlScn:RelationalSnapshotContext ###returnOptional.of(rs.getLong(1));###latestDdlTime###rs.getLong(1)###187:13:187:47
98c270a79ea6fc0f1bdf2417868f61fded921856###/debezium_debezium/debezium-connector-sqlserver/src/test/java/io/debezium/connector/sqlserver/SchemaHistoryTopicIT.java###/SchemaHistoryTopicIT.java###io.debezium.connector.sqlserver.SchemaHistoryTopicIT###streamingSchemaChanges:###records.recordsForTopic("server1.dbo.tableb").forEach(record->{assertSchemaMatchesStruct((Struct)((Struct)record.value()).get("after"),SchemaBuilder.struct().optional().name("server1.dbo.tableb.Value").field("id",Schema.INT32_SCHEMA).field("colb",Schema.OPTIONAL_STRING_SCHEMA).build());});###tablebRecords###records.recordsForTopic("server1.dbo.tableb")###112:9:121:12
6efd2a76feca1a36ce78f55f81a27ea92ad6a2c5###/debezium_debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresChangeRecordEmitter.java###/PostgresChangeRecordEmitter.java###io.debezium.connector.postgresql.PostgresChangeRecordEmitter###columnValues:List<ReplicationMessage.Column> TableId boolean boolean ###values[position]=column.getValue(()->(PgConnection)connection.connection(),connectorConfig.includeUnknownDatatypes());###value###column.getValue(()->(PgConnection)connection.connection(),connectorConfig.includeUnknownDatatypes())###161:17:161:141
d86c4185c7230943b1f296b83ba35a00eb9b83ca###/debezium_debezium/debezium-connector-db2/src/main/java/io/debezium/connector/db2/Db2ConnectorTask.java###/Db2ConnectorTask.java###io.debezium.connector.db2.Db2ConnectorTask###start:Configuration ###coordinator.start(taskContext,this.queue,newDb2EventMetadataProvider());###metadataProvider###newDb2EventMetadataProvider()###136:9:136:84
5d7c660ae51cfd0747ece8416a3ff42a90807f60###/debezium_debezium/debezium-server/debezium-server-redis/src/test/java/io/debezium/server/redis/RedisStreamIT.java###/RedisStreamIT.java###io.debezium.server.redis.RedisStreamIT###testRedisOOMRetry:###connection.execute("CREATETABLEinventory.redis_test2"+"(idVARCHAR(100)PRIMARYKEY,"+"first_nameVARCHAR(100),"+"last_nameVARCHAR(100))",String.format("INSERTINTOinventory.redis_test2(id,first_name,last_name)"+"SELECTLEFT(i::text,10),RANDOM()::text,RANDOM()::textFROMgenerate_series(1,%d)s(i)",MESSAGE_COUNT));###INSERT_SQL###"INSERTINTOinventory.redis_test2(id,first_name,last_name)"+"SELECTLEFT(i::text,10),RANDOM()::text,RANDOM()::textFROMgenerate_series(1,%d)s(i)"###164:9:170:41
edbee2e8f669a9403758be397c03efbf1a8d02eb###/debezium_debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresValueConverter.java###/PostgresValueConverter.java###io.debezium.connector.postgresql.PostgresValueConverter###createArrayConverter:Column Field ###SchemaelementSchema=schemaBuilder(elementColumn).optional().build();###elementSchemaBuilder###schemaBuilder(elementColumn)###528:9:530:26
9b66ab374ada718a067856e50391046374ab6993###/debezium_debezium/debezium-embedded/src/test/java/io/debezium/pipeline/source/snapshot/incremental/AbstractIncrementalSnapshotTest.java###/AbstractIncrementalSnapshotTest.java###io.debezium.pipeline.source.snapshot.incremental.AbstractIncrementalSnapshotTest###sendAdHocSnapshotSignal:###connection.execute(String.format("INSERTINTO%sVALUES('ad-hoc','execute-snapshot','{\"data-collections\":[\"%s\"]}')",signalTableName(),tableName()));###query###String.format("INSERTINTO%sVALUES('ad-hoc','execute-snapshot','{\"data-collections\":[\"%s\"]}')",signalTableName(),tableName())###118:13:121:62
20363f24bba76d984de4324ad560810af4020d8c###/debezium_debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresValueConverter.java###/PostgresValueConverter.java###io.debezium.connector.postgresql.PostgresValueConverter###convertInterval:Column Field Object ###r.deliver(((Number)data).longValue());###micros###((Number)data).longValue()###603:17:603:56
72f8c06bb617274bbfdf6f62bc59ad12704847e6###/debezium_debezium/debezium-embedded/src/test/java/io/debezium/embedded/EmbeddedEngineTest.java###/EmbeddedEngineTest.java###io.debezium.embedded.EmbeddedEngineTest###shouldRunEngineWithConsumerSettingOffsets:###props.setProperty("topic","topicX");###TEST_TOPIC###"topicX"###345:9:345:46
3b14c13bbb971694d95ae9eddc39a379e5261507###/debezium_debezium/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/BinlogReader.java###/BinlogReader.java###io.debezium.connector.mysql.BinlogReader###BinlogReader:String MySqlTaskContext HaltingPredicate long ###client.setKeepAliveInterval(context.config().getLong(MySqlConnectorConfig.KEEP_ALIVE_INTERVAL_MS));###keepAliveInterval###context.config().getLong(MySqlConnectorConfig.KEEP_ALIVE_INTERVAL_MS)###211:9:211:108
39d21806eb6f1111492197f4b75fc52fd613786c###/debezium_debezium/debezium-core/src/main/java/io/debezium/pipeline/source/snapshot/incremental/IncrementalSnapshotContext.java###/IncrementalSnapshotContext.java###io.debezium.pipeline.source.snapshot.incremental.IncrementalSnapshotContext###addDataCollectionNamesToSnapshot:List<String> ###addTablesIdsToSnapshot(dataCollectionIds.stream().map(x->(T)TableId.parse(x)).collect(Collectors.toList()));###newDataCollectionIds###dataCollectionIds.stream().map(x->(T)TableId.parse(x)).collect(Collectors.toList())###150:9:150:120
c274c2b39b9164ab027570187a81be9e52dc0357###/debezium_debezium/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/SnapshotReader.java###/SnapshotReader.java###io.debezium.connector.mysql.SnapshotReader###execute:###List<Pattern>tableIncludeListPattern=Strings.listOfRegex(context.config().getFallbackStringProperty(MySqlConnectorConfig.TABLE_INCLUDE_LIST,MySqlConnectorConfig.TABLE_WHITELIST),Pattern.CASE_INSENSITIVE);###configuration###context.config()###432:17:434:51
7a98fcd96c410aad00786a2e8fdbfcc469760af8###/debezium_debezium/debezium-connector-oracle/src/main/java/io/debezium/connector/oracle/OracleValueConverters.java###/OracleValueConverters.java###io.debezium.connector.oracle.OracleValueConverters###convertTimestampWithZone:Column Field Object ###data=ZonedDateTime.from(TIMESTAMP_TZ_FORMATTER.parse(dateText.trim()));###zonedDateTime###ZonedDateTime.from(TIMESTAMP_TZ_FORMATTER.parse(dateText.trim()))###598:17:598:90
212fdb791256f198b6c26a17a8c9b06e7220e582###/debezium_debezium/debezium-connector-mongodb/src/test/java/io/debezium/connector/mongodb/TestHelper.java###/TestHelper.java###io.debezium.connector.mongodb.TestHelper###assertChangeStreamUpdateAsDocs:ObjectId Struct String List<String> String ###Assertions.assertThat(value.getStruct("updateDescription").getArray("removedFields")).isEqualTo(removedFields);###actualRemovedFields###value.getStruct("updateDescription").getArray("removedFields")###126:9:126:120
e050d17c4c8bf46b52be0b594386e5f878ca4eaa###/debezium_debezium/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/zzz/ZZZGtidSetIT.java###/ZZZGtidSetIT.java###io.debezium.connector.mysql.zzz.ZZZGtidSetIT###purgeDatabaseLogs:###returngetBinlogs(connection).size()==1;###binlogsAfterPurge###getBinlogs(connection)###153:21:153:63
f42c47b63bf0cd9a42d5e40e422ec185d4817e7e###/debezium_debezium/debezium-connector-oracle/src/main/java/io/debezium/connector/oracle/OracleConnectorConfig.java###/OracleConnectorConfig.java###io.debezium.connector.oracle.OracleConnectorConfig###validateBufferLocation:Configuration Field ValidationOutput ###return0;###errors###0###1140:9:1140:18
2dfdf5cb12cfab5c4d5b94e5ef18ae4fbf9ad15d###/debezium_debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/RecordsSnapshotProducerIT.java###/RecordsSnapshotProducerIT.java###io.debezium.connector.postgresql.RecordsSnapshotProducerIT###shouldGenerateSnapshotsForPartitionedTables:###ids.add(key.getInt32("pk"));###id###key.getInt32("pk")###425:13:425:41
f2d13238aa4214ec3b5ef3072b7a6b408d706026###/debezium_debezium/debezium-core/src/main/java/io/debezium/relational/history/KafkaDatabaseHistory.java###/KafkaDatabaseHistory.java###io.debezium.relational.history.KafkaDatabaseHistory###checkTopicSettings:String ###try(AdminClientadmin=AdminClient.create(this.producerConfig.asProperties()))###clientConfig###this.producerConfig.asProperties()###381:13:437:14
cd6a1f942d4197a2c748df1073b6b297c7ebd00b###/debezium_debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorTask.java###/PostgresConnectorTask.java###io.debezium.connector.postgresql.PostgresConnectorTask###start:Configuration ###coordinator.start(taskContext,this.queue,newPostgresEventMetadataProvider());###metadataProvider###newPostgresEventMetadataProvider()###174:13:174:93
ffa15b100fd1de1d1f939263f1cb3d232b393c71###/debezium_debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresTaskContext.java###/PostgresTaskContext.java###io.debezium.connector.postgresql.PostgresTaskContext###createReplicationConnection:boolean ###returnReplicationConnection.builder(config.jdbcConfig()).withSlot(config.slotName()).withPublication(config.publicationName()).withPlugin(config.plugin()).dropSlotOnClose(config.dropSlotOnStop()).streamParams(config.streamParams()).statusUpdateInterval(config.statusUpdateInterval()).withTypeRegistry(schema.getTypeRegistry()).exportSnapshotOnCreate(exportSnapshot).withSchema(schema).build();###dropSlotOnStop###config.dropSlotOnStop()###103:9:113:26
4e27c90028e2c5e0896bc82e8a4422fab711269d###/debezium_debezium/debezium-connector-mongodb/src/test/java/io/debezium/connector/mongodb/RecordMakersTest.java###/RecordMakersTest.java###io.debezium.connector.mongodb.RecordMakersTest###shouldSupportDbRef:###assertThat(value.getString(FieldName.AFTER)).isEqualTo("{"+"\"_id\":{\"$oid\":\""+objId+"\"},"+"\"name\":\"Sally\","+"\"ref\":{\"$ref\":\"othercollection\",\"$id\":15}"+"}");###expected###"{"+"\"_id\":{\"$oid\":\""+objId+"\"},"+"\"name\":\"Sally\","+"\"ref\":{\"$ref\":\"othercollection\",\"$id\":15}"+"}"###394:9:398:24
97f08a0de30ceb2dddd722670ef8c1aaeaf9f1c6###/debezium_debezium/debezium-connector-oracle/src/main/java/io/debezium/connector/oracle/logminer/LogMinerStreamingChangeEventSource.java###/LogMinerStreamingChangeEventSource.java###io.debezium.connector.oracle.logminer.LogMinerStreamingChangeEventSource###checkDatabaseAndTableState:OracleConnection String OracleDatabaseSchema ###checkTableColumnNameLengths(schema.tableFor(tableId));###table###schema.tableFor(tableId)###555:21:555:75
9cc059beb5c0a6c0f638a8792f2ec9f8abeab016###/debezium_debezium/debezium-connector-oracle/src/main/java/io/debezium/connector/oracle/logminer/LogMinerStreamingChangeEventSource.java###/LogMinerStreamingChangeEventSource.java###io.debezium.connector.oracle.logminer.LogMinerStreamingChangeEventSource###execute:ChangeEventSourceContext OraclePartition OracleOffsetContext ###if(!isContinuousMining&&startScn.compareTo(getFirstScnInLogs(jdbcConnection))<0)###firstScn###getFirstScnInLogs(jdbcConnection)###118:17:121:18
bb90d68903cbead0c288ff53a709f5bbb5f8a84c###/debezium_debezium/debezium-connector-oracle/src/main/java/io/debezium/connector/oracle/logminer/LogMinerHelper.java###/LogMinerHelper.java###io.debezium.connector.oracle.logminer.LogMinerHelper###getArchivedLogFilesForOffsetScn:OracleConnection Long Duration ###LOGGER.trace("Archivelog{}withSCNrange{}to{}tobeadded.",rs.getString(1),rs.getString(3),rs.getString(2));###fileName###rs.getString(1)###728:25:728:144
2140ff51be3c9414b8d1b91b3e800e84743446f9###/debezium_debezium/debezium-connector-mongodb/src/test/java/io/debezium/connector/mongodb/MongoDbConnectorIT.java###/MongoDbConnectorIT.java###io.debezium.connector.mongodb.MongoDbConnectorIT###shouldResumeTransactionInMiddle:###SourceRecordsrecords3=consumeRecordsByTopic(7);###recCount###7###998:9:998:59
13334ee72fe145a13c3c6f6e2616829b126781a1###/debezium_debezium/debezium-core/src/main/java/io/debezium/pipeline/source/snapshot/incremental/IncrementalSnapshotChangeEventSource.java###/IncrementalSnapshotChangeEventSource.java###io.debezium.pipeline.source.snapshot.incremental.IncrementalSnapshotChangeEventSource###createDataEventsForTable:###context.nextChunkPosition(keyFromRow(lastRow));###lastKey###keyFromRow(lastRow)###323:13:323:60
224f97e38031ff032c5ed576190916735123c492###/debezium_debezium/debezium-embedded/src/main/java/io/debezium/connector/simple/SimpleSourceConnector.java###/SimpleSourceConnector.java###io.debezium.connector.simple.SimpleSourceConnector.SimpleConnectorTask###poll:###results.add(records.poll());###fetchedRecord###records.poll()###185:21:185:49
db105baebadbc0ae433b9a7a65daf06a24a4e653###/debezium_debezium/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/MySqlConnectorIT.java###/MySqlConnectorIT.java###io.debezium.connector.mysql.MySqlConnectorIT###shouldConsumeAllEventsFromDatabaseUsingSnapshotByField:Field int ###finalMySqlOffsetContext.Loaderloader=newMySqlOffsetContext.Loader(newMySqlConnectorConfig(Configuration.create().with(MySqlConnectorConfig.SERVER_NAME,config.getString(MySqlConnectorConfig.SERVER_NAME)).build()));###serverName###config.getString(MySqlConnectorConfig.SERVER_NAME)###677:9:679:28
f199988609ad6480dee82040b2cdc759fe9df6b7###/debezium_debezium/debezium-core/src/main/java/io/debezium/jdbc/JdbcConnection.java###/JdbcConnection.java###io.debezium.jdbc.JdbcConnection###commit:###connection().commit();###conn###connection()###295:9:295:31
ec37769216492dd49ef414f6a293e753a558661b###/debezium_debezium/debezium-server/debezium-server-kinesis/src/main/java/io/debezium/server/kinesis/KinesisChangeConsumer.java###/KinesisChangeConsumer.java###io.debezium.server.kinesis.KinesisChangeConsumer###connect:###client=KinesisClient.builder().region(Region.of(region)).credentialsProvider(ProfileCredentialsProvider.create(credentialsProfile)).build();###builder###KinesisClient.builder().region(Region.of(region)).credentialsProvider(ProfileCredentialsProvider.create(credentialsProfile))###74:9:77:26
b98dae6436bb3b99361dfd4fa9550d6d3b8bcd0a###/debezium_debezium/debezium-connector-oracle/src/main/java/io/debezium/connector/oracle/logminer/LogMinerStreamingChangeEventSource.java###/LogMinerStreamingChangeEventSource.java###io.debezium.connector.oracle.logminer.LogMinerStreamingChangeEventSource###abandonOldTransactionsIfExist:OracleConnection TransactionalBuffer ###Optional<Long>lastScnToAbandonTransactions=getLastScnToAbandon(connection,offsetContext.getScn(),connectorConfig.getLogMiningTransactionRetention());###transactionRetention###connectorConfig.getLogMiningTransactionRetention()###229:9:229:163
c74579c1df7a62ee0ea6796c01b0e692beb91f4c###/debezium_debezium/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerStreamingChangeEventSource.java###/SqlServerStreamingChangeEventSource.java###io.debezium.connector.sqlserver.SqlServerStreamingChangeEventSource###migrateTable:Queue<SqlServerChangeTable> ###dispatcher.dispatchSchemaChangeEvent(newTable.getSourceTableId(),newSqlServerSchemaChangeEventEmitter(offsetContext,newTable,metadataConnection.getTableSchemaFromTable(newTable),SchemaChangeEventType.ALTER));###tableSchema###metadataConnection.getTableSchemaFromTable(newTable)###298:9:299:164
7b707a0b9b558ff022cf5061f1a4aff00b4b95ec###/debezium_debezium/debezium-server/debezium-server-kinesis/src/main/java/io/debezium/server/kinesis/KinesisChangeConsumer.java###/KinesisChangeConsumer.java###io.debezium.server.kinesis.KinesisChangeConsumer###handleBatch:List<ChangeEvent<Object,Object>> RecordCommitter<ChangeEvent<Object,Object>> ###finalPutRecordRequestputRecord=PutRecordRequest.builder().partitionKey((record.key()!=null)?getString(record.key()):nullKey).streamName(streamNameMapper.map(record.destination())).data(SdkBytes.fromByteArray(getBytes(record.value()))).build();###rv###record.value()###103:13:107:30
a9d5985bb079c49aa0125d9a7371a5494204098b###/debezium_debezium/debezium-connector-oracle/src/main/java/io/debezium/connector/oracle/logminer/LogMinerStreamingChangeEventSource.java###/LogMinerStreamingChangeEventSource.java###io.debezium.connector.oracle.logminer.LogMinerStreamingChangeEventSource###execute:ChangeEventSourceContext ###logMinerMetrics.setLastDurationOfBatchCapturing(Duration.between(startTime,Instant.now()));###lastDurationOfBatchCapturing###Duration.between(startTime,Instant.now())###203:25:203:117
390c8f809092a597ba1355eb1a748ffe21ca2ca5###/debezium_debezium/debezium-core/src/main/java/io/debezium/converters/CloudEventsConverter.java###/CloudEventsConverter.java###io.debezium.converters.CloudEventsConverter###convertToCloudEventsFormat:RecordParser CloudEventsMaker Schema Object ###ceValueBuilder.withValue(attributeAdjuster.adjust(field.name()),source.get(field));###value###source.get(field)###386:13:386:97
358eb0379b0f251eb6979270cb78ae6674075856###/debezium_debezium/debezium-core/src/main/java/io/debezium/util/ColumnUtils.java###/ColumnUtils.java###io.debezium.util.ColumnUtils###toArray:ResultSet Table ###columns[i]=table.columnWithName(metaData.getColumnName(i+1));###columnName###metaData.getColumnName(i+1)###40:13:40:78
f4246df6e436343b3c08080452be92542ad39859###/debezium_debezium/debezium-core/src/main/java/io/debezium/pipeline/EventDispatcher.java###/EventDispatcher.java###io.debezium.pipeline.EventDispatcher.BufferingSnapshotChangeRecordReceiver###completeSnapshot:###queue.enqueue(bufferedEvent.get());###event###bufferedEvent.get()###238:17:238:52
d5b3684c7ed5b4455c819685e87d4ac2f481850d###/debezium_debezium/debezium-testing/debezium-testing-openshift/src/main/java/io/debezium/testing/openshift/tools/databases/SqlDatabaseController.java###/SqlDatabaseController.java###io.debezium.testing.openshift.tools.databases.SqlDatabaseController###getDatabaseClient:String String ###returnnewSqlDatabaseClient(getDatabaseUrl(),username,password);###databaseUrl###getDatabaseUrl()###35:9:35:76
fc24de8dde038c397d9dff6da23c875a98e7a57f###/debezium_debezium/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/SnapshotReader.java###/SnapshotReader.java###io.debezium.connector.mysql.SnapshotReader###execute:###sql.set("SETSESSIONlock_wait_timeout="+context.getConnectorConfig().snapshotLockTimeout().getSeconds());###snapshotLockTimeout###context.getConnectorConfig().snapshotLockTimeout().getSeconds()###272:13:272:121
21b15facb2d2c9c7ad450d3cc20a42677c308739###/debezium_debezium/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/SnapshotSourceIT.java###/SnapshotSourceIT.java###io.debezium.connector.mysql.SnapshotSourceIT###shouldCreateSnapshotSchemaOnly:###assertThat(record.sourceOffset().get("snapshot")).isEqualTo(true);###snapshotOffsetField###record.sourceOffset().get("snapshot")###606:17:606:83
cd8bbfe6d395e583adb85ab2ab1ffdf85fa167d6###/debezium_debezium/debezium-connector-cassandra/src/main/java/io/debezium/connector/cassandra/CommitLogReadHandlerImpl.java###/CommitLogReadHandlerImpl.java###io.debezium.connector.cassandra.CommitLogReadHandlerImpl###getPartitionKeys:PartitionUpdate ###AbstractType<?>type=columnDefinitions.get(0).type;###cs###columnDefinitions.get(0)###452:13:452:66
c274c2b39b9164ab027570187a81be9e52dc0357###/debezium_debezium/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/BinlogReader.java###/BinlogReader.java###io.debezium.connector.mysql.BinlogReader###BinlogReader:String MySqlTaskContext HaltingPredicate long ###client.setKeepAlive(context.config().getBoolean(MySqlConnectorConfig.KEEP_ALIVE));###configuration###context.config()###222:9:222:91
0040eca740e4faca576572543ce76856081040df###/debezium_debezium/debezium-connector-mongodb/src/main/java/io/debezium/connector/mongodb/transforms/MongoDataConverter.java###/MongoDataConverter.java###io.debezium.connector.mongodb.transforms.MongoDataConverter###convertFieldValue:Entry<String,BsonValue> Struct Schema ###SchemadocumentSchema=schema.field(keyvalueforStruct.getKey()).schema();###field###schema.field(keyvalueforStruct.getKey())###133:17:133:91
