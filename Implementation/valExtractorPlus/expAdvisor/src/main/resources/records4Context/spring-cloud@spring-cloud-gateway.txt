34c35fbcc9d991316badfaa53cc01a6c585f64c5###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-core/src/test/java/org/springframework/cloud/gateway/test/FormIntegrationTests.java###/FormIntegrationTests.java###org.springframework.cloud.gateway.test.FormIntegrationTests###multipartFormDataWorks:###assertThat((String)files.get("file")).startsWith("data:application/octet-stream;base64,");###file###(String)files.get("file")###97:3:97:93
652a44bc4d474f7edab82e7c4899efe9d2849153###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-server/src/main/java/org/springframework/cloud/gateway/filter/ReactiveLoadBalancerClientFilter.java###/ReactiveLoadBalancerClientFilter.java###org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter###filter:ServerWebExchange GatewayFilterChain ###DelegatingServiceInstanceserviceInstance=newDelegatingServiceInstance(response.getServer(),overrideScheme);###retrievedInstance###response.getServer()###106:4:107:44
2d266a540e33ea47a21a25cd5a8cda4eab73856b###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-mvc/src/test/java/org/springframework/cloud/gateway/mvc/ProductionConfigurationTests.java###/ProductionConfigurationTests.java###org.springframework.cloud.gateway.mvc.ProductionConfigurationTests###testSensitiveHeadersOverride:###Map<String,List<String>>headers=rest.exchange(RequestEntity.get(rest.getRestTemplate().getUriTemplateHandler().expand("/proxy/headers")).header("foo","bar").header("abc","xyz").header("cookie","monster").build(),Map.class).getBody();###request###RequestEntity.get(rest.getRestTemplate().getUriTemplateHandler().expand("/proxy/headers")).header("foo","bar").header("abc","xyz").header("cookie","monster").build()###242:3:247:16
7cb009d29729238e55e13f645598f5fd95c5eafa###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-server/src/main/java/org/springframework/cloud/gateway/handler/predicate/PathRoutePredicateFactory.java###/PathRoutePredicateFactory.java###org.springframework.cloud.gateway.handler.predicate.PathRoutePredicateFactory.apply.new GatewayPredicate###test:ServerWebExchange ###traceMatch("Pattern",pathPattern.getPatternString(),path,true);###match###pathPattern###101:6:101:72
fc7ed5b0a6c9f78ef772b86a0df6d43c25e23e4c###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-core/src/main/java/org/springframework/cloud/gateway/filter/factory/RetryGatewayFilterFactory.java###/RetryGatewayFilterFactory.java###org.springframework.cloud.gateway.filter.factory.RetryGatewayFilterFactory###apply:RetryConfig ###if(exceedsMaxIterations(context.applicationContext(),retryConfig))###exchange###context.applicationContext()###124:5:126:6
c3967e488bc25fa207abd88158713605141fe4d7###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-server/src/main/java/org/springframework/cloud/gateway/filter/ReactiveLoadBalancerClientFilter.java###/ReactiveLoadBalancerClientFilter.java###org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter###filter:ServerWebExchange GatewayFilterChain ###DelegatingServiceInstanceserviceInstance=newDelegatingServiceInstance(response.getServer(),overrideScheme);###retrievedInstance###response.getServer()###105:4:106:22
58078c71d1773172fb9792f40e21998c83065c93###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-core/src/main/java/org/springframework/cloud/gateway/filter/RouteToRequestUrlFilter.java###/RouteToRequestUrlFilter.java###org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter###filter:ServerWebExchange GatewayFilterChain ###URIrequestUrl=UriComponentsBuilder.fromUri(uri).uri(route.getUri()).build(encoded).toUri();###routeUri###route.getUri()###57:3:60:14
e64b2fbe1bbcaabdf8ac978dc4fbcde30ea90252###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-core/src/main/java/org/springframework/cloud/gateway/handler/RequestPredicateHandlerMapping.java###/RequestPredicateHandlerMapping.java###org.springframework.cloud.gateway.handler.RequestPredicateHandlerMapping###lookup:Route PredicateDefinition ###builder.put(entry.getKey(),entry.getValue());###key###entry.getKey()###175:4:175:50
6e143d3cd050cf21c92a98b5cc1bd8593141a3b1###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-server/src/main/java/org/springframework/cloud/gateway/config/GatewayAutoConfiguration.java###/GatewayAutoConfiguration.java###org.springframework.cloud.gateway.config.GatewayAutoConfiguration.NettyConfiguration###gatewayHttpClient:HttpClientProperties List<HttpClientCustomizer> ###ConnectionProvider.Builderbuilder=ConnectionProvider.builder(pool.getName()).maxConnections(pool.getMaxConnections()).pendingAcquireMaxCount(-1).pendingAcquireTimeout(Duration.ofMillis(pool.getAcquireTimeout()));###builder###ConnectionProvider.builder(pool.getName())###647:5:649:75
e5c14e3ff0d1fac6e50d3ec686e30341b0fffa9c###/spring-cloud_spring-cloud-gateway/src/main/java/org/springframework/cloud/gateway/rsocket/server/GatewayRSocketServer.java###/GatewayRSocketServer.java###org.springframework.cloud.gateway.rsocket.server.GatewayRSocketServer###startServer:###intport=properties.getServer().getPort();###server###properties.getServer()###93:3:93:47
76c2222d00e867fea68f6aa85f4b56b15efdf48b###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-core/src/main/java/org/springframework/cloud/gateway/route/RouteDefinitionRouteLocator.java###/RouteDefinitionRouteLocator.java###org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator###getRoutes:###returnthis.routeDefinitionLocator.getRouteDefinitions().map(this::convertToRoute).map(route->{if(logger.isDebugEnabled()){logger.debug("RouteDefinitionmatched:"+route.getId());}returnroute;});###routes###this.routeDefinitionLocator.getRouteDefinitions().map(this::convertToRoute)###146:3:153:8
717e799640622f09f9ef3dc7ce721e4e6538b2dc###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-core/src/main/java/org/springframework/cloud/gateway/filter/factory/RequestRateLimiterGatewayFilterFactory.java###/RequestRateLimiterGatewayFilterFactory.java###org.springframework.cloud.gateway.filter.factory.RequestRateLimiterGatewayFilterFactory###apply:Config ###returnlimiter.isAllowed(config.getRouteId(),key).flatMap(response->{for(Map.Entry<String,String>header:response.getHeaders().entrySet()){exchange.getResponse().getHeaders().add(header.getKey(),header.getValue());}if(response.isAllowed()){returnchain.filter(exchange);}setResponseStatus(exchange,config.getStatusCode());returnexchange.getResponse().setComplete();});###routeId###config.getRouteId()###108:6:123:11
76d138fb40877a6f1a986ee351015570dc184de2###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-core/src/main/java/org/springframework/cloud/gateway/route/builder/GatewayFilterSpec.java###/GatewayFilterSpec.java###org.springframework.cloud.gateway.route.builder.GatewayFilterSpec###retry:Repeat<ServerWebExchange> Retry<ServerWebExchange> ###returnfilter(getBean(RetryGatewayFilterFactory.class).apply(repeat,retry));###filterFactory###getBean(RetryGatewayFilterFactory.class)###501:3:501:80
ed081e0d20f6aab0fa8e21419f0e3bbdd4083e99###/spring-cloud_spring-cloud-gateway/src/main/java/org/springframework/cloud/gateway/GatewayController.java###/GatewayController.java###org.springframework.cloud.gateway.GatewayController###home:ServerWebExchange ###returnresponse.writeWith(clientResponse.body((inputMessage,context)->inputMessage.getBody()));###body###clientResponse.body((inputMessage,context)->inputMessage.getBody())###41:4:41:102
98e76f67851585f4e58cec851a8145062c089154###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-core/src/main/java/org/springframework/cloud/gateway/route/Route.java###/Route.java###org.springframework.cloud.gateway.route.Route.AbstractBuilder###uri:URI ###if(this.uri.getPort()<0&&this.uri.getScheme().startsWith("http"))###scheme###this.uri.getScheme()###117:4:124:5
24d75147fa9392443a9b60b784741f2af9e3ebd1###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-server/src/main/java/org/springframework/cloud/gateway/handler/predicate/PathRoutePredicateFactory.java###/PathRoutePredicateFactory.java###org.springframework.cloud.gateway.handler.predicate.PathRoutePredicateFactory.apply.new GatewayPredicate###test:ServerWebExchange ###traceMatch("Pattern",pathPattern.getPatternString(),path,true);###match###pathPattern###97:6:97:72
1c8f080dd8647973161d0d73c1e1386399e5f076###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-core/src/main/java/org/springframework/cloud/gateway/filter/LoadBalancerClientFilter.java###/LoadBalancerClientFilter.java###org.springframework.cloud.gateway.filter.LoadBalancerClientFilter###filter:ServerWebExchange GatewayFilterChain ###thrownewNotFoundException("Unabletofindinstancefor"+url.getHost());###msg###"Unabletofindinstancefor"+url.getHost()###72:4:72:80
64831fd568ed899e80d038135b04f97f2b578bfe###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-core/src/main/java/org/springframework/cloud/gateway/route/RouteDefinitionRouteLocator.java###/RouteDefinitionRouteLocator.java###org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator###loadGatewayFilters:String List<FilterDefinition> ###ordered.add(newOrderedGatewayFilter(filters.get(i),i+1));###gatewayFilter###filters.get(i)###165:4:165:63
f9cb397a1f4f57d0efe7386b0a113bf0e1e4e998###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-rsocket/src/main/java/org/springframework/cloud/gateway/rsocket/metrics/MicrometerResponderRSocket.java###/MicrometerResponderRSocket.java###org.springframework.cloud.gateway.rsocket.metrics.MicrometerResponderRSocket.InteractionCounters###counter:MeterRegistry String SignalType Tag[] ###returnmeterRegistry.counter("rsocket."+interactionModel,Tags.of(tags).and("signal.type",signalType.name()));###withType###Tags.of(tags).and("signal.type",signalType.name())###163:4:164:59
72c961b56bc3695cb2c152d2d678a776e7e5121c###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-server/src/main/java/org/springframework/cloud/gateway/filter/ReactiveLoadBalancerClientFilter.java###/ReactiveLoadBalancerClientFilter.java###org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter###choose:ServerWebExchange ###ReactorLoadBalancer<ServiceInstance>loadBalancer=this.clientFactory.getInstance(uri.getHost(),ReactorServiceInstanceLoadBalancer.class);###serviceId###uri.getHost()###126:3:127:47
f9cb397a1f4f57d0efe7386b0a113bf0e1e4e998###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-rsocket/src/main/java/org/springframework/cloud/gateway/rsocket/metrics/MicrometerResponderRSocket.java###/MicrometerResponderRSocket.java###org.springframework.cloud.gateway.rsocket.metrics.MicrometerResponderRSocket.InteractionTimers###timer:MeterRegistry String SignalType Tag[] ###returnmeterRegistry.timer("rsocket."+interactionModel,Tags.of(tags).and("signal.type",signalType.name()));###withType###Tags.of(tags).and("signal.type",signalType.name())###211:4:212:59
ef173a64c6700a7f8f2d28ba67b4e038955a608e###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-core/src/main/java/org/springframework/cloud/gateway/filter/NettyRoutingFilter.java###/NettyRoutingFilter.java###org.springframework.cloud.gateway.filter.NettyRoutingFilter###filter:ServerWebExchange GatewayFilterChain ###returnthis.httpClient.request(method,url,req->{finalHttpClientRequestproxyRequest=req.options(NettyPipeline.SendOptions::flushOnEach).headers(httpHeaders).chunkedTransfer(chunkedTransfer).failOnServerError(false).failOnClientError(false);if(preserveHost){Stringhost=request.getHeaders().getFirst(HttpHeaders.HOST);proxyRequest.header(HttpHeaders.HOST,host);}returnproxyRequest.sendHeaders().send(request.getBody().map(dataBuffer->((NettyDataBuffer)dataBuffer).getNativeBuffer()));}).doOnNext(res->{ServerHttpResponseresponse=exchange.getResponse();HttpHeadersheaders=newHttpHeaders();res.responseHeaders().forEach(entry->headers.add(entry.getKey(),entry.getValue()));if(headers.getContentType()!=null){exchange.getAttributes().put(ORIGINAL_RESPONSE_CONTENT_TYPE_ATTR,headers.getContentType());}HttpHeadersfilteredResponseHeaders=HttpHeadersFilter.filter(this.headersFilters.getIfAvailable(),headers,exchange,Type.RESPONSE);response.getHeaders().putAll(filteredResponseHeaders);HttpStatusstatus=HttpStatus.resolve(res.status().code());if(status!=null){response.setStatusCode(status);}elseif(responseinstanceofAbstractServerHttpResponse){((AbstractServerHttpResponse)response).setStatusCodeValue(res.status().code());}else{thrownewIllegalStateException("Unabletosetstatuscodeonresponse:"+res.status().code()+","+response.getClass());}exchange.getAttributes().put(CLIENT_RESPONSE_ATTR,res);}).then(chain.filter(exchange));###responseMono###this.httpClient.request(method,url,req->{finalHttpClientRequestproxyRequest=req.options(NettyPipeline.SendOptions::flushOnEach).headers(httpHeaders).chunkedTransfer(chunkedTransfer).failOnServerError(false).failOnClientError(false);if(preserveHost){Stringhost=request.getHeaders().getFirst(HttpHeaders.HOST);proxyRequest.header(HttpHeaders.HOST,host);}returnproxyRequest.sendHeaders().send(request.getBody().map(dataBuffer->((NettyDataBuffer)dataBuffer).getNativeBuffer()));})###96:3:139:35
98b1cd574e6cd30dfbd9ea01444a8412027a7016###/spring-cloud_spring-cloud-gateway/src/test/java/org/springframework/cloud/gateway/test/GatewayTestApplication.java###/GatewayTestApplication.java###org.springframework.cloud.gateway.test.GatewayTestApplication.GatewayDiscoveryConfiguration###compositeRouteReader:DiscoveryClientRouteReader PropertiesRouteReader ###returnnewCompositeRouteReader(Flux.just(discoveryClientRouteReader,propertiesRouteReader));###flux###Flux.just(discoveryClientRouteReader,propertiesRouteReader)###47:4:47:98
5f969006eba108c8500e01f0464e82fa5927ac6d###/spring-cloud_spring-cloud-gateway/src/main/java/org/springframework/cloud/gateway/rsocket/GatewaySocketAcceptor.java###/GatewaySocketAcceptor.java###org.springframework.cloud.gateway.rsocket.GatewaySocketAcceptor###accept:ConnectionSetupPayload RSocket ###registry.register(Collections.singletonList(annoucementMetadata),sendingSocket);###tags###Collections.singletonList(annoucementMetadata)###42:4:42:85
24d75147fa9392443a9b60b784741f2af9e3ebd1###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-server/src/test/java/org/springframework/cloud/gateway/filter/factory/RetryGatewayFilterFactoryIntegrationTests.java###/RetryGatewayFilterFactoryIntegrationTests.java###org.springframework.cloud.gateway.filter.factory.RetryGatewayFilterFactoryIntegrationTests.TestConfig###retry:String int ###returnResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).header("X-Retry-Count",body).body("temporarilybroken");###httpStatus###HttpStatus.INTERNAL_SERVER_ERROR###253:5:254:35
e64b2fbe1bbcaabdf8ac978dc4fbcde30ea90252###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-core/src/main/java/org/springframework/cloud/gateway/handler/RequestPredicateHandlerMapping.java###/RequestPredicateHandlerMapping.java###org.springframework.cloud.gateway.handler.RequestPredicateHandlerMapping###lookup:Route PredicateDefinition ###logger.debug("Route"+route.getId()+"applying"+predicate.getArgs()+"to"+predicate.getName());###args###predicate.getArgs()###168:4:169:60
6d7c2ae94217bfc4e360676e083c255f899a9974###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-core/src/main/java/org/springframework/cloud/gateway/filter/factory/RetryGatewayFilterFactory.java###/RetryGatewayFilterFactory.java###org.springframework.cloud.gateway.filter.factory.RetryGatewayFilterFactory###apply:RetryConfig ###returnretryableMethod&&retryableStatusCode;###finalRetryableStatusCode###retryableStatusCode###105:5:105:51
7cb009d29729238e55e13f645598f5fd95c5eafa###/spring-cloud_spring-cloud-gateway/spring-cloud-gateway-server/src/test/java/org/springframework/cloud/gateway/filter/factory/RetryGatewayFilterFactoryIntegrationTests.java###/RetryGatewayFilterFactoryIntegrationTests.java###org.springframework.cloud.gateway.filter.factory.RetryGatewayFilterFactoryIntegrationTests.TestConfig###retry:String int ###returnResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).header("X-Retry-Count",body).body("temporarilybroken");###httpStatus###HttpStatus.INTERNAL_SERVER_ERROR###272:5:273:65
