f85f6207059f1aa126b189e994e2b43ee954b2b6###/LinShunKang_MyPerf4J/MyPerf4J-Core/src/main/java/cn/myperf4j/core/MethodMetricsCalculator.java###/MethodMetricsCalculator.java###cn.myperf4j.core.MethodMetricsCalculator###calAvgTime:MethodMetrics IntBuf ###metrics.setAvgTime(((double)totalTime)/totalCount);###avgTime###((double)totalTime)/totalCount###92:9:92:63
a09f9840067821828dff23c6bc5a862f5025d269###/LinShunKang_MyPerf4J/MyPerf4J-Extension/src/main/java/cn/myperf4j/ext/psp/InfluxDBLoggerProcessor.java###/InfluxDBLoggerProcessor.java###cn.myperf4j.ext.psp.InfluxDBLoggerProcessor###createLineProtocol:PerfStats long ###StringBuildersb=newStringBuilder(getSuitSize(perfStats));###suitSize###getSuitSize(perfStats)###41:9:41:70
983ef945369872588ac294c995584efac11af1c4###/LinShunKang_MyPerf4J/MyPerf4J-Core/src/main/java/cn/myperf4j/core/util/PerfStatsCalculator.java###/PerfStatsCalculator.java###cn.myperf4j.core.util.PerfStatsCalculator###calPerfStats:String long long int[] int ###topPerArr[perIndex]=sortedRecords[i];###timeCost###sortedRecords[i]###61:17:61:56
5f6334aa41c891d28919ee8660304c75311aa836###/LinShunKang_MyPerf4J/MyPerf4J-Core/src/main/java/cn/myperf4j/core/AbstractBootstrap.java###/AbstractBootstrap.java###cn.myperf4j.core.AbstractBootstrap###initProfilingConfig:###config.setIncludePackages(MyProperties.getStr(PropertyKeys.FILTER_INCLUDE_PACKAGES,""));###includePackages###MyProperties.getStr(PropertyKeys.FILTER_INCLUDE_PACKAGES,"")###130:13:130:102
5bb60551745614b023ce348eb536a7331d8dc7f6###/LinShunKang_MyPerf4J/MyPerf4J-Base/src/main/java/cn/myperf4j/base/http/HttpRequest.java###/HttpRequest.java###cn.myperf4j.base.http.HttpRequest###createUrl:###sb.append(param.getKey()).append('=').append(param.getValue()).append('&');###values###param.getValue()###100:17:100:92
f85f6207059f1aa126b189e994e2b43ee954b2b6###/LinShunKang_MyPerf4J/MyPerf4J-Core/src/main/java/cn/myperf4j/core/recorder/AccurateRecorder.java###/AccurateRecorder.java###cn.myperf4j.core.recorder.AccurateRecorder###fillMapRecord:IntBuf ###if(entry.getValue().get()>0)###count###entry.getValue().get()###81:13:83:14
983ef945369872588ac294c995584efac11af1c4###/LinShunKang_MyPerf4J/MyPerf4J-Core/src/main/java/cn/myperf4j/core/util/PerfStatsCalculator.java###/PerfStatsCalculator.java###cn.myperf4j.core.util.PerfStatsCalculator###getTotalCount:int[] ###if(i>0&&sortedRecords[i]<=0)###timeCost###sortedRecords[i]###75:13:77:14
94298eb105dc8824165769cc4588add3a3cfc673###/LinShunKang_MyPerf4J/MyPerf4J-Core/src/main/java/cn/myperf4j/core/AbstractBootstrap.java###/AbstractBootstrap.java###cn.myperf4j.core.AbstractBootstrap###initPerfStatsProcessor:###StringclassName=ProfilingConfig.getInstance().getPerStatsProcessor();###config###ProfilingConfig.getInstance()###210:13:210:85
05bc4696b0fef41e584f556ee5dffa330a2371f6###/LinShunKang_MyPerf4J/MyPerf4J-Base/src/test/java/cn/myperf4j/base/util/concurrent/ConcurrentIntCounterTest.java###/ConcurrentIntCounterTest.java###cn.myperf4j.base.util.concurrent.ConcurrentIntCounterTest###testMultiThread0:###Assert.assertEquals("integerMap"+key,threadCnt,value.intValue());###expectedVal###value.intValue()###183:13:183:83
cc7843a9146069e5be56fb1f61f5e3a12bfc7e6c###/LinShunKang_MyPerf4J/MyPerf4J-Core/src/main/java/cn/myperf4j/core/util/PerfStatsCalculator.java###/PerfStatsCalculator.java###cn.myperf4j.core.util.PerfStatsCalculator###getTotalTimeAndTotalCount:int[] ###result[1]+=sortedRecords[i+1];###count###sortedRecords[i+1]###100:13:100:47
5ac0f6bb607d9a6e01ea98ed6ce6f1514dc12d29###/LinShunKang_MyPerf4J/MyPerf4J-Base/src/main/java/cn/myperf4j/base/util/concurrent/ConcurrentIntMap.java###/ConcurrentIntMap.java###cn.myperf4j.base.util.concurrent.ConcurrentIntMap###put:int int ###if(key==getRaw(checkedByteOffset(idx)))###kOffset###checkedByteOffset(idx)###135:20:139:14
e03ed933b7211ebbd290246cb757a95b5f4e01c6###/LinShunKang_MyPerf4J/MyPerf4J-Base/src/main/java/cn/myperf4j/base/metric/processor/influxdb/InfluxDBMethodMetricsProcessor.java###/InfluxDBMethodMetricsProcessor.java###cn.myperf4j.base.metric.processor.influxdb.InfluxDBMethodMetricsProcessor###createLineProtocol:MethodMetrics long StringBuilder ###StringmethodDesc=LineProtocolUtils.processTagOrField(methodMetrics.getMethodTag().getSimpleDesc());###methodTag###methodMetrics.getMethodTag()###49:9:49:111
983ef945369872588ac294c995584efac11af1c4###/LinShunKang_MyPerf4J/MyPerf4J-Core/src/main/java/cn/myperf4j/core/util/PerfStatsCalculator.java###/PerfStatsCalculator.java###cn.myperf4j.core.util.PerfStatsCalculator###calPerfStats:String long long int[] int ###countMile+=sortedRecords[i+1];###count###sortedRecords[i+1]###58:13:58:47
