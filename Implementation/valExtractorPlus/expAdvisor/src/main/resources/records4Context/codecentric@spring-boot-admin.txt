fd89e5192c6ed95d43e211a40768410988119c4c###/codecentric_spring-boot-admin/spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/services/StatusUpdater.java###/StatusUpdater.java###de.codecentric.boot.admin.server.services.StatusUpdater###convertStatusInfo:ResponseEntity<Map<String,Serializable>> ###returnStatusInfo.valueOf((String)response.getBody().get("status"),response.getBody());###body###response.getBody()###70:13:70:102
1c5abd583e4c6d1ec6b4b9822b4fa4b27ed7bdde###/codecentric_spring-boot-admin/spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/zuul/ApplicationRouteLocator.java###/ApplicationRouteLocator.java###de.codecentric.boot.admin.zuul.ApplicationRouteLocator###locateRoutes:###addRoute(locateRoutes,prefix+"/"+application.getId()+"/health/**",application.getHealthUrl());###appPath###prefix+"/"+application.getId()###59:4:60:34
1d8d7cccf5232e1d4e7890b526c245ed573d3dda###/codecentric_spring-boot-admin/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/registry/StatusUpdaterTest.java###/StatusUpdaterTest.java###de.codecentric.boot.admin.registry.StatusUpdaterTest###test_update_noBody:###assertThat(store.find("id").getStatusInfo().getStatus(),CoreMatchers.is("UP"));###statusInfo###store.find("id").getStatusInfo()###103:3:103:83
b039f2a907aa59b98025223f635157a4a14bd6ac###/codecentric_spring-boot-admin/spring-boot-admin-starter-client/src/main/java/de/codecentric/boot/admin/config/AdminClientProperties.java###/AdminClientProperties.java###de.codecentric.boot.admin.config.AdminClientProperties###getServiceUrl:###returnappend(createLocalUri(server.getAddress().getHostAddress(),serverPort),server.getContextPath());###address###server.getAddress()###144:4:145:31
3f4da6211d5c91a2661fdac8bcc860521d72ffb7###/codecentric_spring-boot-admin/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/controller/RegistryControllerTest.java###/RegistryControllerTest.java###de.codecentric.boot.admin.controller.RegistryControllerTest###register:###ResponseEntity<Application>response=controller.register(Application.create("test").withHealthUrl("http://localhost/mgmt/health").withManagementUrl("http://localhost/mgmt").withServiceUrl("http://localhost/").build());###application###Application.create("test").withHealthUrl("http://localhost/mgmt/health").withManagementUrl("http://localhost/mgmt").withServiceUrl("http://localhost/").build()###51:3:54:51
d1ed8b78f275fb779475414f627d63d5143ec442###/codecentric_spring-boot-admin/spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/domain/entities/Instance.java###/Instance.java###de.codecentric.boot.admin.server.domain.entities.Instance###apply:InstanceEvent boolean ###returnnewInstance(this.id,event.getVersion(),this.registration,this.registered,((InstanceStatusChangedEvent)event).getStatusInfo(),event.getTimestamp(),this.info,this.endpoints,unsavedEvents);###statusInfo###((InstanceStatusChangedEvent)event).getStatusInfo()###164:13:166:52
d1ed8b78f275fb779475414f627d63d5143ec442###/codecentric_spring-boot-admin/spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/domain/entities/Instance.java###/Instance.java###de.codecentric.boot.admin.server.domain.entities.Instance###apply:InstanceEvent boolean ###returnnewInstance(this.id,event.getVersion(),this.registration,this.registered,this.statusInfo,this.statusTimestamp,this.info,((InstanceEndpointsDetectedEvent)event).getEndpoints(),unsavedEvents);###endpoints###((InstanceEndpointsDetectedEvent)event).getEndpoints()###168:13:170:36
d36ae2eb50572d55b721154e91222e4eca2195b7###/codecentric_spring-boot-admin/spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/services/StatusUpdater.java###/StatusUpdater.java###de.codecentric.boot.admin.server.services.StatusUpdater###convertStatusInfo:ClientResponse ###if(response.headers().contentType().map(mt->mt.isCompatibleWith(MediaType.APPLICATION_JSON)||mt.isCompatibleWith(ACTUATOR_V2_MEDIATYPE)).orElse(false))###hasCompatibleContentType###response.headers().contentType().map(mt->mt.isCompatibleWith(MediaType.APPLICATION_JSON)||mt.isCompatibleWith(ACTUATOR_V2_MEDIATYPE)).orElse(false)###81:9:92:10
c23974161b377b98ff7243f0a756976baf20fe28###/codecentric_spring-boot-admin/spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/zuul/ApplicationRouteLocator.java###/ApplicationRouteLocator.java###de.codecentric.boot.admin.zuul.ApplicationRouteLocator###addRoute:List<Route> String String String ###Routeroute=newRoute(applicationId+"-"+endpoint,"/**",targetUrl,prefix+applicationId+"/"+endpoint,false,null);###routeId###applicationId+"-"+endpoint###83:3:84:59
3f4da6211d5c91a2661fdac8bcc860521d72ffb7###/codecentric_spring-boot-admin/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/controller/RegistryControllerTest.java###/RegistryControllerTest.java###de.codecentric.boot.admin.controller.RegistryControllerTest###unregister_notFound:###controller.register(Application.create("FOO").withHealthUrl("http://localhost/mgmt/health").build());###application###Application.create("FOO").withHealthUrl("http://localhost/mgmt/health").build()###122:3:123:61
c4203e5c6ac2fd8f274540c71213bc43c81f90dd###/codecentric_spring-boot-admin/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/AdminApplicationHazelcastTest.java###/AdminApplicationHazelcastTest.java###de.codecentric.boot.admin.AdminApplicationHazelcastTest.TestAdminApplication###hazelcastConfig:###returnnewConfig().addMapConfig(newMapConfig("spring-boot-admin-application-store").setBackupCount(1).setEvictionPolicy(EvictionPolicy.NONE)).addListConfig(newListConfig("spring-boot-admin-application-store").setBackupCount(1).setMaxSize(1000));###config###newConfig()###154:4:158:45
6c3f41820d246f2b3968cf76f58a770c715a034e###/codecentric_spring-boot-admin/spring-boot-admin-server-ui/src/main/java/de/codecentric/boot/admin/server/ui/extensions/UiExtensionsScanner.java###/UiExtensionsScanner.java###de.codecentric.boot.admin.server.ui.extensions.UiExtensionsScanner###scan:String[] ###extensions.add(newUiExtension(resourcePath,location+resourcePath));###extension###newUiExtension(resourcePath,location+resourcePath)###41:21:41:92
7eb4bafc5def0fa0f1a3b0f3b3a59edc18ac4ba2###/codecentric_spring-boot-admin/spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/config/WebappConfig.java###/WebappConfig.java###de.codecentric.boot.admin.config.WebappConfig.HazelcastConfig###applicationStore:HazelcastInstance ###returnnewHazelcastApplicationStore(hazelcast.<String,Application>getMap(hazelcastMapName));###map###hazelcast.<String,Application>getMap(hazelcastMapName)###114:4:114:99
272633e1b16b88125d929868a6bcf5338c6363b3###/codecentric_spring-boot-admin/spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/zuul/ApplicationRouteLocator.java###/ApplicationRouteLocator.java###de.codecentric.boot.admin.zuul.ApplicationRouteLocator###locateRoutes:###for(application:registry.getApplications())###applications###registry.getApplications()###61:3:70:4
e9059795c556670467bb2a11baa9cb1853c1cc3a###/codecentric_spring-boot-admin/spring-boot-admin-server-ui-turbine/src/test/java/spring/boot/admin/turbine/zuul/filters/StaticRouteLocatorTest.java###/StaticRouteLocatorTest.java###spring.boot.admin.turbine.zuul.filters.StaticRouteLocatorTest###test_route:###assertThat(locator.getMatchingRoute("/path/foo").getLocation(),is("http://example.com/target"));###matchingRoute###locator.getMatchingRoute("/path/foo")###28:3:29:38
245c256f38b2e52ad39cc2b3a6181271faefc1eb###/codecentric_spring-boot-admin/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/zuul/ApplicationRouteLocatorTest.java###/ApplicationRouteLocatorTest.java###de.codecentric.boot.admin.zuul.ApplicationRouteLocatorTest###getRoutes:###when(registry.getApplications()).thenReturn(singletonList(Application.create("app1").withHealthUrl("http://localhost/health").withManagementUrl("http://localhost").withId("1234").build()));###application###Application.create("app1").withHealthUrl("http://localhost/health").withManagementUrl("http://localhost").withId("1234").build()###66:3:68:71
308f1e81cd44da5034477ddd2bd08f15df29bf29###/codecentric_spring-boot-admin/spring-boot-admin-server-ui/src/main/java/de/codecentric/boot/admin/server/ui/web/HomepageForwardingMatcher.java###/HomepageForwardingMatcher.java###de.codecentric.boot.admin.server.ui.web.HomepageForwardingMatcher###test:T ###p.matcher(this.pathAccessor.apply(request)).matches()###path###this.pathAccessor.apply(request)###51:45:51:98
aae9cc788bb4d307c3feb18ccfb4d428ae7d3788###/codecentric_spring-boot-admin/spring-boot-starter-admin-client/src/main/java/de/codecentric/boot/admin/services/SpringBootAdminRegistrator.java###/SpringBootAdminRegistrator.java###de.codecentric.boot.admin.services.SpringBootAdminRegistrator###register:###ResponseEntity<Application>response=template.postForEntity(adminProps.getUrl()+'/'+adminProps.getContextPath(),app,Application.class);###adminUrl###adminProps.getUrl()+'/'+adminProps.getContextPath()###56:4:57:87
245c256f38b2e52ad39cc2b3a6181271faefc1eb###/codecentric_spring-boot-admin/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/zuul/ApplicationRouteLocatorTest.java###/ApplicationRouteLocatorTest.java###de.codecentric.boot.admin.zuul.ApplicationRouteLocatorTest###getRoutes_healthOnly:###when(registry.getApplications()).thenReturn(singletonList(Application.create("app1").withHealthUrl("http://localhost/health").withId("1234").build()));###application###Application.create("app1").withHealthUrl("http://localhost/health").withId("1234").build()###50:3:51:72
6fdaf8c181d4273f4a2f2c86a77ced1a79991887###/codecentric_spring-boot-admin/spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/registry/StatusUpdater.java###/StatusUpdater.java###de.codecentric.boot.admin.registry.StatusUpdater###updateStatus:Application ###if(!newStatus.equals(oldStatus))###statusChanged###!newStatus.equals(oldStatus)###79:3:82:4
6fdaf8c181d4273f4a2f2c86a77ced1a79991887###/codecentric_spring-boot-admin/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/registry/StatusUpdaterTest.java###/StatusUpdaterTest.java###de.codecentric.boot.admin.registry.StatusUpdaterTest###test_updateStatusForApplications:###store.save(Application.create("foo").withId("id-1").withHealthUrl("health-1").build());###app1###Application.create("foo").withId("id-1").withHealthUrl("health-1").build()###136:3:136:90
3f4da6211d5c91a2661fdac8bcc860521d72ffb7###/codecentric_spring-boot-admin/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/AdminApplicationTest.java###/AdminApplicationTest.java###de.codecentric.boot.admin.AdminApplicationTest###testReverseProxy:###ResponseEntity<Application>entity=newTestRestTemplate().postForEntity(apiBaseUrl,Application.create("TestApp").withHealthUrl("http://localhost:"+port+"/health").withManagementUrl("http://localhost:"+port).build(),Application.class);###application###Application.create("TestApp").withHealthUrl("http://localhost:"+port+"/health").withManagementUrl("http://localhost:"+port).build()###65:3:69:24
eb8b970912e957aafc8106a6b7165d0fc53840f4###/codecentric_spring-boot-admin/spring-boot-admin-starter-client/src/test/java/de/codecentric/boot/admin/registration/ApplicationRegistratorTest.java###/ApplicationRegistratorTest.java###de.codecentric.boot.admin.registration.ApplicationRegistratorTest###register_successful:###verify(restTemplate).postForEntity("http://sba:8080/api/applications",newHttpEntity<>(Application.create("AppName").withHealthUrl("http://localhost:8080/health").withManagementUrl("http://localhost:8080/mgmt").withServiceUrl("http://localhost:8080").build(),headers),Map.class);###applicationRef###Application.create("AppName").withHealthUrl("http://localhost:8080/health").withManagementUrl("http://localhost:8080/mgmt").withServiceUrl("http://localhost:8080").build()###82:3:88:16
3f4da6211d5c91a2661fdac8bcc860521d72ffb7###/codecentric_spring-boot-admin/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/controller/RegistryControllerTest.java###/RegistryControllerTest.java###de.codecentric.boot.admin.controller.RegistryControllerTest###register_sameUrl:###controller.register(Application.create("FOO").withHealthUrl("http://localhost/mgmt/health").build());###application###Application.create("FOO").withHealthUrl("http://localhost/mgmt/health").build()###76:3:77:61
52ab46b2af3f557d131fb45d10ffe12269aeeee2###/codecentric_spring-boot-admin/spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/web/client/InstanceWebClient.java###/InstanceWebClient.java###de.codecentric.boot.admin.server.web.client.InstanceWebClient###createDefaultWebClient:Duration Duration ###returnWebClient.builder().clientConnector(connector).defaultHeader(HttpHeaders.ACCEPT,ActuatorMediaType.V2_JSON,ActuatorMediaType.V1_JSON,MediaType.APPLICATION_JSON_VALUE).build();###builder###WebClient.builder().clientConnector(connector).defaultHeader(HttpHeaders.ACCEPT,ActuatorMediaType.V2_JSON,ActuatorMediaType.V1_JSON,MediaType.APPLICATION_JSON_VALUE)###76:9:80:34
d1ed8b78f275fb779475414f627d63d5143ec442###/codecentric_spring-boot-admin/spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/domain/entities/Instance.java###/Instance.java###de.codecentric.boot.admin.server.domain.entities.Instance###apply:InstanceEvent boolean ###returnnewInstance(this.id,event.getVersion(),((InstanceRegistrationUpdatedEvent)event).getRegistration(),this.registered,this.statusInfo,this.statusTimestamp,this.info,this.endpoints,unsavedEvents);###registration###((InstanceRegistrationUpdatedEvent)event).getRegistration()###160:13:162:85
eb8b970912e957aafc8106a6b7165d0fc53840f4###/codecentric_spring-boot-admin/spring-boot-admin-starter-client/src/test/java/de/codecentric/boot/admin/registration/ApplicationRegistratorTest.java###/ApplicationRegistratorTest.java###de.codecentric.boot.admin.registration.ApplicationRegistratorTest###register_multiple:###verify(restTemplate).postForEntity("http://sba:8080/api/applications",newHttpEntity<>(Application.create("AppName").withHealthUrl("http://localhost:8080/health").withManagementUrl("http://localhost:8080/mgmt").withServiceUrl("http://localhost:8080").build(),headers),Map.class);###applicationRef###Application.create("AppName").withHealthUrl("http://localhost:8080/health").withManagementUrl("http://localhost:8080/mgmt").withServiceUrl("http://localhost:8080").build()###139:3:145:18
99d82c32df27a3f10be35e6ebcc1ef2d85cf385a###/codecentric_spring-boot-admin/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/server/domain/entities/AbstractInstanceRepositoryTest.java###/AbstractInstanceRepositoryTest.java###de.codecentric.boot.admin.server.domain.entities.AbstractInstanceRepositoryTest###should_retry_computeIfPresent:###StepVerifier.create(repository.computeIfPresent(instance1.getId(),(key,application)->counter.getAndDecrement()>0L?Mono.just(instance1):Mono.just(application.withEndpoints(Endpoints.single("info","info"))))).expectNext(instance1.withEndpoints(Endpoints.single("info","info"))).verifyComplete();###infoEndpoint###Endpoints.single("info","info")###112:9:118:99
9ed8ec4e44e5fc63968527210b8ae81a7eaed34f###/codecentric_spring-boot-admin/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/server/notify/filter/FilteringNotifierTest.java###/FilteringNotifierTest.java###de.codecentric.boot.admin.server.notify.filter.FilteringNotifierTest###test_expired_removal:###Stringid1=notifier.addFilter(newApplicationNameNotificationFilter("foo",Instant.now().minus(Duration.ofSeconds(1))));###filter1###newApplicationNameNotificationFilter("foo",Instant.now().minus(Duration.ofSeconds(1)))###60:9:61:103
7be4088bc5b490e9b6ae42afa5cf21ebb04adc5f###/codecentric_spring-boot-admin/spring-boot-admin-samples/spring-boot-admin-sample-hazelcast/src/main/java/de/codecentric/boot/admin/SpringBootAdminHazelcastApplication.java###/SpringBootAdminHazelcastApplication.java###de.codecentric.boot.admin.SpringBootAdminHazelcastApplication###hazelcastConfig:###returnnewConfig().setProperty("hazelcast.jmx","true").addMapConfig(mapConfig);###config###newConfig()###52:9:52:90
1d8d7cccf5232e1d4e7890b526c245ed573d3dda###/codecentric_spring-boot-admin/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/registry/StatusUpdaterTest.java###/StatusUpdaterTest.java###de.codecentric.boot.admin.registry.StatusUpdaterTest###test_update_offline:###assertThat(store.find("id").getStatusInfo().getStatus(),CoreMatchers.is("OFFLINE"));###statusInfo###store.find("id").getStatusInfo()###124:3:124:88
99d82c32df27a3f10be35e6ebcc1ef2d85cf385a###/codecentric_spring-boot-admin/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/server/domain/entities/AbstractInstanceRepositoryTest.java###/AbstractInstanceRepositoryTest.java###de.codecentric.boot.admin.server.domain.entities.AbstractInstanceRepositoryTest###should_retry_compute:###StepVerifier.create(repository.compute(instance.getId(),(key,application)->counter.getAndDecrement()>0L?Mono.just(instance):Mono.just(application.withEndpoints(Endpoints.single("info","info"))))).expectNext(instance.withEndpoints(Endpoints.single("info","info"))).verifyComplete();###infoEndpoint###Endpoints.single("info","info")###172:9:179:98
6fdaf8c181d4273f4a2f2c86a77ced1a79991887###/codecentric_spring-boot-admin/spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/registry/StatusUpdater.java###/StatusUpdater.java###de.codecentric.boot.admin.registry.StatusUpdater###updateStatus:Application ###ApplicationnewState=Application.copyOf(application).withStatusInfo(newStatus).build();###builder###Application.copyOf(application).withStatusInfo(newStatus)###76:3:76:92
f07b0bd63627a41d2ef3007b819bffa1b9f5ffbc###/codecentric_spring-boot-admin/spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/web/client/BasicAuthHttpHeaderProvider.java###/BasicAuthHttpHeaderProvider.java###de.codecentric.boot.admin.server.web.client.BasicAuthHttpHeaderProvider###getUsername:Instance String ###returninstance.getRegistration().getMetadata().get(USERNAME_KEY.replace("{separator}",separator));###metadata###instance.getRegistration().getMetadata()###74:3:74:103
9ed8ec4e44e5fc63968527210b8ae81a7eaed34f###/codecentric_spring-boot-admin/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/server/notify/filter/FilteringNotifierTest.java###/FilteringNotifierTest.java###de.codecentric.boot.admin.server.notify.filter.FilteringNotifierTest###test_expired_removal:###Stringid2=notifier.addFilter(newApplicationNameNotificationFilter("bar",null));###filter2###newApplicationNameNotificationFilter("bar",null)###62:9:62:93
b039f2a907aa59b98025223f635157a4a14bd6ac###/codecentric_spring-boot-admin/spring-boot-admin-starter-client/src/main/java/de/codecentric/boot/admin/config/AdminClientProperties.java###/AdminClientProperties.java###de.codecentric.boot.admin.config.AdminClientProperties###getManagementUrl:###returnappend(append(createLocalUri(management.getAddress().getHostAddress(),managementPort),server.getContextPath()),management.getContextPath());###address###management.getAddress()###106:4:109:35
7a798f7b95c03e95d6957e01cb5cc7a7236ebe8f###/codecentric_spring-boot-admin/spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/services/endpoints/ProbeEndpointsStrategy.java###/ProbeEndpointsStrategy.java###de.codecentric.boot.admin.server.services.endpoints.ProbeEndpointsStrategy###detectEndpoint:Instance EndpointDefinition ###URIuri=UriComponentsBuilder.fromUriString(instance.getRegistration().getManagementUrl()).path("/").path(endpoint.getPath()).build().toUri();###managementUrl###instance.getRegistration().getManagementUrl()###63:9:67:48
3f4da6211d5c91a2661fdac8bcc860521d72ffb7###/codecentric_spring-boot-admin/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/controller/RegistryControllerTest.java###/RegistryControllerTest.java###de.codecentric.boot.admin.controller.RegistryControllerTest###get_notFound:###controller.register(Application.create("FOO").withHealthUrl("http://localhost/mgmt/health").build());###application###Application.create("FOO").withHealthUrl("http://localhost/mgmt/health").build()###99:3:100:61
7eb4bafc5def0fa0f1a3b0f3b3a59edc18ac4ba2###/codecentric_spring-boot-admin/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/registry/ApplicationRegistryTest.java###/ApplicationRegistryTest.java###de.codecentric.boot.admin.registry.ApplicationRegistryTest###getApplications:###assertEquals(1,registry.getApplications().size());###applications###registry.getApplications()###73:3:73:54
eb8b970912e957aafc8106a6b7165d0fc53840f4###/codecentric_spring-boot-admin/spring-boot-admin-starter-client/src/test/java/de/codecentric/boot/admin/registration/ApplicationRegistratorTest.java###/ApplicationRegistratorTest.java###de.codecentric.boot.admin.registration.ApplicationRegistratorTest###register_multiple_one_failure:###verify(restTemplate).postForEntity("http://sba:8080/api/applications",newHttpEntity<>(Application.create("AppName").withHealthUrl("http://localhost:8080/health").withManagementUrl("http://localhost:8080/mgmt").withServiceUrl("http://localhost:8080").build(),headers),Map.class);###applicationRef###Application.create("AppName").withHealthUrl("http://localhost:8080/health").withManagementUrl("http://localhost:8080/mgmt").withServiceUrl("http://localhost:8080").build()###169:3:175:18
d1ed8b78f275fb779475414f627d63d5143ec442###/codecentric_spring-boot-admin/spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/domain/entities/Instance.java###/Instance.java###de.codecentric.boot.admin.server.domain.entities.Instance###apply:InstanceEvent boolean ###returnnewInstance(this.id,event.getVersion(),this.registration,this.registered,this.statusInfo,this.statusTimestamp,((InstanceInfoChangedEvent)event).getInfo(),this.endpoints,unsavedEvents);###info###((InstanceInfoChangedEvent)event).getInfo()###172:13:173:120
