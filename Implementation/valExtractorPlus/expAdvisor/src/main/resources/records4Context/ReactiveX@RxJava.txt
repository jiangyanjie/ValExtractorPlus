cbc1c6b58f2148f47f5e4a1cc8d2d060909dc75c###/ReactiveX_RxJava/rxjava-core/src/main/java/rx/schedulers/ExecutorScheduler.java###/ExecutorScheduler.java###rx.schedulers.ExecutorScheduler.InnerExecutorScheduler###schedule:Action1<Scheduler.Inner> long TimeUnit ###innerSubscription.set(Subscriptions.from(f));###s###Subscriptions.from(f)###119:17:119:62
6fcdc7eb2a87eb6ed0c971e8076aadd3895662c8###/ReactiveX_RxJava/src/test/java/rx/internal/operators/OperatorRetryTest.java###/OperatorRetryTest.java###rx.internal.operators.OperatorRetryTest.FuncWithErrors.call.setProducer.new Producer###request:long ###if(count.getAndIncrement()<numFailures)###i###count.getAndIncrement()###402:25:407:26
f97c50dadcb40a0f6f41734087a1c52d9df55d08###/ReactiveX_RxJava/src/main/java/io/reactivex/observers/SafeObserver.java###/SafeObserver.java###io.reactivex.observers.SafeObserver###onNext:T ###onError(newNullPointerException());###ex###newNullPointerException()###84:13:84:49
76abb7beef3aa0b808cdbe193fd96ef04a5f0903###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/flowable/FlowableDoOnLifecycle.java###/FlowableDoOnLifecycle.java###io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle.SubscriptionLambdaSubscriber###cancel:###upstream.cancel();###s###upstream###117:13:117:31
ab8460bfb692cb2c0e7d6e6e34522e641212f42d###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OperatorMerge.java###/OperatorMerge.java###rx.internal.operators.OperatorMerge.MergeSubscriber###drainScalarValueQueue:###Objecto=scalarValueQueue.poll();###svq###scalarValueQueue###398:25:398:60
1b88781653cde78650f34eabe1f07e53560b0880###/ReactiveX_RxJava/rxjava-core/src/main/java/rx/subjects/BehaviorSubject.java###/BehaviorSubject.java###rx.subjects.BehaviorSubject.BehaviorState###add:BehaviorObserver ###intn=observers.length;###a###observers###167:13:167:38
76abb7beef3aa0b808cdbe193fd96ef04a5f0903###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/observers/DisposableLambdaObserver.java###/DisposableLambdaObserver.java###io.reactivex.internal.observers.DisposableLambdaObserver###dispose:###upstream.dispose();###d###upstream###85:9:85:28
2367f90bb0f3bce5493ac5e014b599133c4410a7###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OperatorObserveOn.java###/OperatorObserveOn.java###rx.internal.operators.OperatorObserveOn.ObserveOnSubscriber###init:###child.add(scheduledUnsubscribe);###localChild###child###104:13:104:45
476a69f0ec8473c108d5f5161923b56fc3a5fda3###/ReactiveX_RxJava/src/main/java/io/reactivex/Scheduler.java###/Scheduler.java###io.reactivex.Scheduler###scheduleDirect:Runnable long TimeUnit ###w.schedule(newDisposeTask(decoratedRun,w),delay,unit);###task###newDisposeTask(decoratedRun,w)###134:9:134:67
92b27f2f4a2aea910c56092c9c4f7176508f6ad5###/ReactiveX_RxJava/src/main/java/io/reactivex/plugins/RxJavaPlugins.java###/RxJavaPlugins.java###io.reactivex.plugins.RxJavaPlugins###onCreate:Publisher<T> ###return(Publisher)((Function)onCreateHandler).apply(publisher);###f###onCreateHandler###115:9:115:72
308255868f25e8f805d4e8b3f9a9d3571636b817###/ReactiveX_RxJava/src/main/java/rx/internal/util/RxRingBuffer.java###/RxRingBuffer.java###rx.internal.util.RxRingBuffer###poll:###o=terminalState;###ts###terminalState###398:13:398:31
9be3552e39b193e9104f832d56fe0fefee5a81e0###/ReactiveX_RxJava/rxjava-core/src/test/java/rx/ConcatTests.java###/ConcatTests.java###rx.ConcatTests###testConcatCovariance2:###Observable<Media>o1=Observable.from(newHorrorMovie(),newMovie(),newMedia());###media1###newMedia()###93:9:93:93
43e5299a956febe9dade523bfa9d985482f31a1a###/ReactiveX_RxJava/src/main/java/io/reactivex/Observable.java###/Observable.java###io.reactivex.Observable###toMultimap:Function<? super T,? extends K> ###returntoMultimap(keySelector,v->v,HashMap::new,k->newArrayList<>());###mapSupplier###HashMap::new###2215:9:2215:86
df94c0d23b8f06ec861c2533313555cc6f8afdcb###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/observable/ObservableScalarXMap.java###/ObservableScalarXMap.java###io.reactivex.internal.operators.observable.ObservableScalarXMap###tryScalarXMapSubscribe:ObservableSource<T> Observer<? super R> Function<? super T,? extends ObservableSource<? extends R>> ###observer.onSubscribe(newScalarDisposable<R>(observer,u));###sd###newScalarDisposable<R>(observer,u)###87:17:87:76
603f6c690a49a0eb73a7b9cec247ba3987e96772###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/observable/ObservableElementAtSingle.java###/ObservableElementAtSingle.java###io.reactivex.internal.operators.observable.ObservableElementAtSingle.ElementAtObserver###onComplete:###actual.onSuccess(defaultValue);###v###defaultValue###101:17:101:48
a4298155f8bb1a5677495941a5d0f3ab6cbbbf77###/ReactiveX_RxJava/src/main/java/rx/schedulers/Schedulers.java###/Schedulers.java###rx.schedulers.Schedulers###Schedulers:###Schedulerc=RxJavaPlugins.getInstance().getSchedulersHook().getComputationScheduler();###hook###RxJavaPlugins.getInstance().getSchedulersHook()###37:9:37:97
e255de7db02c715d7441d63e774d8c3f34d40c06###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/flowable/FlowablePublish.java###/FlowablePublish.java###io.reactivex.internal.operators.flowable.FlowablePublish.PublishSubscriber###checkTerminated:Object boolean ###for(ip:subscribers.getAndSet(TERMINATED))###a###subscribers.getAndSet(TERMINATED)###421:25:423:26
6c8b0efade6e2b82b32daa18fec7b045aabb3f6c###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/flowable/FlowableToList.java###/FlowableToList.java###io.reactivex.internal.operators.flowable.FlowableToList.ToListSubscriber###onNext:T ###value.add(t);###v###value###72:13:72:26
113eeeb2c3e732fce96945304b8a3e27cc3ea7cc###/ReactiveX_RxJava/src/main/java/io/reactivex/disposables/CompositeDisposable.java###/CompositeDisposable.java###io.reactivex.disposables.CompositeDisposable###add:Disposable ###resources.add(d);###set###resources###49:9:49:26
000a174d87a901135f9665d3b11f3627fd2dc4ed###/ReactiveX_RxJava/src/test/java/io/reactivex/internal/operators/nbp/NbpOperatorFlatMapTest.java###/NbpOperatorFlatMapTest.java###io.reactivex.internal.operators.nbp.NbpOperatorFlatMapTest###testFlatMapTransformsMaxConcurrentNormal:###source.flatMap(just(onNext),just(onError),just0(onCompleted),m).subscribe(ts);###just###just(onError)###408:9:408:90
c507577566e7b3a548d2f8256ca2f144ac14a08c###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/flowable/FlowableIntervalRange.java###/FlowableIntervalRange.java###io.reactivex.internal.operators.flowable.FlowableIntervalRange###subscribeActual:Subscriber<? super Long> ###Disposabled=scheduler.schedulePeriodicallyDirect(is,initialDelay,period,unit);###sch###scheduler###50:9:50:93
835e4f2a007ae11f9fbb4b04342d6a56df9c2709###/ReactiveX_RxJava/src/main/java/io/reactivex/NbpObservable.java###/NbpObservable.java###io.reactivex.NbpObservable###combineLatest:NbpObservable<? extends T1> NbpObservable<? extends T2> BiFunction<? super T1,? super T2,? extends R> ###returncombineLatest(Functions.toFunction(combiner),false,bufferSize(),p1,p2);###f###Functions.toFunction(combiner)###166:9:166:91
77c5643180ab875b3fa7f4e61ce9191014b85f38###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OperatorPublish.java###/OperatorPublish.java###rx.internal.operators.OperatorPublish.RequestHandler###drainQueue:OriginSubscriber<T> ###booleanshouldEmit=state.canEmitWithDecrement();###localState###state###349:25:349:75
92b27f2f4a2aea910c56092c9c4f7176508f6ad5###/ReactiveX_RxJava/src/main/java/io/reactivex/plugins/RxJavaPlugins.java###/RxJavaPlugins.java###io.reactivex.plugins.RxJavaPlugins###initIOScheduler:Scheduler ###returnonInitIOHandler.apply(defaultScheduler);###f###onInitIOHandler###98:9:98:56
29b5150d06593f266fb18e1aa5aea0bfd1c390f4###/ReactiveX_RxJava/rxjava-core/src/main/java/rx/operators/OperatorAmb.java###/OperatorAmb.java###rx.operators.OperatorAmb.AmbSubscriber###isSelected:###returnchoice.get()==index;###ch###choice.get()###164:13:164:42
de4ce93d91426bfc20c986287b39bc168d524e46###/ReactiveX_RxJava/src/test/java/io/reactivex/internal/operators/flowable/FlowableRefCountTest.java###/FlowableRefCountTest.java###io.reactivex.internal.operators.flowable.FlowableRefCountTest###timeoutDisposesSource:###FlowableRefCount<Object>o=(FlowableRefCount<Object>)newTestConnectableFlowable<Object>().refCount();###tcf###newTestConnectableFlowable<Object>()###1388:9:1388:113
c507577566e7b3a548d2f8256ca2f144ac14a08c###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/observable/ObservableInterval.java###/ObservableInterval.java###io.reactivex.internal.operators.observable.ObservableInterval###subscribeActual:Observer<? super Long> ###Disposabled=scheduler.schedulePeriodicallyDirect(is,initialDelay,period,unit);###sch###scheduler###41:9:41:93
50598b3e5b28a619879e90aea1c798e2008d3e7c###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/single/SingleFlatMapIterableObservable.java###/SingleFlatMapIterableObservable.java###io.reactivex.internal.operators.single.SingleFlatMapIterableObservable.FlatMapIterableObserver###onSuccess:T ###actual.onComplete();###a###actual###97:17:97:37
234a4c4672da9f26492c48f48abe03c0573c1b89###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OperatorConcat.java###/OperatorConcat.java###rx.internal.operators.OperatorConcat.ConcatInnerSubscriber###onCompleted:###parent.completeInner();###p###parent###216:17:216:40
f59ce00934a65b880cbe5b7e06436f85e73187d9###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/flowable/FlowableSequenceEqual.java###/FlowableSequenceEqual.java###io.reactivex.internal.operators.flowable.FlowableSequenceEqual.EqualSubscriber###onError:Throwable ###parent.drain();###p###parent###275:13:275:28
8eb6482ca7e343a4ab76f5daafb1866878337182###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OperatorObserveOn.java###/OperatorObserveOn.java###rx.internal.operators.OperatorObserveOn.ObserveOnSubscriber###pollQueue:###child.onError(error);###err###error###197:25:197:46
6c19a7b6e37326a94b9a5e8fcc716fe67160724e###/ReactiveX_RxJava/src/perf/java/rx/SubscribingPerf.java###/SubscribingPerf.java###rx.SubscribingPerf###rangeUsualUnsafe:Blackhole ###range.unsafeSubscribe(newUsualSubscriber<Integer>(Long.MAX_VALUE,bh));###subscriber###newUsualSubscriber<Integer>(Long.MAX_VALUE,bh)###96:9:96:81
b5aaf82ea8c7addd2cd197f1c61ddec9ee5ee962###/ReactiveX_RxJava/src/main/java/rx/internal/schedulers/NewThreadWorker.java###/NewThreadWorker.java###rx.internal.schedulers.NewThreadWorker###NewThreadWorker:ThreadFactory ###executor=Executors.newScheduledThreadPool(1,threadFactory);###exec###Executors.newScheduledThreadPool(1,threadFactory)###36:9:36:71
835e4f2a007ae11f9fbb4b04342d6a56df9c2709###/ReactiveX_RxJava/src/main/java/io/reactivex/NbpObservable.java###/NbpObservable.java###io.reactivex.NbpObservable.retryWhen.f.new Function<NbpObservable<Try<Optional<Object>>>,NbpObservable<?>>###apply:NbpObservable<Try<Optional<Object>>> ###returnhandler.apply(no.takeWhile(newPredicate<Try<Optional<Object>>>(){@Overridepublicbooleantest(Try<Optional<Object>>e){returne.hasError();}}).map(newFunction<Try<Optional<Object>>,Throwable>(){@OverridepublicThrowableapply(Try<Optional<Object>>t){returnt.error();}}));###map###no.takeWhile(newPredicate<Try<Optional<Object>>>(){@Overridepublicbooleantest(Try<Optional<Object>>e){returne.hasError();}}).map(newFunction<Try<Optional<Object>>,Throwable>(){@OverridepublicThrowableapply(Try<Optional<Object>>t){returnt.error();}})###2411:17:2424:19
9be3552e39b193e9104f832d56fe0fefee5a81e0###/ReactiveX_RxJava/rxjava-core/src/test/java/rx/ConcatTests.java###/ConcatTests.java###rx.ConcatTests###testConcatCovariance:###Observable<Media>o2=Observable.from(newMedia(),newHorrorMovie());###media###newMedia()###82:9:82:80
82c13b0a9d1b3634042abd367b561ba567a6243f###/ReactiveX_RxJava/src/main/java/rx/internal/operators/BlockingOperatorToFuture.java###/BlockingOperatorToFuture.java###rx.internal.operators.BlockingOperatorToFuture.toFuture.new Future<T>###getValue:###thrownewExecutionException("ObservableonError",error.get());###throwable###error.get()###122:21:122:85
be8d144e65cf8dc66661ec4451e7b717b52a70b7###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OperatorWindowWithSize.java###/OperatorWindowWithSize.java###rx.internal.operators.OperatorWindowWithSize.ExactSubscriber###onError:Throwable ###window.onError(e);###w###window###127:17:127:35
6c19a7b6e37326a94b9a5e8fcc716fe67160724e###/ReactiveX_RxJava/src/perf/java/rx/SubscribingPerf.java###/SubscribingPerf.java###rx.SubscribingPerf###rangeDirectUnsafe:Blackhole ###range.unsafeSubscribe(newDirectSubscriber<Integer>(Long.MAX_VALUE,bh));###subscriber###newDirectSubscriber<Integer>(Long.MAX_VALUE,bh)###86:9:86:82
9be3552e39b193e9104f832d56fe0fefee5a81e0###/ReactiveX_RxJava/rxjava-core/src/test/java/rx/ConcatTests.java###/ConcatTests.java###rx.ConcatTests###testConcatCovariance2:###Observable<Media>o1=Observable.from(newHorrorMovie(),newMovie(),newMedia());###horrorMovie1###newHorrorMovie()###93:9:93:93
77c5643180ab875b3fa7f4e61ce9191014b85f38###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OperatorPublish.java###/OperatorPublish.java###rx.internal.operators.OperatorPublish.RequestHandler###drainQueue:OriginSubscriber<T> ###notifier.accept(s,o);###nl###notifier###362:33:362:55
308255868f25e8f805d4e8b3f9a9d3571636b817###/ReactiveX_RxJava/src/main/java/rx/internal/util/RxRingBuffer.java###/RxRingBuffer.java###rx.internal.util.RxRingBuffer###release:###pool.returnObject(q);###p###pool###314:13:314:34
e255de7db02c715d7441d63e774d8c3f34d40c06###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/flowable/FlowablePublishMulticast.java###/FlowablePublishMulticast.java###io.reactivex.internal.operators.flowable.FlowablePublishMulticast.MulticastProcessor###dispose:###queue.clear();###q###queue###200:17:200:31
03311a922b1a956fd674b243d5169ecb9c84be43###/ReactiveX_RxJava/rxjava-core/src/main/java/rx/internal/operators/OperatorMerge.java###/OperatorMerge.java###rx.internal.operators.OperatorMerge.MergeSubscriber###drainQueuesIfNeeded:###if(!releaseEmitLock())###moreToDrain###releaseEmitLock()###248:25:250:26
be8d144e65cf8dc66661ec4451e7b717b52a70b7###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OperatorWindowWithSize.java###/OperatorWindowWithSize.java###rx.internal.operators.OperatorWindowWithSize.ExactSubscriber###onCompleted:###window.onCompleted();###w###window###135:17:135:38
308255868f25e8f805d4e8b3f9a9d3571636b817###/ReactiveX_RxJava/src/main/java/rx/internal/util/RxRingBuffer.java###/RxRingBuffer.java###rx.internal.util.RxRingBuffer###poll:###o=queue.poll();###q###queue###384:9:384:26
50ea46a344485df787d938a954cf871f36abc44a###/ReactiveX_RxJava/src/main/java/rx/internal/schedulers/NewThreadWorker.java###/NewThreadWorker.java###rx.internal.schedulers.NewThreadWorker###purgeExecutors:###Iterator<ScheduledThreadPoolExecutor>it=EXECUTORS.keySet().iterator();###map###EXECUTORS###116:13:116:86
98d0b7f2ec63544890d029282dc2ff3f611b987a###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/flowable/FlowablePublish.java###/FlowablePublish.java###io.reactivex.internal.operators.flowable.FlowablePublish.InnerSubscriber###request:long ###parent.dispatch();###p###parent###683:21:683:39
f9a972272ab9cf5265c652efa8e8eda9d465008d###/ReactiveX_RxJava/rxjava-core/src/main/java/rx/internal/operators/OperatorMerge.java###/OperatorMerge.java###rx.internal.operators.OperatorMerge.MergeSubscriber###drainQueuesIfNeeded:###if(!releaseEmitLock())###moreToDrain###releaseEmitLock()###247:25:249:26
48516372b9770a0f442bea06f7f93b3d27d6ed32###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/flowable/FlowableGenerate.java###/FlowableGenerate.java###io.reactivex.internal.operators.flowable.FlowableGenerate.GeneratorSubscription###cancel:###dispose(state);###s###state###149:21:149:36
f59ce00934a65b880cbe5b7e06436f85e73187d9###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/flowable/FlowableSequenceEqual.java###/FlowableSequenceEqual.java###io.reactivex.internal.operators.flowable.FlowableSequenceEqual.EqualCoordinator###drain:###v2=q2.poll();###b###v2###174:25:174:40
000a174d87a901135f9665d3b11f3627fd2dc4ed###/ReactiveX_RxJava/src/main/java/io/reactivex/observables/BlockingObservable.java###/BlockingObservable.java###io.reactivex.observables.BlockingObservable###last:###returnlastOption().get();###o###lastOption()###179:9:179:35
13df09b14d97820d5becb6d9ceacfeff5091a8e3###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/flowable/FlowableRange.java###/FlowableRange.java###io.reactivex.internal.operators.flowable.FlowableRange.RangeSubscription###fastpath:###actual.onNext((int)i);###a###actual###74:17:74:39
77c5643180ab875b3fa7f4e61ce9191014b85f38###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OperatorPublish.java###/OperatorPublish.java###rx.internal.operators.OperatorPublish.RequestHandler###drainQueue:OriginSubscriber<T> ###Objecto=originSubscriber.buffer.poll();###localBuffer###originSubscriber.buffer###353:25:353:67
234a4c4672da9f26492c48f48abe03c0573c1b89###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OperatorConcat.java###/OperatorConcat.java###rx.internal.operators.OperatorConcat.ConcatSubscriber###requestFromChild:long ###longprevious=BackpressureUtils.getAndAddRequest(requested,n);###requestedField###requested###117:13:117:78
92b27f2f4a2aea910c56092c9c4f7176508f6ad5###/ReactiveX_RxJava/src/main/java/io/reactivex/plugins/RxJavaPlugins.java###/RxJavaPlugins.java###io.reactivex.plugins.RxJavaPlugins###onComputationScheduler:Scheduler ###returnonComputationHandler.apply(defaultScheduler);###f###onComputationHandler###106:9:106:61
3061b7c8fa8ec79bbbabd60d7056de3861509c9a###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/OperatorOnBackpressureBuffer.java###/OperatorOnBackpressureBuffer.java###io.reactivex.internal.operators.OperatorOnBackpressureBuffer.BackpressureBufferSubscriber###onNext:T ###onError(newIllegalStateException("Bufferisfull?!"));###ex###newIllegalStateException("Bufferisfull?!")###96:17:96:72
0a455d50b9c3f1dd7f4b87804c0f5992a26eee86###/ReactiveX_RxJava/src/main/java/io/reactivex/Observable.java###/Observable.java###io.reactivex.Observable###toMultimap:Function<? super T,? extends K> ###returntoMultimap(keySelector,v->v,ArrayList::new);###valueSelector###v->v###2235:9:2235:64
a856572327528ee05c1d1ab05426343aa0c5224b###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/subscriptions/DeferredScalarSubscription.java###/DeferredScalarSubscription.java###io.reactivex.internal.subscriptions.DeferredScalarSubscription###complete:T ###actual.onNext(v);###a###actual###106:17:106:34
491e615d4d1a11e583b8c7bb22ea86b49794dc8b###/ReactiveX_RxJava/src/main/java/rx/schedulers/ExecutorScheduler.java###/ExecutorScheduler.java###rx.schedulers.ExecutorScheduler.ExecutorSchedulerWorker###run:###queue.poll().run();###sa###queue.poll()###99:17:99:36
3634c92cb6a8199b8022ffb3bd8e2a65da9c18f0###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/flowable/FlowableSwitchMap.java###/FlowableSwitchMap.java###io.reactivex.internal.operators.flowable.FlowableSwitchMap.SwitchMapInnerSubscriber###onComplete:###parent.drain();###p###parent###403:17:403:32
9f4a65711f4c220ee128c63bd1b44e21e4ea3fb7###/ReactiveX_RxJava/src/main/java/io/reactivex/subjects/BehaviorSubject.java###/BehaviorSubject.java###io.reactivex.subjects.BehaviorSubject.BehaviorSubscription###emitFirst:###index=state.index;###s###state###369:21:369:41
9be3552e39b193e9104f832d56fe0fefee5a81e0###/ReactiveX_RxJava/rxjava-core/src/test/java/rx/ConcatTests.java###/ConcatTests.java###rx.ConcatTests###testConcatCovariance3:###Observable<Media>o2=Observable.from(newMedia(),newHorrorMovie());###horrorMovie2###newHorrorMovie()###106:9:106:80
92b27f2f4a2aea910c56092c9c4f7176508f6ad5###/ReactiveX_RxJava/src/main/java/io/reactivex/plugins/RxJavaPlugins.java###/RxJavaPlugins.java###io.reactivex.plugins.RxJavaPlugins###onIOScheduler:Scheduler ###returnonIOHandler.apply(defaultScheduler);###f###onIOHandler###131:9:131:52
2423a17b5c3e5917a1960ffea8f5ecb11ac373a6###/ReactiveX_RxJava/src/main/java/rx/observers/TestObserver.java###/TestObserver.java###rx.observers.TestObserver###assertReceivedOnNext:List<T> ###thrownewAssertionError("Valueatindex:"+i+"expectedtobe[null]butwas:["+onNextEvents.get(i)+"]");###actual###onNextEvents.get(i)###123:21:123:136
ff282b9647d0accc0cb55780c9bdb97f4ed03053###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/observable/ObservableRedo.java###/ObservableRedo.java###io.reactivex.internal.operators.observable.ObservableRedo###subscribeActual:Observer<? super T> ###action.subscribe(newToNotificationObserver<Object>(newConsumer<Notification<Object>>(){@Overridepublicvoidaccept(Notification<Object>o){parent.handle(o);}}));###actionObserver###newToNotificationObserver<Object>(newConsumer<Notification<Object>>(){@Overridepublicvoidaccept(Notification<Object>o){parent.handle(o);}})###55:9:60:13
000a174d87a901135f9665d3b11f3627fd2dc4ed###/ReactiveX_RxJava/src/main/java/io/reactivex/observables/nbp/NbpBlockingObservable.java###/NbpBlockingObservable.java###io.reactivex.observables.nbp.NbpBlockingObservable###last:###returnlastOption().get();###o###lastOption()###174:9:174:35
a856572327528ee05c1d1ab05426343aa0c5224b###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/subscriptions/DeferredScalarSubscription.java###/DeferredScalarSubscription.java###io.reactivex.internal.subscriptions.DeferredScalarSubscription###request:long ###actual.onNext(value);###a###actual###74:25:74:46
2649b68a6ab799cb666a8246d14ed86ee53a62d5###/ReactiveX_RxJava/src/test/java/rx/internal/operators/OperatorMergeMaxConcurrentTest.java###/OperatorMergeMaxConcurrentTest.java###rx.internal.operators.OperatorMergeMaxConcurrentTest###testSimpleOneLessAsyncLoop:###for(inti=0;i<200;i++)###max###200###221:9:223:10
9be3552e39b193e9104f832d56fe0fefee5a81e0###/ReactiveX_RxJava/rxjava-core/src/test/java/rx/ConcatTests.java###/ConcatTests.java###rx.ConcatTests###testConcatCovariance2:###Observable<Media>o1=Observable.from(newHorrorMovie(),newMovie(),newMedia());###movie###newMovie()###93:9:93:93
4dbd7351c9b514e2661930c2a9dea222cd91748e###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/single/SingleFlatMap.java###/SingleFlatMap.java###io.reactivex.internal.operators.single.SingleFlatMap###subscribeActual:SingleSubscriber<? super R> ###source.subscribe(newSingleFlatMapCallback<T,R>(subscriber,mapper));###parent###newSingleFlatMapCallback<T,R>(subscriber,mapper)###32:9:32:79
852e0529bbfb366aa8ae3438ec54f887ea30cd6c###/ReactiveX_RxJava/src/main/java/io/reactivex/rxjava3/internal/operators/observable/ObservableTakeLastTimed.java###/ObservableTakeLastTimed.java###io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed.TakeLastTimedObserver###drain:###if((Long)ts<scheduler.now(unit)-time)###timestampLimit###scheduler.now(unit)-time###174:17:176:18
7e7b223ccf4af4ef594677f04e731998914190b9###/ReactiveX_RxJava/src/main/java/io/reactivex/rxjava3/observers/BaseTestConsumer.java###/BaseTestConsumer.java###io.reactivex.rxjava3.observers.BaseTestConsumer###assertValueAt:int Predicate<T> ###if(valuePredicate.test(values.get(index)))###v###values.get(index)###377:13:379:14
b57169babb184d0adc2fa28cf0425c4f0c1f8555###/ReactiveX_RxJava/src/main/java/io/reactivex/rxjava3/core/Single.java###/Single.java###io.reactivex.rxjava3.core.Single###ambArray:SingleSource<? extends T>[] ###returnwrap((SingleSource<T>)sources[0]);###source###(SingleSource<T>)sources[0]###163:13:163:54
9be3552e39b193e9104f832d56fe0fefee5a81e0###/ReactiveX_RxJava/rxjava-core/src/test/java/rx/ConcatTests.java###/ConcatTests.java###rx.ConcatTests###testConcatCovariance2:###Observable<Media>o2=Observable.from(newMedia(),newHorrorMovie());###horrorMovie2###newHorrorMovie()###94:9:94:80
6c19a7b6e37326a94b9a5e8fcc716fe67160724e###/ReactiveX_RxJava/src/perf/java/rx/SubscribingPerf.java###/SubscribingPerf.java###rx.SubscribingPerf###rangeDirect:Blackhole ###range.subscribe(newDirectSubscriber<Integer>(Long.MAX_VALUE,bh));###subscriber###newDirectSubscriber<Integer>(Long.MAX_VALUE,bh)###56:9:56:76
7a9ae10e980c33fb7a8fee447b917cb8b8f03b1d###/ReactiveX_RxJava/rxjava-core/src/main/java/rx/internal/operators/OnSubscribeRange.java###/OnSubscribeRange.java###rx.internal.operators.OnSubscribeRange.RangeProducer###request:int ###inte=Math.min(numLeft,requested);###r###requested###80:25:80:62
c925e860c01c30edc15c59c592c1d5e9b9777a90###/ReactiveX_RxJava/src/test/java/rx/internal/operators/OperatorUnsubscribeOnTest.java###/OperatorUnsubscribeOnTest.java###rx.internal.operators.OperatorUnsubscribeOnTest###testUnsubscribeWhenSubscribeOnAndUnsubscribeOnAreOnDifferentThreads:###assertTrue(unsubscribeThread==UI_EVENT_LOOP.getThread());###uiThread###UI_EVENT_LOOP.getThread()###113:13:113:72
92b27f2f4a2aea910c56092c9c4f7176508f6ad5###/ReactiveX_RxJava/src/main/java/io/reactivex/plugins/RxJavaPlugins.java###/RxJavaPlugins.java###io.reactivex.plugins.RxJavaPlugins###onSchedule:Runnable ###returnonScheduleHandler.apply(run);###f###onScheduleHandler###140:9:140:45
308255868f25e8f805d4e8b3f9a9d3571636b817###/ReactiveX_RxJava/src/main/java/rx/internal/util/RxRingBuffer.java###/RxRingBuffer.java###rx.internal.util.RxRingBuffer###peek:###o=terminalState;###ts###terminalState###413:13:413:31
b57169babb184d0adc2fa28cf0425c4f0c1f8555###/ReactiveX_RxJava/src/main/java/io/reactivex/rxjava3/core/Maybe.java###/Maybe.java###io.reactivex.rxjava3.core.Maybe###mergeArray:MaybeSource<? extends T>[] ###returnRxJavaPlugins.onAssembly(newMaybeToFlowable<T>((MaybeSource<T>)sources[0]));###source###(MaybeSource<T>)sources[0]###1286:13:1286:97
71bfcae35b8052c21e8564c417ae0a870eb5ddb8###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/observable/ObservableTakeLastTimed.java###/ObservableTakeLastTimed.java###io.reactivex.internal.operators.observable.ObservableTakeLastTimed.TakeLastTimedObserver###drain:###if((Long)ts<scheduler.now(unit)-time)###timestampLimit###scheduler.now(unit)-time###174:17:176:18
98d0b7f2ec63544890d029282dc2ff3f611b987a###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/flowable/FlowablePublish.java###/FlowablePublish.java###io.reactivex.internal.operators.flowable.FlowablePublish.InnerSubscriber###dispose:###parent.remove(this);###p###parent###750:21:750:41
df94c0d23b8f06ec861c2533313555cc6f8afdcb###/ReactiveX_RxJava/src/main/java/io/reactivex/Scheduler.java###/Scheduler.java###io.reactivex.Scheduler.Worker###schedulePeriodically:Runnable long long TimeUnit ###first.replace(schedule(newPeriodicTask(firstStartInNanoseconds,decoratedRun,firstNowNanoseconds,sd,periodInNanoseconds),initialDelay,unit));###d###schedule(newPeriodicTask(firstStartInNanoseconds,decoratedRun,firstNowNanoseconds,sd,periodInNanoseconds),initialDelay,unit)###238:13:239:64
4a6441ce8d49ed9084ca968a7163dbf3b759827b###/ReactiveX_RxJava/src/main/java/rx/Single.java###/Single.java###rx.Single.merge.create.new OnSubscribe<T>###call:SingleSubscriber<? super T> ###source.subscribe(newSingleSubscriber<Single<?extendsT>>(){@OverridepublicvoidonSuccess(Single<?extendsT>innerSingle){innerSingle.subscribe(child);}@OverridepublicvoidonError(Throwableerror){child.onError(error);}});###parent###newSingleSubscriber<Single<?extendsT>>(){@OverridepublicvoidonSuccess(Single<?extendsT>innerSingle){innerSingle.subscribe(child);}@OverridepublicvoidonError(Throwableerror){child.onError(error);}}###674:17:686:20
6c19a7b6e37326a94b9a5e8fcc716fe67160724e###/ReactiveX_RxJava/src/perf/java/rx/SubscribingPerf.java###/SubscribingPerf.java###rx.SubscribingPerf###justDirectUnsafe:Blackhole ###just.unsafeSubscribe(newDirectSubscriber<Integer>(Long.MAX_VALUE,bh));###subscriber###newDirectSubscriber<Integer>(Long.MAX_VALUE,bh)###71:9:71:81
000a174d87a901135f9665d3b11f3627fd2dc4ed###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/nbp/NbpOnSubscribeArraySource.java###/NbpOnSubscribeArraySource.java###io.reactivex.internal.operators.nbp.NbpOnSubscribeArraySource###accept:NbpSubscriber<? super T> ###s.onNext(a[i]);###value###a[i]###40:13:40:28
ba7f9103f2706c162f0a27d4ca4be35acf3e78fa###/ReactiveX_RxJava/src/perf/java/rx/jmh/InputWithIncrementingInteger.java###/InputWithIncrementingInteger.java###rx.jmh.InputWithIncrementingInteger.setup.new Iterable<Integer>.iterator.new Iterator<Integer>###hasNext:###returni<getSize();###size###getSize()###67:25:67:46
56eb4bd253c5a7a7211bb984700eb4515107e857###/ReactiveX_RxJava/src/main/java/rx/subscriptions/CompositeSubscription.java###/CompositeSubscription.java###rx.subscriptions.CompositeSubscription###unsubscribe:###unsubscribeFromAll(subscriptions);###unsubscribe###subscriptions###126:9:126:43
318bf43269c8534d1790b7968251f8f5eaed02d4###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/schedulers/ScheduledRunnable.java###/ScheduledRunnable.java###io.reactivex.internal.schedulers.ScheduledRunnable###isDisposed:###returnget(FUTURE_INDEX)==DISPOSED;###o###get(FUTURE_INDEX)###130:9:130:46
419c0fe6d97a88941c68b30cc333274784b095f1###/ReactiveX_RxJava/rxjava-contrib/rxjava-joins/src/main/java/rx/joins/Plan1.java###/Plan1.java###rx.joins.Plan1.activate.activePlan.new ActivePlan1<T1>.new Action0###call:###firstJoinObserver.removeActivePlan(self.get());###ap###self.get()###71:25:71:72
30b9296d7df4d413f5fb433bfcf2c70c5c0c9768###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OperatorBufferWithTime.java###/OperatorBufferWithTime.java###rx.internal.operators.OperatorBufferWithTime###call:Subscriber<? super List<T>> ###ExactSubscriberbsub=newExactSubscriber(newSerializedSubscriber<List<T>>(child),inner);###serialized###newSerializedSubscriber<List<T>>(child)###78:13:78:105
9be3552e39b193e9104f832d56fe0fefee5a81e0###/ReactiveX_RxJava/rxjava-core/src/test/java/rx/ConcatTests.java###/ConcatTests.java###rx.ConcatTests###testConcatCovariance3:###Observable<Movie>o1=Observable.from(newHorrorMovie(),newMovie());###horrorMovie1###newHorrorMovie()###105:9:105:80
f97c50dadcb40a0f6f41734087a1c52d9df55d08###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/subscribers/observable/DeferredScalarObserver.java###/DeferredScalarObserver.java###io.reactivex.internal.subscribers.observable.DeferredScalarObserver###poll:###returnvalue;###v###value###101:13:101:26
cbc1c6b58f2148f47f5e4a1cc8d2d060909dc75c###/ReactiveX_RxJava/rxjava-core/src/main/java/rx/schedulers/TrampolineScheduler.java###/TrampolineScheduler.java###rx.schedulers.TrampolineScheduler.InnerCurrentThreadScheduler###enqueue:Action1<Scheduler.Inner> long ###queue.add(newTimedAction(action,execTime,counter.incrementAndGet()));###timedAction###newTimedAction(action,execTime,counter.incrementAndGet())###95:13:95:85
43e5299a956febe9dade523bfa9d985482f31a1a###/ReactiveX_RxJava/src/main/java/io/reactivex/Observable.java###/Observable.java###io.reactivex.Observable###toMultimap:Function<? super T,? extends K> Function<? super T,? extends V> ###returntoMultimap(keySelector,valueSelector,HashMap::new,k->newArrayList<>());###mapSupplier###HashMap::new###2219:9:2219:93
43e5299a956febe9dade523bfa9d985482f31a1a###/ReactiveX_RxJava/src/test/java/io/reactivex/internal/operators/OperatorToMultimapTest.java###/OperatorToMultimapTest.java###io.reactivex.internal.operators.OperatorToMultimapTest###testToMultimapWithThrowingCollectionFactory:###Observable<Map<Integer,Collection<String>>>mapped=source.toMultimap(lengthFunc,identity,HashMap::new,collectionFactory);###mapSupplier###HashMap::new###231:9:232:60
11e1bd0e6cdb65ae0329885ca25c791e0cc88ee7###/ReactiveX_RxJava/rxjava-core/src/main/java/rx/operators/OperationAmb.java###/OperationAmb.java###rx.operators.OperationAmb.AmbObserver###isSelected:###returnchoice.get()==index;###ch###choice.get()###187:13:187:42
9be3552e39b193e9104f832d56fe0fefee5a81e0###/ReactiveX_RxJava/rxjava-core/src/test/java/rx/ConcatTests.java###/ConcatTests.java###rx.ConcatTests.testConcatCovariance4.o1.create.new OnSubscribe<Movie>###call:Subscriber<? super Movie> ###o.onNext(newMovie());###movie###newMovie()###124:17:124:39
b9af588a2cf75d57e85c4f8677943eedbb03f03c###/ReactiveX_RxJava/src/test/java/rx/internal/operators/DeferredScalarSubscriberTest.java###/DeferredScalarSubscriberTest.java###rx.internal.operators.DeferredScalarSubscriberTest###emissionRequestRace2:###for(inti=0;i<10000;i++)###m###10000###347:13:386:14
c38a7806224772d508a8302c0fd3ae85d0ea5957###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OperatorOnBackpressureBlock.java###/OperatorOnBackpressureBlock.java###rx.internal.operators.OperatorOnBackpressureBlock.BlockingSubscriber###drain:###child.onError(exception);###e###exception###114:37:114:62
9be3552e39b193e9104f832d56fe0fefee5a81e0###/ReactiveX_RxJava/rxjava-core/src/test/java/rx/ConcatTests.java###/ConcatTests.java###rx.ConcatTests###testConcatCovariance:###Observable<Media>o1=Observable.<Media>from(newHorrorMovie(),newMovie());###movie###newMovie()###81:9:81:88
cbc1c6b58f2148f47f5e4a1cc8d2d060909dc75c###/ReactiveX_RxJava/rxjava-core/src/main/java/rx/schedulers/ExecutorScheduler.java###/ExecutorScheduler.java###rx.schedulers.ExecutorScheduler.InnerExecutorScheduler###schedule:Action1<Scheduler.Inner> ###innerSubscription.set(Subscriptions.from(f));###s###Subscriptions.from(f)###171:17:171:62
9be3552e39b193e9104f832d56fe0fefee5a81e0###/ReactiveX_RxJava/rxjava-core/src/test/java/rx/ConcatTests.java###/ConcatTests.java###rx.ConcatTests###testConcatCovariance4:###Observable<Media>o2=Observable.from(newMedia(),newHorrorMovie());###media###newMedia()###130:9:130:80
835e4f2a007ae11f9fbb4b04342d6a56df9c2709###/ReactiveX_RxJava/src/main/java/io/reactivex/subjects/nbp/NbpAsyncSubject.java###/NbpAsyncSubject.java###io.reactivex.subjects.nbp.NbpAsyncSubject###hasComplete:###returnstate.subscribers.get()==State.TERMINATED&&!NotificationLite.isError(state.get());###o###state.get()###126:9:126:102
b86e1da5d1266509907a20fc5bfef721a22c2926###/ReactiveX_RxJava/rxjava-core/src/main/java/rx/Observable.java###/Observable.java###rx.Observable.lift.new Observable<R>.new OnSubscribe<R>###call:Subscriber<? super R> ###onSubscribe.call(hook.onLift(lift).call(o));###st###hook.onLift(lift).call(o)###160:21:160:65
b57169babb184d0adc2fa28cf0425c4f0c1f8555###/ReactiveX_RxJava/src/main/java/io/reactivex/rxjava3/core/Maybe.java###/Maybe.java###io.reactivex.rxjava3.core.Maybe###ambArray:MaybeSource<? extends T>[] ###returnwrap((MaybeSource<T>)sources[0]);###source###(MaybeSource<T>)sources[0]###157:13:157:53
308255868f25e8f805d4e8b3f9a9d3571636b817###/ReactiveX_RxJava/src/main/java/rx/internal/util/RxRingBuffer.java###/RxRingBuffer.java###rx.internal.util.RxRingBuffer###peek:###o=queue.peek();###q###queue###411:9:411:26
81fe956dc0100dc5b0b5101669a8c326f930f93e###/ReactiveX_RxJava/src/main/java/io/reactivex/processors/ReplayProcessor.java###/ReplayProcessor.java###io.reactivex.processors.ReplayProcessor.SizeBoundReplayBuffer###getValues:T[] ###Node<Object>next=h.get();###h0###h###826:21:826:49
158d9d9c48654f5c4cb8fa2c5602c06292cdefa1###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OnSubscribeRedo.java###/OnSubscribeRedo.java###rx.internal.operators.OnSubscribeRedo.call.subscribeToSource.new Action0.call.terminalDelegatingSubscriber.new Subscriber<T>###setProducer:Producer ###producer.request(consumerCapacity.get());###c###consumerCapacity.get()###235:25:235:66
b7086efb4a3cf53640075044c98ec3edc906f746###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/schedulers/NewThreadWorker.java###/NewThreadWorker.java###io.reactivex.internal.schedulers.NewThreadWorker###schedulePeriodicallyDirect:Runnable long long TimeUnit ###ScheduledDirectPeriodicTasktask=newScheduledDirectPeriodicTask(RxJavaPlugins.onSchedule(run));###decoratedRun###RxJavaPlugins.onSchedule(run)###89:9:89:107
92b27f2f4a2aea910c56092c9c4f7176508f6ad5###/ReactiveX_RxJava/src/main/java/io/reactivex/plugins/RxJavaPlugins.java###/RxJavaPlugins.java###io.reactivex.plugins.RxJavaPlugins###onSubscribe:Subscriber<T> ###return(Subscriber)((Function)onSubscribeHandler).apply(subscriber);###f###onSubscribeHandler###154:9:154:77
d7037b5c5270c0f6af0381af03d60fc4f916141d###/ReactiveX_RxJava/rxjava-contrib/rxjava-android/src/main/java/rx/operators/OperatorWeakBinding.java###/OperatorWeakBinding.java###rx.operators.OperatorWeakBinding.WeakSubscriber###onNext:T ###sub!=null&&boundRef.get()!=null###target###boundRef.get()###58:17:58:54
92a255c259ef3451c37f0294de0f53eec1f4d727###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OperatorSwitch.java###/OperatorSwitch.java###rx.internal.operators.OperatorSwitch.SwitchSubscriber###error:Throwable int ###queue.add(nl.error(e));###q###queue###213:21:213:44
3634c92cb6a8199b8022ffb3bd8e2a65da9c18f0###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/flowable/FlowableSwitchMap.java###/FlowableSwitchMap.java###io.reactivex.internal.operators.flowable.FlowableSwitchMap.SwitchMapInnerSubscriber###onError:Throwable ###parent.drain();###p###parent###393:17:393:32
308255868f25e8f805d4e8b3f9a9d3571636b817###/ReactiveX_RxJava/src/main/java/rx/internal/util/RxRingBuffer.java###/RxRingBuffer.java###rx.internal.util.RxRingBuffer###isEmpty:###returnqueue.isEmpty();###q###queue###375:9:375:32
419c0fe6d97a88941c68b30cc333274784b095f1###/ReactiveX_RxJava/rxjava-contrib/rxjava-joins/src/main/java/rx/joins/Plan2.java###/Plan2.java###rx.joins.Plan2.activate.activePlan.new ActivePlan2<T1,T2>.new Action0###call:###firstJoinObserver.removeActivePlan(self.get());###ap###self.get()###66:25:66:72
2423a17b5c3e5917a1960ffea8f5ecb11ac373a6###/ReactiveX_RxJava/src/main/java/rx/observers/SerializedObserver.java###/SerializedObserver.java###rx.observers.SerializedObserver###onNext:T ###queue=newFastList();###list###queue###138:21:138:44
000a174d87a901135f9665d3b11f3627fd2dc4ed###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/PublisherArraySource.java###/PublisherArraySource.java###io.reactivex.internal.operators.PublisherArraySource.ConditionalArraySourceSubscription###request:long ###s.onNext(a[j]);###t###a[j]###147:29:147:44
77c5643180ab875b3fa7f4e61ce9191014b85f38###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OperatorPublish.java###/OperatorPublish.java###rx.internal.operators.OperatorPublish.State###removeSubscriber:Subscriber<? super T> ###ss.remove(subscriber);###subs###ss###264:13:264:35
9521512c0f0c980f074ec5b0fbfe954b00c56f1d###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/schedulers/ScheduledRunnable.java###/ScheduledRunnable.java###io.reactivex.internal.schedulers.ScheduledRunnable###dispose:###((Future<?>)o).cancel(get(THREAD_INDEX)!=Thread.currentThread());###async###get(THREAD_INDEX)!=Thread.currentThread()###107:21:107:88
9be3552e39b193e9104f832d56fe0fefee5a81e0###/ReactiveX_RxJava/rxjava-core/src/test/java/rx/ConcatTests.java###/ConcatTests.java###rx.ConcatTests###testConcatCovariance3:###Observable<Media>o2=Observable.from(newMedia(),newHorrorMovie());###media###newMedia()###106:9:106:80
419c0fe6d97a88941c68b30cc333274784b095f1###/ReactiveX_RxJava/rxjava-contrib/rxjava-joins/src/main/java/rx/joins/Plan3.java###/Plan3.java###rx.joins.Plan3.activate.activePlan.new ActivePlan3<T1,T2,T3>.new Action0###call:###firstJoinObserver.removeActivePlan(self.get());###ap###self.get()###68:25:68:72
6c19a7b6e37326a94b9a5e8fcc716fe67160724e###/ReactiveX_RxJava/src/perf/java/rx/SubscribingPerf.java###/SubscribingPerf.java###rx.SubscribingPerf###justUsualUnsafe:Blackhole ###just.unsafeSubscribe(newUsualSubscriber<Integer>(Long.MAX_VALUE,bh));###subscriber###newUsualSubscriber<Integer>(Long.MAX_VALUE,bh)###81:9:81:80
92b27f2f4a2aea910c56092c9c4f7176508f6ad5###/ReactiveX_RxJava/src/main/java/io/reactivex/plugins/RxJavaPlugins.java###/RxJavaPlugins.java###io.reactivex.plugins.RxJavaPlugins###onSingleScheduler:Scheduler ###returnonSingleHandler.apply(defaultScheduler);###f###onSingleHandler###144:9:144:56
b28007ee8f236ffbad6d1fc21ff5867e14e3d75b###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OperatorPublish.java###/OperatorPublish.java###rx.internal.operators.OperatorPublish.PublishSubscriber###dispatch:###if(checkTerminated(terminalEvent,v==null))###term###terminalEvent###514:29:517:30
7a9ae10e980c33fb7a8fee447b917cb8b8f03b1d###/ReactiveX_RxJava/rxjava-core/src/main/java/rx/internal/operators/OnSubscribeRange.java###/OnSubscribeRange.java###rx.internal.operators.OnSubscribeRange.RangeProducer###request:int ###intstopAt=e+index;###idx###index###82:25:82:48
f8373d3b9bd94571bdfd9d5cac53d3ccd8a036a8###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OperatorConcat.java###/OperatorConcat.java###rx.internal.operators.OperatorConcat.ConcatSubscriber###requestFromChild:long ###currentSubscriber.requestMore(n);###actualSubscriber###currentSubscriber###129:17:129:50
f410739c423dfdcb694d7573ccf7755706736094###/ReactiveX_RxJava/src/test/java/rx/BackpressureTests.java###/BackpressureTests.java###rx.BackpressureTests###testOnBackpressureDrop:###System.out.println("testOnBackpressureDrop=>Received:"+ts.getOnNextEvents().size()+"Emitted:"+c.get()+"Lastvalue:"+ts.getOnNextEvents().get(NUM-1));###onNextEvents###ts.getOnNextEvents()###420:9:420:178
a856572327528ee05c1d1ab05426343aa0c5224b###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/subscriptions/DeferredScalarSubscription.java###/DeferredScalarSubscription.java###io.reactivex.internal.subscriptions.DeferredScalarSubscription###poll:###returnvalue;###v###value###133:13:133:26
3c46285619adc057f55a49076092bd0aa0beaf9e###/ReactiveX_RxJava/src/test/java/rx/internal/operators/OperatorObserveOnTest.java###/OperatorObserveOnTest.java###rx.internal.operators.OperatorObserveOnTest###testOnErrorCutsAheadOfOnNext:###assertTrue(ts.getOnNextEvents().size()==ts.getOnNextEvents().get(ts.getOnNextEvents().size()-1)+1);###onNextEvents###ts.getOnNextEvents()###650:9:650:114
000a174d87a901135f9665d3b11f3627fd2dc4ed###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/PublisherArraySource.java###/PublisherArraySource.java###io.reactivex.internal.operators.PublisherArraySource.ArraySourceSubscription###request:long ###s.onNext(a[j]);###t###a[j]###77:29:77:44
ba7f9103f2706c162f0a27d4ca4be35acf3e78fa###/ReactiveX_RxJava/src/perf/java/rx/jmh/InputWithIncrementingInteger.java###/InputWithIncrementingInteger.java###rx.jmh.InputWithIncrementingInteger###setup:Blackhole ###observable=Observable.range(0,getSize());###size###getSize()###43:9:43:53
e505cee3972180f6b39215995df595e8b968a70c###/ReactiveX_RxJava/rxjava-core/src/main/java/rx/subjects/BehaviorSubject.java###/BehaviorSubject.java###rx.subjects.BehaviorSubject.create.onSubscribe.getOnSubscribeFunc.new Action1<SubjectObserver<? super T>>###call:SubjectObserver<? super T> ###lastNotification.get().accept(o);###n###lastNotification.get()###126:25:126:58
216082ce21b67516bc3bef015e3acaba7d28fc06###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/nbp/NbpOperatorFlatMap.java###/NbpOperatorFlatMap.java###io.reactivex.internal.operators.nbp.NbpOperatorFlatMap.NbpFlatMapSubscriber###tryTerminate:###actual.onError(getError(e));###a###actual###180:21:180:49
a856572327528ee05c1d1ab05426343aa0c5224b###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/subscribers/observable/DeferredScalarObserver.java###/DeferredScalarObserver.java###io.reactivex.internal.subscribers.observable.DeferredScalarObserver###complete:R ###actual.onNext(value);###a###actual###101:9:101:30
75ffcbb01cae042f5b715060622154794f39a690###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OperatorReplay.java###/OperatorReplay.java###rx.internal.operators.OperatorReplay.UnboundedReplayBuffer###replay:InnerProducer<T> ###output.child.onError(OnErrorThrowable.addValueAsLastCause(err,nl.getValue(o)));###child###output.child###894:29:894:109
6c19a7b6e37326a94b9a5e8fcc716fe67160724e###/ReactiveX_RxJava/src/perf/java/rx/SubscribingPerf.java###/SubscribingPerf.java###rx.SubscribingPerf###justStartedUnsafe:Blackhole ###just.unsafeSubscribe(newStartedSubscriber<Integer>(Long.MAX_VALUE,bh));###subscriber###newStartedSubscriber<Integer>(Long.MAX_VALUE,bh)###76:9:76:82
3bfc275ca2f8d14a67305bbadb7bbc6315205250###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/parallel/ParallelFromPublisher.java###/ParallelFromPublisher.java###io.reactivex.internal.operators.parallel.ParallelFromPublisher.ParallelDispatcher###setupSubscribers:###finalintm=subscribers.length;###subs###subscribers###148:13:148:46
cba11017c0c6ee6091576485320d04034a77be3b###/ReactiveX_RxJava/rxjava-core/src/main/java/rx/subjects/BehaviorSubject.java###/BehaviorSubject.java###rx.subjects.BehaviorSubject.create.onSubscribe.getOnSubscribeFunc.new Action1<SubjectObserver<? super T>>###call:SubjectObserver<? super T> ###lastNotification.get().accept(o);###n###lastNotification.get()###125:25:125:58
6c19a7b6e37326a94b9a5e8fcc716fe67160724e###/ReactiveX_RxJava/src/perf/java/rx/SubscribingPerf.java###/SubscribingPerf.java###rx.SubscribingPerf###justStarted:Blackhole ###just.subscribe(newStartedSubscriber<Integer>(Long.MAX_VALUE,bh));###subscriber###newStartedSubscriber<Integer>(Long.MAX_VALUE,bh)###46:9:46:76
43e5299a956febe9dade523bfa9d985482f31a1a###/ReactiveX_RxJava/src/main/java/io/reactivex/Observable.java###/Observable.java###io.reactivex.Observable###toMultimap:Function<? super T,? extends K> Function<? super T,? extends V> ###returntoMultimap(keySelector,valueSelector,HashMap::new,k->newArrayList<>());###collectionFactory###k->newArrayList<>()###2219:9:2219:93
cf154b1a07dce719cf36d2977e81c06b5cd3cd8c###/ReactiveX_RxJava/src/main/java/rx/plugins/RxJavaHooks.java###/RxJavaHooks.java###rx.plugins.RxJavaHooks###onError:Throwable ###current.getUncaughtExceptionHandler().uncaughtException(current,ex);###handler###current.getUncaughtExceptionHandler()###244:9:244:78
53c31cde6906bad5825b2b65c91c1d268a6a32b5###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OperatorObserveOn.java###/OperatorObserveOn.java###rx.internal.operators.OperatorObserveOn.ObserveOnSubscriber###call:###longemitted=0L;###currentEmission###emitted###183:13:183:31
c507577566e7b3a548d2f8256ca2f144ac14a08c###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/flowable/FlowableInterval.java###/FlowableInterval.java###io.reactivex.internal.operators.flowable.FlowableInterval###subscribeActual:Subscriber<? super Long> ###Disposabled=scheduler.schedulePeriodicallyDirect(is,initialDelay,period,unit);###sch###scheduler###46:9:46:93
b6ea9eba56435727fc04af1081067a766024e94f###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/subscriptions/SubscriptionArbiter.java###/SubscriptionArbiter.java###io.reactivex.internal.subscriptions.SubscriptionArbiter###setSubscription:Subscription ###s.request(requested);###r###requested###121:13:121:34
9be3552e39b193e9104f832d56fe0fefee5a81e0###/ReactiveX_RxJava/rxjava-core/src/test/java/rx/ConcatTests.java###/ConcatTests.java###rx.ConcatTests###testConcatCovariance:###Observable<Media>o1=Observable.<Media>from(newHorrorMovie(),newMovie());###horrorMovie1###newHorrorMovie()###81:9:81:88
92b27f2f4a2aea910c56092c9c4f7176508f6ad5###/ReactiveX_RxJava/src/main/java/io/reactivex/plugins/RxJavaPlugins.java###/RxJavaPlugins.java###io.reactivex.plugins.RxJavaPlugins###initComputationScheduler:Scheduler ###returnonInitComputationHandler.apply(defaultScheduler);###f###onInitComputationHandler###94:9:94:65
6daf59ebc19f5ef8914086fe466823f51ca628a9###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/maybe/MaybeConcatArrayDelayError.java###/MaybeConcatArrayDelayError.java###io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError.ConcatMaybeObserver###drain:###if(disposables.isDisposed())###cancelled###disposables###129:17:132:18
7a1a4afad2984fb95265ec0af061fd1e87f0b75b###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/observable/ObservableSwitchMap.java###/ObservableSwitchMap.java###io.reactivex.internal.operators.observable.ObservableSwitchMap.SwitchMapSubscriber###drain:###if(q.isEmpty())###empty###q.isEmpty()###210:25:213:26
67b7be02666371379d9df41c9d8ec6ff1c14900d###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OperatorReplay.java###/OperatorReplay.java###rx.internal.operators.OperatorReplay.ReplaySubscriber###replay:###buffer.replay(rp);###b###buffer###570:17:570:35
9be3552e39b193e9104f832d56fe0fefee5a81e0###/ReactiveX_RxJava/rxjava-core/src/test/java/rx/ConcatTests.java###/ConcatTests.java###rx.ConcatTests.testConcatCovariance4.o1.create.new OnSubscribe<Movie>###call:Subscriber<? super Movie> ###o.onNext(newHorrorMovie());###horrorMovie1###newHorrorMovie()###123:17:123:45
e3ca9e519c82b2607a1e692f2f8aa6b614835ebe###/ReactiveX_RxJava/src/test/java/io/reactivex/BackpressureTests.java###/BackpressureTests.java###io.reactivex.BackpressureTests.FirehoseNoBackpressure###request:long ###counter.incrementAndGet();###c###counter###56:21:56:47
ab8460bfb692cb2c0e7d6e6e34522e641212f42d###/ReactiveX_RxJava/src/test/java/rx/internal/operators/OperatorMergeTest.java###/OperatorMergeTest.java###rx.internal.operators.OperatorMergeTest###testBackpressureUpstream2:###System.err.println(testSubscriber.getOnNextEvents());###onNextEvents###testSubscriber.getOnNextEvents()###650:9:650:62
92812812a20db2b5b1c40d0a733ad5bfa320e7da###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/flowable/FlowablePublishMulticast.java###/FlowablePublishMulticast.java###io.reactivex.internal.operators.flowable.FlowablePublishMulticast.MulticastProcessor###drain:###MulticastSubscription<T>[]array=subscribers.get();###subs###subscribers###331:17:331:70
2423a17b5c3e5917a1960ffea8f5ecb11ac373a6###/ReactiveX_RxJava/src/main/java/rx/observers/TestObserver.java###/TestObserver.java###rx.observers.TestObserver###assertReceivedOnNext:List<T> ###thrownewAssertionError("Valueatindex:"+i+"expectedtobe["+items.get(i)+"]("+items.get(i).getClass().getSimpleName()+")butwas:["+onNextEvents.get(i)+"]("+onNextEvents.get(i).getClass().getSimpleName()+")");###expected###items.get(i)###126:17:126:255
b57169babb184d0adc2fa28cf0425c4f0c1f8555###/ReactiveX_RxJava/src/main/java/io/reactivex/rxjava3/core/Maybe.java###/Maybe.java###io.reactivex.rxjava3.core.Maybe###concatArray:MaybeSource<? extends T>[] ###returnRxJavaPlugins.onAssembly(newMaybeToFlowable<T>((MaybeSource<T>)sources[0]));###source###(MaybeSource<T>)sources[0]###365:13:365:97
83a3332cd6ef994fa7b6f52ab7070e52dfd6f925###/ReactiveX_RxJava/src/main/java/io/reactivex/subscribers/SafeSubscriber.java###/SafeSubscriber.java###io.reactivex.subscribers.SafeSubscriber###onNext:T ###onError(newNullPointerException());###ex###newNullPointerException()###90:13:90:49
98d0b7f2ec63544890d029282dc2ff3f611b987a###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/flowable/FlowablePublish.java###/FlowablePublish.java###io.reactivex.internal.operators.flowable.FlowablePublish.PublishSubscriber###dispatch:###Objectv=queue.poll();###q###queue###533:29:533:53
fefe12dcf76c80000fac610463b40a894199d247###/ReactiveX_RxJava/src/test/java/rx/ObservableTests.java###/ObservableTests.java###rx.ObservableTests###testPublishLast:###connectable.subscribe(newAction1<String>(){@Overridepublicvoidcall(Stringvalue){assertEquals("last",value);latch.countDown();}});###subscriptionAction###newAction1<String>(){@Overridepublicvoidcall(Stringvalue){assertEquals("last",value);latch.countDown();}}###502:9:508:12
43e5299a956febe9dade523bfa9d985482f31a1a###/ReactiveX_RxJava/src/main/java/io/reactivex/Observable.java###/Observable.java###io.reactivex.Observable###toMultimap:Function<? super T,? extends K> ###returntoMultimap(keySelector,v->v,HashMap::new,k->newArrayList<>());###valueSelector###v->v###2215:9:2215:86
a856572327528ee05c1d1ab05426343aa0c5224b###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/subscriptions/DeferredScalarSubscription.java###/DeferredScalarSubscription.java###io.reactivex.internal.subscriptions.DeferredScalarSubscription###request:long ###actual.onNext(value);###v###value###74:25:74:46
5888b2361829fa5672f9f6825ddafa0fbbe038a1###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/maybe/MaybeFlatMapIterableObservable.java###/MaybeFlatMapIterableObservable.java###io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable.FlatMapIterableObserver###onSuccess:T ###actual.onError(ex);###a###actual###92:17:92:36
9be3552e39b193e9104f832d56fe0fefee5a81e0###/ReactiveX_RxJava/rxjava-core/src/test/java/rx/ConcatTests.java###/ConcatTests.java###rx.ConcatTests###testConcatCovariance3:###Observable<Movie>o1=Observable.from(newHorrorMovie(),newMovie());###movie###newMovie()###105:9:105:80
43e5299a956febe9dade523bfa9d985482f31a1a###/ReactiveX_RxJava/src/main/java/io/reactivex/Observable.java###/Observable.java###io.reactivex.Observable###toMultimap:Function<? super T,? extends K> ###returntoMultimap(keySelector,v->v,HashMap::new,k->newArrayList<>());###collectionFactory###k->newArrayList<>()###2215:9:2215:86
94c8b6bad01902404c16affbad26f960e37ce178###/ReactiveX_RxJava/rxjava-core/src/main/java/rx/operators/OperatorMerge.java###/OperatorMerge.java###rx.operators.OperatorMerge.call.new Subscriber<Observable<? extends T>>###onNext:Observable<? extends T> ###innerObservable.subscribe(newInnerObserver());###i###newInnerObserver()###60:17:60:64
f59ce00934a65b880cbe5b7e06436f85e73187d9###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/flowable/FlowableSequenceEqual.java###/FlowableSequenceEqual.java###io.reactivex.internal.operators.flowable.FlowableSequenceEqual.EqualCoordinator###drain:###v1=q1.poll();###a###v1###169:25:169:40
31b41f8d4b0d0534a883a71491ad39f326ebff36###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/schedulers/SchedulerPoolFactory.java###/SchedulerPoolFactory.java###io.reactivex.internal.schedulers.SchedulerPoolFactory###shutdown:###PURGE_THREAD.get().shutdownNow();###exec###PURGE_THREAD.get()###81:9:81:42
e3ca9e519c82b2607a1e692f2f8aa6b614835ebe###/ReactiveX_RxJava/src/test/java/io/reactivex/BackpressureTests.java###/BackpressureTests.java###io.reactivex.BackpressureTests.FirehoseNoBackpressure###request:long ###s.onNext(i++);###a###s###55:21:55:35
a2556443f808f3a517eae7bc4ea32db92a863a3b###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OnSubscribeRedo.java###/OnSubscribeRedo.java###rx.internal.operators.OnSubscribeRedo.call.setProducer.new Producer###request:long ###currentProducer.get().request(n);###producer###currentProducer.get()###328:29:328:62
3c86972d6630653a81c9764c84856ed6786513bf###/ReactiveX_RxJava/src/main/java/rx/Single.java###/Single.java###rx.Single###zip:Iterable<? extends Single<?>> FuncN<? extends R> ###returnSingleOperatorZip.zip(iterableToArray(singles),zipFunction);###iterableToArray###iterableToArray(singles)###1245:9:1245:77
b5aaf82ea8c7addd2cd197f1c61ddec9ee5ee962###/ReactiveX_RxJava/src/main/java/rx/schedulers/GenericScheduledExecutorService.java###/GenericScheduledExecutorService.java###rx.schedulers.GenericScheduledExecutorService###GenericScheduledExecutorService:###executor=Executors.newScheduledThreadPool(count,THREAD_FACTORY);###exec###Executors.newScheduledThreadPool(count,THREAD_FACTORY)###52:9:52:76
ceff938a5b31dc992d2db0e8aa5e4b1735b0468e###/ReactiveX_RxJava/rxjava-core/src/main/java/rx/subjects/SubjectSubscriptionManager.java###/SubjectSubscriptionManager.java###rx.subjects.SubjectSubscriptionManager###terminate:Action1<Collection<SubjectObserver<? super T>>> ###onTerminate.call((Collection)Arrays.asList(newState.observers));###observerCollection###(Collection)Arrays.asList(newState.observers)###137:13:137:78
000a174d87a901135f9665d3b11f3627fd2dc4ed###/ReactiveX_RxJava/src/main/java/io/reactivex/observables/BlockingObservable.java###/BlockingObservable.java###io.reactivex.observables.BlockingObservable###first:###returnfirstOption().get();###o###firstOption()###167:9:167:36
b4b67623dab336a61c53d63d55db94640fd02105###/ReactiveX_RxJava/rxjava-core/src/main/java/rx/observers/SerializedObserver.java###/SerializedObserver.java###rx.observers.SerializedObserver###drainQueue:FastList ###actual.onNext((T)v);###t###(T)v###186:17:186:38
b7086efb4a3cf53640075044c98ec3edc906f746###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/schedulers/SingleScheduler.java###/SingleScheduler.java###io.reactivex.internal.schedulers.SingleScheduler###schedulePeriodicallyDirect:Runnable long long TimeUnit ###ScheduledDirectPeriodicTasktask=newScheduledDirectPeriodicTask(RxJavaPlugins.onSchedule(run));###decoratedRun###RxJavaPlugins.onSchedule(run)###128:9:128:107
c3a1d911bfe9df41a700b9623b90ed54388f316d###/ReactiveX_RxJava/src/main/java/io/reactivex/exceptions/CompositeException.java###/CompositeException.java###io.reactivex.exceptions.CompositeException###getListOfCauses:Throwable ###root=root.getCause();###cause###root.getCause()###277:21:277:44
603f6c690a49a0eb73a7b9cec247ba3987e96772###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/flowable/FlowableElementAtSingle.java###/FlowableElementAtSingle.java###io.reactivex.internal.operators.flowable.FlowableElementAtSingle.ElementAtSubscriber###onComplete:###actual.onSuccess(defaultValue);###v###defaultValue###107:17:107:48
000a174d87a901135f9665d3b11f3627fd2dc4ed###/ReactiveX_RxJava/src/test/java/io/reactivex/internal/operators/OperatorFlatMapTest.java###/OperatorFlatMapTest.java###io.reactivex.internal.operators.OperatorFlatMapTest###testFlatMapTransformsMaxConcurrentNormal:###source.flatMap(just(onNext),just(onError),just0(onCompleted),m).subscribe(ts);###just###just(onNext)###409:9:409:90
883e8fceadb3585df909e93e4868f653b28fe9c2###/ReactiveX_RxJava/src/main/java/rx/internal/schedulers/EventLoopsScheduler.java###/EventLoopsScheduler.java###rx.internal.schedulers.EventLoopsScheduler.FixedSchedulerPool###getEventLoop:###returneventLoops[(int)(n++%cores)];###c###cores###64:13:64:51
9be3552e39b193e9104f832d56fe0fefee5a81e0###/ReactiveX_RxJava/rxjava-core/src/test/java/rx/ConcatTests.java###/ConcatTests.java###rx.ConcatTests###testConcatCovariance4:###Observable<Media>o2=Observable.from(newMedia(),newHorrorMovie());###horrorMovie2###newHorrorMovie()###130:9:130:80
6daf59ebc19f5ef8914086fe466823f51ca628a9###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/maybe/MaybeConcatIterable.java###/MaybeConcatIterable.java###io.reactivex.internal.operators.maybe.MaybeConcatIterable.ConcatMaybeObserver###drain:###if(disposables.isDisposed())###cancelled###disposables###131:17:134:18
a856572327528ee05c1d1ab05426343aa0c5224b###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/subscribers/observable/DeferredScalarObserver.java###/DeferredScalarObserver.java###io.reactivex.internal.subscribers.observable.DeferredScalarObserver###onComplete:###complete(value);###v###value###80:13:80:29
731e0a024ec4747aea706f03b61bcd4bc71afe16###/ReactiveX_RxJava/rxjava-core/src/main/java/rx/subjects/BehaviorSubject.java###/BehaviorSubject.java###rx.subjects.BehaviorSubject.create.onSubscribe.getOnSubscribeFunc.new Action1<SubjectObserver<? super T>>###call:SubjectObserver<? super T> ###lastNotification.get().accept(o);###n###lastNotification.get()###129:25:129:58
6c19a7b6e37326a94b9a5e8fcc716fe67160724e###/ReactiveX_RxJava/src/perf/java/rx/SubscribingPerf.java###/SubscribingPerf.java###rx.SubscribingPerf###justUsual:Blackhole ###just.subscribe(newUsualSubscriber<Integer>(Long.MAX_VALUE,bh));###subscriber###newUsualSubscriber<Integer>(Long.MAX_VALUE,bh)###51:9:51:74
ba7f9103f2706c162f0a27d4ca4be35acf3e78fa###/ReactiveX_RxJava/src/perf/java/rx/jmh/InputWithIncrementingInteger.java###/InputWithIncrementingInteger.java###rx.jmh.InputWithIncrementingInteger.setup.create.new OnSubscribe<Integer>###call:Subscriber<? super Integer> ###for(inti=0;i<getSize();i++)###size###getSize()###49:17:51:18
b51cc2152c2f110bc25006449caa896c12afa4b5###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/OperatorDebounceTimed.java###/OperatorDebounceTimed.java###io.reactivex.internal.operators.OperatorDebounceTimed.DebounceTimedSubscriber###onNext:T ###if(timer!=null)###d###timer###113:25:115:26
6c19a7b6e37326a94b9a5e8fcc716fe67160724e###/ReactiveX_RxJava/src/perf/java/rx/SubscribingPerf.java###/SubscribingPerf.java###rx.SubscribingPerf###rangeUsual:Blackhole ###range.subscribe(newUsualSubscriber<Integer>(Long.MAX_VALUE,bh));###subscriber###newUsualSubscriber<Integer>(Long.MAX_VALUE,bh)###66:9:66:75
3992b99f37329ba168782efb90070c3b019e48d1###/ReactiveX_RxJava/src/main/java/rx/Scheduler.java###/Scheduler.java###rx.Scheduler.Worker###schedulePeriodically:Action0 long long TimeUnit ###finallongstartInNanos=TimeUnit.MILLISECONDS.toNanos(now())+unit.toNanos(initialDelay);###firstNowNanos###TimeUnit.MILLISECONDS.toNanos(now())###112:13:112:105
dadb49a1bcb2f16401abb1b5908cca3092068a23###/ReactiveX_RxJava/src/main/java/io/reactivex/parallel/ParallelFlowable.java###/ParallelFlowable.java###io.reactivex.parallel.ParallelFlowable###validate:Subscriber<?>[] ###EmptySubscription.error(newIllegalArgumentException("parallelism="+p+",subscribers="+subscribers.length),s);###iae###newIllegalArgumentException("parallelism="+p+",subscribers="+subscribers.length)###71:17:71:138
308255868f25e8f805d4e8b3f9a9d3571636b817###/ReactiveX_RxJava/src/main/java/rx/internal/util/RxRingBuffer.java###/RxRingBuffer.java###rx.internal.util.RxRingBuffer###count:###returnqueue.size();###q###queue###368:9:368:29
ee004ad1099690c4d07b0a3192b42216a19d80e8###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/maybe/MaybeZipArray.java###/MaybeZipArray.java###io.reactivex.internal.operators.maybe.MaybeZipArray###subscribeActual:MaybeObserver<? super R> ###sources[i].subscribe(parent.observers[i]);###source###sources[i]###62:13:62:55
c507577566e7b3a548d2f8256ca2f144ac14a08c###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/observable/ObservableIntervalRange.java###/ObservableIntervalRange.java###io.reactivex.internal.operators.observable.ObservableIntervalRange###subscribeActual:Observer<? super Long> ###Disposabled=scheduler.schedulePeriodicallyDirect(is,initialDelay,period,unit);###sch###scheduler###45:9:45:93
9be3552e39b193e9104f832d56fe0fefee5a81e0###/ReactiveX_RxJava/rxjava-core/src/test/java/rx/ConcatTests.java###/ConcatTests.java###rx.ConcatTests###testConcatCovariance2:###Observable<Media>o2=Observable.from(newMedia(),newHorrorMovie());###media2###newMedia()###94:9:94:80
6c19a7b6e37326a94b9a5e8fcc716fe67160724e###/ReactiveX_RxJava/src/perf/java/rx/SubscribingPerf.java###/SubscribingPerf.java###rx.SubscribingPerf###justDirect:Blackhole ###just.subscribe(newDirectSubscriber<Integer>(Long.MAX_VALUE,bh));###subscriber###newDirectSubscriber<Integer>(Long.MAX_VALUE,bh)###41:9:41:75
000a174d87a901135f9665d3b11f3627fd2dc4ed###/ReactiveX_RxJava/src/main/java/io/reactivex/observables/nbp/NbpBlockingObservable.java###/NbpBlockingObservable.java###io.reactivex.observables.nbp.NbpBlockingObservable###first:###returnfirstOption().get();###o###firstOption()###162:9:162:36
75ffcbb01cae042f5b715060622154794f39a690###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OperatorReplay.java###/OperatorReplay.java###rx.internal.operators.OperatorReplay.BoundedReplayBuffer###replay:InnerProducer<T> ###output.child.onError(OnErrorThrowable.addValueAsLastCause(err,nl.getValue(o)));###child###output.child###1086:33:1086:113
92b27f2f4a2aea910c56092c9c4f7176508f6ad5###/ReactiveX_RxJava/src/main/java/io/reactivex/plugins/RxJavaPlugins.java###/RxJavaPlugins.java###io.reactivex.plugins.RxJavaPlugins###initSingleScheduler:Scheduler ###returnonInitSingleHandler.apply(defaultScheduler);###f###onInitSingleHandler###102:9:102:60
5604c180f173603a8385b130a2b5e5b60e00439c###/ReactiveX_RxJava/rxjava-contrib/rxjava-computation-expressions/src/test/java/rx/operators/OperationConditionalsTest.java###/OperationConditionalsTest.java###rx.operators.OperationConditionalsTest###observeSequence:Observable<? extends T> Iterable<? extends T> ###Subscriptions=source.subscribe(newTestObserver<T>(o));###testObserver###newTestObserver<T>(o)###131:9:131:67
0094304aecbbf9cd9b9b6cb1b7fe524a4b2ccb75###/ReactiveX_RxJava/src/main/java/io/reactivex/plugins/RxJavaPlugins.java###/RxJavaPlugins.java###io.reactivex.plugins.RxJavaPlugins###onError:Throwable ###UncaughtExceptionHandlerhandler=Thread.currentThread().getUncaughtExceptionHandler();###currentThread###Thread.currentThread()###267:9:267:97
b57169babb184d0adc2fa28cf0425c4f0c1f8555###/ReactiveX_RxJava/src/main/java/io/reactivex/rxjava3/core/Maybe.java###/Maybe.java###io.reactivex.rxjava3.core.Maybe###concatArrayDelayError:MaybeSource<? extends T>[] ###returnRxJavaPlugins.onAssembly(newMaybeToFlowable<T>((MaybeSource<T>)sources[0]));###source###(MaybeSource<T>)sources[0]###395:13:395:97
d320d5cd7227fc34b7e53eccb8979d64d29213e6###/ReactiveX_RxJava/src/main/java/io/reactivex/processors/BehaviorProcessor.java###/BehaviorProcessor.java###io.reactivex.processors.BehaviorProcessor###setCurrent:Object ###writeLock.lock();###wl###writeLock###386:9:386:26
9be3552e39b193e9104f832d56fe0fefee5a81e0###/ReactiveX_RxJava/rxjava-core/src/test/java/rx/ConcatTests.java###/ConcatTests.java###rx.ConcatTests###testConcatCovariance:###Observable<Media>o2=Observable.from(newMedia(),newHorrorMovie());###horrorMovie2###newHorrorMovie()###82:9:82:80
de4ce93d91426bfc20c986287b39bc168d524e46###/ReactiveX_RxJava/src/test/java/io/reactivex/internal/operators/observable/ObservableRefCountTest.java###/ObservableRefCountTest.java###io.reactivex.internal.operators.observable.ObservableRefCountTest###timeoutDisposesSource:###ObservableRefCount<Object>o=(ObservableRefCount<Object>)newTestConnectableObservable<Object>().refCount();###tco###newTestConnectableObservable<Object>()###1339:9:1339:119
3634c92cb6a8199b8022ffb3bd8e2a65da9c18f0###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnBackpressureLatest.java###/FlowableOnBackpressureLatest.java###io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest.BackpressureLatestSubscriber###drain:###Tv=current.getAndSet(null);###q###current###119:21:119:51
d01cd061e378494d342e6dd03d469ff31a42184a###/ReactiveX_RxJava/src/main/java/rx/subjects/ReplaySubject.java###/ReplaySubject.java###rx.subjects.ReplaySubject.create.new Action1<SubjectObserver<T>>###call:SubjectObserver<T> ###Integerj=state.replayObserverFromIndex(idx,o);###localState###state###120:29:120:79
419dc0fa188ac3337db83bfd702809c3d11ada83###/ReactiveX_RxJava/src/main/java/rx/internal/operators/OperatorPublish.java###/OperatorPublish.java###rx.internal.operators.OperatorPublish.PublishSubscriber###dispatch:###if(checkTerminated(terminalEvent,empty))###term###terminalEvent###541:29:544:30
db75e89f131511657c6410d87c3231f76387ba63###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMap.java###/FlowableFlatMap.java###io.reactivex.internal.operators.flowable.FlowableFlatMap.MergeSubscriber###checkTerminate:###actual.onError(errs.terminate());###ex###errs.terminate()###559:17:559:50
92b27f2f4a2aea910c56092c9c4f7176508f6ad5###/ReactiveX_RxJava/src/main/java/io/reactivex/plugins/RxJavaPlugins.java###/RxJavaPlugins.java###io.reactivex.plugins.RxJavaPlugins###onError:Throwable ###errorHandler.accept(error);###f###errorHandler###123:13:123:40
3bfc275ca2f8d14a67305bbadb7bbc6315205250###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/parallel/ParallelFromPublisher.java###/ParallelFromPublisher.java###io.reactivex.internal.operators.parallel.ParallelFromPublisher.ParallelDispatcher###ParallelDispatcher:Subscriber<? super T>[] int ###this.emissions=newlong[subscribers.length];###m###subscribers.length###105:13:105:59
94b53d6b5da0d0c0b83830fea42a99cd2916241e###/ReactiveX_RxJava/src/main/java/rx/internal/util/SubscriptionList.java###/SubscriptionList.java###rx.internal.util.SubscriptionList###add:Subscription ###subscriptions=newLinkedList<Subscription>();###subs###subscriptions###62:25:62:72
3634c92cb6a8199b8022ffb3bd8e2a65da9c18f0###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/flowable/FlowableSwitchMap.java###/FlowableSwitchMap.java###io.reactivex.internal.operators.flowable.FlowableSwitchMap.SwitchMapInnerSubscriber###onNext:R ###parent.drain();###p###parent###385:17:385:32
967e083d0dfe504637d42c20ad18ea05384393a2###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/OperatorReplay.java###/OperatorReplay.java###io.reactivex.internal.operators.OperatorReplay.UnboundedReplayBuffer###replay:InnerSubscription<T> ###output.child.onError(err);###child###output.child###781:29:781:55
6daf59ebc19f5ef8914086fe466823f51ca628a9###/ReactiveX_RxJava/src/main/java/io/reactivex/internal/operators/maybe/MaybeConcatArray.java###/MaybeConcatArray.java###io.reactivex.internal.operators.maybe.MaybeConcatArray.ConcatMaybeObserver###drain:###if(disposables.isDisposed())###cancelled###disposables###119:17:122:18
75c40b58fc3f56283ad88ce299c72419975f6b00###/ReactiveX_RxJava/src/main/java/io/reactivex/subscribers/TestSubscriber.java###/TestSubscriber.java###io.reactivex.subscribers.TestSubscriber###assertFusionMode:int ###if(establishedFusionMode!=mode)###m###establishedFusionMode###798:9:804:10
