252db779ac0092779355276f6ce89863b9768d2d###/square_keywhiz/server/src/main/java/keywhiz/KeywhizConfig.java###/KeywhizConfig.java###keywhiz.KeywhizConfig.TemplatedDataSourceFactory###getPassword:###returnTemplates.evaluateTemplate(super.getPassword());###password###super.getPassword()###192:9:192:64
4931e6ca2d9bd7236c1f17d4f02a2bfa2e03170f###/square_keywhiz/server/src/main/java/keywhiz/service/daos/SecretSeriesDAO.java###/SecretSeriesDAO.java###keywhiz.service.daos.SecretSeriesDAO###getSecretSeries:Long Group Long String Integer ###SelectQuery<Record>select=dslContext.select().from(SECRETS).join(SECRETS_CONTENT).on(SECRETS.CURRENT.equal(SECRETS_CONTENT.ID)).where(SECRETS.CURRENT.isNotNull()).getQuery();###secretsContentTable###SECRETS_CONTENT###197:5:203:23
c5de294af0859b5b4cf1a5f551b0071d4a6b3ced###/square_keywhiz/server/src/main/java/keywhiz/service/daos/SecretDAO.java###/SecretDAO.java###keywhiz.service.daos.SecretDAO###createSecret:String String String Map<String,String> long String String Map<String,String> ###secretId=secretSeries.get().id();###secretSeries1###secretSeries.get()###79:11:79:46
554221b89cf53100ea0fc12161409efccc489fb2###/square_keywhiz/cli/src/test/java/keywhiz/cli/commands/AddActionTest.java###/AddActionTest.java###keywhiz.cli.commands.AddActionTest###addWithMetadata:###addAction.stream=newByteArrayInputStream(base64Decoder.decode(secret.getSecret()));###content###base64Decoder.decode(secret.getSecret())###198:5:198:91
554221b89cf53100ea0fc12161409efccc489fb2###/square_keywhiz/cli/src/test/java/keywhiz/cli/commands/AddActionTest.java###/AddActionTest.java###keywhiz.cli.commands.AddActionTest###addCallsAddForSecret:###addAction.stream=newByteArrayInputStream(base64Decoder.decode(secret.getSecret()));###content###base64Decoder.decode(secret.getSecret())###88:5:88:91
554221b89cf53100ea0fc12161409efccc489fb2###/square_keywhiz/cli/src/test/java/keywhiz/cli/commands/AddActionTest.java###/AddActionTest.java###keywhiz.cli.commands.AddActionTest###addCanCreateWithVersion:###addAction.stream=newByteArrayInputStream(base64Decoder.decode(secret.getSecret()));###content###base64Decoder.decode(secret.getSecret())###178:5:178:91
62bd2ddf065ea4ea8d7069397f382595142838c6###/square_keywhiz/server/src/main/java/keywhiz/service/daos/AclDAO.java###/AclDAO.java###keywhiz.service.daos.AclDAO###allowAccess:Configuration long long ###DSL.using(configuration).insertInto(ACCESSGRANTS).set(ACCESSGRANTS.SECRETID,Math.toIntExact(secretId)).set(ACCESSGRANTS.GROUPID,Math.toIntExact(groupId)).set(ACCESSGRANTS.CREATEDAT,now).set(ACCESSGRANTS.UPDATEDAT,now).execute();###groupIdInt###Math.toIntExact(groupId)###306:5:312:20
554221b89cf53100ea0fc12161409efccc489fb2###/square_keywhiz/cli/src/test/java/keywhiz/cli/commands/AddActionTest.java###/AddActionTest.java###keywhiz.cli.commands.AddActionTest###addSecretCanAssignGroup:###addAction.stream=newByteArrayInputStream(base64Decoder.decode(secret.getSecret()));###content###base64Decoder.decode(secret.getSecret())###120:5:120:91
1e7323d0c0f62f19c77a54ba478cadf6ab75a639###/square_keywhiz/server/src/main/java/keywhiz/service/daos/GroupDAO.java###/GroupDAO.java###keywhiz.service.daos.GroupDAO###deleteGroup:Group ###DSL.using(configuration).delete(GROUPS).where(GROUPS.ID.eq(group.getId())).execute();###id###group.getId()###63:7:66:26
8e0405708e4c42c6d805d586a253aeb16cddb491###/square_keywhiz/server/src/main/java/keywhiz/service/daos/GroupMapper.java###/GroupMapper.java###keywhiz.service.daos.GroupMapper###tryToReadMapFromMetadata:String ###returnImmutableMap.copyOf(mapper.readValue(value,MAP_STRING_STRING_TYPE));###t###mapper.readValue(value,MAP_STRING_STRING_TYPE)###54:9:54:85
f2d254164dd97ba50393becc1be5060cf9fdf9ea###/square_keywhiz/cli/src/main/java/keywhiz/cli/ClientUtils.java###/ClientUtils.java###keywhiz.cli.ClientUtils###sslOkHttpClient:List<HttpCookie> ###sslContext.init(newKeyManager[0],trustManagerFactory.getTrustManagers(),newSecureRandom());###trustManagers###trustManagerFactory.getTrustManagers()###87:7:87:102
a25771c416998744f49da8f5074fb02c426190f2###/square_keywhiz/server/src/test/java/keywhiz/service/daos/AclDAOTest.java###/AclDAOTest.java###keywhiz.service.daos.AclDAOTest###setUp:###testDBRule.jooqContext().delete(CLIENTS).execute();###jooqContext###testDBRule.jooqContext()###56:5:56:56
61ccdfe80283d89ac0a4652eb1fa621ee1045cc3###/square_keywhiz/server/src/main/java/keywhiz/service/daos/AclDAO.java###/AclDAO.java###keywhiz.service.daos.AclDAO###enrollClient:Configuration long long ###DSL.using(configuration).insertInto(MEMBERSHIPS).set(MEMBERSHIPS.GROUPID,Math.toIntExact(groupId)).set(MEMBERSHIPS.CLIENTID,Math.toIntExact(clientId)).set(MEMBERSHIPS.CREATEDAT,now).set(MEMBERSHIPS.UPDATEDAT,now).execute();###groupIdInt###Math.toIntExact(groupId)###337:5:343:20
62bd2ddf065ea4ea8d7069397f382595142838c6###/square_keywhiz/server/src/main/java/keywhiz/service/daos/AclDAO.java###/AclDAO.java###keywhiz.service.daos.AclDAO###allowAccess:Configuration long long ###DSL.using(configuration).insertInto(ACCESSGRANTS).set(ACCESSGRANTS.SECRETID,Math.toIntExact(secretId)).set(ACCESSGRANTS.GROUPID,Math.toIntExact(groupId)).set(ACCESSGRANTS.CREATEDAT,now).set(ACCESSGRANTS.UPDATEDAT,now).execute();###secretIdInt###Math.toIntExact(secretId)###306:5:312:20
61ccdfe80283d89ac0a4652eb1fa621ee1045cc3###/square_keywhiz/server/src/main/java/keywhiz/service/daos/AclDAO.java###/AclDAO.java###keywhiz.service.daos.AclDAO###enrollClient:Configuration long long ###DSL.using(configuration).insertInto(MEMBERSHIPS).set(MEMBERSHIPS.GROUPID,Math.toIntExact(groupId)).set(MEMBERSHIPS.CLIENTID,Math.toIntExact(clientId)).set(MEMBERSHIPS.CREATEDAT,now).set(MEMBERSHIPS.UPDATEDAT,now).execute();###clientIdInt###Math.toIntExact(clientId)###337:5:343:20
71b0cc7e1e5afbd6876e78c55498c54788df2ae4###/square_keywhiz/server/src/main/java/keywhiz/service/providers/ClientAuthFactory.java###/ClientAuthFactory.java###keywhiz.service.providers.ClientAuthFactory###provide:ContainerRequest ###if(request.getRequestHeader(XFCC_HEADER_NAME)==null||request.getRequestHeader(XFCC_HEADER_NAME).isEmpty())###xfccHeaderValues###request.getRequestHeader(XFCC_HEADER_NAME)###87:5:106:6
fd5e8bc82dd77b9b8a4fbde992c159f7581b9031###/square_keywhiz/server/src/main/java/keywhiz/service/daos/ClientDAO.java###/ClientDAO.java###keywhiz.service.daos.ClientDAO###deleteClient:Client ###DSL.using(configuration).delete(CLIENTS).where(CLIENTS.ID.eq(client.getId())).execute();###id###client.getId()###64:7:67:22
b3fa5d171c8a623914b97455a1a4ca59da388d6d###/square_keywhiz/server/src/main/java/keywhiz/service/daos/SecretDAO.java###/SecretDAO.java###keywhiz.service.daos.SecretDAO###getSecretVersionsByName:String int int ###longsecretId=series.get().id();###s###series.get()###219:7:219:41
554221b89cf53100ea0fc12161409efccc489fb2###/square_keywhiz/cli/src/test/java/keywhiz/cli/commands/AddActionTest.java###/AddActionTest.java###keywhiz.cli.commands.AddActionTest###addCreatesVersionedSecretWhenVersionInName:###addAction.stream=newByteArrayInputStream(base64Decoder.decode(secret.getSecret()));###content###base64Decoder.decode(secret.getSecret())###158:5:158:91
b97d33c78ebef4a87bd91292b8173f326b6befbd###/square_keywhiz/server/src/test/java/keywhiz/service/daos/SecretDAOTest.java###/SecretDAOTest.java###keywhiz.service.daos.SecretDAOTest###setUp:###testDBRule.jooqContext().delete(SECRETS).execute();###dslContext###testDBRule.jooqContext()###66:5:66:56
8e0405708e4c42c6d805d586a253aeb16cddb491###/square_keywhiz/server/src/main/java/keywhiz/service/daos/SecretContentMapper.java###/SecretContentMapper.java###keywhiz.service.daos.SecretContentMapper###tryToReadMapFromMetadata:String ###returnImmutableMap.copyOf(mapper.readValue(value,MAP_STRING_STRING_TYPE));###t###mapper.readValue(value,MAP_STRING_STRING_TYPE)###56:9:56:85
733d5cb5bf9f4c93c4ceab53463b72cae738af26###/square_keywhiz/server/src/main/java/keywhiz/service/daos/SecretSeriesDAO.java###/SecretSeriesDAO.java###keywhiz.service.daos.SecretSeriesDAO###setCurrentVersion:long long ###longcheckId=dslContext.select(SECRETS_CONTENT.SECRETID).from(SECRETS_CONTENT).where(SECRETS_CONTENT.ID.eq(secretContentId)).fetchOne().value1();###r###dslContext.select(SECRETS_CONTENT.SECRETID).from(SECRETS_CONTENT).where(SECRETS_CONTENT.ID.eq(secretContentId)).fetchOne()###113:5:116:30
f2d254164dd97ba50393becc1be5060cf9fdf9ea###/square_keywhiz/cli/src/main/java/keywhiz/cli/ClientUtils.java###/ClientUtils.java###keywhiz.cli.ClientUtils###loadCookies:Path ###List<JsonCookie>jsonCookies=Jackson.newObjectMapper().readValue(reader,newTypeReference<List<JsonCookie>>(){});###cookiesType###newTypeReference<List<JsonCookie>>(){}###164:7:166:14
554221b89cf53100ea0fc12161409efccc489fb2###/square_keywhiz/cli/src/test/java/keywhiz/cli/commands/AddActionTest.java###/AddActionTest.java###keywhiz.cli.commands.AddActionTest###addCreatesWithoutVersionByDefault:###addAction.stream=newByteArrayInputStream(base64Decoder.decode(secret.getSecret()));###content###base64Decoder.decode(secret.getSecret())###138:5:138:91
6e80dd545b021e587382201da6ef9c0957abc7e1###/square_keywhiz/server/src/main/java/keywhiz/service/resources/automation/v2/SecretResource.java###/SecretResource.java###keywhiz.service.resources.automation.v2.SecretResource###backfillExpiration:AutomationClient String ###logger.info("Foundexpiryforsecret{}:{}",secret.getName(),expiry.getEpochSecond());###secretName###secret.getName()###221:7:221:96
f2d254164dd97ba50393becc1be5060cf9fdf9ea###/square_keywhiz/client/src/main/java/keywhiz/client/KeywhizClient.java###/KeywhizClient.java###keywhiz.client.KeywhizClient###isLoggedIn:###returnclient.newCall(newRequest.Builder().get().url("/admin/me").build()).execute().code()!=HttpStatus.SC_UNAUTHORIZED;###call###client.newCall(newRequest.Builder().get().url("/admin/me").build())###223:5:224:39
