68a15b0f5a36113fe44a97b9212bd497e75cc563###/spring-projects_spring-data-examples/jdbc/basics/src/test/java/example/springdata/jdbc/basics/aggregate/AggregateTests.java###/AggregateTests.java###example.springdata.jdbc.basics.aggregate.AggregateTests###exerciseSomewhatComplexEntity:###Output.list(repository.findAll(),"OriginalLegoSet");###legoSets###repository.findAll()###50:3:50:57
01b0a5674a7bdf9e28876ba5508845bf3f186364###/spring-projects_spring-data-examples/jdbc/basics/src/test/java/example/springdata/jdbc/basics/aggregate/AggregateTests.java###/AggregateTests.java###example.springdata.jdbc.basics.aggregate.AggregateTests###customQueries:###LegoSetsmallCars=createLegoSet("SmallCar-01",5,10);###smallCarsSetName###"SmallCar-01"###81:3:81:62
2569cf8de336adb8c9fea8cf7fc8f4434378e05d###/spring-projects_spring-data-examples/solr/example/src/test/java/example/springdata/solr/AdvancedSolrRepositoryTests.java###/AdvancedSolrRepositoryTests.java###example.springdata.solr.AdvancedSolrRepositoryTests###influcenceScoreWithFunctions:###operations.queryForPage(newSimpleQuery(where(exists("popularity"))).addProjectionOnFields("*","score"),Product.class).forEach(System.out::println);###query###newSimpleQuery(where(exists("popularity"))).addProjectionOnFields("*","score")###112:3:114:35
c981f62aab7bbc5437e8d6492dc92ca0efc1d645###/spring-projects_spring-data-examples/jdbc/immutables/src/main/java/example/springdata/jdbc/immutables/Application.java###/Application.java###example.springdata.jdbc.immutables.Application.ImmutablesJdbcConfiguration.jdbcConverter.new BasicJdbcConverter###mapRow:RelationalPersistentEntity<T> ResultSet Object ###returnsuper.mapRow(getImplementationEntity(mappingContext,entity),resultSet,key);###implementationEntity###getImplementationEntity(mappingContext,entity)###85:6:85:91
