ae46a696c51daaeb6723ad808f71da6531647319###/strimzi_strimzi-kafka-operator/cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperatorNonParametrizedTest.java###/KafkaAssemblyOperatorNonParametrizedTest.java###io.strimzi.operator.cluster.operator.assembly.KafkaAssemblyOperatorNonParametrizedTest###testCruiseControlDescription:VertxTestContext ###op.newReconciliationState(reconciliation,kafka).getCruiseControlDescription().onComplete(context.failing(c->context.verify(()->{assertThat(c.getMessage(),is("FailedConfigMapgetAsynccall"));async.flag();})));###reconciliationState###op.newReconciliationState(reconciliation,kafka)###363:9:368:22
75a509e54fd897d63d3b4888d6aedc2ff0f582c5###/strimzi_strimzi-kafka-operator/cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/CertificateRenewalTest.java###/CertificateRenewalTest.java###io.strimzi.operator.cluster.operator.assembly.CertificateRenewalTest###testNewCertsGetGeneratedWhenInRenewalPeriodAuto:VertxTestContext ###assertThat(initialClusterCaKeySecret.getData().keySet(),is(singleton(CA_KEY)));###clusterCaKeyData###initialClusterCaKeySecret.getData()###465:9:465:89
979e3623f97dde2cc0c0ece3a8bf52ebf078cdbb###/strimzi_strimzi-kafka-operator/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/KafkaConnectDockerfile.java###/KafkaConnectDockerfile.java###io.strimzi.operator.cluster.model.KafkaConnectDockerfile###addTgzArtifact:PrintWriter String TgzArtifact ###StringartifactDir=connectorPath+"/"+Util.sha1Prefix(tgz.getUrl());###artifactHash###Util.sha1Prefix(tgz.getUrl())###181:9:181:82
75a509e54fd897d63d3b4888d6aedc2ff0f582c5###/strimzi_strimzi-kafka-operator/cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/CertificateRenewalTest.java###/CertificateRenewalTest.java###io.strimzi.operator.cluster.operator.assembly.CertificateRenewalTest###testNewCertsGetGeneratedWhenInRenewalPeriodAuto:VertxTestContext ###assertThat(initialClientsCaCertSecret.getData().keySet(),is(set(CA_CRT,CA_STORE,CA_STORE_PASSWORD)));###clientsCaCertData###initialClientsCaCertSecret.getData()###471:9:471:113
201540481bdf48c45056e7204ee799eaf3b7b4cf###/strimzi_strimzi-kafka-operator/certificate-manager/src/main/java/io/strimzi/certs/OpenSslCertManager.java###/OpenSslCertManager.java###io.strimzi.certs.OpenSslCertManager###generateRootCaCert:File File Subject ZonedDateTime ZonedDateTime int ###newOpensslArgs("openssl","ca").opt("-utf8").opt("-batch").opt("-notext").opt("-selfsign").optArg("-in",csrFile).optArg("-out",certFile).optArg("-keyfile",tmpKey).optArg("-startdate",notBefore).optArg("-enddate",notAfter).optArg("-subj",subject).optArg("-config",defaultConfig).database(database,attr).newCertsDir(newCertsDir).basicConstraints("critical,CA:true,pathlen:"+pathLength).keyUsage("critical,keyCertSign,cRLSign").exec(false);###opt###newOpensslArgs("openssl","ca").opt("-utf8").opt("-batch").opt("-notext")###183:13:197:34
9d7d0056f24d3e3e9a0c88f720bdcb94176bad6f###/strimzi_strimzi-kafka-operator/systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaResource.java###/KafkaResource.java###io.strimzi.systemtest.resources.crd.KafkaResource###delete:Kafka ###kafkaClient().inNamespace(resource.getMetadata().getNamespace()).withName(resource.getMetadata().getName()).withPropagationPolicy(DeletionPropagation.FOREGROUND).delete();###namespaceName###resource.getMetadata().getNamespace()###43:9:44:110
df8d039af6828ee1dec6c838e423db7686028a26###/strimzi_strimzi-kafka-operator/systemtest/src/test/java/io/strimzi/systemtest/metrics/JmxST.java###/JmxST.java###io.strimzi.systemtest.metrics.JmxST###testKafkaZookeeperAndKafkaConnectWithJMX:ExtensionContext ###StringkafkaConnectResults=JmxUtils.execJmxTermAndGetResult(namespaceName,KafkaConnectResources.serviceName(clusterName),clusterName+"-kafka-connect-jmx",clientsPodName,"beankafka.connect:type=app-info\nget-i*");###connectJmxSecretName###clusterName+"-kafka-connect-jmx"###93:9:93:232
75a509e54fd897d63d3b4888d6aedc2ff0f582c5###/strimzi_strimzi-kafka-operator/cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/CertificateRenewalTest.java###/CertificateRenewalTest.java###io.strimzi.operator.cluster.operator.assembly.CertificateRenewalTest###testNewCertsGetGeneratedWhenInRenewalPeriodAuto:VertxTestContext ###assertThat(initialClusterCaCertSecret.getData().keySet(),is(set(CA_CRT,CA_STORE,CA_STORE_PASSWORD)));###clusterCaCertData###initialClusterCaCertSecret.getData()###460:9:460:113
df8d039af6828ee1dec6c838e423db7686028a26###/strimzi_strimzi-kafka-operator/systemtest/src/test/java/io/strimzi/systemtest/metrics/JmxST.java###/JmxST.java###io.strimzi.systemtest.metrics.JmxST###testKafkaZookeeperAndKafkaConnectWithJMX:ExtensionContext ###StringkafkaResults=JmxUtils.execJmxTermAndGetResult(namespaceName,KafkaResources.brokersServiceName(clusterName),clusterName+"-kafka-jmx",clientsPodName,"beankafka.server:type=app-info\nget-i*");###kafkaJmxSecretName###clusterName+"-kafka-jmx"###92:9:92:216
23548c30aeb00b4d2a2df07592661b9fa9f399f1###/strimzi_strimzi-kafka-operator/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaConnectAssemblyOperator.java###/KafkaConnectAssemblyOperator.java###io.strimzi.operator.cluster.operator.assembly.KafkaConnectAssemblyOperator###createOrUpdate:Reconciliation KafkaConnect ###annotations.put(Annotations.ANNO_STRIMZI_LOGGING_DYNAMICALLY_UNCHANGEABLE_HASH,Util.stringHash(Util.getLoggingDynamicallyUnmodifiableEntries(logAndMetricsConfigMap.getData().get(AbstractModel.ANCILLARY_CM_KEY_LOG_CONFIG))));###logging###logAndMetricsConfigMap.getData().get(AbstractModel.ANCILLARY_CM_KEY_LOG_CONFIG)###160:21:161:174
8ea9a7fca51944355f84f58c2fd1494358524a37###/strimzi_strimzi-kafka-operator/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/VolumeUtils.java###/VolumeUtils.java###io.strimzi.operator.cluster.model.VolumeUtils###getDataPersistentVolumeClaims:Storage ###pvcs.add(createPersistentVolumeClaimTemplate(name,(PersistentClaimStorage)storage));###persistentStorage###(PersistentClaimStorage)storage###351:17:351:103
a776776d497a1623ff2515097db2573c0034bb65###/strimzi_strimzi-kafka-operator/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java###/KafkaAssemblyOperator.java###io.strimzi.operator.cluster.operator.assembly.KafkaAssemblyOperator.ReconciliationState###cleanPodAndPvc:StatefulSetOperator StatefulSet String List<PersistentVolumeClaim> List<PersistentVolumeClaim> ###createResults.add(pvcOperations.reconcile(reconciliation,namespace,pvc.getMetadata().getName(),pvc));###pvcName###pvc.getMetadata().getName()###3053:29:3053:133
75a509e54fd897d63d3b4888d6aedc2ff0f582c5###/strimzi_strimzi-kafka-operator/cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/CertificateRenewalTest.java###/CertificateRenewalTest.java###io.strimzi.operator.cluster.operator.assembly.CertificateRenewalTest###testNewCertsGetGeneratedWhenInRenewalPeriodAuto:VertxTestContext ###assertThat(initialClientsCaKeySecret.getData().keySet(),is(singleton(CA_KEY)));###clientsCaKeyData###initialClientsCaKeySecret.getData()###476:9:476:89
979e3623f97dde2cc0c0ece3a8bf52ebf078cdbb###/strimzi_strimzi-kafka-operator/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/KafkaConnectDockerfile.java###/KafkaConnectDockerfile.java###io.strimzi.operator.cluster.model.KafkaConnectDockerfile###addZipArtifact:PrintWriter String ZipArtifact ###StringartifactDir=connectorPath+"/"+Util.sha1Prefix(zip.getUrl());###artifactHash###Util.sha1Prefix(zip.getUrl())###218:9:218:82
23548c30aeb00b4d2a2df07592661b9fa9f399f1###/strimzi_strimzi-kafka-operator/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaMirrorMaker2AssemblyOperator.java###/KafkaMirrorMaker2AssemblyOperator.java###io.strimzi.operator.cluster.operator.assembly.KafkaMirrorMaker2AssemblyOperator###createOrUpdate:Reconciliation KafkaMirrorMaker2 ###annotations.put(Annotations.ANNO_STRIMZI_LOGGING_DYNAMICALLY_UNCHANGEABLE_HASH,Util.stringHash(Util.getLoggingDynamicallyUnmodifiableEntries(logAndMetricsConfigMap.getData().get(AbstractModel.ANCILLARY_CM_KEY_LOG_CONFIG))));###logging###logAndMetricsConfigMap.getData().get(AbstractModel.ANCILLARY_CM_KEY_LOG_CONFIG)###169:21:170:174
8ea9a7fca51944355f84f58c2fd1494358524a37###/strimzi_strimzi-kafka-operator/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ZookeeperCluster.java###/ZookeeperCluster.java###io.strimzi.operator.cluster.model.ZookeeperCluster###getVolumeClaims:###pvcList.add(VolumeUtils.createPersistentVolumeClaimTemplate(VOLUME_NAME,(PersistentClaimStorage)storage));###persistentStorage###(PersistentClaimStorage)storage###733:13:733:121
ab5f33260aabbf7bc9e4d882f459a2362c5dd6f6###/strimzi_strimzi-kafka-operator/systemtest/src/test/java/io/strimzi/systemtest/tracing/TracingST.java###/TracingST.java###io.strimzi.systemtest.tracing.TracingST###testProducerConsumerMirrorMaker2Service:ExtensionContext ###resourceManager.createResource(extensionContext,KafkaTopicTemplates.topic(kafkaClusterTargetName,kafkaClusterSourceName+"."+extensionContext.getStore(ExtensionContext.Namespace.GLOBAL).get(Constants.TOPIC_KEY).toString()).editSpec().withReplicas(3).withPartitions(12).endSpec().build());###sourceTopicName###kafkaClusterSourceName+"."+extensionContext.getStore(ExtensionContext.Namespace.GLOBAL).get(Constants.TOPIC_KEY).toString()###358:9:363:23
61a2301390fb9ecc87feb1925d0c2d2f1b2f8107###/strimzi_strimzi-kafka-operator/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaConnectApiImpl.java###/KafkaConnectApiImpl.java###io.strimzi.operator.cluster.operator.assembly.KafkaConnectApiImpl###updateLoggers:Reconciliation String int String Map<String,String> OrderedProperties ###addToLoggers(newOrderedProperties().addStringPairs(Util.expandVars(desiredLogging)).asMap(),updateLoggers);###desiredMap###newOrderedProperties().addStringPairs(Util.expandVars(desiredLogging)).asMap()###478:9:478:118
