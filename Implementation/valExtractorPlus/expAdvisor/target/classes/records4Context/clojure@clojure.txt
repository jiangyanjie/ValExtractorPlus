9671d467aca8b7c9cae17e40ba3ff81a611fbe22###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler###lookupVar:Symbol boolean ###var=ns.findInternedVar(Symbol.create(sym.name));###name###Symbol.create(sym.name)###3308:3:3308:53
148a0c9aa83b12efaa43c72e5ee39baff0948f9a###/clojure_clojure/src/jvm/clojure/asm/ByteVector.java###/ByteVector.java###clojure.asm.ByteVector###put12:int int ###data[length++]=(byte)b;###currentLength###length###145:9:145:35
d923bb2443b15753bccfa753e9677504ffb90188###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler.InvokeExpr###InvokeExpr:String int Symbol Expr IPersistentVector ###Varpvar=(Var)RT.get(((VarExpr)fexpr).var.meta(),protocolKey);###fvar###((VarExpr)fexpr).var###2701:4:2701:70
34489bddcceb2c1102c30e6b3e417d981097453c###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler.CaseExpr.Parser###parse:C Object ###LocalBindingExprtestexpr=(LocalBindingExpr)analyze(C.EXPRESSION,args.nth(0));###exprForm###args.nth(0)###7800:13:7800:95
8fee9ad0098507c929721b136b9401b7763d85f5###/clojure_clojure/src/jvm/clojure/lang/Util.java###/Util.java###clojure.lang.Util###clearCache:ReferenceQueue ConcurrentHashMap<K,Reference<V>> ###cache.remove(e.getKey(),e.getValue());###val###e.getValue()###137:5:137:44
c256b1a964d6f6bb64a120820394c749bc49b407###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler###loadFile:String ###returnload(newFileInputStream(file));###f###newFileInputStream(file)###2624:3:2624:42
877c875235aaa7d9bc1bf5392f1c4991e9ea3f63###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler.ObjExpr###emitValue:Object GeneratorAdapter ###emitListAsObjectArray(RT.seq(value),gen);###vs###RT.seq(value)###4250:4:4250:46
9506ca6e7589599c17e165d6583a9c97aa1ca0c0###/clojure_clojure/src/jvm/clojure/lang/Numbers.java###/Numbers.java###clojure.lang.Numbers###minusP:Object Object ###returnops(x).combine(yops).addP((Number)x,yops.negateP((Number)y));###negativeY###yops.negateP((Number)y)###170:2:170:71
662b38415e15edcbd720628c0c07a8f8817c96b4###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler.MapExpr###parse:C IPersistentMap ###keyvals=(IPersistentVector)keyvals.cons(analyze(context==C.EVAL?context:C.EXPRESSION,e.key()));###k###analyze(context==C.EVAL?context:C.EXPRESSION,e.key())###2512:4:2512:109
6b8b308e3a36a79489d7b923620b7d83cd0b6da5###/clojure_clojure/src/jvm/clojure/lang/TransactionalHashMap.java###/TransactionalHashMap.java###clojure.lang.TransactionalHashMap###binFor:Object ###returnk.hashCode()%bins.length;###h###k.hashCode()###26:2:26:36
0d7aed7deeebc3a540815eb245320597d129e2f2###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler.VectorExpr###parse:C IPersistentVector ###args=(IPersistentVector)args.cons(analyze(context==C.EVAL?context:C.EXPRESSION,form.nth(i)));###v###analyze(context==C.EVAL?context:C.EXPRESSION,form.nth(i))###2626:4:2626:107
f514ad60efe36befa659f19ea5f3bf17b247aaed###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler###referenceLocal:Symbol ###closeOver(b,(FnMethod)METHOD.get());###method###(FnMethod)METHOD.get()###3545:3:3545:41
f5ca90d25e067a2c9131f549eca3a008bd1c8308###/clojure_clojure/src/jvm/clojure/lang/LispReader.java###/LispReader.java###clojure.lang.LispReader.MapReader###invoke:Object Object ###returnRT.map(readDelimitedList('}',r,true).toArray());###a###readDelimitedList('}',r,true).toArray()###1024:3:1024:60
96ff86023ba381c7126467dfa417a0a6e095a884###/clojure_clojure/src/jvm/clojure/lang/PersistentHashMap2.java###/PersistentHashMap2.java###clojure.lang.PersistentHashMap2.ArrayNode.Seq###create:IPersistentMap INode[] int ISeq ###returnnewSeq(meta,nodes,j+1,nodes[j].nodeSeq());###ns###nodes[j].nodeSeq()###421:6:421:61
148a0c9aa83b12efaa43c72e5ee39baff0948f9a###/clojure_clojure/src/jvm/clojure/asm/ByteVector.java###/ByteVector.java###clojure.asm.ByteVector###putShort:int ###data[length++]=(byte)(s>>>8);###currentLength###length###123:9:123:43
2ea56006cb0ee74559ecd5d97e05944c6ee21fc4###/clojure_clojure/src/jvm/clojure/lang/Agent.java###/Agent.java###clojure.lang.Agent.Action###doRun:Action ###changed=action.agent.setState(action.fn.applyTo(RT.cons(action.agent.state,action.args)));###newval###action.fn.applyTo(RT.cons(action.agent.state,action.args))###69:5:69:98
06be2c38f892fa63a4b53a6700a09e19c6345c54###/clojure_clojure/src/jvm/clojure/lang/TRef.java###/TRef.java###clojure.lang.TRef###isBound:###return(dvals!=null&&dvals.get()!=null)||getCurrentTVal()!=null;###dv###dvals.get()###102:2:104:34
da97e4b157f42c931643316434de6b27e70c75ca###/clojure_clojure/src/jvm/clojure/lang/Namespace.java###/Namespace.java###clojure.lang.Namespace###initWith:Namespace ###if(mappings.get()==RT.DEFAULT_IMPORTS)###dimp###RT.DEFAULT_IMPORTS###187:3:207:5
34489bddcceb2c1102c30e6b3e417d981097453c###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler.CaseExpr.Parser###parse:C Object ###returnnewCaseExpr(((Number)LINE.deref()).intValue(),testexpr,((Number)args.nth(1)).intValue(),((Number)args.nth(2)).intValue(),((Number)args.nth(3)).intValue(),((Number)args.nth(4)).intValue(),defaultExpr,tests,thens,args.nth(7)!=RT.F);###line###((Number)LINE.deref()).intValue()###7833:4:7840:55
80a77a6271dd90317558239f589bb5720f9640ef###/clojure_clojure/src/jvm/clojure/lang/Numbers.java###/Numbers.java###clojure.lang.Numbers###reduce:BigInteger ###if(val.bitLength()<32)###bitLength###val.bitLength()###268:2:273:14
74f0241a5dd6bda5e38dae0acce59f13cc73d0d0###/clojure_clojure/src/jvm/clojure/lang/PersistentHashMap2.java###/PersistentHashMap2.java###clojure.lang.PersistentHashMap2.BitmapIndexedNode###assoc:int int Object Object Box ###returnnewBitmapIndexedNode(null,bitmap,cloneAndSet(array,2*idx,createNode(shift+5,keyOrNode,array[2*idx+1],hash,key,val),2*idx+1,null));###valOrNode###array[2*idx+1]###489:4:492:24
5fda6cb262d1807566ecadd3af9aaafb58ee5544###/clojure_clojure/src/jvm/clojure/lang/Reflector.java###/Reflector.java###clojure.lang.Reflector###invokeNoArgInstanceMember:Object String ###Listmeths=getMethods(target.getClass(),0,name,false);###c###target.getClass()###296:2:296:61
83fc4fe476b75553a4c2db8bd4f7fdfc02379dce###/clojure_clojure/src/jvm/clojure/lang/Keyword.java###/Keyword.java###clojure.lang.Keyword###find:Symbol ###returntable.get(sym).get();###ref###table.get(sym)###57:5:57:33
f95175264df36c3d8fe2113aa9af92cda0f2f5c8###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler###macroexpand1:Object ###returnRT.listStar(DOT,RT.second(form),meth,form.rest().rest());###target###RT.second(form)###4044:6:4044:73
b8e333fb3437dca760f16136ed074a4dd463fe35###/clojure_clojure/src/jvm/clojure/lang/RT.java###/RT.java###clojure.lang.RT###seqFrom:Object ###thrownewIllegalArgumentException("Don'tknowhowtocreateISeqfrom:"+coll.getClass().getSimpleName());###c###coll.getClass()###491:3:491:112
4be49c5b2a179ab396e631dc533b14f7ea699c97###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler.DefExpr.Parser###parse:C Object ###Varv=lookupVar((Symbol)RT.second(form),true);###sym###(Symbol)RT.second(form)###261:4:261:54
acb5edd8085bff75b8940fa4a70ca317961e471f###/clojure_clojure/src/jvm/clojure/lang/BytecodeCompiler.java###/BytecodeCompiler.java###clojure.lang.BytecodeCompiler###analyzeMethod:FnExpr ISeq ###method.reqParms=method.reqParms.cons(createParamBinding((Symbol)p));###lb###createParamBinding((Symbol)p)###300:7:300:78
f67252e090fd6492efe1bb668ea545099ab75ad6###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler.FnExpr###compile:###ctorgen.visitVarInsn(Type.getType(lb.getPrimitiveType()).getOpcode(Opcodes.ILOAD),a);###primc###lb.getPrimitiveType()###2921:5:2921:91
817abb3d0ca3b7ee80cfe17b5cfe3ea8306f0720###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler###eval:Object boolean ###line=RT.meta(form).valAt(RT.LINE_KEY);###meta###RT.meta(form)###7150:4:7150:44
148a0c9aa83b12efaa43c72e5ee39baff0948f9a###/clojure_clojure/src/jvm/clojure/asm/ByteVector.java###/ByteVector.java###clojure.asm.ByteVector###putInt:int ###data[length++]=(byte)(i>>>24);###currentLength###length###166:9:166:44
59f0b4054666b684a16500c84f51134f099a0191###/clojure_clojure/src/jvm/clojure/lang/Numbers.java###/Numbers.java###clojure.lang.Numbers.LongOps###negate:Number ###return-x.longValue();###val###x.longValue()###586:3:586:25
790202489f743796c20536daa26e77091720cd5c###/clojure_clojure/src/jvm/clojure/lang/Num.java###/Num.java###clojure.lang.Num###divide:Object Object ###returnNum.from(x).divideBy(Num.from(y));###ny###Num.from(y)###98:2:98:43
48bd0825f45f2255d851ba0f3236a454f6178ae0###/clojure_clojure/src/jvm/clojure/lang/Transaction.java###/Transaction.java###clojure.lang.Transaction###get2:TRef ###returnThreadLocalData.getTransaction().get(tref);###trans###ThreadLocalData.getTransaction()###72:3:72:53
ee08483128f4df1a26fe4e18926938306ef8d419###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler###lookupVar:Symbol boolean ###Namespacens=Namespace.find(Symbol.create(sym.ns));###nsSym###Symbol.create(sym.ns)###3900:3:3900:56
148a0c9aa83b12efaa43c72e5ee39baff0948f9a###/clojure_clojure/src/jvm/clojure/asm/ClassReader.java###/ClassReader.java###clojure.asm.ClassReader###readCode:MethodVisitor Context int ###opcode=b[u+1]&0xFF;###classFileBuffer###b###988:17:988:42
148a0c9aa83b12efaa43c72e5ee39baff0948f9a###/clojure_clojure/src/jvm/clojure/asm/ByteVector.java###/ByteVector.java###clojure.asm.ByteVector###putLong:long ###data[length++]=(byte)(i>>>24);###currentLength###length###189:9:189:44
7ceb044e9ee962c4fd5f86a9152a4ed703ef5c80###/clojure_clojure/src/jvm/clojure/lang/Reflector.java###/Reflector.java###clojure.lang.Reflector###invokeMatchingMethod:List Object Object[] ###Classsc=c.getSuperclass()###sc###c.getSuperclass()###81:8:81:36
5ce45d651e0c6f9c8badd1e41d94d461b190bbc0###/clojure_clojure/src/jvm/clojure/lang/Var.java###/Var.java###clojure.lang.Var###cloneThreadBindingFrame:###Framef=(Frame)dvals.get().clone();###f###dvals.get()###106:2:106:40
76c8f45293987b80e3599535dd86482e1180661d###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler.IfExpr.Parser###parse:C Object ###returnnewIfExpr((Integer)LINE.deref(),analyze(context==C.EVAL?context:C.EXPRESSION,RT.second(form)),analyze(context,RT.third(form)),analyze(context,RT.fourth(form)));###testexpr###analyze(context==C.EVAL?context:C.EXPRESSION,RT.second(form))###2234:4:2237:57
974a64c06917861b7557fd73154254195b2de548###/clojure_clojure/src/jvm/clojure/lang/LispReader.java###/LispReader.java###clojure.lang.LispReader.EvalReader###invoke:Object Object ###returnRT.classForName(o.toString());###s###o.toString()###1037:4:1037:41
148a0c9aa83b12efaa43c72e5ee39baff0948f9a###/clojure_clojure/src/jvm/clojure/asm/ByteVector.java###/ByteVector.java###clojure.asm.ByteVector###putByte:int ###data[length++]=(byte)b;###currentLength###length###82:9:82:35
176a660fb3d4a6136dc342b082288e4f29048dfc###/clojure_clojure/src/jvm/clojure/lang/RT.java###/RT.java###clojure.lang.RT###first:Object ###returnseq(x).first();###seq###seq(x)###240:2:240:24
0d7aed7deeebc3a540815eb245320597d129e2f2###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler.SetExpr###parse:C IPersistentSet ###keys=(IPersistentVector)keys.cons(analyze(context==C.EVAL?context:C.EXPRESSION,e));###expr###analyze(context==C.EVAL?context:C.EXPRESSION,e)###2581:4:2581:97
4d98e904d2802a6630eeb4d2e5429c7e9c3fd638###/clojure_clojure/src/jvm/clojure/lang/AFn.java###/AFn.java###clojure.lang.AFn###applyToHelper:IFn ISeq ###returnifn.invoke(arglist.first());###a1###arglist.first()###173:4:173:39
2ea56006cb0ee74559ecd5d97e05944c6ee21fc4###/clojure_clojure/src/jvm/clojure/lang/LockingTransaction.java###/LockingTransaction.java###clojure.lang.LockingTransaction###run:Callable ###ref.tvals=newRef.TVal(e.getValue(),commitPoint,msecs);###newval###e.getValue()###272:7:272:66
961bb483ff08f6508390a6467d0758efe2c1ba85###/clojure_clojure/src/jvm/clojure/lang/RT.java###/RT.java###clojure.lang.RT###more:Object ###returnnull;###ret###null###575:3:575:15
78d62cd0b35f3ea6ee0ea98815c2810e74364326###/clojure_clojure/src/jvm/clojure/lang/LispReader.java###/LispReader.java###clojure.lang.LispReader###matchNumber:String ###returnNumbers.divide(Numbers.reduceBigInt(BigInt.fromBigInteger(newBigInteger(m.group(1)))),Numbers.reduceBigInt(BigInt.fromBigInteger(newBigInteger(m.group(2)))));###numerator###m.group(1)###402:3:403:98
e2299ed977bf9fb0de155b0d4efd2737987855e6###/clojure_clojure/src/jvm/clojure/lang/Var.java###/Var.java###clojure.lang.Var###commuteRoot:IFn ###this.root=fn.invoke(root);###newRoot###fn.invoke(root)###205:2:205:30
974a64c06917861b7557fd73154254195b2de548###/clojure_clojure/src/jvm/clojure/lang/LispReader.java###/LispReader.java###clojure.lang.LispReader.EvalReader###invoke:Object Object ###returnReflector.invokeConstructor(RT.classForName(fs.name.substring(0,fs.name.length()-1)),args);###c###RT.classForName(fs.name.substring(0,fs.name.length()-1))###1050:5:1050:107
34489bddcceb2c1102c30e6b3e417d981097453c###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler.CaseExpr.Parser###parse:C Object ###returnnewCaseExpr(((Number)LINE.deref()).intValue(),testexpr,((Number)args.nth(1)).intValue(),((Number)args.nth(2)).intValue(),((Number)args.nth(3)).intValue(),((Number)args.nth(4)).intValue(),defaultExpr,tests,thens,args.nth(7)!=RT.F);###shift###((Number)args.nth(1)).intValue()###7833:4:7840:55
7d0f5d805e6588de1ddfe4c6f3dbe8280fefd9d3###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler.FnExpr###compile:###clinitgen.push(RT.printString(constants.nth(i)));###cs###RT.printString(constants.nth(i))###3048:5:3048:54
06be2c38f892fa63a4b53a6700a09e19c6345c54###/clojure_clojure/src/jvm/clojure/lang/TRef.java###/TRef.java###clojure.lang.TRef###getThreadBinding:###return(Binding)dvals.get();###dv###dvals.get()###54:3:54:32
34489bddcceb2c1102c30e6b3e417d981097453c###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler.CaseExpr.Parser###parse:C Object ###returnnewCaseExpr(((Number)LINE.deref()).intValue(),testexpr,((Number)args.nth(1)).intValue(),((Number)args.nth(2)).intValue(),((Number)args.nth(3)).intValue(),((Number)args.nth(4)).intValue(),defaultExpr,tests,thens,args.nth(7)!=RT.F);###mask###((Number)args.nth(2)).intValue()###7833:4:7840:55
65528bfe81d605eab6fe3e475ada08f55bcc5ab5###/clojure_clojure/src/jvm/clojure/lang/RT.java###/RT.java###clojure.lang.RT###seqFrom:Object ###thrownewIllegalArgumentException("Don'tknowhowtocreateISeqfrom:"+coll.getClass().getSimpleName());###c###coll.getClass()###500:3:500:112
f73bf9542f09528ab913da76b6bff661f3583e04###/clojure_clojure/src/jvm/clojure/lang/Reflector.java###/Reflector.java###clojure.lang.Reflector###getMethods:Class int String boolean ###methods.add(allmethods[i]);###method###allmethods[i]###320:5:320:32
135c7b3bf87ea2e9e201b52ae8ff48b44f2bd511###/clojure_clojure/src/jvm/clojure/lang/Reflector.java###/Reflector.java###clojure.lang.Reflector###invokeMatchingMethod:String List Object Object[] ###m=null;###foundm###null###55:5:55:14
aeb160665adff7925207d7f60f3a7fdf5837cad0###/clojure_clojure/src/jvm/clojure/lang/BytecodeCompiler.java###/BytecodeCompiler.java###clojure.lang.BytecodeCompiler.LetExpr###parse:C ISeq boolean ###BindingInitbi=newBindingInit(lb,analyze(C.EXPRESSION,RT.second(bs),sym.name));###init###analyze(C.EXPRESSION,RT.second(bs),sym.name)###527:5:527:90
76c8f45293987b80e3599535dd86482e1180661d###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler.TryExpr.Parser###parse:C Object ###returnnewTryExpr((newBodyExpr.Parser()).parse(context,RT.seq(body)),catches,finallyExpr,retLocal,finallyLocal);###bodyExpr###(newBodyExpr.Parser()).parse(context,RT.seq(body))###1838:4:1839:37
74f0241a5dd6bda5e38dae0acce59f13cc73d0d0###/clojure_clojure/src/jvm/clojure/lang/PersistentHashMap2.java###/PersistentHashMap2.java###clojure.lang.PersistentHashMap2.BitmapIndexedNode###find:int int Object ###returnnewMapEntry(keyOrNode,array[2*idx+1]);###valOrNode###array[2*idx+1]###558:4:558:51
fb916808669ef65dce5dfe58e23d4a902253ca55###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler.FnMethod###doEmitPrim:ObjExpr ClassVisitor ###gen.box(getReturnType());###targetReturnType###getReturnType()###5654:3:5654:28
baed4be30a25d1fa9909baab16702a520b688aaf###/clojure_clojure/src/jvm/clojure/lang/BytecodeCompiler.java###/BytecodeCompiler.java###clojure.lang.BytecodeCompiler.FnExpr###compile:###mg.putField(Type.getObjectType(internalName),lb.name,OBJECT_TYPE);###fntype###Type.getObjectType(internalName)###401:4:401:72
176a660fb3d4a6136dc342b082288e4f29048dfc###/clojure_clojure/src/jvm/clojure/lang/RT.java###/RT.java###clojure.lang.RT###rest:Object ###returnseq(x).rest();###seq###seq(x)###258:2:258:23
74f0241a5dd6bda5e38dae0acce59f13cc73d0d0###/clojure_clojure/src/jvm/clojure/lang/PersistentHashMap2.java###/PersistentHashMap2.java###clojure.lang.PersistentHashMap2.BitmapIndexedNode###find:int int Object Object ###returnarray[2*idx+1];###valOrNode###array[2*idx+1]###573:4:573:26
bb50ab5256b62f29b48a03faca6bfaa116aff2ea###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler###analyzeLetStar:C ISeq ###bindingInits=bindingInits.cons(newBindingInit(lb,analyze(C.EXPRESSION,RT.second(bs))));###bi###newBindingInit(lb,analyze(C.EXPRESSION,RT.second(bs)))###422:12:422:104
b8e333fb3437dca760f16136ed074a4dd463fe35###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler.FnExpr###emitConstants:GeneratorAdapter ###cs=RT.printString(constants.nth(i));###o###constants.nth(i)###3193:25:3193:63
ea7c34b1a74f6650d0b8e0332263e83795c923e4###/clojure_clojure/src/jvm/clojure/lang/RT.java###/RT.java###clojure.lang.RT###lastModified:URL String ###return((JarURLConnection)url.openConnection()).getJarFile().getEntry(libfile).getTime();###connection###url.openConnection()###388:3:388:93
23746eea2349427de10ace01ef9178c707cebc3e###/clojure_clojure/src/jvm/clojure/lang/RT.java###/RT.java###clojure.lang.RT###intCast:long ###return(int)x;###i###(int)x###955:2:955:17
148a0c9aa83b12efaa43c72e5ee39baff0948f9a###/clojure_clojure/src/jvm/clojure/asm/ByteVector.java###/ByteVector.java###clojure.asm.ByteVector###put11:int int ###data[length++]=(byte)b1;###currentLength###length###103:9:103:36
87fa6c793592b7a3e99fcf9fb7cc08986889846a###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler.ObjExpr###emitValue:Object GeneratorAdapter ###emitValue(((IObj)value).meta(),gen);###m###((IObj)value).meta()###4468:5:4468:43
caa3b4fdc8da5880309b317d0045b1280181c452###/clojure_clojure/src/jvm/clojure/lang/RT.java###/RT.java###clojure.lang.RT###load:String boolean ###URLcljURL=getResource(baseLoader(),cljfile);###scriptfile###cljfile###418:2:418:50
6ab3e4cd672092823a04c944210a23c29142785d###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler.MethodExpr###emitTypedArgs:ObjExpr GeneratorAdapter Class[] IPersistentVector ###if(maybePrimitiveType(e)==parameterTypes[i])###primc###maybePrimitiveType(e)###1166:5:1174:7
309c03055b06525c275b278542c881019424760e###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler.InvokeExpr###InvokeExpr:String int int Symbol Expr IPersistentVector boolean ###Objectarglists=RT.get(RT.meta(((VarExpr)fexpr).var),arglistsKey);###v###((VarExpr)fexpr).var###3632:7:3632:77
c78855af24bd4cc2f9895d8b2dc4a7fced8453f3###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler.ThrowExpr###eval:###throw(Exception)excExpr.eval();###t###excExpr.eval()###1467:3:1467:36
59f0b4054666b684a16500c84f51134f099a0191###/clojure_clojure/src/jvm/clojure/lang/Numbers.java###/Numbers.java###clojure.lang.Numbers.IntegerOps###negate:Number ###return-x.intValue();###val###x.intValue()###460:3:460:24
f12a76d3063e4a024b1e67a63c4f9fc12d168088###/clojure_clojure/src/jvm/clojure/lang/LispReader.java###/LispReader.java###clojure.lang.LispReader.ListReader###invoke:Object Object ###returnRT.seq(readDelimitedList(')',r,true));###list###readDelimitedList(')',r,true)###438:3:438:50
65528bfe81d605eab6fe3e475ada08f55bcc5ab5###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler.FnExpr###emitConstants:GeneratorAdapter ###cs=RT.printString(constants.nth(i));###o###constants.nth(i)###3188:25:3188:63
3e4c6f003de2a50d164a90defb566dba93f465a1###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler###getMatchingParams:String ArrayList<Class[]> IPersistentVector List<Class> ###match=Reflector.paramArgTypeMatch(paramlists.get(i)[p],aclass);###pclass###paramlists.get(i)[p]###2033:4:2033:70
06be2c38f892fa63a4b53a6700a09e19c6345c54###/clojure_clojure/src/jvm/clojure/lang/TRef.java###/TRef.java###clojure.lang.TRef###pushThreadBinding:T ###dvals.set(newBinding(val,(Binding)dvals.get()));###dv###dvals.get()###67:2:67:53
b32e35ae89d291882dbdb662c4193ecfa9a593e8###/clojure_clojure/src/jvm/clojure/lang/Compiler.java###/Compiler.java###clojure.lang.Compiler.InstanceMethodExpr###emit:C ObjExpr GeneratorAdapter ###HostExpr.emitBoxReturn(objx,gen,method.getReturnType());###retClass###method.getReturnType()###1616:4:1616:62
