c9b6b79e396fb45945e1d888fce7b1c94d24f70a###/javaparser_javaparser/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java###/PositionUtilsTest.java###com.github.javaparser.utils.PositionUtilsTest###nodeContainsAnnotationsWithCommentAtTheEnd:###Commento=x.getName().getComment().get();###simpleName###x.getName()###81:9:81:52
dd0a5115c43b8c3151251a4c75321f28be960f64###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/StatementContext.java###/StatementContext.java###com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext###solveSymbol:String ###symbolReference=JavaParserFactory.getContext(statementListIterator.previous(),typeSolver).solveSymbol(name);###prevContext###JavaParserFactory.getContext(statementListIterator.previous(),typeSolver)###242:17:242:128
837758135a7b49391643fb56f24ef3c3193ff18b###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java###/LambdaExprContext.java###com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext###solveSymbolAsValue:String ###if(demandParentNode(wrappedNode)instanceofReturnStmt)###parentNode###demandParentNode(wrappedNode)###136:28:167:22
1c6fd4770459d2d582bc95f0ce182392310e14b6###/javaparser_javaparser/javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinter.java###/LexicalPreservingPrinter.java###com.github.javaparser.printer.lexicalpreservation.LexicalPreservingPrinter###interpret:Node CsmElement NodeText ###nodeText.addChild(((LexicalDifferenceCalculator.CsmChild)element).getChild());###child###((LexicalDifferenceCalculator.CsmChild)element).getChild()###524:17:524:96
0ca8963f0b180fd5feb894a78aeaba28bd6d4d3b###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclaration.java###/JavaParserClassDeclaration.java###com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserClassDeclaration###getAncestors:boolean ###ResolvedTypeDeclarationrtd=rrt.getTypeDeclaration().get().asType();###resolvedReferenceTypeDeclaration###rrt.getTypeDeclaration()###355:17:355:87
370cf8fcb075c14142ebf238decfaf31b1b457e9###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java###/MethodCallExprContext.java###com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext###solveMethodAsUsage:ResolvedTypeVariable String List<ResolvedType> Context ###for(bound:tp.asTypeParameter().getBounds())###bounds###tp.asTypeParameter().getBounds()###387:9:392:10
78a793867d270112d31dd0d9bf6c9a65cbd35978###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolver.java###/JavaParserTypeSolver.java###com.github.javaparser.symbolsolver.resolution.typesolvers.JavaParserTypeSolver###JavaParserTypeSolver:Path ParserConfiguration long ###foundTypes=CacheBuilder.newBuilder().softValues().maximumSize(cacheSizeLimit).build();###cacheBuilder###CacheBuilder.newBuilder().softValues()###101:9:101:97
d559a0f6f1e107696af11f6f93a6100f3e5126f8###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java###/JavaParserFacade.java###com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade###findContainingTypeDeclOrObjectCreationExpr:Node String ###returnnode;###parent###node###630:13:630:25
8537485ed6e61f80811d83dc4473a92789f67e2c###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/typeinference/BoundSet.java###/BoundSet.java###com.github.javaparser.symbolsolver.resolution.typeinference.BoundSet###findPairsOfCommonAncestors:ResolvedReferenceType ResolvedReferenceType ###if(rtFrom1.getTypeDeclaration().equals(rtFrom2.getTypeDeclaration()))###rtFrom1TypeDeclaration###rtFrom1.getTypeDeclaration()###189:17:191:18
c9b6b79e396fb45945e1d888fce7b1c94d24f70a###/javaparser_javaparser/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java###/PositionUtilsTest.java###com.github.javaparser.utils.PositionUtilsTest###nodeDoesNotContainNoAnnotationsAnywhereIgnoringAnnotations:###booleancontains=nodeContains(field.getVariable(0).getType(),field.getVariable(0).getName(),true);###fieldName###field.getVariable(0).getName()###30:9:30:111
67c73e2ce2fa80249563260a3a58473dd5ec20a4###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclaration.java###/JavassistClassDeclaration.java###com.github.javaparser.symbolsolver.javassistmodel.JavassistClassDeclaration###solveMethod:String List<ResolvedType> boolean ###candidates.add(newJavassistMethodDeclaration(method,typeSolver));###candidate###newJavassistMethodDeclaration(method,typeSolver)###206:17:206:84
998c7c85f8a45f5bd728e6c6ba3870dfbd154760###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java###/JavaParserFacade.java###com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade###solve:ObjectCreationExpr boolean ###SymbolReference<ResolvedConstructorDeclaration>res=ConstructorResolutionLogic.findMostApplicable(classDecl.asReferenceType().getTypeDeclaration().getConstructors(),argumentTypes,typeSolver);###typeDecl###classDecl.asReferenceType().getTypeDeclaration()###204:9:204:204
dda37540e45634422332c6348d90b0b0c6545bb1###/javaparser_javaparser/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java###/JavaParserInterfaceDeclarationTest.java###com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclarationTest###testGetAllAncestorsWithTypeParameters:###assertEquals(12,constructorDeclaration.getAllAncestors().size());###ancestors###constructorDeclaration.getAllAncestors()###356:9:356:75
d559a0f6f1e107696af11f6f93a6100f3e5126f8###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java###/JavaParserFacade.java###com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade###findContainingTypeDeclOrObjectCreationExpr:Node ###returnnode;###parent###node###612:13:612:25
bccb8bd5d3fd8285c904cc2e5831e6a8b594c87e###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java###/JavaParserFacade.java###com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade###findContainingTypeDeclOrObjectCreationExpr:Node ###returnnode;###parent###node###581:13:581:25
dda37540e45634422332c6348d90b0b0c6545bb1###/javaparser_javaparser/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java###/JavaParserEnumDeclarationTest.java###com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclarationTest###testGetAllAncestorsWithTypeParameters:###assertEquals(12,constructorDeclaration.getAllAncestors().size());###ancestors###constructorDeclaration.getAllAncestors()###355:9:355:75
90df3f01623ecd014cbf38620fdc1b97a210eafb###/javaparser_javaparser/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java###/JavaParserClassDeclarationTest.java###com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserClassDeclarationTest###testGetAllAncestorsWithTypeParameters:###assertEquals(12,constructorDeclaration.getAllAncestors().size());###ancestors###constructorDeclaration.getAllAncestors()###368:9:368:75
bccb8bd5d3fd8285c904cc2e5831e6a8b594c87e###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java###/JavaParserFacade.java###com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade###findContainingTypeDecl:Node ###return(ClassOrInterfaceDeclaration)node;###parent###node###544:13:544:55
5abc2efa920fb570744004d77bd1dbcfa8187e08###/javaparser_javaparser/javaparser-core/src/main/java/com/github/javaparser/resolution/MethodUsage.java###/MethodUsage.java###com.github.javaparser.resolution.MethodUsage###getSignature:###sb.append(getParamType(i).describe());###type###getParamType(i)###203:13:203:51
c9b6b79e396fb45945e1d888fce7b1c94d24f70a###/javaparser_javaparser/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java###/PositionUtilsTest.java###com.github.javaparser.utils.PositionUtilsTest###nodeContainsAnnotationsWithCommentAfterTheEnd:###Commento=x.getName().getComment().get();###simpleName###x.getName()###92:9:92:52
aeb68075e475584a590271c8d752bc834ef886ff###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclaration.java###/JavaParserClassDeclaration.java###com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserClassDeclaration###canBeAssignedTo:ResolvedReferenceTypeDeclaration ###if(Object.class.getCanonicalName().equals(superclass.getQualifiedName()))###objectClassName###Object.class.getCanonicalName()###246:13:248:14
cac75a4cb15ebd0c06306e75eabb5ed1b2182213###/javaparser_javaparser/javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java###/Difference.java###com.github.javaparser.printer.lexicalpreservation.Difference###applyAddedDiffElement:Added ###if(nodeText.numberOfElements()>originalIndex+1&&nodeText.getTextElement(originalIndex).isComment())###currentIsAComment###nodeText.getTextElement(originalIndex).isComment()###703:13:714:14
8537485ed6e61f80811d83dc4473a92789f67e2c###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/logic/FunctionalInterfaceLogic.java###/FunctionalInterfaceLogic.java###com.github.javaparser.symbolsolver.logic.FunctionalInterfaceLogic###isFunctionalInterfaceType:ResolvedType ###if(type.isReferenceType()&&type.asReferenceType().getTypeDeclaration().hasAnnotation(FunctionalInterface.class.getCanonicalName()))###optionalTypeDeclaration###type.asReferenceType().getTypeDeclaration()###76:9:78:10
c9b6b79e396fb45945e1d888fce7b1c94d24f70a###/javaparser_javaparser/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java###/PositionUtilsTest.java###com.github.javaparser.utils.PositionUtilsTest###nodeDoesNotContainNoAnnotationsAnywhereIgnoringAnnotations:###booleancontains=nodeContains(field.getVariable(0).getType(),field.getVariable(0).getName(),true);###fieldType###field.getVariable(0).getType()###30:9:30:111
9f8bfa7da4f0e7c598364e67bc6b39379c12fb67###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java###/MethodResolutionLogic.java###com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic###isMoreSpecific:ResolvedMethodDeclaration ResolvedMethodDeclaration List<ResolvedType> ###returnfalse;###isMethodAMoreSpecific###false###712:9:712:22
417e41a286ea6db3be215f44283984e799868b68###/javaparser_javaparser/javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java###/Difference.java###com.github.javaparser.printer.lexicalpreservation.Difference###applyAddedDiffElement:Added ###for(e:processIndentation(indentation,originalElements.subList(0,originalIndex-1)))###elements###processIndentation(indentation,originalElements.subList(0,originalIndex-1))###542:13:548:14
dafa24e04743b270ac34e56d16970a87e78cc975###/javaparser_javaparser/javaparser-core/src/main/java/com/github/javaparser/resolution/types/ResolvedReferenceType.java###/ResolvedReferenceType.java###com.github.javaparser.resolution.types.ResolvedReferenceType###compareConsideringTypeParameters:ResolvedReferenceType ###ResolvedTypethisParam=typeParametersValues().get(i);###typeParametersValues###typeParametersValues()###482:17:482:72
dea6ef11ea8dc977dd2b63a6a3e2713df8ad3a07###/javaparser_javaparser/javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java###/Difference.java###com.github.javaparser.printer.lexicalpreservation.Difference###applyAddedDiffElement:Added ###if(nodeText.numberOfElements()>originalIndex+1&&nodeText.getTextElement(originalIndex).isComment())###currentIsAComment###nodeText.getTextElement(originalIndex).isComment()###703:13:724:14
90df3f01623ecd014cbf38620fdc1b97a210eafb###/javaparser_javaparser/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java###/JavaParserClassDeclarationTest.java###com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserClassDeclarationTest###testGetAncestorsWithTypeParameters:###assertEquals(8,constructorDeclaration.getAncestors().size());###ancestors###constructorDeclaration.getAncestors()###323:9:323:71
bccb8bd5d3fd8285c904cc2e5831e6a8b594c87e###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/core/resolution/Context.java###/Context.java###com.github.javaparser.symbolsolver.core.resolution.Context###fieldDeclarationInScope:String ###Optional<ResolvedFieldDeclaration>localRes=parentContext.fieldsExposedToChild(((AbstractJavaParserContext)this).getWrappedNode()).stream().filter(vd->vd.getName().equals(name)).findFirst();###wrappedNode###((AbstractJavaParserContext)this).getWrappedNode()###169:9:173:30
e3ae340534ecf7406a548723488059b947a9f298###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java###/JavaParserFacade.java###com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade###convertToUsage:Type Context ###returnnewResolvedUnionType(unionType.getElements().stream().map(el->convertToUsage(el,context)).collect(Collectors.toList()));###resolvedElements###unionType.getElements().stream().map(el->convertToUsage(el,context)).collect(Collectors.toList())###693:13:693:144
eb7bdb74d91bf5640b3a9268b76fde9fb9f7a97d###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java###/MethodResolutionLogic.java###com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic###isMoreSpecific:ResolvedMethodDeclaration ResolvedMethodDeclaration List<ResolvedType> ###intlastIndex=argumentTypes.size()-1;###numberOfArgs###argumentTypes.size()###468:13:468:54
64ef518d6c10e9d570e9d3c1440a2df4f83ac468###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFactory.java###/JavaParserFactory.java###com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory###getContext:Node TypeSolver ###returngetContext(node.getParentNode().get().getParentNode().get(),typeSolver);###ancestor###node.getParentNode().get()###101:21:101:101
f0b08fe96f38488db0e7f723bf626156f149329f###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclaration.java###/JavassistClassDeclaration.java###com.github.javaparser.symbolsolver.javassistmodel.JavassistClassDeclaration###solveMethod:String List<ResolvedType> boolean ###candidates.add(newJavassistMethodDeclaration(method,typeSolver));###candidate###newJavassistMethodDeclaration(method,typeSolver)###205:17:205:84
c701438556bea4769d6db3daf4248d96a2683ac8###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/TypeExtractor.java###/TypeExtractor.java###com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor###visit:MethodReferenceExpr Boolean ###ResolvedTypeformalType=FunctionalInterfaceLogic.getFunctionalMethod(result).get().returnType();###functionalMethodOpt###FunctionalInterfaceLogic.getFunctionalMethod(result)###543:21:543:119
9ff9453580d401542782fccfdb2cc959562dd563###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java###/MethodCallExprContext.java###com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext###matchTypeParameters:ResolvedType ResolvedType Map<ResolvedTypeParameterDeclaration,ResolvedType> ###matchedTypeParameters.put(expectedType.asTypeParameter(),actualType);###type###actualType###375:13:375:83
c9b6b79e396fb45945e1d888fce7b1c94d24f70a###/javaparser_javaparser/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java###/PositionUtilsTest.java###com.github.javaparser.utils.PositionUtilsTest###nodeContainsAnnotationsWithCommentNodeInTheMiddle:###Commento=x.getAnnotationByName("B").get().getComment().get();###annotationB###x.getAnnotationByName("B").get()###70:9:70:73
786e40e2cf64a791010e507c5cd559fbdefdfdc5###/javaparser_javaparser/javaparser-core/src/main/java/com/github/javaparser/JavaParser.java###/JavaParser.java###com.github.javaparser.JavaParser###getParserForProvider:Provider ###if(configuration.getLanguageLevel()!=null)###languageLevel###configuration.getLanguageLevel()###93:9:99:10
69a2e0ed4e0f260ccd61cbb2594b2c3069e47990###/javaparser_javaparser/javaparser-core-metamodel-generator/src/main/java/com/github/javaparser/generator/metamodel/MetaModelGenerator.java###/MetaModelGenerator.java###com.github.javaparser.generator.metamodel.MetaModelGenerator###generateNodeMetaModels:CompilationUnit SourceRoot ###finalNodeList<Statement>initializeNodeMetaModelsStatements=metaModelCoid.getMethodsByName("initializeNodeMetaModels").get(0).getBody().get().getStatements();###initializeNodeMetaModelsMethod###metaModelCoid.getMethodsByName("initializeNodeMetaModels").get(0)###249:9:249:170
d559a0f6f1e107696af11f6f93a6100f3e5126f8###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java###/JavaParserFacade.java###com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade###findContainingTypeDecl:Node ###return(ClassOrInterfaceDeclaration)node;###parent###node###575:13:575:55
4996b16f7ce31662e87bc64f4b08f65449271944###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java###/JavaParserFacade.java###com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade###findContainingTypeDeclOrObjectCreationExpr:Node String ###returnnode;###parent###node###624:13:624:25
dda37540e45634422332c6348d90b0b0c6545bb1###/javaparser_javaparser/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java###/JavassistClassDeclarationTest.java###com.github.javaparser.symbolsolver.javassistmodel.JavassistClassDeclarationTest###testGetAllAncestorsWithTypeParameters:###assertEquals(12,constructorDeclaration.getAllAncestors().size());###ancestors###constructorDeclaration.getAllAncestors()###465:9:465:75
0ca8963f0b180fd5feb894a78aeaba28bd6d4d3b###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclaration.java###/JavaParserClassDeclaration.java###com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserClassDeclaration###getAncestors:boolean ###if(!rtd.getQualifiedName().contains(wrappedNode.getFullyQualifiedName().get()))###qualifiedName###wrappedNode.getFullyQualifiedName()###357:17:359:18
8537485ed6e61f80811d83dc4473a92789f67e2c###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java###/LambdaExprContext.java###com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext###solveSymbolAsValue:String ###if(demandParentNode(wrappedNode)instanceofReturnStmt)###parentNode###demandParentNode(wrappedNode)###140:28:171:22
c9b6b79e396fb45945e1d888fce7b1c94d24f70a###/javaparser_javaparser/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java###/PositionUtilsTest.java###com.github.javaparser.utils.PositionUtilsTest###nodeDoesNotContainNoAnnotationsAnywhere:###booleancontains=nodeContains(field.getVariable(0).getType(),field.getVariable(0).getName(),false);###fieldType###field.getVariable(0).getType()###50:9:50:112
60b6410ef54f289e8db1cf90503ccd6ed7d51975###/javaparser_javaparser/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java###/JavadocTest.java###com.github.javaparser.javadoc.JavadocTest###inlineTagsAreParsable:###Stringjavadoc=parseJavadoc(docText).toText();###javadoc###parseJavadoc(docText)###96:9:96:57
70452122896b2d6c9c49ca94be5fe545edbd6e5e###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/declarations/common/MethodDeclarationCommonLogic.java###/MethodDeclarationCommonLogic.java###com.github.javaparser.symbolsolver.declarations.common.MethodDeclarationCommonLogic###resolveTypeVariables:Context List<ResolvedType> ###ResolvedTypeformalParamType=methodDeclaration.getParam(i).getType();###formalParamDecl###methodDeclaration.getParam(i)###64:13:64:84
bccb8bd5d3fd8285c904cc2e5831e6a8b594c87e###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/core/resolution/Context.java###/Context.java###com.github.javaparser.symbolsolver.core.resolution.Context###parameterDeclarationInScope:String ###Optional<Parameter>localRes=parentContext.parametersExposedToChild(((AbstractJavaParserContext)this).getWrappedNode()).stream().filter(vd->vd.getNameAsString().equals(name)).findFirst();###wrappedNode###((AbstractJavaParserContext)this).getWrappedNode()###153:9:157:30
cc8bbd469d66d89d867209b4ec5830d4360ffc9a###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclaration.java###/JavaParserClassDeclaration.java###com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserClassDeclaration###getAncestors:boolean ###ancestors.add(toReferenceType(implemented));###rrt###toReferenceType(implemented)###354:17:354:61
73ca00a6b9cbcb818e29595ccf068c43e862564b###/javaparser_javaparser/javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculator.java###/DifferenceElementCalculator.java###com.github.javaparser.printer.lexicalpreservation.DifferenceElementCalculator###calculateImpl:LexicalDifferenceCalculator.CalculatedSyntaxModel LexicalDifferenceCalculator.CalculatedSyntaxModel ###elements.add(newRemoved(original.elements.get(originalIndex)));###removedElement###original.elements.get(originalIndex)###144:17:144:81
4996b16f7ce31662e87bc64f4b08f65449271944###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java###/JavaParserFacade.java###com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade###findContainingTypeDeclOrObjectCreationExpr:Node ###returnnode;###parent###node###606:13:606:25
7214fb616b9a45c86f84e7fcebfab8f65356fa25###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java###/JavaParserFacade.java###com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade###solve:ObjectCreationExpr boolean ###SymbolReference<ResolvedConstructorDeclaration>res=ConstructorResolutionLogic.findMostApplicable(classDecl.asReferenceType().getTypeDeclaration().getConstructors(),argumentTypes,typeSolver);###typeDecl###classDecl.asReferenceType().getTypeDeclaration()###209:9:209:204
bccb8bd5d3fd8285c904cc2e5831e6a8b594c87e###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/core/resolution/Context.java###/Context.java###com.github.javaparser.symbolsolver.core.resolution.Context###localVariableDeclarationInScope:String ###Optional<VariableDeclarator>localRes=parentContext.localVariablesExposedToChild(((AbstractJavaParserContext)this).getWrappedNode()).stream().filter(vd->vd.getNameAsString().equals(name)).findFirst();###wrappedNode###((AbstractJavaParserContext)this).getWrappedNode()###137:9:141:30
244ddf7ca5341f91ed8577703b635d8fd35cd81b###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java###/MethodCallExprContext.java###com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext###matchTypeParameters:ResolvedType ResolvedType Map<ResolvedTypeParameterDeclaration,ResolvedType> ###matchedTypeParameters.put(expectedType.asTypeParameter(),actualType);###type###actualType###387:13:387:83
c9b6b79e396fb45945e1d888fce7b1c94d24f70a###/javaparser_javaparser/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java###/PositionUtilsTest.java###com.github.javaparser.utils.PositionUtilsTest###nodeDoesNotContainNoAnnotationsAnywhere:###booleancontains=nodeContains(field.getVariable(0).getType(),field.getVariable(0).getName(),false);###fieldName###field.getVariable(0).getName()###50:9:50:112
edba88b0b75849daf67377c7abafa9ae381cc172###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistMethodDeclaration.java###/JavassistMethodDeclaration.java###com.github.javaparser.symbolsolver.javassistmodel.JavassistMethodDeclaration###getReturnType:###returnJavassistFactory.typeUsageFor(ctMethod.getReturnType(),typeSolver);###methodReturnType###ctMethod.getReturnType()###108:17:108:92
9ff07917b698471f3b5365cb8741f74faebbafff###/javaparser_javaparser/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java###/ReflectionClassDeclarationTest.java###com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclarationTest###testGetAllFields:###assertEquals(ImmutableSet.of("a","b","c"),testObject.getAllFields().stream().map(ResolvedDeclaration::getName).collect(Collectors.toSet()));###expected###ImmutableSet.of("a","b","c")###293:9:294:115
b23e14c1b8766b6c518f32be9d699157c26b3798###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistFieldDeclaration.java###/JavassistFieldDeclaration.java###com.github.javaparser.symbolsolver.javassistmodel.JavassistFieldDeclaration###getType:###javassist.bytecode.SignatureAttribute.TypegenericSignatureType=SignatureAttribute.toFieldSignature(ctField.getGenericSignature());###signature###ctField.getGenericSignature()###53:17:53:150
7e2c2e601039ebd3a307cb77b80ae813a3e25283###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistTypeDeclarationAdapter.java###/JavassistTypeDeclarationAdapter.java###com.github.javaparser.symbolsolver.javassistmodel.JavassistTypeDeclarationAdapter###getAncestors:ResolvedReferenceTypeDeclaration boolean ###for(superInterface:ctClass.getClassFile().getInterfaces())###classFile###ctClass.getClassFile()###121:13:130:14
4d53db5b02085a8c0daddff2f99f061d4022f1d2###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/AstResolutionUtils.java###/AstResolutionUtils.java###com.github.javaparser.symbolsolver.javaparsermodel.declarations.AstResolutionUtils###getPackageName:Node ###return"";###packageName###""###65:9:65:19
09021d53ac2ffdfa319317cef5aea2daf4586a2d###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java###/MethodCallExprContext.java###com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext###solveMethodAsUsage:ResolvedTypeVariable String List<ResolvedType> Context ###for(bound:tp.asTypeParameter().getBounds())###bounds###tp.asTypeParameter().getBounds()###392:9:397:10
b88fa1b4caee59fe9e5f52d7413dc5b5b881f709###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistFieldDeclaration.java###/JavassistFieldDeclaration.java###com.github.javaparser.symbolsolver.javassistmodel.JavassistFieldDeclaration###getType:###javassist.bytecode.SignatureAttribute.TypegenericSignatureType=SignatureAttribute.toFieldSignature(ctField.getGenericSignature());###signature###ctField.getGenericSignature()###53:17:53:150
30252bb7a2327d8c0a676966fa1fa47ecdd14a00###/javaparser_javaparser/javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinter.java###/LexicalPreservingPrinter.java###com.github.javaparser.printer.lexicalpreservation.LexicalPreservingPrinter###interpret:Node CsmElement NodeText ###nodeText.addChild(((LexicalDifferenceCalculator.CsmChild)element).getChild());###child###((LexicalDifferenceCalculator.CsmChild)element).getChild()###509:17:509:96
a4846eafa1729af1f954088e4d0a41ba3c22b930###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java###/MethodResolutionLogic.java###com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic###isApplicable:MethodUsage String List<ResolvedType> TypeSolver ###if(argumentsTypes.size()==j)###countOfArgumentsProvided###argumentsTypes.size()###300:21:302:22
f52f8f1d558e12533832a475089342d071746996###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/TypeExtractor.java###/TypeExtractor.java###com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor###visit:MethodReferenceExpr Boolean ###if(FunctionalInterfaceLogic.getFunctionalMethod(result).isPresent())###functionalMethodOpt###FunctionalInterfaceLogic.getFunctionalMethod(result)###539:17:548:18
702a38e30fb3fbcb0f03b091db9f353c09287aad###/javaparser_javaparser/javaparser-core-metamodel-generator/src/main/java/com/github/javaparser/generator/metamodel/MetaModelGenerator.java###/MetaModelGenerator.java###com.github.javaparser.generator.metamodel.MetaModelGenerator###generateNodeMetaModels:CompilationUnit SourceRoot ###finalNodeList<Statement>initializeNodeMetaModelsStatements=metaModelCoid.getMethodsByName("initializeNodeMetaModels").get(0).getBody().get().getStatements();###initializeNodeMetaModelsMethod###metaModelCoid.getMethodsByName("initializeNodeMetaModels").get(0)###256:9:256:170
c216434c0ecf311619af30abae4cf69bd0ebe844###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java###/JavaParserFacade.java###com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade###toMethodUsage:MethodReferenceExpr List<ResolvedType> ###List<MethodUsage>methodUsages=((ResolvedReferenceTypeDeclaration)typeDeclarationSymbolReference.getCorrespondingDeclaration()).getAllMethods().stream().filter(it->MethodResolutionLogic.isApplicable(it,methodReferenceExpr.getIdentifier(),paramTypes,typeSolver)).collect(Collectors.toList());###allMethods###((ResolvedReferenceTypeDeclaration)typeDeclarationSymbolReference.getCorrespondingDeclaration()).getAllMethods()###407:9:411:47
501868dc6af7d5c73bea2dde57126abfd73b5d9b###/javaparser_javaparser/javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinter.java###/LexicalPreservingPrinter.java###com.github.javaparser.printer.lexicalpreservation.LexicalPreservingPrinter###interpret:Node CsmElement NodeText ###nodeText.addChild(((LexicalDifferenceCalculator.CsmChild)element).getChild());###child###((LexicalDifferenceCalculator.CsmChild)element).getChild()###482:17:482:96
a4846eafa1729af1f954088e4d0a41ba3c22b930###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java###/MethodResolutionLogic.java###com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic###isApplicable:MethodUsage String List<ResolvedType> TypeSolver ###booleanargumentIsArray=method.getNoParams()==argumentsTypes.size()&&expectedType.isAssignableBy(argumentsTypes.get(i));###actualArgumentType###argumentsTypes.get(i)###276:17:276:143
c016ff81dcab197f73492cb87ad2492a0ea567b7###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclaration.java###/ReflectionClassDeclaration.java###com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration###solveMethodAsUsage:String List<ResolvedType> Context List<ResolvedType> ###for(method:Arrays.stream(clazz.getDeclaredMethods()).filter((m)->m.getName().equals(name)).sorted(newMethodComparator()).collect(Collectors.toList()))###allMethods###Arrays.stream(clazz.getDeclaredMethods()).filter((m)->m.getName().equals(name)).sorted(newMethodComparator()).collect(Collectors.toList())###220:9:235:10
4996b16f7ce31662e87bc64f4b08f65449271944###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java###/JavaParserFacade.java###com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade###findContainingTypeDecl:Node ###return(ClassOrInterfaceDeclaration)node;###parent###node###569:13:569:55
9ff9453580d401542782fccfdb2cc959562dd563###/javaparser_javaparser/javaparser-core/src/main/java/com/github/javaparser/resolution/types/ResolvedReferenceType.java###/ResolvedReferenceType.java###com.github.javaparser.resolution.types.ResolvedReferenceType###compareConsideringTypeParameters:ResolvedReferenceType ###ResolvedTypethisParam=typeParametersValues().get(i);###typeParametersValues###typeParametersValues()###462:17:462:72
4d99c1d89a5152dd69604f699e73069b58b3fd6b###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclaration.java###/ReflectionClassDeclaration.java###com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration###solveMethodAsUsage:String List<ResolvedType> Context List<ResolvedType> ###for(method:Arrays.stream(clazz.getDeclaredMethods()).filter((m)->m.getName().equals(name)).sorted(newMethodComparator()).collect(Collectors.toList()))###allMethods###Arrays.stream(clazz.getDeclaredMethods()).filter((m)->m.getName().equals(name)).sorted(newMethodComparator()).collect(Collectors.toList())###195:9:210:10
2c4e1d7191a5de41169174e2c30641fb01b73a99###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java###/JavaParserFacade.java###com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade###solve:ExplicitConstructorInvocationStmt boolean ###SymbolReference<ResolvedTypeDeclaration>sr=JavaParserFactory.getContext(classNode,typeSolver).solveType(classNode.getNameAsString());###context###JavaParserFactory.getContext(classNode,typeSolver)###176:13:176:150
dea6ef11ea8dc977dd2b63a6a3e2713df8ad3a07###/javaparser_javaparser/javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java###/Difference.java###com.github.javaparser.printer.lexicalpreservation.Difference###applyAddedDiffElement:Added ###if(nodeText.getTextElement(originalIndex).isNewline()&&originalIndex>0&&nodeText.getTextElement(originalIndex-1).isComment())###previousIsAComment###originalIndex>0&&nodeText.getTextElement(originalIndex-1).isComment()###715:13:724:14
e15677abc9fa706a50be3eb8c2d37c41dff4993e###/javaparser_javaparser/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/logic/AbstractTypeDeclaration.java###/AbstractTypeDeclaration.java###com.github.javaparser.symbolsolver.logic.AbstractTypeDeclaration###getAllMethods:###methods.add(newMethodUsage(methodDeclaration));###methodUsage###newMethodUsage(methodDeclaration)###46:13:46:61
96b12682d2da2831f64f3eeb9b92a49abf89cb3f###/javaparser_javaparser/javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java###/Difference.java###com.github.javaparser.printer.lexicalpreservation.Difference###considerEnforcingIndentation:NodeText int ###returnnodeTextIndex;###res###nodeTextIndex###108:9:108:30
