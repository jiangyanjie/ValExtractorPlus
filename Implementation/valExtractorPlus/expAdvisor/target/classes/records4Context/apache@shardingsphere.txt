bfb784c9a0e47fd147c8a654c2f0b2a1e86c2c27###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/sctl/explain/ShardingCTLExplainBackendHandler.java###/ShardingCTLExplainBackendHandler.java###org.apache.shardingsphere.proxy.backend.text.sctl.explain.ShardingCTLExplainBackendHandler###execute:###executionUnits=kernelProcessor.generateExecutionContext(logicSQL,metaData,ProxyContext.getInstance().getMetaDataContexts().getProps()).getExecutionUnits().iterator();###metaDataContexts###ProxyContext.getInstance().getMetaDataContexts()###76:9:76:179
0133432127b272f0104c693de1175e33c1f5161e###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/cache/subscriber/ScalingRegistrySubscriber.java###/ScalingRegistrySubscriber.java###org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.cache.subscriber.ScalingRegistrySubscriber###cacheRuleConfiguration:RuleConfigurationCachedEvent ###StartScalingEventstartScalingEvent=newStartScalingEvent(event.getSchemaName(),repository.get(SchemaMetaDataNode.getMetaDataDataSourcePath(event.getSchemaName())),repository.get(SchemaMetaDataNode.getRulePath(event.getSchemaName())),registryCacheManager.loadCache(SchemaMetaDataNode.getRulePath(event.getSchemaName()),event.getCacheId()),event.getCacheId());###targetRule###registryCacheManager.loadCache(SchemaMetaDataNode.getRulePath(event.getSchemaName()),event.getCacheId())###91:9:94:144
bfb784c9a0e47fd147c8a654c2f0b2a1e86c2c27###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/proxy/frontend/mysql/command/query/text/fieldlist/MySQLComFieldListPacketExecutor.java###/MySQLComFieldListPacketExecutor.java###org.apache.shardingsphere.proxy.frontend.mysql.command.query.text.fieldlist.MySQLComFieldListPacketExecutor###MySQLComFieldListPacketExecutor:MySQLComFieldListPacket BackendConnection ###ShardingSphereSQLParserEnginesqlStatementParserEngine=newShardingSphereSQLParserEngine(DatabaseTypeRegistry.getTrunkDatabaseTypeName(ProxyContext.getInstance().getMetaDataContexts().getMetaData(schemaName).getResource().getDatabaseType()));###metaDataContexts###ProxyContext.getInstance().getMetaDataContexts()###59:9:60:170
6618aa1459c53a676f07890989ae9a636b54a1e8###/apache_shardingsphere/shardingsphere-features/shardingsphere-shadow/shardingsphere-shadow-core/src/main/java/org/apache/shardingsphere/shadow/rewrite/context/ShadowSQLRewriteContextDecorator.java###/ShadowSQLRewriteContextDecorator.java###org.apache.shardingsphere.shadow.rewrite.context.ShadowSQLRewriteContextDecorator###decorate:ShadowRule ConfigurationProperties SQLRewriteContext RouteContext ###each.rewrite(sqlRewriteContext.getParameterBuilder(),sqlRewriteContext.getSqlStatementContext(),sqlRewriteContext.getParameters());###sqlStatementContext###sqlRewriteContext.getSqlStatementContext()###40:17:40:150
afc39910bdeeea31df8cb3965ae5de2547b7ca97###/apache_shardingsphere/shardingsphere-test/shardingsphere-rewrite-test/src/test/java/org/apache/shardingsphere/sharding/rewrite/parameterized/engine/AbstractSQLRewriterParameterizedTest.java###/AbstractSQLRewriterParameterizedTest.java###org.apache.shardingsphere.sharding.rewrite.parameterized.engine.AbstractSQLRewriterParameterizedTest###createSQLRewriteUnits:###ShardingSphereMetaDatametaData=newShardingSphereMetaData("sharding_db",mock(ShardingSphereResource.class),newShardingSphereRuleMetaData(Collections.emptyList(),rules),schema);###resource###mock(ShardingSphereResource.class)###103:9:103:193
369a26555da465725335ead4eed825a5e221919d###/apache_shardingsphere/shardingsphere-governance/shardingsphere-governance-context/src/main/java/org/apache/shardingsphere/governance/context/metadata/GovernanceMetaDataContexts.java###/GovernanceMetaDataContexts.java###org.apache.shardingsphere.governance.context.metadata.GovernanceMetaDataContexts###renew:SchemaDeletedEvent ###schemaMetaData.remove(event.getSchemaName());###schemaName###event.getSchemaName()###150:9:150:54
17821727c572f5f5b4595fb775b96a344edbd04d###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/yaml/schema/swapper/SchemaYamlSwapperTest.java###/SchemaYamlSwapperTest.java###org.apache.shardingsphere.infra.yaml.schema.swapper.SchemaYamlSwapperTest###assertSwapToYamlSchema:###assertThat(yamlSchema.getTables().get("t_order").getIndexes().keySet(),is(Collections.singleton("primary")));###yamlTableMetaData###yamlSchema.getTables().get("t_order")###50:9:50:119
066d605ea3f8e03434559aedbf69834335406815###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-opengauss/src/main/java/org/apache/shardingsphere/proxy/frontend/opengauss/command/query/extended/bind/OpenGaussBatchedInsertsExecutor.java###/OpenGaussBatchedInsertsExecutor.java###org.apache.shardingsphere.proxy.frontend.opengauss.command.query.extended.bind.OpenGaussBatchedInsertsExecutor###prepareJDBCExecutionUnit:JDBCExecutionUnit ###preparedStatement.setObject(parametersIterator.nextIndex()+1,parametersIterator.next());###value###parametersIterator.next()###139:17:139:108
6b7aa50f27a0e3d10a91ef7f2c0d0ac532aee566###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/ContextManager.java###/ContextManager.java###org.apache.shardingsphere.mode.manager.ContextManager###alterSchema:String ShardingSphereSchema ###metaDataContexts.getOptimizerContext().getFederationMetaData().getSchemas().put(schemaName,newFederationSchemaMetaData(schemaName,schema.getTables()));###schemaMetaData###newFederationSchemaMetaData(schemaName,schema.getTables())###236:9:237:79
6618aa1459c53a676f07890989ae9a636b54a1e8###/apache_shardingsphere/shardingsphere-features/shardingsphere-shadow/shardingsphere-shadow-core/src/main/java/org/apache/shardingsphere/shadow/rewrite/context/ShadowSQLRewriteContextDecorator.java###/ShadowSQLRewriteContextDecorator.java###org.apache.shardingsphere.shadow.rewrite.context.ShadowSQLRewriteContextDecorator###decorate:ShadowRule ConfigurationProperties SQLRewriteContext RouteContext ###each.rewrite(sqlRewriteContext.getParameterBuilder(),sqlRewriteContext.getSqlStatementContext(),sqlRewriteContext.getParameters());###parameters###sqlRewriteContext.getParameters()###40:17:40:150
8220f02f56c6c990eab5e920b90bddc8071e2488###/apache_shardingsphere/shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/main/java/org/apache/shardingsphere/encrypt/rewrite/condition/EncryptConditionEngine.java###/EncryptConditionEngine.java###org.apache.shardingsphere.encrypt.rewrite.condition.EncryptConditionEngine###createEncryptConditions:SQLStatementContext ###for(each:ExpressionExtractUtil.getAndPredicates(whereSegment.get().getExpr()))###andPredicates###ExpressionExtractUtil.getAndPredicates(whereSegment.get().getExpr())###71:9:73:10
d91ffcb5a9489e0e02d9a2230f9cdd2cf9e69381###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/config/datasource/ShardingSphereJDBCDataSourceCreator.java###/ShardingSphereJDBCDataSourceCreator.java###org.apache.shardingsphere.driver.config.datasource.ShardingSphereJDBCDataSourceCreator###createDataSource:Object ###returnShardingSphereDataSourceFactory.createDataSource(rootConfig.getSchemaName(),newYamlDataSourceConfigurationSwapper().swapToDataSources(rootConfig.getDataSources()),Collections.singletonList(ShardingRuleConfigurationConverter.findAndConvertShardingRuleConfiguration(rootConfig.getRules())),null);###shardingRuleConfig###ShardingRuleConfigurationConverter.findAndConvertShardingRuleConfiguration(rootConfig.getRules())###39:9:40:149
fcf8b2ef7de65753a79ae40f348487605f3347e8###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/jdbc/core/datasource/ShardingSphereDataSource.java###/ShardingSphereDataSource.java###org.apache.shardingsphere.driver.jdbc.core.datasource.ShardingSphereDataSource###close:Collection<String> ###close(getDataSourceMap().get(each));###dataSourceMap###getDataSourceMap()###101:13:101:49
b27bf35980745b9c0494e53127adb93e3c888f6d###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-core/src/main/java/org/apache/shardingsphere/mode/metadata/MetaDataContextsBuilder.java###/MetaDataContextsBuilder.java###org.apache.shardingsphere.mode.metadata.MetaDataContextsBuilder###build:PersistService ###Map<TableMetaData,TableMetaData>tableMetaData=SchemaBuilder.build(newSchemaBuilderMaterials(databaseType,dataSourceMap,rules,props));###materials###newSchemaBuilderMaterials(databaseType,dataSourceMap,rules,props)###101:13:101:154
d9393bf401f6170bc89b3973920ec5f56ed72ef0###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/builder/loader/dialect/OracleTableMetaDataLoaderTest.java###/OracleTableMetaDataLoaderTest.java###org.apache.shardingsphere.infra.metadata.schema.builder.loader.dialect.OracleTableMetaDataLoaderTest###assertLoadCondition2:###assertThat(actual.get("tbl").getColumnMetaData(0),is(newColumnMetaData("id",4,true,true,false)));###actualTableMetaData###actual.get("tbl")###107:9:107:112
327e282038ba350fca335b33cb3e979e179b7cf8###/apache_shardingsphere/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java###/MySQLStatementSQLVisitor.java###org.apache.shardingsphere.sql.parser.mysql.visitor.statement.impl.MySQLStatementSQLVisitor###visitExpr:ExprContext ###returnnewBinaryOperationExpression(ctx.start.getStartIndex(),ctx.stop.getStopIndex(),(ExpressionSegment)visit(ctx.expr(0)),(ExpressionSegment)visit(ctx.expr(1)),ctx.logicalOperator().getText(),text);###left###(ExpressionSegment)visit(ctx.expr(0))###365:13:366:100
d9393bf401f6170bc89b3973920ec5f56ed72ef0###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/builder/loader/dialect/OracleTableMetaDataLoaderTest.java###/OracleTableMetaDataLoaderTest.java###org.apache.shardingsphere.infra.metadata.schema.builder.loader.dialect.OracleTableMetaDataLoaderTest###assertLoadCondition1:###assertThat(actual.get("tbl").getColumnMetaData(0),is(newColumnMetaData("id",4,true,true,true)));###actualTableMetaData###actual.get("tbl")###90:9:90:111
5bb9e28ba4811d2590a0c113c9b681ea3406ee91###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/jdbc/core/statement/ShardingSphereStatement.java###/ShardingSphereStatement.java###org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSphereStatement###executeUpdate:String int[] ###executionContext=createExecutionContext(createLogicSQL(sql));###logicSQL###createLogicSQL(sql)###219:13:219:76
7a939fe0fdddad9b0203c590101eaf73ca44a826###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/ClusterContextManagerCoordinator.java###/ClusterContextManagerCoordinator.java###org.apache.shardingsphere.mode.manager.cluster.coordinator.ClusterContextManagerCoordinator###buildMetaData:String ###returnnewMetaDataContextsBuilder(dataSourcesMap,Collections.singletonMap(schemaName,metaDataPersistService.getSchemaRuleService().load(schemaName)),metaDataPersistService.getGlobalRuleService().load(),contextManager.getMetaDataContexts().getProps().getProps()).build(metaDataPersistService).getMetaData(schemaName);###schemaRuleConfigs###Collections.singletonMap(schemaName,metaDataPersistService.getSchemaRuleService().load(schemaName))###291:9:294:131
e6c69508baa0b8ae6c4a73644744bbf46a8a04b7###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/ClusterContextManagerBuilder.java###/ClusterContextManagerBuilder.java###org.apache.shardingsphere.mode.manager.cluster.ClusterContextManagerBuilder###createContextManager:ClusterPersistRepository MetaDataPersistService InstanceDefinition MetaDataContexts Properties ModeConfiguration ###InstanceContextinstanceContext=newInstanceContext(metaDataPersistService.getComputeNodePersistService().loadComputeNodeInstance(instanceDefinition),newClusterWorkerIdGenerator(repository,metaDataPersistService,instanceDefinition),modeConfiguration);###computeNodeInstance###metaDataPersistService.getComputeNodePersistService().loadComputeNodeInstance(instanceDefinition)###159:9:160:122
580d8c81fbd39a751333abb0bfe3a453cc6a77a9###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/builder/loader/dialect/OracleTableMetaDataLoaderTest.java###/OracleTableMetaDataLoaderTest.java###org.apache.shardingsphere.infra.metadata.schema.builder.loader.dialect.OracleTableMetaDataLoaderTest###assertLoadCondition3:###assertTableMetaDataMap(getTableMetaDataLoader().load(dataSource,Collections.emptyList()));###actual###getTableMetaDataLoader().load(dataSource,Collections.emptyList())###118:9:118:100
a0d4e77537cd5a6cc5be2c6e09e138c464f01a29###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-authority/shardingsphere-authority-core/src/main/java/org/apache/shardingsphere/authority/checker/AuthorityChecker.java###/AuthorityChecker.java###org.apache.shardingsphere.authority.checker.AuthorityChecker###check:SQLStatement List<Object> Grantee String Map<String,ShardingSphereMetaData> AuthorityRule ###newSQLCheckResult(optional.hasPrivileges(Collections.singletonList(getPrivilege(sqlStatement))),String.format("Accessdeniedforoperation%s",getPrivilege(sqlStatement).name()))###privilegeType###getPrivilege(sqlStatement)###79:43:80:108
d9393bf401f6170bc89b3973920ec5f56ed72ef0###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-single-table/shardingsphere-single-table-core/src/test/java/org/apache/shardingsphere/singletable/metadata/SingleTableMetaDataBuilderTest.java###/SingleTableMetaDataBuilderTest.java###org.apache.shardingsphere.singletable.metadata.SingleTableMetaDataBuilderTest###testDecorate:###assertThat(actual.get("tbl").getColumns().size(),is(3));###actualTableMetaData###actual.get("tbl")###138:9:138:66
4efe9e1d7edb542a0ad8fc2e5580e4c98e780c67###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/algorithm/sharding/datetime/AutoIntervalShardingAlgorithm.java###/AutoIntervalShardingAlgorithm.java###org.apache.shardingsphere.sharding.algorithm.sharding.datetime.AutoIntervalShardingAlgorithm###doSharding:Collection<String> PreciseShardingValue<Comparable<?>> ###if(each.endsWith(String.valueOf(doSharding(parseDate(shardingValue.getValue())))))###tableNameSuffix###String.valueOf(doSharding(parseDate(shardingValue.getValue())))###88:13:90:14
e16c205937757b2f283ec2b821b253d6155e0250###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/distsql/rdl/impl/AlterShardingBindingTableRulesBackendHandler.java###/AlterShardingBindingTableRulesBackendHandler.java###org.apache.shardingsphere.proxy.backend.text.distsql.rdl.impl.AlterShardingBindingTableRulesBackendHandler###before:String AlterShardingBindingTableRulesStatement ###for(bindingTable:ShardingRuleStatementConverter.convert(sqlStatement).getBindingTables())###bindingTables###ShardingRuleStatementConverter.convert(sqlStatement).getBindingTables()###50:9:56:10
e719e9bf19ab9212908f409888dc7c55be65d8e1###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-traffic/shardingsphere-traffic-core/src/main/java/org/apache/shardingsphere/traffic/engine/TrafficEngine.java###/TrafficEngine.java###org.apache.shardingsphere.traffic.engine.TrafficEngine###getDataSourceNamesByLabels:Collection<String> ###for(each:metaDataContexts.getMetaDataPersistService().get().loadComputeNodeInstances(InstanceType.PROXY,labels))###instances###metaDataContexts.getMetaDataPersistService().get().loadComputeNodeInstances(InstanceType.PROXY,labels)###68:13:70:14
d9393bf401f6170bc89b3973920ec5f56ed72ef0###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/builder/loader/dialect/H2TableMetaDataLoaderTest.java###/H2TableMetaDataLoaderTest.java###org.apache.shardingsphere.infra.metadata.schema.builder.loader.dialect.H2TableMetaDataLoaderTest###assertTableMetaDataMap:Map<String,TableMetaData> ###assertThat(actual.get("tbl").getColumns().size(),is(2));###actualTableMetaData###actual.get("tbl")###158:9:158:66
7aee905de7030c9dcebf6dd755e6ddd1674e2c9e###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-dialect/shardingsphere-data-pipeline-postgresql/src/main/java/org/apache/shardingsphere/data/pipeline/postgresql/ingest/wal/WalEventConverter.java###/WalEventConverter.java###org.apache.shardingsphere.data.pipeline.postgresql.ingest.wal.WalEventConverter###putColumnsIntoDataRecord:DataRecord TableMetaData List<Object> ###ObjectprimaryKeyOldValue=tableMetaData.isPrimaryKey(i)?values.get(i):null;###isPrimaryKey###tableMetaData.isPrimaryKey(i)###128:13:128:94
fa90df62ab499fbb9f3ed67d52288ac3d6f9a5b4###/apache_shardingsphere/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java###/MySQLStatementSQLVisitor.java###org.apache.shardingsphere.sql.parser.mysql.visitor.statement.impl.MySQLStatementSQLVisitor###visitColumnRef:ColumnRefContext ###result.setOwner(newOwnerSegment(ctx.identifier(1).start.getStartIndex(),ctx.identifier(1).stop.getStopIndex(),(IdentifierValue)visit(ctx.identifier(1))));###owner###newOwnerSegment(ctx.identifier(1).start.getStartIndex(),ctx.identifier(1).stop.getStopIndex(),(IdentifierValue)visit(ctx.identifier(1)))###589:13:589:171
68e005923c9fa183cd83740d56a0ba5dae1fa305###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/metadata/database/loader/DatabaseLoader.java###/DatabaseLoader.java###org.apache.shardingsphere.infra.metadata.database.loader.DatabaseLoader###load:String Map<String,DataSource> Collection<ShardingSphereRule> Properties ###returnnewShardingSphereDatabase(Collections.singletonMap(databaseName,schema));###schemas###Collections.singletonMap(databaseName,schema)###53:9:53:91
2cd812306f257e51dcd4a737fa9f432cbf8ac295###/apache_shardingsphere/shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/common/util/SubqueryExtractUtil.java###/SubqueryExtractUtil.java###org.apache.shardingsphere.sql.parser.sql.common.util.SubqueryExtractUtil###getSubquerySegmentsFromTableSegment:TableSegment ###result.add(((SubqueryTableSegment)tableSegment).getSubquery());###subquery###((SubqueryTableSegment)tableSegment).getSubquery()###81:13:81:77
99a093d484c4ad0665befbadf49a70b427fa87fc###/apache_shardingsphere/shardingsphere-governance/shardingsphere-governance-core/src/test/java/org/apache/shardingsphere/governance/core/registry/metadata/watcher/MetaDataChangedWatcherTest.java###/MetaDataChangedWatcherTest.java###org.apache.shardingsphere.governance.core.registry.metadata.watcher.MetaDataChangedWatcherTest###assertCreateEventWithInvalidPath:###DataChangedEventdataChangedEvent=newDataChangedEvent("/metadata_invalid/sharding_db","encrypt_db",Type.UPDATED);###value###"encrypt_db"###33:9:33:127
52e17df01d52ef1bd300244b81f054b21265f5bd###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/response/header/query/impl/QueryHeaderBuilderTest.java###/QueryHeaderBuilderTest.java###org.apache.shardingsphere.proxy.backend.response.header.query.impl.QueryHeaderBuilderTest###assertQueryHeaderSchema:###QueryHeaderheader=QueryHeaderBuilder.build(createQueryResultMetaData(),createMetaData(),1);###metaData###createMetaData()###52:9:52:105
5dee3f6b2f177c813585e654f3367c73a6864303###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-core/src/main/java/org/apache/shardingsphere/data/pipeline/core/prepare/InventoryTaskSplitter.java###/InventoryTaskSplitter.java###org.apache.shardingsphere.data.pipeline.core.prepare.InventoryTaskSplitter###splitByPrimaryKey:RuleAlteredJobContext DataSource PipelineMetaDataManager InventoryDumperConfiguration ###InputConfigurationinputConfig=jobContext.getRuleAlteredContext().getOnRuleAlteredActionConfig().getInput();###ruleAlteredContext###jobContext.getRuleAlteredContext()###107:9:107:119
7a939fe0fdddad9b0203c590101eaf73ca44a826###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-standalone-mode/shardingsphere-standalone-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/standalone/StandaloneContextManagerBuilder.java###/StandaloneContextManagerBuilder.java###org.apache.shardingsphere.mode.manager.standalone.StandaloneContextManagerBuilder###build:ModeConfiguration Map<String,Map<String,DataSource>> Map<String,Collection<RuleConfiguration>> Collection<RuleConfiguration> Properties boolean Integer ###MetaDataContextsmetaDataContexts=newMetaDataContextsBuilder(loadDataSourcesMap(metaDataPersistService,dataSourcesMap,schemaNames),loadSchemaRules(metaDataPersistService,schemaNames),metaDataPersistService.getGlobalRuleService().load(),metaDataPersistService.getPropsService().load()).build(metaDataPersistService);###standaloneSchemaRules###loadSchemaRules(metaDataPersistService,schemaNames)###69:9:70:150
499fc0b734066b1a65a5a28d460fa7d7bc764bf6###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/segment/select/pagination/engine/RowNumberPaginationContextEngine.java###/RowNumberPaginationContextEngine.java###org.apache.shardingsphere.infra.binder.segment.select.pagination.engine.RowNumberPaginationContextEngine###isRowNumberColumn:ExpressionSegment String ###returnleftinstanceofColumnSegment?ROW_NUMBER_IDENTIFIERS.contains(((ColumnSegment)left).getIdentifier().getValue())||((ColumnSegment)left).getIdentifier().getValue().equalsIgnoreCase(rowNumberAlias):false;###leftColumnValue###((ColumnSegment)left).getIdentifier().getValue()###94:13:95:115
7a939fe0fdddad9b0203c590101eaf73ca44a826###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/ClusterContextManagerCoordinator.java###/ClusterContextManagerCoordinator.java###org.apache.shardingsphere.mode.manager.cluster.coordinator.ClusterContextManagerCoordinator###rebuildMetaData:ShardingSphereMetaData Map<String,DataSourceConfiguration> ###returnnewMetaDataContextsBuilder(dataSourcesMap,Collections.singletonMap(originalMetaData.getName(),originalMetaData.getRuleMetaData().getConfigurations()),metaDataPersistService.getGlobalRuleService().load(),contextManager.getMetaDataContexts().getProps().getProps()).build(metaDataPersistService).getMetaData(originalMetaData.getName());###schemaRuleConfigs###Collections.singletonMap(originalMetaData.getName(),originalMetaData.getRuleMetaData().getConfigurations())###313:9:315:147
8dbdc9ff4f14bdd7f03f28af14dee3bb09f019c7###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/route/engine/condition/generator/ConditionValue.java###/ConditionValue.java###org.apache.shardingsphere.sharding.route.engine.condition.generator.ConditionValue###getValue:ParameterMarkerExpressionSegment List<Object> ###Objectresult=parameters.get(expressionSegment.getParameterMarkerIndex());###parameterMarkerIndex###expressionSegment.getParameterMarkerIndex()###50:9:50:85
eeac86676c32ee1e4bb20977cf66ffe999572956###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/config/datasource/creator/impl/DefaultDataSourceCreator.java###/DefaultDataSourceCreator.java###org.apache.shardingsphere.infra.config.datasource.creator.impl.DefaultDataSourceCreator###createDataSource:DataSourceConfiguration ###setField(result,methods,entry.getKey(),entry.getValue());###propertyValue###entry.getValue()###41:13:41:73
cf8634f9964c6f43747c539033245d9062f2feb8###/apache_shardingsphere/shardingsphere-features/shardingsphere-db-discovery/shardingsphere-db-discovery-distsql/shardingsphere-db-discovery-distsql-handler/src/test/java/org/apache/shardingsphere/dbdiscovery/distsql/handler/update/DropDatabaseDiscoveryRuleStatementUpdaterTest.java###/DropDatabaseDiscoveryRuleStatementUpdaterTest.java###org.apache.shardingsphere.dbdiscovery.distsql.handler.update.DropDatabaseDiscoveryRuleStatementUpdaterTest###assertUpdateCurrentRuleConfiguration:###updater.updateCurrentRuleConfiguration(createSQLStatement(),createCurrentRuleConfiguration());###databaseDiscoveryRuleConfiguration###createCurrentRuleConfiguration()###53:9:53:104
95e2a98b078be7629c09d0aa6f44436b436313bc###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/distsql/ral/common/show/executor/ShowReadwriteSplittingReadResourcesExecutor.java###/ShowReadwriteSplittingReadResourcesExecutor.java###org.apache.shardingsphere.proxy.backend.text.distsql.ral.common.show.executor.ShowReadwriteSplittingReadResourcesExecutor###createMergedResult:###ShardingSphereMetaDatametaData=ProxyContext.getInstance().getContextManager().getMetaDataContexts().getMetaData(schemaName);###metaDataContexts###ProxyContext.getInstance().getContextManager().getMetaDataContexts()###83:9:83:136
52e17df01d52ef1bd300244b81f054b21265f5bd###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/response/header/query/impl/QueryHeaderBuilderTest.java###/QueryHeaderBuilderTest.java###org.apache.shardingsphere.proxy.backend.response.header.query.impl.QueryHeaderBuilderTest###assertQueryHeaderTable:###QueryHeaderheader=QueryHeaderBuilder.build(createQueryResultMetaData(),createMetaData(),1);###metaData###createMetaData()###58:9:58:105
52e17df01d52ef1bd300244b81f054b21265f5bd###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/response/header/query/impl/QueryHeaderBuilderTest.java###/QueryHeaderBuilderTest.java###org.apache.shardingsphere.proxy.backend.response.header.query.impl.QueryHeaderBuilderTest###assertQueryHeaderPrimaryKey:###QueryHeaderheader=QueryHeaderBuilder.build(createQueryResultMetaData(),createMetaData(),1);###metaData###createMetaData()###112:9:112:105
580d8c81fbd39a751333abb0bfe3a453cc6a77a9###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/builder/loader/dialect/OracleTableMetaDataLoaderTest.java###/OracleTableMetaDataLoaderTest.java###org.apache.shardingsphere.infra.metadata.schema.builder.loader.dialect.OracleTableMetaDataLoaderTest###assertLoadCondition1:###assertTableMetaDataMap(getTableMetaDataLoader().load(dataSource,Collections.emptyList()));###actual###getTableMetaDataLoader().load(dataSource,Collections.emptyList())###90:9:90:100
c2df0553596ccd24646fafe1ab11b63baa81c8d3###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/jdbc/core/datasource/ShardingSphereDataSource.java###/ShardingSphereDataSource.java###org.apache.shardingsphere.driver.jdbc.core.datasource.ShardingSphereDataSource###createContextManager:String ModeConfiguration Map<String,DataSource> Collection<RuleConfiguration> Properties ###returnbuilder.build(mode,Collections.singletonMap(schemaName,dataSourceMap),Collections.singletonMap(schemaName,schemaRuleConfigs),globalRuleConfigs,props,modeConfig.isOverwrite());###dataSourcesMap###Collections.singletonMap(schemaName,dataSourceMap)###70:9:70:198
3b36499c3ddf43f7b2f661ccb191b7bd22123395###/apache_shardingsphere/shardingsphere-features/shardingsphere-shadow/shardingsphere-shadow-core/src/main/java/org/apache/shardingsphere/shadow/rule/ShadowRule.java###/ShadowRule.java###org.apache.shardingsphere.shadow.rule.ShadowRule###initDefaultShadowAlgorithm:String ###defaultShadowAlgorithm=shadowAlgorithms.get(defaultShadowAlgorithmName);###shadowAlgorithm###shadowAlgorithms.get(defaultShadowAlgorithmName)###88:9:88:83
7b1c0eac7e1568ee081be4585e08df31726fca5e###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/jdbc/core/datasource/ShardingSphereDataSource.java###/ShardingSphereDataSource.java###org.apache.shardingsphere.driver.jdbc.core.datasource.ShardingSphereDataSource###ShardingSphereDataSource:String ModeConfiguration Map<String,DataSource> Collection<RuleConfiguration> Properties ###contextManager=TypedSPIRegistry.getRegisteredService(ContextManagerBuilder.class,modeConfig.getType(),newProperties()).build(mode,Collections.singletonMap(schemaName,dataSourceMap),Collections.singletonMap(schemaName,schemaRuleConfigs),globalRuleConfigs,props,modeConfig.isOverwrite());###builder###TypedSPIRegistry.getRegisteredService(ContextManagerBuilder.class,modeConfig.getType(),newProperties())###65:9:66:185
7d92ddd8531f28576d2546a6361702d8e4f22efd###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-distsql/shardingsphere-sharding-distsql-handler/src/test/java/org/apache/shardingsphere/sharding/distsql/update/DropShardingBindingTableRuleStatementUpdaterTest.java###/DropShardingBindingTableRuleStatementUpdaterTest.java###org.apache.shardingsphere.sharding.distsql.update.DropShardingBindingTableRuleStatementUpdaterTest###assertDropSpecifiedCurrentRuleConfiguration:###updater.updateCurrentRuleConfiguration(createSQLStatement("t_1,t_2"),currentRuleConfig);###sqlStatement###createSQLStatement("t_1,t_2")###77:9:77:98
e9c3110ff4fc4c45abb2d87194c5623c2ff3a1ea###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-core/src/main/java/org/apache/shardingsphere/scaling/core/job/environment/ScalingEnvironmentManager.java###/ScalingEnvironmentManager.java###org.apache.shardingsphere.scaling.core.job.environment.ScalingEnvironmentManager###resetTargetTable:RuleAlteredJobContext ###try(PipelineDataSourceWrapperdataSource=dataSourceFactory.newInstance(PipelineDataSourceConfigurationFactory.newInstance(jobContext.getJobConfig().getPipelineConfig().getTarget().getType(),jobContext.getJobConfig().getPipelineConfig().getTarget().getParameter()));Connectionconnection=dataSource.getConnection())###target###jobContext.getJobConfig().getPipelineConfig().getTarget()###48:9:58:10
1ee97b786e15bff2219e3135d019e321fdcea25d###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-bootstrap/src/main/java/org/apache/shardingsphere/proxy/Bootstrap.java###/Bootstrap.java###org.apache.shardingsphere.proxy.Bootstrap###main:String[] ###createBootstrapInitializer(yamlConfig).init(yamlConfig,bootstrapArgs.getPort());###initializer###createBootstrapInitializer(yamlConfig)###57:9:57:90
7fb14dab1b5aa0ad7d175e92969c8460b04801f0###/apache_shardingsphere/examples/shardingsphere-jdbc-example/single-feature-example/readwrite-splitting-example/readwrite-splitting-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/readwrite/splitting/raw/jdbc/config/ReadwriteSplittingConfiguration.java###/ReadwriteSplittingConfiguration.java###org.apache.shardingsphere.example.readwrite.splitting.raw.jdbc.config.ReadwriteSplittingConfiguration###getDataSource:###returnShardingSphereDataSourceFactory.createDataSource(createDataSourceMap(),Collections.singleton(ruleConfig),newProperties());###properties###newProperties()###41:9:41:141
7f18db4a97c97aa9621591865b146e1c626ff068###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/type/broadcast/ShardingTableBroadcastRoutingEngineTest.java###/ShardingTableBroadcastRoutingEngineTest.java###org.apache.shardingsphere.sharding.route.engine.type.broadcast.ShardingTableBroadcastRoutingEngineTest###assertRouteForEmptyTable:###ShardingTableBroadcastRoutingEngineshardingTableBroadcastRoutingEngine=newShardingTableBroadcastRoutingEngine(mock(ShardingSphereSchema.class),createSQLStatementContext(Collections.emptyList()));###tableNames###Collections.emptyList()###57:9:58:143
b202f2f36782e757dc7ab23093c66a0aae7f374f###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/algorithm/sharding/mod/ModShardingAlgorithm.java###/ModShardingAlgorithm.java###org.apache.shardingsphere.sharding.algorithm.sharding.mod.ModShardingAlgorithm###getAvailableTargetNames:Collection<String> RangeShardingValue<Comparable<?>> ###if(each.endsWith(String.valueOf(i%shardingCount)))###suffix###String.valueOf(i%shardingCount)###81:17:83:18
1c7d6da8abb44a5ac4edf0f4825a3a563541ebb7###/apache_shardingsphere/shardingsphere-governance/shardingsphere-governance-core/src/test/java/org/apache/shardingsphere/governance/core/registry/config/service/impl/DataSourceRegistryServiceTest.java###/DataSourceRegistryServiceTest.java###org.apache.shardingsphere.governance.core.registry.config.service.impl.DataSourceRegistryServiceTest###assertUpdateWithDataSourceAddedEvent:###DataSourceAddedSQLNotificationEventevent=newDataSourceAddedSQLNotificationEvent("foo_db",createDataSourceConfigurations());###dataSourceConfigs###createDataSourceConfigurations()###99:9:99:137
bbf4a3dfe91d43659c5026f0434c8b8499abc3a4###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/distsql/ral/common/ShowDistSQLBackendHandler.java###/ShowDistSQLBackendHandler.java###org.apache.shardingsphere.proxy.backend.text.distsql.ral.common.ShowDistSQLBackendHandler###execute:###switch(VariableEnum.getValueOf(showVariableStatement.getName()))###variable###VariableEnum.getValueOf(showVariableStatement.getName())###56:9:63:10
e560dc4352de5abc7caf4fbdc03b747985508961###/apache_shardingsphere/shardingsphere-governance/shardingsphere-governance-context/src/main/java/org/apache/shardingsphere/governance/context/metadata/GovernanceMetaDataContexts.java###/GovernanceMetaDataContexts.java###org.apache.shardingsphere.governance.context.metadata.GovernanceMetaDataContexts###renew:SchemaAddedEvent ###metaDataMap.put(event.getSchemaName(),buildMetaData(event));###metaData###buildMetaData(event)###185:9:185:70
fd320ca26abb86c9be347e511c270493029dba99###/apache_shardingsphere/shardingsphere-governance/shardingsphere-governance-core/src/main/java/org/apache/shardingsphere/governance/core/rule/GovernanceRule.java###/GovernanceRule.java###org.apache.shardingsphere.governance.core.rule.GovernanceRule###GovernanceRule:GovernanceConfiguration ###registryCenter=newRegistryCenter(RegistryCenterRepositoryFactory.newInstance(config.getRegistryCenterConfiguration()));###repository###RegistryCenterRepositoryFactory.newInstance(config.getRegistryCenterConfiguration())###36:9:36:131
6b7aa50f27a0e3d10a91ef7f2c0d0ac532aee566###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/ContextManager.java###/ContextManager.java###org.apache.shardingsphere.mode.manager.ContextManager###alterSchema:String TableMetaData String ###metaDataContexts.getOptimizerContext().getFederationMetaData().getSchemas().get(schemaName).put(changedTableMetaData);###schemaMetaData###metaDataContexts.getOptimizerContext().getFederationMetaData().getSchemas().get(schemaName)###251:13:251:131
52e17df01d52ef1bd300244b81f054b21265f5bd###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/response/header/query/impl/QueryHeaderBuilderTest.java###/QueryHeaderBuilderTest.java###org.apache.shardingsphere.proxy.backend.response.header.query.impl.QueryHeaderBuilderTest###assertQueryHeaderAutoIncrement:###QueryHeaderheader=QueryHeaderBuilder.build(createQueryResultMetaData(),createMetaData(),1);###metaData###createMetaData()###130:9:130:105
0371c4d9e510a34ff9a9070b009201b9451ab2be###/apache_shardingsphere/shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptProjectionTokenGenerator.java###/EncryptProjectionTokenGenerator.java###org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptProjectionTokenGenerator###generateSQLTokens:SQLStatementContext ###result.addAll(generateSQLTokens((SelectStatementContext)sqlStatementContext,false));###selectStatementContext###(SelectStatementContext)sqlStatementContext###74:13:74:99
e851ca603311f89ec5f9ba54ec83f8137c545eb9###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-core/src/test/java/org/apache/shardingsphere/mode/manager/ContextManagerTest.java###/ContextManagerTest.java###org.apache.shardingsphere.mode.manager.ContextManagerTest###assertAlterRuleConfiguration:###when(metaDataContexts.getMetaDataMap()).thenReturn(Collections.singletonMap("foo_schema",newShardingSphereMetaData("foo_schema",mock(ShardingSphereResource.class),mock(ShardingSphereRuleMetaData.class),Collections.emptyMap())));###resource###mock(ShardingSphereResource.class)###200:9:201:160
c05c7bb06d4cc42621550add2e0bd5c879c9fcaf###/apache_shardingsphere/shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptAlterTableTokenGenerator.java###/EncryptAlterTableTokenGenerator.java###org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptAlterTableTokenGenerator###generateSQLTokens:AlterTableStatementContext ###result.addAll(getDropColumnTokens(tableName,alterTableStatementContext.getSqlStatement().getDropColumnDefinitions()));###dropCollection###getDropColumnTokens(tableName,alterTableStatementContext.getSqlStatement().getDropColumnDefinitions())###53:9:53:128
d9393bf401f6170bc89b3973920ec5f56ed72ef0###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/builder/loader/dialect/SQLServerTableMetaDataLoaderTest.java###/SQLServerTableMetaDataLoaderTest.java###org.apache.shardingsphere.infra.metadata.schema.builder.loader.dialect.SQLServerTableMetaDataLoaderTest###assertTableMetaDataMap:Map<String,TableMetaData> ###assertThat(actual.get("tbl").getColumns().size(),is(2));###actualTableMetaData###actual.get("tbl")###128:9:128:66
5784be8b09de36e14e3b24c2d71568145f9063e8###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-spring/shardingsphere-jdbc-governance-spring/shardingsphere-jdbc-governance-spring-boot-starter/src/test/java/org/apache/shardingsphere/spring/boot/governance/type/GovernanceSpringBootRegistryShardingTest.java###/GovernanceSpringBootRegistryShardingTest.java###org.apache.shardingsphere.spring.boot.governance.type.GovernanceSpringBootRegistryShardingTest###assertWithTableRules:###ShardingRuleshardingRule=(ShardingRule)metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator().next();###iterator###metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator()###99:9:99:137
216ca485877579a39c26c7e3837e94716595649b###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/JDBCDatabaseCommunicationEngine.java###/JDBCDatabaseCommunicationEngine.java###org.apache.shardingsphere.proxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine###execute:###ExecutionContextexecutionContext=getKernelProcessor().generateExecutionContext(getLogicSQL(),getMetaData(),ProxyContext.getInstance().getContextManager().getMetaDataContexts().getProps());###logicSQL###getLogicSQL()###118:9:119:154
276917e208a5fc0ff7d41e4998192404f9e210dc###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-core/src/main/java/org/apache/shardingsphere/data/pipeline/core/api/impl/RuleAlteredJobAPIImpl.java###/RuleAlteredJobAPIImpl.java###org.apache.shardingsphere.data.pipeline.core.api.impl.RuleAlteredJobAPIImpl###start:JobConfiguration ###PipelineAPIFactory.getGovernanceRepositoryAPI().persist(String.format("%s/%s",DataPipelineConstants.DATA_PIPELINE_ROOT,jobConfig.getHandleConfig().getJobId()),RuleAlteredJob.class.getName());###repositoryAPI###PipelineAPIFactory.getGovernanceRepositoryAPI()###152:9:153:132
37fb9fd1993422b931a830b54253310cb0b96000###/apache_shardingsphere/shardingsphere-governance/shardingsphere-governance-core/src/main/java/org/apache/shardingsphere/governance/core/registry/process/subscriber/ProcessRegistrySubscriber.java###/ProcessRegistrySubscriber.java###org.apache.shardingsphere.governance.core.registry.process.subscriber.ProcessRegistrySubscriber###reportExecuteProcessUnit:ExecuteProcessUnitReportEvent ###StringexecutionPath=ProcessNode.getExecutionPath(event.getExecutionID());###executionID###event.getExecutionID()###83:9:83:85
05246f1419c81c064a54016e106232f242b4c818###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-traffic/shardingsphere-traffic-core/src/main/java/org/apache/shardingsphere/traffic/rule/TrafficRule.java###/TrafficRule.java###org.apache.shardingsphere.traffic.rule.TrafficRule###TrafficRule:TrafficRuleConfiguration ###trafficStrategyRules.add(newTrafficStrategyRule(each.getName(),each.getLabels(),each.getAlgorithmName(),each.getLoadBalancerName()))###trafficStrategyRule###newTrafficStrategyRule(each.getName(),each.getLabels(),each.getAlgorithmName(),each.getLoadBalancerName())###59:55:59:191
ede94d66c0cd384ba18ca61ba6da2e8e76c027c7###/apache_shardingsphere/shardingsphere-test/shardingsphere-pipeline-test/src/test/java/org/apache/shardingsphere/data/pipeline/core/lock/PipelineSimpleLockTest.java###/PipelineSimpleLockTest.java###org.apache.shardingsphere.data.pipeline.core.lock.PipelineSimpleLockTest###assertTryLockAndReleaseLock:###pipelineSimpleLock.tryLock("test",50L);###timeoutMillis###50L###70:9:70:49
5d611030f4573a0bee1c1c83e930f5acc88b002d###/apache_shardingsphere/shardingsphere-distsql/shardingsphere-distsql-parser/src/main/java/org/apache/shardingsphere/distsql/parser/core/common/CommonDistSQLStatementVisitor.java###/CommonDistSQLStatementVisitor.java###org.apache.shardingsphere.distsql.parser.core.common.CommonDistSQLStatementVisitor###visitDataSource:DataSourceContext ###returnnewDataSourceSegment(getIdentifierValue(ctx.dataSourceName()),url,hostname,port,dbName,ctx.user().getText(),null==ctx.password()?"":getPassword(ctx.password()),null==ctx.poolProperties()?newProperties():getPoolProperties(ctx.poolProperties()));###password###null==ctx.password()?"":getPassword(ctx.password())###122:9:124:108
d91ffcb5a9489e0e02d9a2230f9cdd2cf9e69381###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-core/src/main/java/org/apache/shardingsphere/data/pipeline/core/check/consistency/DataConsistencyCheckerImpl.java###/DataConsistencyCheckerImpl.java###org.apache.shardingsphere.data.pipeline.core.check.consistency.DataConsistencyCheckerImpl###dataCheck:DataConsistencyCheckAlgorithm ###SingleTableDataCalculatorsourceCalculator=checkAlgorithm.getSingleTableDataCalculator(sourceConfig.getDatabaseType().getName());###sourceDatabaseType###sourceConfig.getDatabaseType().getName()###129:9:129:140
e3e4ed5be1ba924b7f9392cd0d2f99cb8f51bca3###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/proxy/frontend/mysql/command/query/binary/close/MySQLComStmtCloseExecutor.java###/MySQLComStmtCloseExecutor.java###org.apache.shardingsphere.proxy.frontend.mysql.command.query.binary.close.MySQLComStmtCloseExecutor###execute:###MySQLPreparedStatementRegistry.getInstance().getConnectionPreparedStatements(connectionId).closeStatement(packet.getStatementId());###connectionPreparedStatements###MySQLPreparedStatementRegistry.getInstance().getConnectionPreparedStatements(connectionId)###41:9:41:140
d9bdb6a6a04767539ed477581bcd21105dbf515d###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/single/SingleTableDataNodeLoaderTest.java###/SingleTableDataNodeLoaderTest.java###org.apache.shardingsphere.infra.rule.single.SingleTableDataNodeLoaderTest###assertLoadWithExcludeTables:###Collection<String>tableNames=SingleTableDataNodeLoader.load(mock(DatabaseType.class),dataSourceMap,Arrays.asList("salary","employee","student")).keySet();###excludedTables###Arrays.asList("salary","employee","student")###93:9:93:170
d9393bf401f6170bc89b3973920ec5f56ed72ef0###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/builder/loader/dialect/OracleTableMetaDataLoaderTest.java###/OracleTableMetaDataLoaderTest.java###org.apache.shardingsphere.infra.metadata.schema.builder.loader.dialect.OracleTableMetaDataLoaderTest###assertLoadCondition6:###assertThat(actual.get("tbl").getColumnMetaData(0),is(newColumnMetaData("id",4,true,false,false)));###actualTableMetaData###actual.get("tbl")###175:9:175:113
327b7b02acb9894b677739baa54da94bd1a65fb9###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/distsql/rdl/resource/DropResourceBackendHandlerTest.java###/DropResourceBackendHandlerTest.java###org.apache.shardingsphere.proxy.backend.text.distsql.rdl.resource.DropResourceBackendHandlerTest###assertResourceNameInUseIgnoreSingleTables:###ResponseHeaderresponseHeader=dropResourceBackendHandler.execute("test",createDropResourceStatementIgnoreSingleTables());###dropResourceStatement###createDropResourceStatementIgnoreSingleTables()###154:9:154:133
027f9d370a53073ce70aa41a15674942688bdc8d###/apache_shardingsphere/shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptProjectionTokenGenerator.java###/EncryptProjectionTokenGenerator.java###org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptProjectionTokenGenerator###generateProjectionSQLTokens:SelectStatementContext EncryptTable String ###ShorthandProjectionshorthandProjection=getShorthandProjection((ShorthandProjectionSegment)each,selectStatementContext.getProjectionsContext());###shorthandSegment###(ShorthandProjectionSegment)each###117:17:117:165
5d9f4d8d45468310ab2c98c96ca1dc9e0e161c73###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/distsql/ral/common/set/excutor/SetInstanceStatusExecutor.java###/SetInstanceStatusExecutor.java###org.apache.shardingsphere.proxy.backend.text.distsql.ral.common.set.excutor.SetInstanceStatusExecutor###execute:###ShardingSphereEventBus.getInstance().post(newComputeNodeStatusChangedEvent("DISABLE".equals(sqlStatement.getStatus())?ComputeNodeStatus.CIRCUIT_BREAK:ComputeNodeStatus.ONLINE,sqlStatement.getIp(),sqlStatement.getPort()));###isDisable###"DISABLE".equals(sqlStatement.getStatus())###41:9:42:64
915d4572b7ee72a77891e8d130a1a5ca4b20ea04###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/distsql/rdl/impl/CreateEncryptRuleBackendHandler.java###/CreateEncryptRuleBackendHandler.java###org.apache.shardingsphere.proxy.backend.text.distsql.rdl.impl.CreateEncryptRuleBackendHandler###doExecute:String CreateEncryptRuleStatement ###EncryptRuleConfigurationexistEncryptRuleConfig=findRuleConfiguration(schemaName,EncryptRuleConfiguration.class).get();###ruleConfig###findRuleConfiguration(schemaName,EncryptRuleConfiguration.class)###70:13:70:135
d58fbcaa419ef3d7aecdc4adf9a662eebf42bb39###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/api/yaml/YamlShardingSphereDataSourceFactory.java###/YamlShardingSphereDataSourceFactory.java###org.apache.shardingsphere.driver.api.yaml.YamlShardingSphereDataSourceFactory###createDataSource:Map<String,DataSource> YamlRootConfiguration ###returnShardingSphereDataSourceFactory.createDataSource(rootConfig.getSchemaName(),dataSourceMap,SWAPPER_ENGINE.swapToRuleConfigurations(rootConfig.getRules()),rootConfig.getProps());###ruleConfigs###SWAPPER_ENGINE.swapToRuleConfigurations(rootConfig.getRules())###132:9:132:195
0a710abb4f7d565223a9b0c944e400073cf2270e###/apache_shardingsphere/shardingsphere-features/shardingsphere-shadow/shardingsphere-shadow-core/src/test/java/org/apache/shardingsphere/shadow/route/future/engine/ShadowRouteEngineFactoryTest.java###/ShadowRouteEngineFactoryTest.java###org.apache.shardingsphere.shadow.route.future.engine.ShadowRouteEngineFactoryTest###assertNewInstance:###assertThat(ShadowRouteEngineFactory.newInstance(newLogicSQL(createSqlStatementContext(),"",Lists.newArrayList()))instanceofShadowInsertStatementRoutingEngine,is(true));###shadowRouteEngine###ShadowRouteEngineFactory.newInstance(newLogicSQL(createSqlStatementContext(),"",Lists.newArrayList()))###36:9:36:183
e9fc2d81fbcfe78dfed4661305d13ae5c46f1e96###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/ContextManager.java###/ContextManager.java###org.apache.shardingsphere.mode.manager.ContextManager###buildChangedMetaDataContextWithAddedDataSource:ShardingSphereMetaData Map<String,DataSourceProperties> ###metaDataContextsBuilder.addSchema(originalMetaData.getName(),newDataSourceProvidedSchemaConfiguration(dataSourceMap,originalMetaData.getRuleMetaData().getConfigurations()),props);###schemaConfiguration###newDataSourceProvidedSchemaConfiguration(dataSourceMap,originalMetaData.getRuleMetaData().getConfigurations())###457:9:457:192
5784be8b09de36e14e3b24c2d71568145f9063e8###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-spring/shardingsphere-jdbc-governance-spring/shardingsphere-jdbc-governance-spring-boot-starter/src/test/java/org/apache/shardingsphere/spring/boot/governance/type/GovernanceSpringBootShardingTest.java###/GovernanceSpringBootShardingTest.java###org.apache.shardingsphere.spring.boot.governance.type.GovernanceSpringBootShardingTest###assertWithShardingSphereDataSourceNames:###ShardingRuleshardingRule=(ShardingRule)metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator().next();###iterator###metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator()###74:9:74:137
ed71fb20f3fce018a38da050a9a6f68b9df16229###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/merge/dql/ShardingDQLResultMergerTest.java###/ShardingDQLResultMergerTest.java###org.apache.shardingsphere.sharding.merge.dql.ShardingDQLResultMergerTest###assertBuildGroupByMemoryMergedResultWithAggregationOnlyWithMySQLLimit:###finalShardingDQLResultMergerresultMerger=newShardingDQLResultMerger(DatabaseTypeRegistry.getActualDatabaseType("MySQL"));###databaseType###DatabaseTypeRegistry.getActualDatabaseType("MySQL")###419:9:419:135
52e17df01d52ef1bd300244b81f054b21265f5bd###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/response/header/query/impl/QueryHeaderBuilderTest.java###/QueryHeaderBuilderTest.java###org.apache.shardingsphere.proxy.backend.response.header.query.impl.QueryHeaderBuilderTest###assertQueryHeaderPrimaryKeyWithoutColumn:###QueryHeaderheader=QueryHeaderBuilder.build(createQueryResultMetaData(),createMetaData(),2);###metaData###createMetaData()###118:9:118:105
7a939fe0fdddad9b0203c590101eaf73ca44a826###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-standalone-mode/shardingsphere-standalone-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/standalone/StandaloneContextManagerBuilder.java###/StandaloneContextManagerBuilder.java###org.apache.shardingsphere.mode.manager.standalone.StandaloneContextManagerBuilder###build:ModeConfiguration Map<String,Map<String,DataSource>> Map<String,Collection<RuleConfiguration>> Collection<RuleConfiguration> Properties boolean Integer ###MetaDataContextsmetaDataContexts=newMetaDataContextsBuilder(loadDataSourcesMap(metaDataPersistService,dataSourcesMap,schemaNames),loadSchemaRules(metaDataPersistService,schemaNames),metaDataPersistService.getGlobalRuleService().load(),metaDataPersistService.getPropsService().load()).build(metaDataPersistService);###standaloneProps###metaDataPersistService.getPropsService().load()###69:9:70:150
d02698ae25fd81dc384d58a729dbf51a300576cb###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/connection/ConnectionManagerTest.java###/ConnectionManagerTest.java###org.apache.shardingsphere.driver.jdbc.core.connection.ConnectionManagerTest###assertGetConnectionWhenConfigTrafficRule:###assertThat(connectionManager.getConnections("127.0.0.1@3307",1,ConnectionMode.MEMORY_STRICTLY),is(connectionManager.getConnections("127.0.0.1@3307",1,ConnectionMode.MEMORY_STRICTLY)));###actual###connectionManager.getConnections("127.0.0.1@3307",1,ConnectionMode.MEMORY_STRICTLY)###163:9:164:108
bc570cf5e89854abde334851e771d0d19ca7e20e###/apache_shardingsphere/shardingsphere-governance/shardingsphere-governance-core/src/main/java/org/apache/shardingsphere/governance/core/registry/RegistryCenter.java###/RegistryCenter.java###org.apache.shardingsphere.governance.core.registry.RegistryCenter###createSubscribers:RegistryCenterRepository ###newGlobalRuleRegistrySubscriber(globalRuleService,newUserStatusRegistryService(repository));###userStatusRegistryService###newUserStatusRegistryService(repository)###85:9:85:104
7a939fe0fdddad9b0203c590101eaf73ca44a826###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/ClusterContextManagerBuilder.java###/ClusterContextManagerBuilder.java###org.apache.shardingsphere.mode.manager.cluster.ClusterContextManagerBuilder###beforeBuildContextManager:ModeConfiguration Map<String,Map<String,DataSource>> Map<String,Collection<RuleConfiguration>> Collection<RuleConfiguration> Properties boolean Integer ###metaDataContexts=newMetaDataContextsBuilder(loadDataSourcesMap(metaDataPersistService,dataSourcesMap,schemaNames),loadSchemaRules(metaDataPersistService,schemaNames),metaDataPersistService.getGlobalRuleService().load(),metaDataPersistService.getPropsService().load()).build(metaDataPersistService);###clusterSchemaRuleConfigs###loadSchemaRules(metaDataPersistService,schemaNames)###95:9:96:150
ee67c6eadb4b5a35d7b6988c0a873f8bc5b12042###/apache_shardingsphere/shardingsphere-scaling/shardingsphere-scaling-core/src/main/java/org/apache/shardingsphere/scaling/core/api/impl/ScalingAPIImpl.java###/ScalingAPIImpl.java###org.apache.shardingsphere.scaling.core.api.impl.ScalingAPIImpl###dataConsistencyCheck:long ###DataConsistencyCheckerdataConsistencyChecker=EnvironmentCheckerFactory.newInstance(newJobContext(getJobConfig(jobId)));###jobConfig###getJobConfig(jobId)###157:9:157:132
6b7aa50f27a0e3d10a91ef7f2c0d0ac532aee566###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/ContextManager.java###/ContextManager.java###org.apache.shardingsphere.mode.manager.ContextManager###addSchema:String ###metaDataContexts.getOptimizerContext().getFederationMetaData().getSchemas().put(schemaName,newMetaDataContexts.getOptimizerContext().getFederationMetaData().getSchemas().get(schemaName));###schemaMetaData###newMetaDataContexts.getOptimizerContext().getFederationMetaData().getSchemas().get(schemaName)###128:9:129:113
a69541e29a3f0f7cc8b0c95ab9479ac0bcd46818###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-core/src/main/java/org/apache/shardingsphere/data/pipeline/core/api/impl/RuleAlteredJobAPIImpl.java###/RuleAlteredJobAPIImpl.java###org.apache.shardingsphere.data.pipeline.core.api.impl.RuleAlteredJobAPIImpl###switchClusterConfiguration:JobConfiguration ###Optional<Boolean>checkResultOptional=PipelineAPIFactory.getGovernanceRepositoryAPI().getJobCheckResult(jobId);###repositoryAPI###PipelineAPIFactory.getGovernanceRepositoryAPI()###309:13:309:126
2cd812306f257e51dcd4a737fa9f432cbf8ac295###/apache_shardingsphere/shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/common/util/SubqueryExtractUtil.java###/SubqueryExtractUtil.java###org.apache.shardingsphere.sql.parser.sql.common.util.SubqueryExtractUtil###getSubquerySegmentsFromExpression:ExpressionSegment ###result.add(((SubqueryExpressionSegment)expressionSegment).getSubquery());###subquery###((SubqueryExpressionSegment)expressionSegment).getSubquery()###93:13:93:87
6e3d5c2e709e7a24b7ec269f208a0973d2d778c3###/apache_shardingsphere/shardingsphere-scaling/shardingsphere-scaling-core/src/test/java/org/apache/shardingsphere/scaling/core/config/yaml/ServerConfigurationYamlSwapperTest.java###/ServerConfigurationYamlSwapperTest.java###org.apache.shardingsphere.scaling.core.config.yaml.ServerConfigurationYamlSwapperTest###mockYamlServerConfig:###config.setRegistryCenter(newYamlRegistryCenterConfiguration());###registryCenterConfig###newYamlRegistryCenterConfiguration()###60:9:60:73
517bad4a90316176bb2d9ba5cb13e6c4f93cca8b###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/config/datasource/creator/impl/AbstractDataSourceCreator.java###/AbstractDataSourceCreator.java###org.apache.shardingsphere.infra.config.datasource.creator.impl.AbstractDataSourceCreator###findAllGetterProperties:Object ###result.put(propertyName,each.invoke(target));###propertyValue###each.invoke(target)###111:17:111:63
2cd812306f257e51dcd4a737fa9f432cbf8ac295###/apache_shardingsphere/shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/common/util/SubqueryExtractUtil.java###/SubqueryExtractUtil.java###org.apache.shardingsphere.sql.parser.sql.common.util.SubqueryExtractUtil###getSubquerySegmentsFromProjections:ProjectionsSegment ###result.add(((SubqueryProjectionSegment)each).getSubquery());###subquery###((SubqueryProjectionSegment)each).getSubquery()###70:13:70:74
63bc4d15040dc40e5de0100fc8643da2f6210035###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-distsql/shardingsphere-sharding-distsql-handler/src/test/java/org/apache/shardingsphere/scaling/distsql/handler/CreateShardingScalingStatementUpdaterTest.java###/CreateShardingScalingStatementUpdaterTest.java###org.apache.shardingsphere.scaling.distsql.handler.CreateShardingScalingStatementUpdaterTest###assertUpdateSuccess:###assertThat(currentRuleConfig.getScaling().keySet().iterator().next(),is("default_scaling"));###key###currentRuleConfig.getScaling().keySet().iterator().next()###80:9:80:102
b8db81f51e533773a8992c4909cc4f623279a356###/apache_shardingsphere/shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptProjectionTokenGenerator.java###/EncryptProjectionTokenGenerator.java###org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptProjectionTokenGenerator###generateSQLTokens:ProjectionsSegment String SelectStatementContext EncryptTable Optional<String> SubqueryEnum SubqueryTableContext ###if(encryptTable.getLogicColumns().contains(((ColumnProjectionSegment)each).getColumn().getIdentifier().getValue())&&columnMatchTableAndCheckAmbiguous(selectStatementContext,(ColumnProjectionSegment)each,tableName))###columnName###((ColumnProjectionSegment)each).getColumn().getIdentifier().getValue()###137:17:140:18
0133432127b272f0104c693de1175e33c1f5161e###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/cache/subscriber/ScalingRegistrySubscriber.java###/ScalingRegistrySubscriber.java###org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.cache.subscriber.ScalingRegistrySubscriber###cacheRuleConfiguration:RuleConfigurationCachedEvent ###StartScalingEventstartScalingEvent=newStartScalingEvent(event.getSchemaName(),repository.get(SchemaMetaDataNode.getMetaDataDataSourcePath(event.getSchemaName())),repository.get(SchemaMetaDataNode.getRulePath(event.getSchemaName())),registryCacheManager.loadCache(SchemaMetaDataNode.getRulePath(event.getSchemaName()),event.getCacheId()),event.getCacheId());###sourceRule###repository.get(SchemaMetaDataNode.getRulePath(event.getSchemaName()))###91:9:94:144
99a093d484c4ad0665befbadf49a70b427fa87fc###/apache_shardingsphere/shardingsphere-governance/shardingsphere-governance-core/src/test/java/org/apache/shardingsphere/governance/core/registry/metadata/watcher/MetaDataChangedWatcherTest.java###/MetaDataChangedWatcherTest.java###org.apache.shardingsphere.governance.core.registry.metadata.watcher.MetaDataChangedWatcherTest###assertCreateEventWithInvalidPath:###DataChangedEventdataChangedEvent=newDataChangedEvent("/metadata_invalid/sharding_db","encrypt_db",Type.UPDATED);###key###"/metadata_invalid/sharding_db"###33:9:33:127
74b25c90b764148308725ca4a32c95834804d0da###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-distsql/shardingsphere-sharding-distsql-handler/src/test/java/org/apache/shardingsphere/sharding/distsql/converter/ShardingRuleStatementConverterTest.java###/ShardingRuleStatementConverterTest.java###org.apache.shardingsphere.sharding.distsql.converter.ShardingRuleStatementConverterTest###assertConvert:###ShardingAutoTableRuleConfigurationautoTableRule=config.getAutoTables().iterator().next();###autoTableConfigIterator###config.getAutoTables().iterator()###62:9:62:101
a80f057f2eafcdaa34b6fb7ed15f4ede0bb470c4###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/DatabaseCommunicationEngine.java###/DatabaseCommunicationEngine.java###org.apache.shardingsphere.proxy.backend.communication.DatabaseCommunicationEngine###DatabaseCommunicationEngine:String ShardingSphereMetaData LogicSQL JDBCBackendConnection ###metadataRefreshEngine=newMetaDataRefreshEngine(metaData,ProxyContext.getInstance().getContextManager().getMetaDataContexts().getOptimizerContext().getMetaData().getSchemas().get(backendConnection.getConnectionSession().getSchemaName()),ProxyContext.getInstance().getContextManager().getMetaDataContexts().getProps());###schemaName###backendConnection.getConnectionSession().getSchemaName()###92:9:94:98
5784be8b09de36e14e3b24c2d71568145f9063e8###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-spring/shardingsphere-jdbc-governance-spring/shardingsphere-jdbc-governance-spring-boot-starter/src/test/java/org/apache/shardingsphere/spring/boot/governance/type/GovernanceSpringBootShardingTest.java###/GovernanceSpringBootShardingTest.java###org.apache.shardingsphere.spring.boot.governance.type.GovernanceSpringBootShardingTest###assertWithTableRules:###ShardingRuleshardingRule=(ShardingRule)metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator().next();###iterator###metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator()###83:9:83:137
216ca485877579a39c26c7e3837e94716595649b###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/impl/SchemaAssignedDatabaseBackendHandlerTest.java###/SchemaAssignedDatabaseBackendHandlerTest.java###org.apache.shardingsphere.proxy.backend.text.data.impl.SchemaAssignedDatabaseBackendHandlerTest###setUp:###schemaAssignedDatabaseBackendHandler=newSchemaAssignedDatabaseBackendHandler(mock(SQLStatementContext.class),EXECUTE_SQL,connectionSession);###sqlStatementContext###mock(SQLStatementContext.class)###89:9:89:154
b0a6ab46375a4b30df3853c6b0c2aaefaac2e781###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/distsql/ral/common/queryable/CountInstanceRulesHandler.java###/CountInstanceRulesHandler.java###org.apache.shardingsphere.proxy.backend.text.distsql.ral.common.queryable.CountInstanceRulesHandler###addSchemaData:Map<String,List<Object>> ShardingSphereMetaData ###addSingleTableData(dataMap,metaData.getRuleMetaData().findRules(SingleTableRule.class));###singleTableRules###metaData.getRuleMetaData().findRules(SingleTableRule.class)###100:9:100:98
aab226b72ba574061748d8f94c461ea469f9168f###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/test/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/ClusterContextManagerCoordinatorTest.java###/ClusterContextManagerCoordinatorTest.java###org.apache.shardingsphere.mode.manager.cluster.coordinator.ClusterContextManagerCoordinatorTest###createMetaDataMap:###when(metaData.getSchema()).thenReturn(mock(ShardingSphereSchema.class));###schema###mock(ShardingSphereSchema.class)###240:9:240:81
a67140635667b929eb9c72f5a1d584ea84500dfe###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/distsql/ral/common/updatable/ImportSchemaConfigurationHandler.java###/ImportSchemaConfigurationHandler.java###org.apache.shardingsphere.proxy.backend.text.distsql.ral.common.updatable.ImportSchemaConfigurationHandler###alterRulesConfig:String Collection<YamlRuleConfiguration> ###toBeUpdatedRuleConfigs.add(newShardingRuleConfigurationYamlSwapper().swapToObject((YamlShardingRuleConfiguration)each));###shardingRuleConfiguration###newShardingRuleConfigurationYamlSwapper().swapToObject((YamlShardingRuleConfiguration)each)###109:17:109:139
7a939fe0fdddad9b0203c590101eaf73ca44a826###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-standalone-mode/shardingsphere-standalone-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/standalone/StandaloneContextManagerBuilder.java###/StandaloneContextManagerBuilder.java###org.apache.shardingsphere.mode.manager.standalone.StandaloneContextManagerBuilder###build:ModeConfiguration Map<String,Map<String,DataSource>> Map<String,Collection<RuleConfiguration>> Collection<RuleConfiguration> Properties boolean Integer ###MetaDataContextsmetaDataContexts=newMetaDataContextsBuilder(loadDataSourcesMap(metaDataPersistService,dataSourcesMap,schemaNames),loadSchemaRules(metaDataPersistService,schemaNames),metaDataPersistService.getGlobalRuleService().load(),metaDataPersistService.getPropsService().load()).build(metaDataPersistService);###standaloneDataSources###loadDataSourcesMap(metaDataPersistService,dataSourcesMap,schemaNames)###69:9:70:150
52e17df01d52ef1bd300244b81f054b21265f5bd###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/response/header/query/impl/QueryHeaderBuilderTest.java###/QueryHeaderBuilderTest.java###org.apache.shardingsphere.proxy.backend.response.header.query.impl.QueryHeaderBuilderTest###assertQueryHeaderNotNull:###QueryHeaderheader=QueryHeaderBuilder.build(createQueryResultMetaData(),createMetaData(),1);###metaData###createMetaData()###124:9:124:105
d9393bf401f6170bc89b3973920ec5f56ed72ef0###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/builder/loader/dialect/PostgreSQLTableMetaDataLoaderTest.java###/PostgreSQLTableMetaDataLoaderTest.java###org.apache.shardingsphere.infra.metadata.schema.builder.loader.dialect.PostgreSQLTableMetaDataLoaderTest###assertTableMetaDataMap:Map<String,TableMetaData> ###assertThat(actual.get("tbl").getColumns().size(),is(2));###actualTableMetaData###actual.get("tbl")###152:9:152:66
28cae6b42778c3591bad07a994c8adeb2007eb90###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/config/datasource/props/DataSourceProperties.java###/DataSourceProperties.java###org.apache.shardingsphere.infra.config.datasource.props.DataSourceProperties###DataSourceProperties:String Map<String,Object> ###Map<String,String>propertySynonyms=DataSourcePoolMetaDataFactory.newInstance(dataSourceClassName).getPropertySynonyms();###poolMetaData###DataSourcePoolMetaDataFactory.newInstance(dataSourceClassName)###48:9:48:133
7a939fe0fdddad9b0203c590101eaf73ca44a826###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/ClusterContextManagerCoordinator.java###/ClusterContextManagerCoordinator.java###org.apache.shardingsphere.mode.manager.cluster.coordinator.ClusterContextManagerCoordinator###getChangedMetaData:ShardingSphereMetaData Collection<RuleConfiguration> ###MetaDataContextsBuilderbuilder=newMetaDataContextsBuilder(Collections.singletonMap(originalMetaData.getName(),originalMetaData.getResource().getDataSources()),Collections.singletonMap(originalMetaData.getName(),ruleConfigs),metaDataPersistService.getGlobalRuleService().load(),contextManager.getMetaDataContexts().getProps().getProps());###schemaRuleConfigs###Collections.singletonMap(originalMetaData.getName(),ruleConfigs)###303:9:304:198
648503d761348cbf8f00ac450de1e0ea9416934c###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-core/src/main/java/org/apache/shardingsphere/mode/metadata/persist/service/ComputeNodePersistService.java###/ComputeNodePersistService.java###org.apache.shardingsphere.mode.metadata.persist.service.ComputeNodePersistService###loadAllComputeNodeInstances:InstanceType ###instance.setLabels(loadInstanceLabels(each));###actualLabels###loadInstanceLabels(each)###86:13:86:58
33062dc4be70712e6e74addbad35386d3854b5bf###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-core/src/main/java/org/apache/shardingsphere/proxy/frontend/state/impl/OKProxyState.java###/OKProxyState.java###org.apache.shardingsphere.proxy.frontend.state.impl.OKProxyState###execute:ChannelHandlerContext Object DatabaseProtocolFrontendEngine BackendConnection ###executorService.execute(newCommandExecutorTask(databaseProtocolFrontendEngine,backendConnection,context,message));###commandExecutorTask###newCommandExecutorTask(databaseProtocolFrontendEngine,backendConnection,context,message)###42:9:42:127
52e17df01d52ef1bd300244b81f054b21265f5bd###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/response/header/query/impl/QueryHeaderBuilderTest.java###/QueryHeaderBuilderTest.java###org.apache.shardingsphere.proxy.backend.response.header.query.impl.QueryHeaderBuilderTest###assertQueryHeaderColumnLabel:###QueryHeaderheader=QueryHeaderBuilder.build(createQueryResultMetaData(),createMetaData(),1);###metaData###createMetaData()###64:9:64:105
fc56fcda8d10e4e4e8553fd8a2f784e6b1ec006b###/apache_shardingsphere/shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-distsql/shardingsphere-encrypt-distsql-handler/src/test/java/org/apache/shardingsphere/encrypt/distsql/handler/update/DropEncryptRuleStatementUpdaterTest.java###/DropEncryptRuleStatementUpdaterTest.java###org.apache.shardingsphere.encrypt.distsql.handler.update.DropEncryptRuleStatementUpdaterTest###assertUpdateCurrentRuleConfiguration:###updater.updateCurrentRuleConfiguration(createSQLStatement(),createCurrentRuleConfiguration());###encryptRuleConfiguration###createCurrentRuleConfiguration()###54:9:54:104
d84fe063f9bd53edd887e813cb5d6a3430f372c9###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-distsql/shardingsphere-sharding-distsql-handler/src/main/java/org/apache/shardingsphere/sharding/distsql/handler/update/DropShardingBindingTableRuleStatementUpdater.java###/DropShardingBindingTableRuleStatementUpdater.java###org.apache.shardingsphere.sharding.distsql.handler.update.DropShardingBindingTableRuleStatementUpdater###checkSQLStatement:ShardingSphereMetaData DropShardingBindingTableRulesStatement ShardingRuleConfiguration ###checkCurrentRuleConfiguration(shardingSphereMetaData.getName(),currentRuleConfig);###schemaName###shardingSphereMetaData.getName()###35:9:35:92
52e17df01d52ef1bd300244b81f054b21265f5bd###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/response/header/query/impl/QueryHeaderBuilderTest.java###/QueryHeaderBuilderTest.java###org.apache.shardingsphere.proxy.backend.response.header.query.impl.QueryHeaderBuilderTest###assertQueryHeaderColumnType:###QueryHeaderheader=QueryHeaderBuilder.build(createQueryResultMetaData(),createMetaData(),1);###metaData###createMetaData()###94:9:94:105
ee7827da36c4958561010872b7067ae6aabd8572###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/ContextManager.java###/ContextManager.java###org.apache.shardingsphere.mode.manager.ContextManager###alterGlobalRuleConfiguration:Collection<RuleConfiguration> ###if(isNeedRenewTransactionContext(ruleConfigs))###needRenewTransaction###isNeedRenewTransactionContext(ruleConfigs)###315:13:317:14
15116870ad904fa6403fb71b5a9187686bf0e824###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/extended/describe/PostgreSQLComDescribeExecutorTest.java###/PostgreSQLComDescribeExecutorTest.java###org.apache.shardingsphere.proxy.frontend.postgresql.command.query.extended.describe.PostgreSQLComDescribeExecutorTest###assertDescribePreparedStatement:###when(packet.getName()).thenReturn("S_1");###statementId###"S_1"###75:9:75:50
b092bbf67d7872060e5bb146e128a1b3a31387ef###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/algorithm/sharding/mod/ModShardingAlgorithm.java###/ModShardingAlgorithm.java###org.apache.shardingsphere.sharding.algorithm.sharding.mod.ModShardingAlgorithm###doSharding:Collection<String> PreciseShardingValue<Comparable<?>> ###if(each.endsWith(String.valueOf(getLongValue(shardingValue.getValue())%shardingCount)))###suffix###String.valueOf(getLongValue(shardingValue.getValue())%shardingCount)###59:13:61:14
0133432127b272f0104c693de1175e33c1f5161e###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/cache/subscriber/ScalingRegistrySubscriber.java###/ScalingRegistrySubscriber.java###org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.cache.subscriber.ScalingRegistrySubscriber###cacheRuleConfiguration:RuleConfigurationCachedEvent ###StartScalingEventstartScalingEvent=newStartScalingEvent(event.getSchemaName(),repository.get(SchemaMetaDataNode.getMetaDataDataSourcePath(event.getSchemaName())),repository.get(SchemaMetaDataNode.getRulePath(event.getSchemaName())),registryCacheManager.loadCache(SchemaMetaDataNode.getRulePath(event.getSchemaName()),event.getCacheId()),event.getCacheId());###ruleCacheId###event.getCacheId()###91:9:94:144
7f18db4a97c97aa9621591865b146e1c626ff068###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/type/broadcast/ShardingTableBroadcastRoutingEngineTest.java###/ShardingTableBroadcastRoutingEngineTest.java###org.apache.shardingsphere.sharding.route.engine.type.broadcast.ShardingTableBroadcastRoutingEngineTest###assertRouteForDropIndexStatement:###when(sqlStatementContext.getTablesContext().getTableNames()).thenReturn(Collections.emptyList());###tableNames###Collections.emptyList()###100:9:100:106
8a28b17395cd5d3cd3dba6cf9ccdb892ff11591e###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-bootstrap/src/main/java/org/apache/shardingsphere/proxy/initializer/BootstrapInitializer.java###/BootstrapInitializer.java###org.apache.shardingsphere.proxy.initializer.BootstrapInitializer###init:YamlProxyConfiguration ###ContextManagercontextManager=ContextManagerBuilderFactory.newInstance(modeConfig).build(modeConfig,getDataSourcesMap(proxyConfig.getSchemaDataSources()),proxyConfig.getSchemaRules(),proxyConfig.getGlobalRules(),proxyConfig.getProps(),null==modeConfig||modeConfig.isOverwrite());###isOverwrite###null==modeConfig||modeConfig.isOverwrite()###66:9:67:149
5784be8b09de36e14e3b24c2d71568145f9063e8###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-spring/shardingsphere-jdbc-governance-spring/shardingsphere-jdbc-governance-spring-boot-starter/src/test/java/org/apache/shardingsphere/spring/boot/governance/type/GovernanceSpringBootRegistryShardingTest.java###/GovernanceSpringBootRegistryShardingTest.java###org.apache.shardingsphere.spring.boot.governance.type.GovernanceSpringBootRegistryShardingTest###assertWithBroadcastTables:###ShardingRuleshardingRule=(ShardingRule)metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator().next();###iterator###metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator()###150:9:150:137
fafec0cadb5d2144f9a59a8add2e7b852c004a5b###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-distsql/shardingsphere-sharding-distsql-handler/src/test/java/org/apache/shardingsphere/sharding/distsql/update/CreateShardingBindingTableRuleStatementUpdaterTest.java###/CreateShardingBindingTableRuleStatementUpdaterTest.java###org.apache.shardingsphere.sharding.distsql.update.CreateShardingBindingTableRuleStatementUpdaterTest###getCurrentRuleConfig:###result.getTables().add(newShardingTableRuleConfiguration("t_1"));###tableRule1###newShardingTableRuleConfiguration("t_1")###66:9:66:75
d97cf2adfd0eefb3e4ea1e10ef6a98452d4e8fb3###/apache_shardingsphere/shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/test/java/org/apache/shardingsphere/encrypt/rewrite/impl/EncryptInConditionTest.java###/EncryptInConditionTest.java###org.apache.shardingsphere.encrypt.rewrite.impl.EncryptInConditionTest###assertGetConditionValues:###List<Object>actual=newEncryptInCondition("col",false,null,0,0,Arrays.asList(newLiteralExpressionSegment(0,0,1),newLiteralExpressionSegment(0,0,2))).getValues(Collections.emptyList());###expressions###Arrays.asList(newLiteralExpressionSegment(0,0,1),newLiteralExpressionSegment(0,0,2))###35:9:36:171
8220f02f56c6c990eab5e920b90bddc8071e2488###/apache_shardingsphere/shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptPredicateColumnTokenGenerator.java###/EncryptPredicateColumnTokenGenerator.java###org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptPredicateColumnTokenGenerator###generateSQLTokens:SQLStatementContext ###for(each:ExpressionExtractUtil.getAndPredicates(expression))###andPredicates###ExpressionExtractUtil.getAndPredicates(expression)###64:9:66:10
156fdc3df02ae854c6df802305b4786bafc09598###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/metadata/watcher/MetaDataChangedWatcher.java###/MetaDataChangedWatcher.java###org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.metadata.watcher.MetaDataChangedWatcher###isTableMetaDataChanged:DataChangedEvent ###returnSchemaMetaDataNode.getSchemaName(event.getKey()).isPresent()&&SchemaMetaDataNode.getTableName(event.getKey()).isPresent()&&!Strings.isNullOrEmpty(event.getValue());###schemaName###SchemaMetaDataNode.getSchemaName(event.getKey())###84:9:84:184
4d924fbd2027a2c2ddc2924f989859216538e4e8###/apache_shardingsphere/shardingsphere-scaling/shardingsphere-scaling-distsql/shardingsphere-scaling-distsql-handler/src/main/java/org/apache/shardingsphere/scaling/distsql/handler/ShowScalingJobStatusQueryResultSet.java###/ShowScalingJobStatusQueryResultSet.java###org.apache.shardingsphere.scaling.distsql.handler.ShowScalingJobStatusQueryResultSet###init:ShardingSphereMetaData SQLStatement ###list.add(latestActiveTimeMillis>0?TimeUnit.MILLISECONDS.toMinutes(System.currentTimeMillis()-latestActiveTimeMillis):0);###currentTimeMillis###System.currentTimeMillis()###51:25:51:153
327b7b02acb9894b677739baa54da94bd1a65fb9###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/distsql/rdl/resource/DropResourceBackendHandlerTest.java###/DropResourceBackendHandlerTest.java###org.apache.shardingsphere.proxy.backend.text.distsql.rdl.resource.DropResourceBackendHandlerTest###assertExecute:###ResponseHeaderresponseHeader=dropResourceBackendHandler.execute("test",createDropResourceStatement());###dropResourceStatement###createDropResourceStatement()###104:9:104:115
52e17df01d52ef1bd300244b81f054b21265f5bd###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/JDBCDatabaseCommunicationEngineTest.java###/JDBCDatabaseCommunicationEngineTest.java###org.apache.shardingsphere.proxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngineTest###assertBinaryProtocolQueryHeader:###FieldSetter.setField(engine,queryHeadersField,Collections.singletonList(QueryHeaderBuilder.build(createQueryResultMetaData(),createMetaData(),1)));###metaData###createMetaData()###115:9:115:160
eeac86676c32ee1e4bb20977cf66ffe999572956###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/config/datasource/creator/impl/DefaultDataSourceCreator.java###/DefaultDataSourceCreator.java###org.apache.shardingsphere.infra.config.datasource.creator.impl.DefaultDataSourceCreator###createDataSource:DataSourceConfiguration ###setField(result,methods,entry.getKey(),entry.getValue());###propertyName###entry.getKey()###41:13:41:73
027f9d370a53073ce70aa41a15674942688bdc8d###/apache_shardingsphere/shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptProjectionTokenGenerator.java###/EncryptProjectionTokenGenerator.java###org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptProjectionTokenGenerator###generateProjectionSQLTokens:SelectStatementContext EncryptTable String ###result.add(generateProjectionSQLTokens((ColumnProjectionSegment)each,tableName,subqueryTable));###columnSegment###(ColumnProjectionSegment)each###113:21:113:119
7f18db4a97c97aa9621591865b146e1c626ff068###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/type/broadcast/ShardingTableBroadcastRoutingEngineTest.java###/ShardingTableBroadcastRoutingEngineTest.java###org.apache.shardingsphere.sharding.route.engine.type.broadcast.ShardingTableBroadcastRoutingEngineTest###assertRouteForBroadcastTable:###ShardingTableBroadcastRoutingEngineshardingTableBroadcastRoutingEngine=newShardingTableBroadcastRoutingEngine(mock(ShardingSphereSchema.class),createSQLStatementContext(Collections.singletonList("t_order")));###tableNames###Collections.singletonList("t_order")###81:9:82:156
c38362c17645e336d43ed6bfa4d42ed0bba57f4d###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-core/src/test/java/org/apache/shardingsphere/mode/manager/ContextManagerTest.java###/ContextManagerTest.java###org.apache.shardingsphere.mode.manager.ContextManagerTest###assertAlterDataSourceConfiguration:###when(metaDataContexts.getGlobalRuleMetaData()).thenReturn(mock(ShardingSphereRuleMetaData.class));###globalRuleMetaData###mock(ShardingSphereRuleMetaData.class)###300:9:300:107
afc39910bdeeea31df8cb3965ae5de2547b7ca97###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/type/standard/AbstractSQLRouteTest.java###/AbstractSQLRouteTest.java###org.apache.shardingsphere.sharding.route.engine.type.standard.AbstractSQLRouteTest###assertRoute:String List<Object> int ###ShardingSphereMetaDatametaData=newShardingSphereMetaData("sharding_db",mock(ShardingSphereResource.class,RETURNS_DEEP_STUBS),ruleMetaData,schema);###resource###mock(ShardingSphereResource.class,RETURNS_DEEP_STUBS)###64:9:64:163
b092bbf67d7872060e5bb146e128a1b3a31387ef###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/algorithm/sharding/mod/HashModShardingAlgorithm.java###/HashModShardingAlgorithm.java###org.apache.shardingsphere.sharding.algorithm.sharding.mod.HashModShardingAlgorithm###doSharding:Collection<String> PreciseShardingValue<Comparable<?>> ###if(each.endsWith(String.valueOf(hashShardingValue(shardingValue.getValue())%shardingCount)))###suffix###String.valueOf(hashShardingValue(shardingValue.getValue())%shardingCount)###58:13:60:14
b1e1e1fe96e53b1a706b8c9a6e481950f4a5d81f###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/strategy/ShardingStrategyTest.java###/ShardingStrategyTest.java###org.apache.shardingsphere.sharding.route.strategy.ShardingStrategyTest###assertDoShardingForBetweenSingleKey:###assertThat(strategy.doSharding(targets,Collections.singleton(newRangeShardingConditionValue<>("column","logicTable",Range.open(1,3))),newConfigurationProperties(newProperties())),is(Collections.singleton("1")));###shardingConditionValues###Collections.singleton(newRangeShardingConditionValue<>("column","logicTable",Range.open(1,3)))###54:9:56:49
10ad25e750da79917e1cf3c84626754c1d5a65ff###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/admin/postgresql/PostgreSQLAdminExecutorFactory.java###/PostgreSQLAdminExecutorFactory.java###org.apache.shardingsphere.proxy.backend.text.admin.postgresql.PostgreSQLAdminExecutorFactory###newInstance:SQLStatement String Optional<String> ###returnOptional.of(newPostgreSQLSetCharsetExecutor((SetStatement)sqlStatement));###setStatement###(SetStatement)sqlStatement###79:13:79:95
e851ca603311f89ec5f9ba54ec83f8137c545eb9###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-core/src/test/java/org/apache/shardingsphere/mode/manager/ContextManagerTest.java###/ContextManagerTest.java###org.apache.shardingsphere.mode.manager.ContextManagerTest###assertAddResource:###when(metaDataContexts.getMetaDataMap()).thenReturn(newHashMap<>(Collections.singletonMap("foo_schema",newShardingSphereMetaData("foo_schema",mock(ShardingSphereResource.class),newShardingSphereRuleMetaData(newLinkedList<>(),newLinkedList<>()),Collections.emptyMap()))));###resource###mock(ShardingSphereResource.class)###144:9:145:166
6d09bc019ff82e5927cc9bcba7cecd731fb406cf###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-core/src/main/java/org/apache/shardingsphere/data/pipeline/core/spi/check/consistency/DataMatchSingleTableDataCalculator.java###/DataMatchSingleTableDataCalculator.java###org.apache.shardingsphere.data.pipeline.core.spi.check.consistency.DataMatchSingleTableDataCalculator.CalculatedResult###equals:Object ###if(!newEqualsBuilder().append(thisNextIterator.next(),thatNextIterator.next()).isEquals())###thatResult###thatNextIterator.next()###156:21:158:22
9094b20a512891fea7cc0f616231d94f3325431b###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/text/PostgreSQLComQueryExecutor.java###/PostgreSQLComQueryExecutor.java###org.apache.shardingsphere.proxy.frontend.postgresql.command.query.text.PostgreSQLComQueryExecutor###createUpdatePacket:UpdateResponseHeader ###returnupdateResponseHeader.getSqlStatement()instanceofEmptyStatement?newPostgreSQLEmptyQueryResponsePacket():newPostgreSQLCommandCompletePacket(PostgreSQLCommand.valueOf(updateResponseHeader.getSqlStatement().getClass()).map(Enum::name).orElse(""),updateResponseHeader.getUpdateCount());###sqlStatement###updateResponseHeader.getSqlStatement()###87:9:88:199
09f2f4ec72cc7b6c976d83f51f3936c382f9d872###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/admin/mysql/executor/information/SelectInformationExecutorTest.java###/SelectInformationExecutorTest.java###org.apache.shardingsphere.proxy.backend.text.admin.mysql.executor.information.SelectInformationExecutorTest###getMetaData:###returnnewShardingSphereMetaData("sharding_db",newShardingSphereResource(mockDatasourceMap(),mockDataSourcesMetaData(),mock(CachedDatabaseMetaData.class),mock(MySQLDatabaseType.class)),mock(ShardingSphereRuleMetaData.class),mock(ShardingSphereSchema.class));###metaData###mock(ShardingSphereRuleMetaData.class)###98:9:101:11
a1105d7fef73f6ba23aa3b1b7408144e0e07b18e###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-standalone-mode/shardingsphere-standalone-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/standalone/StandaloneContextManagerBuilder.java###/StandaloneContextManagerBuilder.java###org.apache.shardingsphere.mode.manager.standalone.StandaloneContextManagerBuilder###getDataSourcesMap:Map<String,? extends SchemaConfiguration> ###result.put(entry.getKey(),entry.getValue().getDataSources());###dataSourceName###entry.getKey()###111:13:111:75
0133432127b272f0104c693de1175e33c1f5161e###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/cache/subscriber/ScalingRegistrySubscriber.java###/ScalingRegistrySubscriber.java###org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.cache.subscriber.ScalingRegistrySubscriber###cacheRuleConfiguration:RuleConfigurationCachedEvent ###StartScalingEventstartScalingEvent=newStartScalingEvent(event.getSchemaName(),repository.get(SchemaMetaDataNode.getMetaDataDataSourcePath(event.getSchemaName())),repository.get(SchemaMetaDataNode.getRulePath(event.getSchemaName())),registryCacheManager.loadCache(SchemaMetaDataNode.getRulePath(event.getSchemaName()),event.getCacheId()),event.getCacheId());###sourceDataSource###repository.get(SchemaMetaDataNode.getMetaDataDataSourcePath(event.getSchemaName()))###91:9:94:144
5dbf3929951f675a3a8e6eb6fc23a3bfd28b4ec7###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/database/DropDatabaseBackendHandler.java###/DropDatabaseBackendHandler.java###org.apache.shardingsphere.proxy.backend.text.database.DropDatabaseBackendHandler###check:DropDatabaseStatement ###thrownewDBDropExistsException(sqlStatement.getDatabaseName());###schemaName###sqlStatement.getDatabaseName()###52:13:52:77
d9393bf401f6170bc89b3973920ec5f56ed72ef0###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-single-table/shardingsphere-single-table-core/src/test/java/org/apache/shardingsphere/singletable/metadata/SingleTableMetaDataBuilderTest.java###/SingleTableMetaDataBuilderTest.java###org.apache.shardingsphere.singletable.metadata.SingleTableMetaDataBuilderTest###testLoad:###assertThat(actual.get("tbl").getColumns().size(),is(3));###actualTableMetaData###actual.get("tbl")###125:9:125:66
15880ece98257a2019847c0ff0cd9dde3d8f721c###/apache_shardingsphere/shardingsphere-features/shardingsphere-db-discovery/shardingsphere-db-discovery-provider/shardingsphere-db-discovery-mysql/src/main/java/org/apache/shardingsphere/dbdiscovery/mysql/type/ShowSlaveStatusDatabaseDiscoveryType.java###/ShowSlaveStatusDatabaseDiscoveryType.java###org.apache.shardingsphere.dbdiscovery.mysql.type.ShowSlaveStatusDatabaseDiscoveryType###getPrimaryDataSourceURL:Statement ###returnString.format("%s:%s",resultSet.getString("Master_Host"),resultSet.getString("Master_Port"));###masterHost###resultSet.getString("Master_Host")###60:17:60:119
4335a55ef5e73dd011960caf3d9f82bf41ae7c78###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-core/src/main/java/org/apache/shardingsphere/data/pipeline/core/lock/ScalingSchemaNameDistributeLock.java###/ScalingSchemaNameDistributeLock.java###org.apache.shardingsphere.data.pipeline.core.lock.ScalingSchemaNameDistributeLock###ScalingSchemaNameDistributeLock:###ClusterPersistRepositoryrepository=(ClusterPersistRepository)PipelineContext.getContextManager().getMetaDataContexts().getMetaDataPersistService().get().getRepository();###persistServiceOptional###PipelineContext.getContextManager().getMetaDataContexts().getMetaDataPersistService()###39:9:39:182
8a28b17395cd5d3cd3dba6cf9ccdb892ff11591e###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-bootstrap/src/main/java/org/apache/shardingsphere/proxy/initializer/BootstrapInitializer.java###/BootstrapInitializer.java###org.apache.shardingsphere.proxy.initializer.BootstrapInitializer###init:YamlProxyConfiguration ###ContextManagercontextManager=ContextManagerBuilderFactory.newInstance(modeConfig).build(modeConfig,getDataSourcesMap(proxyConfig.getSchemaDataSources()),proxyConfig.getSchemaRules(),proxyConfig.getGlobalRules(),proxyConfig.getProps(),null==modeConfig||modeConfig.isOverwrite());###dataSourcesMap###getDataSourcesMap(proxyConfig.getSchemaDataSources())###66:9:67:149
5784be8b09de36e14e3b24c2d71568145f9063e8###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-spring/shardingsphere-jdbc-governance-spring/shardingsphere-jdbc-governance-spring-namespace/src/test/java/org/apache/shardingsphere/spring/namespace/governance/GovernanceReadwriteSplittingNamespaceTest.java###/GovernanceReadwriteSplittingNamespaceTest.java###org.apache.shardingsphere.spring.namespace.governance.GovernanceReadwriteSplittingNamespaceTest###getReadwriteSplittingRule:String ###return(ReadwriteSplittingRule)metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator().next();###iterator###metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator()###93:9:93:126
82b5f7cfcb9538197f2c59c935e75f65513738ca###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-common/src/test/java/org/apache/shardingsphere/proxy/converter/AddResourcesStatementConverterTest.java###/AddResourcesStatementConverterTest.java###org.apache.shardingsphere.proxy.converter.AddResourcesStatementConverterTest###createDataSourceSegments:###result.add(newDataSourceSegment(String.format("ds%s",i),"127.0.0.1","3306",String.format("demo_ds_%s",i),String.format("root%s",i),String.format("root%s",i),newProperties()));###customPoolProps###newProperties()###49:13:49:200
12fd6615f76503b49e72669e40a2c5b959d67dea###/apache_shardingsphere/shardingsphere-scaling/shardingsphere-scaling-core/src/main/java/org/apache/shardingsphere/scaling/core/executor/dumper/AbstractInventoryDumper.java###/AbstractInventoryDumper.java###org.apache.shardingsphere.scaling.core.executor.dumper.AbstractInventoryDumper###createTableMetaData:###MetaDataManagermetaDataManager=newMetaDataManager(dataSourceManager.getDataSource(inventoryDumperConfig.getDataSourceConfig()));###dataSourceConfig###inventoryDumperConfig.getDataSourceConfig()###74:9:74:141
fc56fcda8d10e4e4e8553fd8a2f784e6b1ec006b###/apache_shardingsphere/shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-distsql/shardingsphere-readwrite-splitting-distsql-handler/src/test/java/org/apache/shardingsphere/readwritesplitting/distsql/handler/update/DropReadwriteSplittingRuleStatementUpdaterTest.java###/DropReadwriteSplittingRuleStatementUpdaterTest.java###org.apache.shardingsphere.readwritesplitting.distsql.handler.update.DropReadwriteSplittingRuleStatementUpdaterTest###assertUpdateCurrentRuleConfiguration:###updater.updateCurrentRuleConfiguration(createSQLStatement(),createCurrentRuleConfiguration());###readwriteSplittingRuleConfiguration###createCurrentRuleConfiguration()###53:9:53:104
915d4572b7ee72a77891e8d130a1a5ca4b20ea04###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/distsql/rdl/impl/CreateReadwriteSplittingRuleBackendHandler.java###/CreateReadwriteSplittingRuleBackendHandler.java###org.apache.shardingsphere.proxy.backend.text.distsql.rdl.impl.CreateReadwriteSplittingRuleBackendHandler###doExecute:String CreateReadwriteSplittingRuleStatement ###ReadwriteSplittingRuleConfigurationexistReadwriteSplittingRuleConfig=findRuleConfiguration(schemaName,ReadwriteSplittingRuleConfiguration.class).get();###ruleConfig###findRuleConfiguration(schemaName,ReadwriteSplittingRuleConfiguration.class)###72:13:72:168
f2cc50932f7b866ef6ff73156bfd44895481d208###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/connection/ConnectionManagerTest.java###/ConnectionManagerTest.java###org.apache.shardingsphere.driver.jdbc.core.connection.ConnectionManagerTest###setUp:###connectionManager=newConnectionManager(DefaultSchema.LOGIC_NAME,mockContextManager());###contextManager###mockContextManager()###68:9:68:99
bd4fc254add6f0b7e5a6f07b210f45c8aa46cef3###/apache_shardingsphere/shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/EncryptAlterTableTokenGenerator.java###/EncryptAlterTableTokenGenerator.java###org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptAlterTableTokenGenerator###getColumnTokens:String ChangeColumnDefinitionSegment ###null==segment.getPreviousColumn()||null==segment.getPreviousColumn().getIdentifier().getValue()||!encryptRule.findEncryptor(tableName,segment.getPreviousColumn().getIdentifier().getValue()).isPresent()###previousColumnName###segment.getPreviousColumn().getIdentifier().getValue()###209:13:210:125
d97cf2adfd0eefb3e4ea1e10ef6a98452d4e8fb3###/apache_shardingsphere/shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/main/java/org/apache/shardingsphere/encrypt/rewrite/condition/EncryptConditionEngine.java###/EncryptConditionEngine.java###org.apache.shardingsphere.encrypt.rewrite.condition.EncryptConditionEngine###createCompareEncryptCondition:String BinaryOperationExpression String ExpressionSegment ###return(compareRightValueinstanceofSimpleExpressionSegment&&!(compareRightValueinstanceofSubqueryExpressionSegment))?Optional.of(newEncryptEqualCondition(((ColumnSegment)expression.getLeft()).getIdentifier().getValue(),isSortableOperator(operator),tableName,compareRightValue.getStartIndex(),expression.getStopIndex(),compareRightValue)):Optional.empty();###columnName###((ColumnSegment)expression.getLeft()).getIdentifier().getValue()###166:9:169:36
fafe37406e605d6c75cdc190f5e8d60b0d96deb2###/apache_shardingsphere/shardingsphere-features/shardingsphere-db-discovery/shardingsphere-db-discovery-distsql/shardingsphere-db-discovery-distsql-handler/src/main/java/org/apache/shardingsphere/dbdiscovery/distsql/handler/query/DatabaseDiscoveryRuleQueryResultSet.java###/DatabaseDiscoveryRuleQueryResultSet.java###org.apache.shardingsphere.dbdiscovery.distsql.handler.query.DatabaseDiscoveryRuleQueryResultSet###getRowData:###returnArrays.asList(dataSourceRuleConfig.getName(),String.join(",",dataSourceRuleConfig.getDataSourceNames()),discoveryTypes.get(dataSourceRuleConfig.getDiscoveryTypeName()).getType(),PropertiesConverter.convert(discoveryTypes.get(dataSourceRuleConfig.getDiscoveryTypeName()).getProps()));###name###dataSourceRuleConfig.getName()###66:9:67:197
a80f057f2eafcdaa34b6fb7ed15f4ede0bb470c4###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-federation/shardingsphere-infra-federation-optimizer/src/main/java/org/apache/shardingsphere/infra/federation/optimizer/context/planner/OptimizerPlannerContextFactory.java###/OptimizerPlannerContextFactory.java###org.apache.shardingsphere.infra.federation.optimizer.context.planner.OptimizerPlannerContextFactory###create:FederationMetaData ###result.put(schemaName,newOptimizerPlannerContext(validator,createConverter(catalogReader,validator,relDataTypeFactory)));###converter###createConverter(catalogReader,validator,relDataTypeFactory)###71:13:71:139
5784be8b09de36e14e3b24c2d71568145f9063e8###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-spring/shardingsphere-jdbc-governance-spring/shardingsphere-jdbc-governance-spring-boot-starter/src/test/java/org/apache/shardingsphere/spring/boot/governance/type/GovernanceSpringBootShardingTest.java###/GovernanceSpringBootShardingTest.java###org.apache.shardingsphere.spring.boot.governance.type.GovernanceSpringBootShardingTest###assertWithBindingTableRules:###ShardingRuleshardingRule=(ShardingRule)metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator().next();###iterator###metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator()###109:9:109:137
b0a6ab46375a4b30df3853c6b0c2aaefaac2e781###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/distsql/rql/rule/SchemaRulesCountResultSet.java###/SchemaRulesCountResultSet.java###org.apache.shardingsphere.proxy.backend.text.distsql.rql.rule.SchemaRulesCountResultSet###init:ShardingSphereMetaData SQLStatement ###addSingleTableData(dataMap,metaData.getRuleMetaData().findRules(SingleTableRule.class));###singleTableRules###metaData.getRuleMetaData().findRules(SingleTableRule.class)###87:9:87:98
5784be8b09de36e14e3b24c2d71568145f9063e8###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-spring/shardingsphere-jdbc-governance-spring/shardingsphere-jdbc-governance-spring-namespace/src/test/java/org/apache/shardingsphere/spring/namespace/governance/GovernanceShardingReadwriteSplittingNamespaceTest.java###/GovernanceShardingReadwriteSplittingNamespaceTest.java###org.apache.shardingsphere.spring.namespace.governance.GovernanceShardingReadwriteSplittingNamespaceTest###getShardingRule:String ###return(ShardingRule)metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator().next();###iterator###metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator()###68:9:68:116
e450261d2e42d15fd1644d39cf94133e1138ae92###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/config/datasource/url/JdbcUrlParser.java###/JdbcUrlParser.java###org.apache.shardingsphere.infra.config.datasource.url.JdbcUrlParser###appendQueryProperties:String Map<String,String> ###Stringdelimiter=parse(jdbcURL).getQueryProperties().isEmpty()?"?":"&";###currentQueryProps###parse(jdbcURL).getQueryProperties()###103:9:103:86
580d8c81fbd39a751333abb0bfe3a453cc6a77a9###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/builder/loader/dialect/OracleTableMetaDataLoaderTest.java###/OracleTableMetaDataLoaderTest.java###org.apache.shardingsphere.infra.metadata.schema.builder.loader.dialect.OracleTableMetaDataLoaderTest###assertLoadCondition2:###assertTableMetaDataMap(getTableMetaDataLoader().load(dataSource,Collections.emptyList()));###actual###getTableMetaDataLoader().load(dataSource,Collections.emptyList())###104:9:104:100
92036423cd088f0ae663f5ca2d3c4fe78f24b570###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/binary/execute/PostgreSQLComExecuteExecutor.java###/PostgreSQLComExecuteExecutor.java###org.apache.shardingsphere.proxy.frontend.postgresql.command.query.binary.execute.PostgreSQLComExecuteExecutor###close:###connectionContext.getPortal(packet.getPortal()).suspend();###portal###connectionContext.getPortal(packet.getPortal())###99:13:99:71
635ba0c1c6e252d79e6678576aaecda72254d178###/apache_shardingsphere/shardingsphere-db-protocol/shardingsphere-db-protocol-mysql/src/main/java/org/apache/shardingsphere/db/protocol/mysql/constant/MySQLCharacterSet.java###/MySQLCharacterSet.java###org.apache.shardingsphere.db.protocol.mysql.constant.MySQLCharacterSet###findByValue:String ###MySQLCharacterSetresult=CHARACTER_NAME_SET_MAP.get(charsetName.toLowerCase(Locale.ROOT));###key###charsetName.toLowerCase(Locale.ROOT)###373:9:373:101
4ce9e447d622f98092ec68234a0c7cbfa870161e###/apache_shardingsphere/shardingsphere-features/shardingsphere-shadow/shardingsphere-shadow-core/src/main/java/org/apache/shardingsphere/shadow/route/future/engine/AbstractShadowRouteEngine.java###/AbstractShadowRouteEngine.java###org.apache.shardingsphere.shadow.route.future.engine.AbstractShadowRouteEngine###shadowDMLStatementRouteDecorate:RouteContext ShadowRule ###routeContext.getRouteUnits().clear();###routeUnits###routeContext.getRouteUnits()###159:9:159:46
8aa1df3b3453b58e71c14c5a8750dab66165a835###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-context/src/main/java/org/apache/shardingsphere/infra/context/refresher/MetaDataRefreshEngine.java###/MetaDataRefreshEngine.java###org.apache.shardingsphere.infra.context.refresher.MetaDataRefreshEngine###refresh:SQLStatement Collection<String> ###Optional<MetaDataRefresher>schemaRefresher=TypedSPIRegistry.findRegisteredService(MetaDataRefresher.class,sqlStatement.getClass().getSuperclass().getName(),null);###sqlStatementClass###sqlStatement.getClass()###69:9:69:176
15116870ad904fa6403fb71b5a9187686bf0e824###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/test/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/extended/describe/PostgreSQLComDescribeExecutorTest.java###/PostgreSQLComDescribeExecutorTest.java###org.apache.shardingsphere.proxy.frontend.postgresql.command.query.extended.describe.PostgreSQLComDescribeExecutorTest###assertDescribePreparedStatement:###when(connectionSession.getConnectionId()).thenReturn(1);###connectionId###1###76:9:76:65
fb5a9766ab5d7e898c034b6d8303d0c43b39b03c###/apache_shardingsphere/shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-distsql/shardingsphere-readwrite-splitting-distsql-handler/src/main/java/org/apache/shardingsphere/readwritesplitting/distsql/handler/query/ReadwriteSplittingRuleQueryResultSet.java###/ReadwriteSplittingRuleQueryResultSet.java###org.apache.shardingsphere.readwritesplitting.distsql.handler.query.ReadwriteSplittingRuleQueryResultSet###getRowData:###returnArrays.asList(ruleConfig.getName(),ruleConfig.getAutoAwareDataSourceName(),ruleConfig.getWriteDataSourceName(),Joiner.on(",").join(ruleConfig.getReadDataSourceNames()),configuration.map(ShardingSphereAlgorithmConfiguration::getType).orElse(null),PropertiesConverter.convert(configuration.map(ShardingSphereAlgorithmConfiguration::getProps).orElseGet(Properties::new)));###readDataSourceNames###Joiner.on(",").join(ruleConfig.getReadDataSourceNames())###69:9:71:140
5784be8b09de36e14e3b24c2d71568145f9063e8###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-spring/shardingsphere-jdbc-governance-spring/shardingsphere-jdbc-governance-spring-namespace/src/test/java/org/apache/shardingsphere/spring/namespace/governance/GovernanceShardingNamespaceTest.java###/GovernanceShardingNamespaceTest.java###org.apache.shardingsphere.spring.namespace.governance.GovernanceShardingNamespaceTest###assertDefaultActualDataNodes:###ShardingRuleshardingRule=(ShardingRule)metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator().next();###iterator###metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator()###157:9:157:137
ed3ccdf614b362fad83d8af4f2c52aaea0ddd38c###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-standalone-mode/shardingsphere-standalone-mode-repository/shardingsphere-standalone-mode-repository-provider/shardingsphere-standalone-mode-repository-file/src/main/java/org/apache/shardingsphere/mode/repository/standalone/file/FileRepository.java###/FileRepository.java###org.apache.shardingsphere.mode.repository.standalone.file.FileRepository###getChildrenKeys:String ###returnnull!=file.listFiles()?Arrays.stream(file.listFiles()).map(File::getName).collect(Collectors.toList()):Collections.emptyList();###files###file.listFiles()###73:9:74:43
1e419d080c364079bd645ec5bd6b4698d3307f4f###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/data/impl/UnicastDatabaseBackendHandler.java###/UnicastDatabaseBackendHandler.java###org.apache.shardingsphere.proxy.backend.text.data.impl.UnicastDatabaseBackendHandler###execute:###StringschemaName=null==backendConnection.getSchemaName()?getFirstSchemaName():backendConnection.getSchemaName();###originSchema###backendConnection.getSchemaName()###52:9:52:130
50b3f45a3b60efe28a00ca69d74024d6f5eee443###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/proxy/frontend/mysql/command/query/text/query/MySQLComQueryPacketExecutor.java###/MySQLComQueryPacketExecutor.java###org.apache.shardingsphere.proxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor###MySQLComQueryPacketExecutor:MySQLComQueryPacket ConnectionSession ###textProtocolBackendHandler=areMultiStatements(connectionSession,sqlStatement,packet.getSql())?newMySQLMultiStatementsHandler(connectionSession,sqlStatement,packet.getSql()):TextProtocolBackendHandlerFactory.newInstance(DatabaseTypeRegistry.getActualDatabaseType("MySQL"),packet.getSql(),()->Optional.of(sqlStatement),connectionSession);###databaseType###DatabaseTypeRegistry.getActualDatabaseType("MySQL")###71:9:72:187
2bad204df786c1537540cba09d7b914bde05ee5f###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/merge/dal/show/LogicTablesMergedResult.java###/LogicTablesMergedResult.java###org.apache.shardingsphere.sharding.merge.dal.show.LogicTablesMergedResult###init:ShardingRule ShardingSphereSchema SQLStatementContext List<QueryResult> MergedResult ###memoryResultSetRow.setCell(1,tableRule.get().getLogicTable());###logicTableName###tableRule.get().getLogicTable()###61:21:61:84
d91ffcb5a9489e0e02d9a2230f9cdd2cf9e69381###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-core/src/main/java/org/apache/shardingsphere/data/pipeline/core/check/consistency/DataConsistencyCheckerImpl.java###/DataConsistencyCheckerImpl.java###org.apache.shardingsphere.data.pipeline.core.check.consistency.DataConsistencyCheckerImpl###dataCheck:DataConsistencyCheckAlgorithm ###SingleTableDataCalculatortargetCalculator=checkAlgorithm.getSingleTableDataCalculator(targetConfig.getDatabaseType().getName());###targetDatabaseType###targetConfig.getDatabaseType().getName()###130:9:130:140
e6e753b8ca69eb0c48013f21ffb657753da22f46###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/instance/InstanceContextTest.java###/InstanceContextTest.java###org.apache.shardingsphere.infra.instance.InstanceContextTest###assertUpdateLabel:###InstanceContextcontext=newInstanceContext(newComputeNodeInstance(mock(InstanceDefinition.class)),newWorkerIdGeneratorFixture(Long.MIN_VALUE),modeConfiguration);###instanceDefinition###mock(InstanceDefinition.class)###68:9:68:177
5784be8b09de36e14e3b24c2d71568145f9063e8###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-spring/shardingsphere-jdbc-governance-spring/shardingsphere-jdbc-governance-spring-namespace/src/test/java/org/apache/shardingsphere/spring/namespace/governance/GovernanceShardingNamespaceTest.java###/GovernanceShardingNamespaceTest.java###org.apache.shardingsphere.spring.namespace.governance.GovernanceShardingNamespaceTest###getShardingRule:String ###return(ShardingRule)metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator().next();###iterator###metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator()###179:9:179:116
f8e48c8be63adac2b7a2a25d9e6723703dd84311###/apache_shardingsphere/shardingsphere-test/shardingsphere-pipeline-test/src/test/java/org/apache/shardingsphere/data/pipeline/core/task/InventoryTaskTest.java###/InventoryTaskTest.java###org.apache.shardingsphere.data.pipeline.core.task.InventoryTaskTest###assertGetProgress:###inventoryDumperConfig.setPosition(taskConfig.getDumperConfig().getPosition());###position###taskConfig.getDumperConfig().getPosition()###63:9:63:87
3b36499c3ddf43f7b2f661ccb191b7bd22123395###/apache_shardingsphere/shardingsphere-features/shardingsphere-shadow/shardingsphere-shadow-core/src/main/java/org/apache/shardingsphere/shadow/rule/ShadowRule.java###/ShadowRule.java###org.apache.shardingsphere.shadow.rule.ShadowRule###getRelatedColumnShadowAlgorithms:String ShadowOperationType ###Collection<ColumnShadowAlgorithm<Comparable<?>>>result=shadowTableRules.get(tableName).getColumnShadowAlgorithmNames().get(shadowOperationType).stream().map(shadowAlgorithms::get).filter(shadowAlgorithm->!Objects.isNull(shadowAlgorithm)).map(shadowAlgorithm->(ColumnShadowAlgorithm<Comparable<?>>)shadowAlgorithm).collect(Collectors.toCollection(LinkedList::new));###columnShadowAlgorithmNames###shadowTableRules.get(tableName).getColumnShadowAlgorithmNames()###161:9:163:68
12d002aa46c233b5a102dc841a986320b58097f7###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-core/src/main/java/org/apache/shardingsphere/data/pipeline/scenario/rulealtered/RuleAlteredJobPreparer.java###/RuleAlteredJobPreparer.java###org.apache.shardingsphere.data.pipeline.scenario.rulealtered.RuleAlteredJobPreparer###getIncrementalPosition:RuleAlteredJobContext TaskConfiguration PipelineDataSourceManager ###returnPositionInitializerFactory.newInstance(taskConfig.getHandleConfig().getSourceDatabaseType()).init(dataSourceManager.getDataSource(taskConfig.getDumperConfig().getDataSourceConfig()));###databaseType###taskConfig.getHandleConfig().getSourceDatabaseType()###137:9:137:199
8ff0322a2f4b31affc26cd2aec0e109a9a4398c6###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/extended/parse/PostgreSQLComParseExecutor.java###/PostgreSQLComParseExecutor.java###org.apache.shardingsphere.proxy.frontend.postgresql.command.query.extended.parse.PostgreSQLComParseExecutor###execute:###PostgreSQLPreparedStatementRegistry.getInstance().register(connectionSession.getConnectionId(),packet.getStatementId(),packet.getSql(),sqlStatement,paddedColumnTypes);###sql###packet.getSql()###55:9:55:180
5784be8b09de36e14e3b24c2d71568145f9063e8###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-spring/shardingsphere-jdbc-governance-spring/shardingsphere-jdbc-governance-spring-boot-starter/src/test/java/org/apache/shardingsphere/spring/boot/governance/type/GovernanceSpringBootShardingTest.java###/GovernanceSpringBootShardingTest.java###org.apache.shardingsphere.spring.boot.governance.type.GovernanceSpringBootShardingTest###assertWithBroadcastTables:###ShardingRuleshardingRule=(ShardingRule)metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator().next();###iterator###metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator()###134:9:134:137
9c195cca477828b4619d8a3e9b3129a50e5e143a###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-context/src/main/java/org/apache/shardingsphere/infra/context/refresher/type/AlterTableStatementSchemaRefresher.java###/AlterTableStatementSchemaRefresher.java###org.apache.shardingsphere.infra.context.refresher.type.AlterTableStatementSchemaRefresher###refresh:ShardingSphereMetaData FederationSchemaMetaData Map<String,OptimizerPlannerContext> Collection<String> AlterTableStatement ConfigurationProperties ###putTableMetaData(schemaMetaData,schema,optimizerPlanners,logicDataSourceNames,sqlStatement.getRenameTable().get().getTableName().getIdentifier().getValue(),props);###renameTable###sqlStatement.getRenameTable().get().getTableName().getIdentifier().getValue()###53:13:53:181
a1105d7fef73f6ba23aa3b1b7408144e0e07b18e###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-standalone-mode/shardingsphere-standalone-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/standalone/StandaloneContextManagerBuilder.java###/StandaloneContextManagerBuilder.java###org.apache.shardingsphere.mode.manager.standalone.StandaloneContextManagerBuilder###build:ContextManagerBuilderParameter ###result.init(metaDataContexts,transactionContexts,newInstanceContext(metaDataPersistService.getComputeNodePersistService().loadComputeNodeInstance(parameter.getInstanceDefinition()),newStandaloneWorkerIdGenerator(),getType()));###instanceContext###newInstanceContext(metaDataPersistService.getComputeNodePersistService().loadComputeNodeInstance(parameter.getInstanceDefinition()),newStandaloneWorkerIdGenerator(),getType())###73:9:74:64
52e17df01d52ef1bd300244b81f054b21265f5bd###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/response/header/query/impl/QueryHeaderBuilderTest.java###/QueryHeaderBuilderTest.java###org.apache.shardingsphere.proxy.backend.response.header.query.impl.QueryHeaderBuilderTest###assertQueryHeaderColumnLength:###QueryHeaderheader=QueryHeaderBuilder.build(createQueryResultMetaData(),createMetaData(),1);###metaData###createMetaData()###88:9:88:105
baa9edafeaee8b8862af653121be0ca58f232b39###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/distsql/ral/common/show/executor/ShowVariableExecutor.java###/ShowVariableExecutor.java###org.apache.shardingsphere.proxy.backend.text.distsql.ral.common.show.executor.ShowVariableExecutor###createMergedResult:###returnnewMultipleLocalDataMergedResult(Collections.singletonList(Collections.singletonList(connectionSession.getTransactionStatus().getTransactionType().name())));###transactionType###connectionSession.getTransactionStatus().getTransactionType()###68:17:68:182
fa90df62ab499fbb9f3ed67d52288ac3d6f9a5b4###/apache_shardingsphere/shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/common/extractor/TableExtractor.java###/TableExtractor.java###org.apache.shardingsphere.sql.parser.sql.common.extractor.TableExtractor###extractTablesFromProjections:ProjectionsSegment ###rewriteTables.add(newSimpleTableSegment(newTableNameSegment(ownerSegment.getStartIndex(),ownerSegment.getStopIndex(),ownerSegment.getIdentifier())));###simpleTable###newSimpleTableSegment(newTableNameSegment(ownerSegment.getStartIndex(),ownerSegment.getStopIndex(),ownerSegment.getIdentifier()))###167:21:167:174
514117f16278fb76ddd891a23d3db804039371bd###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-optimize/src/main/java/org/apache/shardingsphere/infra/optimize/core/metadata/FederateTableMetadata.java###/FederateTableMetadata.java###org.apache.shardingsphere.infra.optimize.core.metadata.FederateTableMetadata###FederateTableMetadata:String Map<String,DataSource> Map<String,Collection<String>> Collection<DataNode> DatabaseType ###relProtoDataType=createRelDataType(createTableMetaData(dataSources,dataSourceRules,tableDataNodes,databaseType));###tableMetaData###createTableMetaData(dataSources,dataSourceRules,tableDataNodes,databaseType)###62:9:62:127
8220f02f56c6c990eab5e920b90bddc8071e2488###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/route/engine/condition/engine/impl/WhereClauseShardingConditionEngine.java###/WhereClauseShardingConditionEngine.java###org.apache.shardingsphere.sharding.route.engine.condition.engine.impl.WhereClauseShardingConditionEngine###createShardingConditions:SQLStatementContext<?> ExpressionSegment List<Object> ###for(each:ExpressionExtractUtil.getAndPredicates(expressionSegment))###andPredicates###ExpressionExtractUtil.getAndPredicates(expressionSegment)###80:9:86:10
026bbf7f8e1952808e3b332295f51a91591e106b###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-traffic/shardingsphere-traffic-core/src/test/java/org/apache/shardingsphere/traffic/algorithm/engine/TrafficEngineTest.java###/TrafficEngineTest.java###org.apache.shardingsphere.traffic.algorithm.engine.TrafficEngineTest###assertDispatchWhenExistTrafficStrategyRuleExistComputeNodeInstances:###when(instanceContext.getComputeNodeInstances(InstanceType.PROXY,Arrays.asList("OLTP","OLAP"))).thenReturn(mockComputeNodeInstances());###instanceIds###mockComputeNodeInstances()###98:9:98:145
e064fbd8515e941b142dd3c44e48f27ed7fc8f39###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-distsql/shardingsphere-sharding-distsql-handler/src/main/java/org/apache/shardingsphere/sharding/distsql/handler/update/DropShardingBroadcastTableRuleStatementUpdater.java###/DropShardingBroadcastTableRuleStatementUpdater.java###org.apache.shardingsphere.sharding.distsql.handler.update.DropShardingBroadcastTableRuleStatementUpdater###checkSQLStatement:ShardingSphereMetaData DropShardingBroadcastTableRulesStatement ShardingRuleConfiguration ###checkCurrentRuleConfiguration(shardingSphereMetaData.getName(),currentRuleConfig);###schemaName###shardingSphereMetaData.getName()###35:9:35:92
4efe9e1d7edb542a0ad8fc2e5580e4c98e780c67###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/algorithm/sharding/datetime/IntervalShardingAlgorithm.java###/IntervalShardingAlgorithm.java###org.apache.shardingsphere.sharding.algorithm.sharding.datetime.IntervalShardingAlgorithm###doSharding:Collection<String> PreciseShardingValue<Comparable<?>> ###each.endsWith(parseDateTime(shardingValue.getValue().toString()).format(tableSuffixPattern))###tableNameSuffix###parseDateTime(shardingValue.getValue().toString()).format(tableSuffixPattern)###125:33:125:125
ac7987451dd9e7fbde62c5add0224ba740bb20c9###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/proxy/frontend/mysql/command/query/binary/execute/MySQLComStmtExecuteExecutor.java###/MySQLComStmtExecuteExecutor.java###org.apache.shardingsphere.proxy.frontend.mysql.command.query.binary.execute.MySQLComStmtExecuteExecutor###MySQLComStmtExecuteExecutor:MySQLComStmtExecutePacket BackendConnection ###SQLStatementContext<?>sqlStatementContext=SQLStatementContextFactory.newInstance(ProxyContext.getInstance().getContextManager().getMetaDataContexts().getMetaDataMap(),packet.getParameters(),sqlStatement,backendConnection.getDefaultSchemaName());###metaDataContexts###ProxyContext.getInstance().getContextManager().getMetaDataContexts()###73:9:74:184
fa8d79835e72b8162d1e7f42aef2cbd633489af8###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-core/src/main/java/org/apache/shardingsphere/data/pipeline/core/execute/PipelineJobExecutor.java###/PipelineJobExecutor.java###org.apache.shardingsphere.data.pipeline.core.execute.PipelineJobExecutor###watchGovernanceRepositoryConfiguration:###if(PipelineSimpleLock.getInstance().tryLock(jobConfig.getWorkflowConfig().getSchemaName(),1000))###schemaName###jobConfig.getWorkflowConfig().getSchemaName()###69:21:71:22
bf1c5ebd5bd712e3529cf1dd89652ceb12e7d83b###/apache_shardingsphere/shardingsphere-scaling/shardingsphere-scaling-core/src/main/java/org/apache/shardingsphere/scaling/core/util/JobConfigurationUtil.java###/JobConfigurationUtil.java###org.apache.shardingsphere.scaling.core.util.JobConfigurationUtil###toTaskConfigs:JobConfiguration ###result.add(newTaskConfiguration(jobConfig.getHandleConfig(),dumperConfig,importerConfig));###taskConfig###newTaskConfiguration(jobConfig.getHandleConfig(),dumperConfig,importerConfig)###231:13:231:106
7a939fe0fdddad9b0203c590101eaf73ca44a826###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/ClusterContextManagerCoordinator.java###/ClusterContextManagerCoordinator.java###org.apache.shardingsphere.mode.manager.cluster.coordinator.ClusterContextManagerCoordinator###getChangedMetaData:ShardingSphereMetaData Collection<RuleConfiguration> ###MetaDataContextsBuilderbuilder=newMetaDataContextsBuilder(Collections.singletonMap(originalMetaData.getName(),originalMetaData.getResource().getDataSources()),Collections.singletonMap(originalMetaData.getName(),ruleConfigs),metaDataPersistService.getGlobalRuleService().load(),contextManager.getMetaDataContexts().getProps().getProps());###dataSourcesMap###Collections.singletonMap(originalMetaData.getName(),originalMetaData.getResource().getDataSources())###303:9:304:198
7f18db4a97c97aa9621591865b146e1c626ff068###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/type/broadcast/ShardingTableBroadcastRoutingEngineTest.java###/ShardingTableBroadcastRoutingEngineTest.java###org.apache.shardingsphere.sharding.route.engine.type.broadcast.ShardingTableBroadcastRoutingEngineTest###assertRouteForNormalTable:###ShardingTableBroadcastRoutingEngineshardingTableBroadcastRoutingEngine=newShardingTableBroadcastRoutingEngine(mock(ShardingSphereSchema.class),createSQLStatementContext(Collections.singletonList("t_order")));###tableNames###Collections.singletonList("t_order")###66:9:67:156
19e415e87a5c5801e58e3570252bf3afe93f654b###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/query/extended/JDBCPortal.java###/JDBCPortal.java###org.apache.shardingsphere.proxy.frontend.postgresql.command.query.extended.JDBCPortal###JDBCPortal:String PostgreSQLPreparedStatement List<Object> List<PostgreSQLValueFormat> JDBCBackendConnection ###SQLStatementContext<?>sqlStatementContext=SQLStatementContextFactory.newInstance(ProxyContext.getInstance().getContextManager().getMetaDataContexts().getMetaDataMap(),parameters,sqlStatement,backendConnection.getConnectionSession().getDefaultSchemaName());###schemaName###backendConnection.getConnectionSession().getDefaultSchemaName()###103:9:104:195
1d0e2789f42bb81d46bf4486cc81db82a3d90246###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/state/ok/OKDriverStateTest.java###/OKDriverStateTest.java###org.apache.shardingsphere.driver.state.ok.OKDriverStateTest###assertGetConnection:###Connectionactual=newOKDriverState().getConnection(DefaultSchema.LOGIC_NAME,mock(ContextManager.class,RETURNS_DEEP_STUBS));###contextManager###mock(ContextManager.class,RETURNS_DEEP_STUBS)###39:9:39:137
ce02397fb1e359d2fe6929f67cdc706b721b4662###/apache_shardingsphere/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/postgresql/visitor/statement/impl/PostgreSQLStatementSQLVisitor.java###/PostgreSQLStatementSQLVisitor.java###org.apache.shardingsphere.sql.parser.postgresql.visitor.statement.impl.PostgreSQLStatementSQLVisitor###generateTableFromRelationExpr:RelationExprContext ###table.setOwner(newOwnerSegment(qualifiedName.colId().start.getStartIndex(),qualifiedName.colId().stop.getStopIndex(),newIdentifierValue(qualifiedName.colId().getText())));###owner###newOwnerSegment(qualifiedName.colId().start.getStartIndex(),qualifiedName.colId().stop.getStopIndex(),newIdentifierValue(qualifiedName.colId().getText()))###1043:13:1043:188
276917e208a5fc0ff7d41e4998192404f9e210dc###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-core/src/main/java/org/apache/shardingsphere/data/pipeline/core/api/impl/RuleAlteredJobAPIImpl.java###/RuleAlteredJobAPIImpl.java###org.apache.shardingsphere.data.pipeline.core.api.impl.RuleAlteredJobAPIImpl###start:JobConfiguration ###PipelineAPIFactory.getGovernanceRepositoryAPI().persist(String.format("%s/%s",DataPipelineConstants.DATA_PIPELINE_ROOT,jobConfig.getHandleConfig().getJobId()),RuleAlteredJob.class.getName());###jobId###jobConfig.getHandleConfig().getJobId()###152:9:153:132
327e282038ba350fca335b33cb3e979e179b7cf8###/apache_shardingsphere/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLStatementSQLVisitor.java###/MySQLStatementSQLVisitor.java###org.apache.shardingsphere.sql.parser.mysql.visitor.statement.impl.MySQLStatementSQLVisitor###visitExpr:ExprContext ###returnnewBinaryOperationExpression(ctx.start.getStartIndex(),ctx.stop.getStopIndex(),(ExpressionSegment)visit(ctx.expr(0)),(ExpressionSegment)visit(ctx.expr(1)),ctx.logicalOperator().getText(),text);###right###(ExpressionSegment)visit(ctx.expr(1))###365:13:366:100
52e17df01d52ef1bd300244b81f054b21265f5bd###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/response/header/query/impl/QueryHeaderBuilderTest.java###/QueryHeaderBuilderTest.java###org.apache.shardingsphere.proxy.backend.response.header.query.impl.QueryHeaderBuilderTest###assertQueryHeaderColumnNameFromMetaData:###QueryHeaderheader=QueryHeaderBuilder.build(createProjectionsContext(),createQueryResultMetaData(),createMetaData(),2);###metaData###createMetaData()###82:9:82:133
61b19b57b7101b1c03eb7b345a225a9db49d32a9###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/proxy/frontend/postgresql/command/PostgreSQLCommandExecuteEngine.java###/PostgreSQLCommandExecuteEngine.java###org.apache.shardingsphere.proxy.frontend.postgresql.command.PostgreSQLCommandExecuteEngine###getErrorPacket:Exception BackendConnection ###PostgreSQLConnectionContextRegistry.getInstance().get(backendConnection.getConnectionId()).getPendingExecutors().clear();###connectionContext###PostgreSQLConnectionContextRegistry.getInstance().get(backendConnection.getConnectionId())###71:9:71:130
6d09bc019ff82e5927cc9bcba7cecd731fb406cf###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-core/src/main/java/org/apache/shardingsphere/data/pipeline/core/spi/check/consistency/DataMatchSingleTableDataCalculator.java###/DataMatchSingleTableDataCalculator.java###org.apache.shardingsphere.data.pipeline.core.spi.check.consistency.DataMatchSingleTableDataCalculator.CalculatedResult###equals:Object ###if(!newEqualsBuilder().append(thisNextIterator.next(),thatNextIterator.next()).isEquals())###thisResult###thisNextIterator.next()###156:21:158:22
ffd857620152f33ee2935d06c90ec3cc1bbb3578###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/route/engine/condition/engine/impl/WhereClauseShardingConditionEngine.java###/WhereClauseShardingConditionEngine.java###org.apache.shardingsphere.sharding.route.engine.condition.engine.impl.WhereClauseShardingConditionEngine###createShardingConditions:SQLStatementContext<?> ExpressionSegment List<Object> ###result.add(createShardingCondition(shardingConditionValues));###shardingCondition###createShardingCondition(shardingConditionValues)###89:13:89:74
d9393bf401f6170bc89b3973920ec5f56ed72ef0###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/builder/loader/dialect/MySQLTableMetaDataLoaderTest.java###/MySQLTableMetaDataLoaderTest.java###org.apache.shardingsphere.infra.metadata.schema.builder.loader.dialect.MySQLTableMetaDataLoaderTest###assertTableMetaDataMap:Map<String,TableMetaData> ###assertThat(actual.get("tbl").getColumns().size(),is(5));###actualTableMetaData###actual.get("tbl")###117:9:117:66
47bf9f433f5055b461332da8eebee6f95d717049###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/segment/select/projection/engine/ProjectionEngine.java###/ProjectionEngine.java###org.apache.shardingsphere.infra.binder.segment.select.projection.engine.ProjectionEngine###getUnqualifiedShorthandColumns:Collection<SimpleTableSegment> ###Stringowner=each.getAlias().orElse(each.getTableName().getIdentifier().getValue());###tableName###each.getTableName().getIdentifier().getValue()###135:13:135:99
bded547f9df9987e36e1fbbe2d2d7e09435f27b4###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-standalone-mode/shardingsphere-standalone-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/standalone/StandaloneContextManagerBuilder.java###/StandaloneContextManagerBuilder.java###org.apache.shardingsphere.mode.manager.standalone.StandaloneContextManagerBuilder###build:ContextManagerBuilderParameter ###returncreateContextManager(metaDataPersistService,parameter,createMetaDataContexts(metaDataPersistService,parameter));###metaDataContexts###createMetaDataContexts(metaDataPersistService,parameter)###51:9:51:131
7623768b6bf22bc49e8db5560bed994537969b95###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/adapter/StatementAdapterTest.java###/StatementAdapterTest.java###org.apache.shardingsphere.driver.jdbc.adapter.StatementAdapterTest###mockShardingSphereStatement:Statement[] ###ShardingSphereStatementresult=newShardingSphereStatement(mock(ShardingSphereConnection.class,RETURNS_DEEP_STUBS));###connection###mock(ShardingSphereConnection.class,RETURNS_DEEP_STUBS)###222:9:222:128
d97cf2adfd0eefb3e4ea1e10ef6a98452d4e8fb3###/apache_shardingsphere/shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/main/java/org/apache/shardingsphere/encrypt/rewrite/condition/EncryptConditionEngine.java###/EncryptConditionEngine.java###org.apache.shardingsphere.encrypt.rewrite.condition.EncryptConditionEngine###createInEncryptCondition:String InExpression ExpressionSegment ###returnOptional.of(newEncryptInCondition(((ColumnSegment)inExpression.getLeft()).getIdentifier().getValue(),isSortableOperator("IN"),tableName,inRightValue.getStartIndex(),inRightValue.getStopIndex(),expressionSegments));###columnName###((ColumnSegment)inExpression.getLeft()).getIdentifier().getValue()###185:9:186:108
a83e29f9958d5532a9ccf321b1e81fa4147bdcf6###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-optimize/src/test/java/org/apache/shardingsphere/infra/optimize/converter/parameterized/engine/SQLNodeConvertParameterizedTest.java###/SQLNodeConvertParameterizedTest.java###org.apache.shardingsphere.infra.optimize.converter.parameterized.engine.SQLNodeConvertParameterizedTest###assertConvertToSQLNode:###SqlNodeactual=SQLNodeConvertEngine.convertToSQLNode(parseSQLStatement(databaseType,sql));###sqlStatement###parseSQLStatement(databaseType,sql)###78:9:78:102
5784be8b09de36e14e3b24c2d71568145f9063e8###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-spring/shardingsphere-jdbc-governance-spring/shardingsphere-jdbc-governance-spring-boot-starter/src/test/java/org/apache/shardingsphere/spring/boot/governance/type/GovernanceSpringBootRegistryShardingTest.java###/GovernanceSpringBootRegistryShardingTest.java###org.apache.shardingsphere.spring.boot.governance.type.GovernanceSpringBootRegistryShardingTest###assertWithShardingSphereDataSourceNames:###ShardingRuleshardingRule=(ShardingRule)metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator().next();###iterator###metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator()###90:9:90:137
d9393bf401f6170bc89b3973920ec5f56ed72ef0###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/builder/loader/dialect/OracleTableMetaDataLoaderTest.java###/OracleTableMetaDataLoaderTest.java###org.apache.shardingsphere.infra.metadata.schema.builder.loader.dialect.OracleTableMetaDataLoaderTest###assertLoadCondition4:###assertThat(actual.get("tbl").getColumnMetaData(0),is(newColumnMetaData("id",4,true,true,true)));###actualTableMetaData###actual.get("tbl")###141:9:141:111
bded547f9df9987e36e1fbbe2d2d7e09435f27b4###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/ClusterContextManagerBuilder.java###/ClusterContextManagerBuilder.java###org.apache.shardingsphere.mode.manager.cluster.ClusterContextManagerBuilder###build:ContextManagerBuilderParameter ###ContextManagerresult=createContextManager(repository,metaDataPersistService,parameter.getInstanceDefinition(),metaDataContextsBuilder.build(metaDataPersistService),parameter.getModeConfig());###metaDataContexts###metaDataContextsBuilder.build(metaDataPersistService)###63:9:64:134
cc69076b910e1ad4ddef3c452bd49f18d9ba7869###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/route/strategy/ShardingStrategyFactory.java###/ShardingStrategyFactory.java###org.apache.shardingsphere.sharding.route.strategy.ShardingStrategyFactory###newInstance:ShardingStrategyConfiguration ShardingAlgorithm String ###returnnewStandardShardingStrategy(null==((StandardShardingStrategyConfiguration)shardingStrategyConfig).getShardingColumn()?defaultShardingColumn:((StandardShardingStrategyConfiguration)shardingStrategyConfig).getShardingColumn(),(StandardShardingAlgorithm)shardingAlgorithm);###shardingColumn###((StandardShardingStrategyConfiguration)shardingStrategyConfig).getShardingColumn()###51:13:52:180
d9393bf401f6170bc89b3973920ec5f56ed72ef0###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/builder/loader/dialect/OracleTableMetaDataLoaderTest.java###/OracleTableMetaDataLoaderTest.java###org.apache.shardingsphere.infra.metadata.schema.builder.loader.dialect.OracleTableMetaDataLoaderTest###assertLoadCondition3:###assertThat(actual.get("tbl").getColumnMetaData(0),is(newColumnMetaData("id",4,true,false,false)));###actualTableMetaData###actual.get("tbl")###124:9:124:113
2435f71f831677d00b3615c7ba88b044ddb47cc8###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/instance/InstanceContextTest.java###/InstanceContextTest.java###org.apache.shardingsphere.infra.instance.InstanceContextTest###assertUpdateInstanceStatus:###InstanceContextcontext=newInstanceContext(newComputeNodeInstance(mock(InstanceDefinition.class)),newWorkerIdGeneratorFixture(Long.MIN_VALUE),modeConfiguration);###instanceDefinition###mock(InstanceDefinition.class)###45:9:45:177
5dee3f6b2f177c813585e654f3367c73a6864303###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-core/src/main/java/org/apache/shardingsphere/data/pipeline/core/prepare/InventoryTaskSplitter.java###/InventoryTaskSplitter.java###org.apache.shardingsphere.data.pipeline.core.prepare.InventoryTaskSplitter###getPositionByPrimaryKeyRange:RuleAlteredJobContext DataSource InventoryDumperConfiguration ###Stringsql=ScalingSQLBuilderFactory.newInstance(jobContext.getJobConfig().getHandleConfig().getSourceDatabaseType()).buildSplitByPrimaryKeyRangeSQL(dumperConfig.getTableName(),dumperConfig.getPrimaryKey());###jobConfig###jobContext.getJobConfig()###181:9:182:108
f6c1ef8a11b73e018100603cf0cb179e33d4323c###/apache_shardingsphere/shardingsphere-features/shardingsphere-shadow/shardingsphere-shadow-core/src/main/java/org/apache/shardingsphere/shadow/rewrite/token/generator/impl/ShadowPredicateColumnTokenGenerator.java###/ShadowPredicateColumnTokenGenerator.java###org.apache.shardingsphere.shadow.rewrite.token.generator.impl.ShadowPredicateColumnTokenGenerator###generateSQLTokens:SQLStatementContext ###Preconditions.checkState(((WhereAvailable)sqlStatementContext).getWhere().isPresent());###whereOptional###((WhereAvailable)sqlStatementContext).getWhere()###53:9:53:97
066d605ea3f8e03434559aedbf69834335406815###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-opengauss/src/main/java/org/apache/shardingsphere/proxy/frontend/opengauss/command/query/extended/bind/OpenGaussBatchedInsertsExecutor.java###/OpenGaussBatchedInsertsExecutor.java###org.apache.shardingsphere.proxy.frontend.opengauss.command.query.extended.bind.OpenGaussBatchedInsertsExecutor###prepareJDBCExecutionUnit:JDBCExecutionUnit ###preparedStatement.setObject(parametersIterator.nextIndex()+1,parametersIterator.next());###parameterIndex###parametersIterator.nextIndex()+1###139:17:139:108
34338c93c9e4b36c8ae7a11bfb1227e99176d6ff###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-executor/src/main/java/org/apache/shardingsphere/infra/executor/sql/federate/schema/row/FederateRowExecutor.java###/FederateRowExecutor.java###org.apache.shardingsphere.infra.executor.sql.federate.schema.row.FederateRowExecutor###createExecutionGroupContext:ExecutionContext ###returnprepareEngine.prepare(executionContext.getRouteContext(),executionContext.getExecutionUnits());###executionUnits###executionContext.getExecutionUnits()###100:9:100:112
7a939fe0fdddad9b0203c590101eaf73ca44a826###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/ClusterContextManagerBuilder.java###/ClusterContextManagerBuilder.java###org.apache.shardingsphere.mode.manager.cluster.ClusterContextManagerBuilder###beforeBuildContextManager:ModeConfiguration Map<String,Map<String,DataSource>> Map<String,Collection<RuleConfiguration>> Collection<RuleConfiguration> Properties boolean Integer ###metaDataContexts=newMetaDataContextsBuilder(loadDataSourcesMap(metaDataPersistService,dataSourcesMap,schemaNames),loadSchemaRules(metaDataPersistService,schemaNames),metaDataPersistService.getGlobalRuleService().load(),metaDataPersistService.getPropsService().load()).build(metaDataPersistService);###clusterDataSources###loadDataSourcesMap(metaDataPersistService,dataSourcesMap,schemaNames)###95:9:96:150
7f18db4a97c97aa9621591865b146e1c626ff068###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-route/src/main/java/org/apache/shardingsphere/infra/route/engine/single/SingleTableRouteEngine.java###/SingleTableRouteEngine.java###org.apache.shardingsphere.infra.route.engine.single.SingleTableRouteEngine###fillRouteContext:SingleTableRule RouteContext Collection<String> ###StringdataSource=singleTableRule.getSingleTableDataNodes().get(each).getDataSourceName();###singleTableDataNodes###singleTableRule.getSingleTableDataNodes()###137:13:137:105
52e17df01d52ef1bd300244b81f054b21265f5bd###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/response/header/query/impl/QueryHeaderBuilderTest.java###/QueryHeaderBuilderTest.java###org.apache.shardingsphere.proxy.backend.response.header.query.impl.QueryHeaderBuilderTest###assertQueryHeaderDecimals:###QueryHeaderheader=QueryHeaderBuilder.build(createQueryResultMetaData(),createMetaData(),1);###metaData###createMetaData()###100:9:100:105
e81a05f1814b70dfeac4067f08183b61f878990b###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-distsql/shardingsphere-sharding-distsql-handler/src/test/java/org/apache/shardingsphere/scaling/distsql/handler/CreateShardingScalingRuleStatementUpdaterTest.java###/CreateShardingScalingRuleStatementUpdaterTest.java###org.apache.shardingsphere.scaling.distsql.handler.CreateShardingScalingRuleStatementUpdaterTest###createCompleteConfiguration:###result.setDataConsistencyChecker(createAlgorithmSegment("DATA_MATCH"));###dataConsistencyChecker###createAlgorithmSegment("DATA_MATCH")###188:9:188:80
7083a12d42ad1d85c0836cec8d6fa557a2f249fe###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-core/src/main/java/org/apache/shardingsphere/data/pipeline/core/task/IncrementalTask.java###/IncrementalTask.java###org.apache.shardingsphere.data.pipeline.core.task.IncrementalTask###IncrementalTask:int DumperConfiguration ImporterConfiguration PipelineChannelFactory ExecuteEngine ###progress.setPosition(dumperConfig.getPosition());###position###dumperConfig.getPosition()###84:9:84:58
29b4fabfded8b6ca3e9df1dd8866c32393f2855d###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/statement/dml/SelectStatementContext.java###/SelectStatementContext.java###org.apache.shardingsphere.infra.binder.statement.dml.SelectStatementContext###isContainsPartialDistinctAggregation:###returnaggregationProjections.size()>1&&projectionsContext.getAggregationDistinctProjections().size()>0&&aggregationProjections.size()!=projectionsContext.getAggregationDistinctProjections().size();###aggregationDistinctProjections###projectionsContext.getAggregationDistinctProjections()###157:9:158:115
5bb9e28ba4811d2590a0c113c9b681ea3406ee91###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/jdbc/core/statement/ShardingSphereStatement.java###/ShardingSphereStatement.java###org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSphereStatement###executeUpdate:String String[] ###executionContext=createExecutionContext(createLogicSQL(sql));###logicSQL###createLogicSQL(sql)###236:13:236:76
b3da39f3c4e3312bd9e7b872eb59a3a9603d9dc8###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/condition/engine/InsertClauseShardingConditionEngineTest.java###/InsertClauseShardingConditionEngineTest.java###org.apache.shardingsphere.sharding.route.engine.condition.engine.InsertClauseShardingConditionEngineTest###assertCreateShardingConditionsInsertStatementWithGeneratedKeyContextAndTableRule:###when(insertStatementContext.getGeneratedKeyContext()).thenReturn(Optional.of(mock(GeneratedKeyContext.class)));###generatedKeyContext###mock(GeneratedKeyContext.class)###93:9:93:120
15d203c445e5f1fd3dac9c8a079cba0c09baa1f3###/apache_shardingsphere/shardingsphere-scaling/shardingsphere-scaling-dialect/shardingsphere-scaling-opengauss/src/test/java/org/apache/shardingsphere/scaling/opengauss/wal/decode/MppdbDecodingPluginTest.java###/MppdbDecodingPluginTest.java###org.apache.shardingsphere.scaling.opengauss.wal.decode.MppdbDecodingPluginTest###assertDecodeWriteRowEventWithByteA:###assertThat(actual.getAfterRow().get(0),is(newbyte[]{(byte)0xff,(byte)0,(byte)0xab}));###byteaObj###actual.getAfterRow().get(0)###105:9:105:101
b073e622d58c6c3d4b79295fff261184c50d8968###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-rewrite/src/test/java/org/apache/shardingsphere/infra/rewrite/SQLRewriteEntryTest.java###/SQLRewriteEntryTest.java###org.apache.shardingsphere.infra.rewrite.SQLRewriteEntryTest###assertRewriteForRouteSQLRewriteResult:###routeContext.getRouteUnits().addAll(Arrays.asList(mock(RouteUnit.class),mock(RouteUnit.class)));###firstRouteUnit###mock(RouteUnit.class)###61:9:61:106
fb5a9766ab5d7e898c034b6d8303d0c43b39b03c###/apache_shardingsphere/shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-distsql/shardingsphere-readwrite-splitting-distsql-handler/src/main/java/org/apache/shardingsphere/readwritesplitting/distsql/handler/query/ReadwriteSplittingRuleQueryResultSet.java###/ReadwriteSplittingRuleQueryResultSet.java###org.apache.shardingsphere.readwritesplitting.distsql.handler.query.ReadwriteSplittingRuleQueryResultSet###getRowData:###returnArrays.asList(ruleConfig.getName(),ruleConfig.getAutoAwareDataSourceName(),ruleConfig.getWriteDataSourceName(),Joiner.on(",").join(ruleConfig.getReadDataSourceNames()),configuration.map(ShardingSphereAlgorithmConfiguration::getType).orElse(null),PropertiesConverter.convert(configuration.map(ShardingSphereAlgorithmConfiguration::getProps).orElseGet(Properties::new)));###writeDataSourceName###ruleConfig.getWriteDataSourceName()###69:9:71:140
b9b8e91c1f8bf2092140aed69ee327de6da92bc1###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/statement/dml/SelectStatementContext.java###/SelectStatementContext.java###org.apache.shardingsphere.infra.binder.statement.dml.SelectStatementContext###containsSubquery:###return!SubqueryExtractUtil.getSubquerySegments(getSqlStatement()).isEmpty();###subquerySegments###SubqueryExtractUtil.getSubquerySegments(getSqlStatement())###124:9:124:86
7f18db4a97c97aa9621591865b146e1c626ff068###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/type/broadcast/ShardingTableBroadcastRoutingEngineTest.java###/ShardingTableBroadcastRoutingEngineTest.java###org.apache.shardingsphere.sharding.route.engine.type.broadcast.ShardingTableBroadcastRoutingEngineTest###assertRouteForDropIndexStatementDoNotFoundTables:###when(sqlStatementContext.getTablesContext().getTableNames()).thenReturn(Collections.emptyList());###tableNames###Collections.emptyList()###121:9:121:106
52e17df01d52ef1bd300244b81f054b21265f5bd###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/response/header/query/impl/QueryHeaderBuilderTest.java###/QueryHeaderBuilderTest.java###org.apache.shardingsphere.proxy.backend.response.header.query.impl.QueryHeaderBuilderTest###assertQueryHeaderSigned:###QueryHeaderheader=QueryHeaderBuilder.build(createQueryResultMetaData(),createMetaData(),1);###metaData###createMetaData()###106:9:106:105
5452894f2404d7037067b44c1473e8e0de418bb5###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/TextProtocolBackendHandlerFactory.java###/TextProtocolBackendHandlerFactory.java###org.apache.shardingsphere.proxy.backend.text.TextProtocolBackendHandlerFactory###getBackendDatabaseType:DatabaseType BackendConnection ###returnStrings.isNullOrEmpty(backendConnection.getSchemaName())?defaultDatabaseType:ProxyContext.getInstance().getMetaDataContexts().getMetaData(backendConnection.getSchemaName()).getResource().getDatabaseType();###schemaName###backendConnection.getSchemaName()###97:9:98:169
5c891b178024ff7d43bc854b8109475a9af3330b###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/jdbc/core/statement/ShardingSpherePreparedStatement.java###/ShardingSpherePreparedStatement.java###org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSpherePreparedStatement###executeUpdate:###executionContext=createExecutionContext(createLogicSQL());###logicSQL###createLogicSQL()###243:13:243:73
b073e622d58c6c3d4b79295fff261184c50d8968###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-rewrite/src/test/java/org/apache/shardingsphere/infra/rewrite/SQLRewriteEntryTest.java###/SQLRewriteEntryTest.java###org.apache.shardingsphere.infra.rewrite.SQLRewriteEntryTest###assertRewriteForRouteSQLRewriteResult:###routeContext.getRouteUnits().addAll(Arrays.asList(mock(RouteUnit.class),mock(RouteUnit.class)));###secondRouteUnit###mock(RouteUnit.class)###61:9:61:106
16508b7a6fa9f6fb836de253dc4f80b238256970###/apache_shardingsphere/shardingsphere-scaling/shardingsphere-scaling-dialect/shardingsphere-scaling-postgresql/src/main/java/org/apache/shardingsphere/scaling/postgresql/component/PostgreSQLWalDumper.java###/PostgreSQLWalDumper.java###org.apache.shardingsphere.scaling.postgresql.component.PostgreSQLWalDumper###dump:###pushRecord(walEventConverter.convert(event));###record###walEventConverter.convert(event)###86:17:86:62
c32e9238f76a4cf23a91dbaaee6127af8ab624ea###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/ClusterContextManagerBuilder.java###/ClusterContextManagerBuilder.java###org.apache.shardingsphere.mode.manager.cluster.ClusterContextManagerBuilder###persistConfigurations:MetaDataPersistService ContextManagerBuilderParameter ###metaDataPersistService.persistConfigurations(parameter.getSchemaConfigs(),parameter.getGlobalRuleConfigs(),parameter.getProps(),parameter.getModeConfig().isOverwrite());###isOverwrite###parameter.getModeConfig().isOverwrite()###109:13:109:185
d42ca1d450f8a11e4d99b63f61060b1c6a567986###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/metadata/schema/builder/SystemSchemaBuilder.java###/SystemSchemaBuilder.java###org.apache.shardingsphere.infra.metadata.schema.builder.SystemSchemaBuilder###getSchemaFiles:String DatabaseType ###URLurl=SystemSchemaBuilder.class.getClassLoader().getResource("schema/"+databaseType.getName().toLowerCase()+"/"+schemaName);###databaseTypeName###databaseType.getName().toLowerCase()###73:9:73:143
7e9e1070f6f7d5424508f9ba7a8b1a9cd8375271###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-optimize/src/main/java/org/apache/shardingsphere/infra/optimize/core/convert/converter/impl/SelectStatementSqlNodeConverter.java###/SelectStatementSqlNodeConverter.java###org.apache.shardingsphere.infra.optimize.core.convert.converter.impl.SelectStatementSqlNodeConverter###convert:SelectStatement ###Optional<SqlNode>offset=newOffsetSqlNodeConverter().convert(SelectStatementHandler.getLimitSegment(selectStatement).orElse(null));###limit###SelectStatementHandler.getLimitSegment(selectStatement)###38:9:38:143
2441fea4f6f7afaee060e5c53f7c17ed4f1a0f48###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/distsql/rdl/impl/RDLBackendHandler.java###/RDLBackendHandler.java###org.apache.shardingsphere.proxy.backend.text.distsql.rdl.impl.RDLBackendHandler###isValidResource:String String ###returnObjects.nonNull(ProxyContext.getInstance().getMetaData(schemaName).getResource())&&ProxyContext.getInstance().getMetaData(schemaName).getResource().getDataSources().containsKey(resourceName);###resource###ProxyContext.getInstance().getMetaData(schemaName).getResource()###81:9:82:128
231d93f1bf95d8ecaf4940bf420ce19b647e24af###/apache_shardingsphere/shardingsphere-test/shardingsphere-integration-test/shardingsphere-integration-test-fixture/src/test/java/org/apache/shardingsphere/test/integration/junit/container/storage/impl/PostgreSQLContainer.java###/PostgreSQLContainer.java###org.apache.shardingsphere.test.integration.junit.container.storage.impl.PostgreSQLContainer###execute:###try(Connectionignored=DriverManager.getConnection(DataSourceEnvironment.getURL("PostgreSQL",getHost(),getPort()),getUsername(),getPassword()))###url###DataSourceEnvironment.getURL("PostgreSQL",getHost(),getPort())###54:13:58:14
e16c205937757b2f283ec2b821b253d6155e0250###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/distsql/rdl/impl/CreateShardingBindingTableRulesBackendHandler.java###/CreateShardingBindingTableRulesBackendHandler.java###org.apache.shardingsphere.proxy.backend.text.distsql.rdl.impl.CreateShardingBindingTableRulesBackendHandler###before:String CreateShardingBindingTableRulesStatement ###for(bindingTable:ShardingRuleStatementConverter.convert(sqlStatement).getBindingTables())###bindingTables###ShardingRuleStatementConverter.convert(sqlStatement).getBindingTables()###53:9:59:10
934145b51fad61c6671f3208b8a8095bd67e0c50###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-dialect/shardingsphere-data-pipeline-opengauss/src/main/java/org/apache/shardingsphere/data/pipeline/opengauss/ingest/wal/OpenGaussLogicalReplication.java###/OpenGaussLogicalReplication.java###org.apache.shardingsphere.data.pipeline.opengauss.ingest.wal.OpenGaussLogicalReplication###createSlotBySql:Connection ###try(PreparedStatementps=connection.prepareStatement(String.format("SELECT*FROMpg_create_logical_replication_slot('%s','%s')",getUniqueSlotName(connection),DECODE_PLUGIN)))###sql###String.format("SELECT*FROMpg_create_logical_replication_slot('%s','%s')",getUniqueSlotName(connection),DECODE_PLUGIN)###125:9:134:10
d9393bf401f6170bc89b3973920ec5f56ed72ef0###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/schema/builder/loader/dialect/OracleTableMetaDataLoaderTest.java###/OracleTableMetaDataLoaderTest.java###org.apache.shardingsphere.infra.metadata.schema.builder.loader.dialect.OracleTableMetaDataLoaderTest###assertLoadCondition5:###assertThat(actual.get("tbl").getColumnMetaData(0),is(newColumnMetaData("id",4,true,true,false)));###actualTableMetaData###actual.get("tbl")###158:9:158:112
13e28620af238f33afb4e1a2212d4200caf028d1###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-authority/shardingsphere-authority-core/src/main/java/org/apache/shardingsphere/authority/yaml/swapper/AuthorityRuleConfigurationYamlSwapper.java###/AuthorityRuleConfigurationYamlSwapper.java###org.apache.shardingsphere.authority.yaml.swapper.AuthorityRuleConfigurationYamlSwapper###swapToObject:YamlAuthorityRuleConfiguration ###returnnewAuthorityRuleConfiguration(users,algorithmSwapper.swapToObject(yamlConfig.getProvider()));###provider###algorithmSwapper.swapToObject(yamlConfig.getProvider())###48:9:48:111
37808b1ed3411240fe2d79492925feae4764b320###/apache_shardingsphere/shardingsphere-distsql-parser/shardingsphere-distsql-parser-engine/src/main/java/org/apache/shardingsphere/distsql/parser/core/resource/ResourceSQLStatementParserEngine.java###/ResourceSQLStatementParserEngine.java###org.apache.shardingsphere.distsql.parser.core.resource.ResourceSQLStatementParserEngine###parse:String ###ASTNodeastNode=SQLParserFactory.newInstance(sql,ResourceDistSQLLexer.class,ResourceDistSQLParser.class).parse();###sqlParser###SQLParserFactory.newInstance(sql,ResourceDistSQLLexer.class,ResourceDistSQLParser.class)###39:9:39:126
87f87059ac87dddd8106e33d176da1c82e9b0ab4###/apache_shardingsphere/shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-opentelemetry/src/main/java/org/apache/shardingsphere/agent/plugin/tracing/opentelemetry/advice/CommandExecutorTaskAdvice.java###/CommandExecutorTaskAdvice.java###org.apache.shardingsphere.agent.plugin.tracing.opentelemetry.advice.CommandExecutorTaskAdvice###beforeMethod:AdviceTargetObject Method Object[] MethodInvocationResult ###Spanspan=GlobalOpenTelemetry.getTracer("shardingsphere-agent").spanBuilder(OPERATION_NAME).setAttribute(OpenTelemetryConstants.COMPONENT,OpenTelemetryConstants.COMPONENT_NAME).setSpanKind(SpanKind.CLIENT).startSpan();###spanBuilder###GlobalOpenTelemetry.getTracer("shardingsphere-agent").spanBuilder(OPERATION_NAME).setAttribute(OpenTelemetryConstants.COMPONENT,OpenTelemetryConstants.COMPONENT_NAME).setSpanKind(SpanKind.CLIENT)###41:9:45:30
f9de6fb2078858aa849e9b38e76e68145cfedabf###/apache_shardingsphere/shardingsphere-test/shardingsphere-pipeline-test/src/test/java/org/apache/shardingsphere/data/pipeline/scenario/rulealtered/RuleAlteredJobTest.java###/RuleAlteredJobTest.java###org.apache.shardingsphere.data.pipeline.scenario.rulealtered.RuleAlteredJobTest###mockShardingContext:###returnnewShardingContext("1",null,2,YamlEngine.marshal(JobConfigurationBuilder.createJobConfiguration()),0,null);###jobConfig###JobConfigurationBuilder.createJobConfiguration()###52:9:52:129
c29abe045c58fb2dd803131465e602ac161536ce###/apache_shardingsphere/shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/main/java/org/apache/shardingsphere/encrypt/rewrite/context/EncryptSQLRewriteContextDecorator.java###/EncryptSQLRewriteContextDecorator.java###org.apache.shardingsphere.encrypt.rewrite.context.EncryptSQLRewriteContextDecorator###decorate:EncryptRule ConfigurationProperties SQLRewriteContext RouteContext ###Collection<ParameterRewriter>parameterRewriters=newEncryptParameterRewriterBuilder(encryptRule,sqlRewriteContext.getSchema(),sqlRewriteContext.getSqlStatementContext(),encryptConditions).getParameterRewriters();###sqlStatementContext###sqlRewriteContext.getSqlStatementContext()###48:13:49:152
52e17df01d52ef1bd300244b81f054b21265f5bd###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/response/header/query/impl/QueryHeaderBuilderTest.java###/QueryHeaderBuilderTest.java###org.apache.shardingsphere.proxy.backend.response.header.query.impl.QueryHeaderBuilderTest###assertQueryHeaderColumnNameWithoutProjectionsContext:###QueryHeaderheader=QueryHeaderBuilder.build(createQueryResultMetaData(),createMetaData(),1);###metaData###createMetaData()###70:9:70:105
5bb9e28ba4811d2590a0c113c9b681ea3406ee91###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/jdbc/core/statement/ShardingSphereStatement.java###/ShardingSphereStatement.java###org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSphereStatement###executeUpdate:String int ###executionContext=createExecutionContext(createLogicSQL(sql));###logicSQL###createLogicSQL(sql)###202:13:202:76
fafec0cadb5d2144f9a59a8add2e7b852c004a5b###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-distsql/shardingsphere-sharding-distsql-handler/src/test/java/org/apache/shardingsphere/sharding/distsql/update/AlterShardingBindingTableRulesStatementUpdaterTest.java###/AlterShardingBindingTableRulesStatementUpdaterTest.java###org.apache.shardingsphere.sharding.distsql.update.AlterShardingBindingTableRulesStatementUpdaterTest###createCurrentRuleConfiguration:###result.getTables().add(newShardingTableRuleConfiguration("t_1"));###tableRule1###newShardingTableRuleConfiguration("t_1")###67:9:67:75
5784be8b09de36e14e3b24c2d71568145f9063e8###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-spring/shardingsphere-jdbc-governance-spring/shardingsphere-jdbc-governance-spring-boot-starter/src/test/java/org/apache/shardingsphere/spring/boot/governance/type/GovernanceSpringBootRegistryShardingTest.java###/GovernanceSpringBootRegistryShardingTest.java###org.apache.shardingsphere.spring.boot.governance.type.GovernanceSpringBootRegistryShardingTest###assertWithBindingTableRules:###ShardingRuleshardingRule=(ShardingRule)metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator().next();###iterator###metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().iterator()###124:9:124:137
15880ece98257a2019847c0ff0cd9dde3d8f721c###/apache_shardingsphere/shardingsphere-features/shardingsphere-db-discovery/shardingsphere-db-discovery-provider/shardingsphere-db-discovery-mysql/src/main/java/org/apache/shardingsphere/dbdiscovery/mysql/type/ShowSlaveStatusDatabaseDiscoveryType.java###/ShowSlaveStatusDatabaseDiscoveryType.java###org.apache.shardingsphere.dbdiscovery.mysql.type.ShowSlaveStatusDatabaseDiscoveryType###getPrimaryDataSourceURL:Statement ###returnString.format("%s:%s",resultSet.getString("Master_Host"),resultSet.getString("Master_Port"));###masterPort###resultSet.getString("Master_Port")###60:17:60:119
09a06e8cf090c651f49bd1fe308af52048b0aadd###/apache_shardingsphere/shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-distsql/shardingsphere-readwrite-splitting-distsql-parser/src/main/java/org/apache/shardingsphere/readwritesplitting/distsql/parser/core/ReadwriteSplittingDistSQLStatementVisitor.java###/ReadwriteSplittingDistSQLStatementVisitor.java###org.apache.shardingsphere.readwritesplitting.distsql.parser.core.ReadwriteSplittingDistSQLStatementVisitor###visitReadwriteSplittingRuleDefinition:ReadwriteSplittingRuleDefinitionContext ###returnnewReadwriteSplittingRuleSegment(getIdentifierValue(ctx.ruleName()),getIdentifierValue(ctx.dynamicReadwriteSplittingRuleDefinition().resourceName()),getIdentifierValue(ctx.algorithmDefinition().algorithmName()),props);###algorithmName###getIdentifierValue(ctx.algorithmDefinition().algorithmName())###101:13:102:91
fabef3ada1d5345c36d2ff26855f500bb44cd40f###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/main/java/org/apache/shardingsphere/sharding/route/engine/condition/engine/impl/InsertClauseShardingConditionEngine.java###/InsertClauseShardingConditionEngine.java###org.apache.shardingsphere.sharding.route.engine.condition.engine.impl.InsertClauseShardingConditionEngine###createShardingConditionsWithInsertValues:InsertStatementContext List<Object> ###for(each:sqlStatementContext.getInsertValueContexts())###insertValueContexts###sqlStatementContext.getInsertValueContexts()###71:9:73:10
027f9d370a53073ce70aa41a15674942688bdc8d###/apache_shardingsphere/shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-core/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptProjectionTokenGenerator.java###/EncryptProjectionTokenGenerator.java###org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptProjectionTokenGenerator###generateProjectionSQLTokens:SelectStatementContext EncryptTable String ###for(each:selectStatementContext.getSqlStatement().getProjections().getProjections())###projections###selectStatementContext.getSqlStatement().getProjections().getProjections()###104:9:123:10
915d4572b7ee72a77891e8d130a1a5ca4b20ea04###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/distsql/rdl/impl/CreateDatabaseDiscoveryRuleBackendHandler.java###/CreateDatabaseDiscoveryRuleBackendHandler.java###org.apache.shardingsphere.proxy.backend.text.distsql.rdl.impl.CreateDatabaseDiscoveryRuleBackendHandler###doExecute:String CreateDatabaseDiscoveryRuleStatement ###DatabaseDiscoveryRuleConfigurationexistDatabaseDiscoveryRuleConfig=findRuleConfiguration(schemaName,DatabaseDiscoveryRuleConfiguration.class).get();###ruleConfig###findRuleConfiguration(schemaName,DatabaseDiscoveryRuleConfiguration.class)###72:13:72:165
37accefecfbb95b460b934bc21d134867ac3570d###/apache_shardingsphere/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/statement/impl/MySQLDALStatementSQLVisitor.java###/MySQLDALStatementSQLVisitor.java###org.apache.shardingsphere.sql.parser.mysql.visitor.statement.impl.MySQLDALStatementSQLVisitor###visitCacheIndex:CacheIndexContext ###PartitionsSegmentsegment=newPartitionsSegment(ctx.tableName().getStart().getStartIndex(),ctx.partitionList().getStop().getStopIndex(),(SimpleTableSegment)visit(ctx.tableName()));###table###(SimpleTableSegment)visit(ctx.tableName())###356:13:356:198
12d002aa46c233b5a102dc841a986320b58097f7###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-core/src/main/java/org/apache/shardingsphere/data/pipeline/scenario/rulealtered/RuleAlteredJobPreparer.java###/RuleAlteredJobPreparer.java###org.apache.shardingsphere.data.pipeline.scenario.rulealtered.RuleAlteredJobPreparer###getIncrementalPosition:RuleAlteredJobContext TaskConfiguration PipelineDataSourceManager ###returnPositionInitializerFactory.newInstance(taskConfig.getHandleConfig().getSourceDatabaseType()).init(dataSourceManager.getDataSource(taskConfig.getDumperConfig().getDataSourceConfig()));###dataSource###dataSourceManager.getDataSource(taskConfig.getDumperConfig().getDataSourceConfig())###137:9:137:199
6618aa1459c53a676f07890989ae9a636b54a1e8###/apache_shardingsphere/shardingsphere-features/shardingsphere-shadow/shardingsphere-shadow-core/src/main/java/org/apache/shardingsphere/shadow/rewrite/context/ShadowSQLRewriteContextDecorator.java###/ShadowSQLRewriteContextDecorator.java###org.apache.shardingsphere.shadow.rewrite.context.ShadowSQLRewriteContextDecorator###decorate:ShadowRule ConfigurationProperties SQLRewriteContext RouteContext ###each.rewrite(sqlRewriteContext.getParameterBuilder(),sqlRewriteContext.getSqlStatementContext(),sqlRewriteContext.getParameters());###parameterBuilder###sqlRewriteContext.getParameterBuilder()###40:17:40:150
64cfdc01e964e45b1711ddca57c06ea2979b7e0a###/apache_shardingsphere/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-spring/shardingsphere-sharding-spring-namespace/src/main/java/org/apache/shardingsphere/sharding/spring/namespace/parser/strategy/ShardingStrategyBeanDefinitionParser.java###/ShardingStrategyBeanDefinitionParser.java###org.apache.shardingsphere.sharding.spring.namespace.parser.strategy.ShardingStrategyBeanDefinitionParser###getStandardShardingStrategyConfigBeanDefinition:Element ###factory.addConstructorArgValue(element.getAttribute(ShardingStrategyBeanDefinitionTag.SHARDING_COLUMN_ATTRIBUTE));###shardingColumn###element.getAttribute(ShardingStrategyBeanDefinitionTag.SHARDING_COLUMN_ATTRIBUTE)###56:9:56:123
ede94d66c0cd384ba18ca61ba6da2e8e76c027c7###/apache_shardingsphere/shardingsphere-test/shardingsphere-pipeline-test/src/test/java/org/apache/shardingsphere/data/pipeline/core/lock/PipelineSimpleLockTest.java###/PipelineSimpleLockTest.java###org.apache.shardingsphere.data.pipeline.core.lock.PipelineSimpleLockTest###assertTryLockAndReleaseLock:###pipelineSimpleLock.tryLock("test",50L);###lockName###"test"###70:9:70:49
5784be8b09de36e14e3b24c2d71568145f9063e8###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-spring/shardingsphere-jdbc-governance-spring/shardingsphere-jdbc-governance-spring-boot-starter/src/test/java/org/apache/shardingsphere/spring/boot/governance/type/GovernanceSpringBootReadwriteSplittingTest.java###/GovernanceSpringBootReadwriteSplittingTest.java###org.apache.shardingsphere.spring.boot.governance.type.GovernanceSpringBootReadwriteSplittingTest###assertDataSource:###assertReadwriteSplittingRule((ReadwriteSplittingRule)rules.iterator().next());###iterator###rules.iterator()###70:9:70:88
7a939fe0fdddad9b0203c590101eaf73ca44a826###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/ClusterContextManagerBuilder.java###/ClusterContextManagerBuilder.java###org.apache.shardingsphere.mode.manager.cluster.ClusterContextManagerBuilder###beforeBuildContextManager:ModeConfiguration Map<String,Map<String,DataSource>> Map<String,Collection<RuleConfiguration>> Collection<RuleConfiguration> Properties boolean Integer ###metaDataContexts=newMetaDataContextsBuilder(loadDataSourcesMap(metaDataPersistService,dataSourcesMap,schemaNames),loadSchemaRules(metaDataPersistService,schemaNames),metaDataPersistService.getGlobalRuleService().load(),metaDataPersistService.getPropsService().load()).build(metaDataPersistService);###clusterProps###metaDataPersistService.getPropsService().load()###95:9:96:150
1d0e2789f42bb81d46bf4486cc81db82a3d90246###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/adapter/ConnectionAdapterTest.java###/ConnectionAdapterTest.java###org.apache.shardingsphere.driver.jdbc.adapter.ConnectionAdapterTest###mockShardingSphereConnection:Connection[] ###ShardingSphereConnectionresult=newShardingSphereConnection(DefaultSchema.LOGIC_NAME,mock(ContextManager.class,RETURNS_DEEP_STUBS));###contextManager###mock(ContextManager.class,RETURNS_DEEP_STUBS)###133:9:133:146
5fedb3bbe9f733109f7c7c6c0388fe817d2d7e27###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-binder/src/test/java/org/apache/shardingsphere/infra/binder/segment/select/pagination/engine/PaginationContextEngineTest.java###/PaginationContextEngineTest.java###org.apache.shardingsphere.infra.binder.segment.select.pagination.engine.PaginationContextEngineTest###assertCreatePaginationContextWhenLimitSegmentTopSegmentAbsentAndWhereSegmentPresent:###selectStatement.setWhere(newWhereSegment(0,10,null));###where###newWhereSegment(0,10,null)###103:9:103:65
52e17df01d52ef1bd300244b81f054b21265f5bd###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/response/header/query/impl/QueryHeaderBuilderTest.java###/QueryHeaderBuilderTest.java###org.apache.shardingsphere.proxy.backend.response.header.query.impl.QueryHeaderBuilderTest###assertQueryHeaderColumnNameFromProjectionsContext:###QueryHeaderheader=QueryHeaderBuilder.build(createProjectionsContext(),createQueryResultMetaData(),createMetaData(),1);###metaData###createMetaData()###76:9:76:133
f7c69311d8e4957c50944b99e421f80ba20cfed0###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-rewrite/src/main/java/org/apache/shardingsphere/infra/rewrite/sql/token/generator/generic/RemoveTokenGenerator.java###/RemoveTokenGenerator.java###org.apache.shardingsphere.infra.rewrite.sql.token.generator.generic.RemoveTokenGenerator###isGenerateSQLToken:SQLStatementContext ###containsSchemaName=((TableAvailable)sqlStatementContext).getTablesContext().getSchemaName().isPresent();###tablesContext###((TableAvailable)sqlStatementContext).getTablesContext()###46:13:46:120
276917e208a5fc0ff7d41e4998192404f9e210dc###/apache_shardingsphere/shardingsphere-mode/shardingsphere-mode-type/shardingsphere-cluster-mode/shardingsphere-cluster-mode-core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/cache/subscriber/ScalingRegistrySubscriber.java###/ScalingRegistrySubscriber.java###org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.cache.subscriber.ScalingRegistrySubscriber###startScaling:SchemaVersionPreparedEvent ###StringsourceDataSource=repository.get(SchemaMetaDataNode.getMetaDataDataSourcePath(event.getSchemaName(),schemaVersionPersistService.getSchemaActiveVersion(event.getSchemaName()).get()));###activeVersion###schemaVersionPersistService.getSchemaActiveVersion(event.getSchemaName()).get()###57:9:57:200
c4271b329ef77801e9fb680fc9f2fea4457f80a7###/apache_shardingsphere/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/distsql/ral/SetVariableBackendHandlerTest.java###/SetVariableBackendHandlerTest.java###org.apache.shardingsphere.proxy.backend.text.distsql.ral.SetVariableBackendHandlerTest###setUp:###MetaDataContextsmetaDataContexts=newMetaDataContexts(mock(MetaDataPersistService.class),getMetaDataMap(),mock(ShardingSphereRuleMetaData.class),mock(ExecutorEngine.class),mock(OptimizerContext.class),newConfigurationProperties(newProperties()));###properties###newProperties()###69:9:70:162
027f9d370a53073ce70aa41a15674942688bdc8d###/apache_shardingsphere/shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/statement/dml/SelectStatementContext.java###/SelectStatementContext.java###org.apache.shardingsphere.infra.binder.statement.dml.SelectStatementContext###createSubqueryContexts:Map<String,ShardingSphereMetaData> List<Object> String ###result.put(each.getStartIndex(),newSelectStatementContext(metaDataMap,parameters,each.getSelect(),defaultSchemaName));###subqueryContext###newSelectStatementContext(metaDataMap,parameters,each.getSelect(),defaultSchemaName)###108:13:108:136
f8e48c8be63adac2b7a2a25d9e6723703dd84311###/apache_shardingsphere/shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-core/src/main/java/org/apache/shardingsphere/data/pipeline/core/ingest/dumper/AbstractInventoryDumper.java###/AbstractInventoryDumper.java###org.apache.shardingsphere.data.pipeline.core.ingest.dumper.AbstractInventoryDumper###dump:###record.addColumn(newColumn(metaData.getColumnName(i),readValue(rs,i),true,tableMetaData.isPrimaryKey(i-1)));###isPrimaryKey###tableMetaData.isPrimaryKey(i-1)###100:21:100:136
ce02397fb1e359d2fe6929f67cdc706b721b4662###/apache_shardingsphere/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-opengauss/src/main/java/org/apache/shardingsphere/sql/parser/opengauss/visitor/statement/impl/OpenGaussStatementSQLVisitor.java###/OpenGaussStatementSQLVisitor.java###org.apache.shardingsphere.sql.parser.opengauss.visitor.statement.impl.OpenGaussStatementSQLVisitor###generateTableFromRelationExpr:RelationExprContext ###table.setOwner(newOwnerSegment(qualifiedName.colId().start.getStartIndex(),qualifiedName.colId().stop.getStopIndex(),newIdentifierValue(qualifiedName.colId().getText())));###owner###newOwnerSegment(qualifiedName.colId().start.getStartIndex(),qualifiedName.colId().stop.getStopIndex(),newIdentifierValue(qualifiedName.colId().getText()))###1078:13:1078:188
5bb9e28ba4811d2590a0c113c9b681ea3406ee91###/apache_shardingsphere/shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/jdbc/core/statement/ShardingSphereStatement.java###/ShardingSphereStatement.java###org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSphereStatement###executeUpdate:String ###executionContext=createExecutionContext(createLogicSQL(sql));###logicSQL###createLogicSQL(sql)###183:13:183:76
