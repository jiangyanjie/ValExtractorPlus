7c43b0a1b4526b9c01d64705b49dc4293fda2175###/google_truth/core/src/test/java/com/google/common/truth/IterableTest.java###/IterableTest.java###com.google.common.truth.IterableTest###iterableContainsAllOfInOrderWithOneShotIterable:###finalIterator<Object>iterator=iterable(2,1,null,4,"a",3,"b").iterator();###iterable###iterable(2,1,null,4,"a",3,"b")###290:5:290:87
791d9d2ffe85b531e4bc4f33992242b7bbba4f21###/google_truth/src/main/java/org/junit/contrib/truth/subjects/Subject.java###/Subject.java###org.junit.contrib.truth.subjects.Subject###hasField:String ###check().that(getSubject().getClass()).hasField(fieldName);###subject###getSubject()###195:5:195:63
ad84f50c480efaf2e389caa465d501cc78e3d2db###/google_truth/core/src/main/java/com/google/common/truth/IterableSubject.java###/IterableSubject.java###com.google.common.truth.IterableSubject.UsingCorrespondence###failIfOneToOneMappingHasMissing:List<? extends A> List<? extends E> BiMap<Integer,Integer> ###subject.failWithoutActual(simpleFact(lenientFormat("Nottruethat%scontainsatleastoneelementthat%seachelementof<%s>."+"Itcontainsatleastoneelementthatmatcheseachexpectedelement,"+"buttherewasno1:1mappingbetweenalltheexpectedelementsandany"+"subsetoftheactualelements.Usingthemostcomplete1:1mapping(or"+"onesuchmapping,ifthereisatie),it%s",subject.actualAsString(),correspondence,expected,describeMissing(missing,extra))));###fact###simpleFact(lenientFormat("Nottruethat%scontainsatleastoneelementthat%seachelementof<%s>."+"Itcontainsatleastoneelementthatmatcheseachexpectedelement,"+"buttherewasno1:1mappingbetweenalltheexpectedelementsandany"+"subsetoftheactualelements.Usingthemostcomplete1:1mapping(or"+"onesuchmapping,ifthereisatie),it%s",subject.actualAsString(),correspondence,expected,describeMissing(missing,extra)))###1558:9:1569:56
a517e05654cce5521f50c9927fe3a9a0d146d44a###/google_truth/core/src/test/java/com/google/common/truth/CustomFailureMessageTest.java###/CustomFailureMessageTest.java###com.google.common.truth.CustomFailureMessageTest###assertWithMessageIsPrependedWithNamed_withPlaceholders:###assertWithMessage("Invalid%snth","mo").that(13).named("Septober").isIn(Range.closed(1,12));###range###Range.closed(1,12)###144:7:144:101
e119258272b8febfae493454ceb47bae4d69ec72###/google_truth/core/src/main/java/com/google/common/truth/IterableSubject.java###/IterableSubject.java###com.google.common.truth.IterableSubject###pickGrouping:Iterable<Entry<?>> Iterable<Entry<?>> ###if(hasMultiple(second)&&containsEmptyOrLong(second))###secondHasMultiple###hasMultiple(second)###671:5:673:6
ad84f50c480efaf2e389caa465d501cc78e3d2db###/google_truth/core/src/main/java/com/google/common/truth/IterableSubject.java###/IterableSubject.java###com.google.common.truth.IterableSubject.UsingCorrespondence###failIfOneToOneMappingHasMissingOrExtra:List<? extends A> List<? extends E> BiMap<Integer,Integer> ###subject.failWithoutActual(simpleFact(lenientFormat("Nottruethat%scontainsexactlyoneelementthat%seachelementof<%s>."+"Itcontainsatleastoneelementthatmatcheseachexpectedelement,"+"andeveryelementitcontainsmatchesatleastoneexpectedelement,"+"buttherewasno1:1mappingbetweenalltheactualandexpected"+"elements.Usingthemostcomplete1:1mapping(oronesuchmapping,if"+"thereisatie),it%s",subject.actualAsString(),correspondence,expected,describeMissingOrExtra(missing,extra))));###fact###simpleFact(lenientFormat("Nottruethat%scontainsexactlyoneelementthat%seachelementof<%s>."+"Itcontainsatleastoneelementthatmatcheseachexpectedelement,"+"andeveryelementitcontainsmatchesatleastoneexpectedelement,"+"buttherewasno1:1mappingbetweenalltheactualandexpected"+"elements.Usingthemostcomplete1:1mapping(oronesuchmapping,if"+"thereisatie),it%s",subject.actualAsString(),correspondence,expected,describeMissingOrExtra(missing,extra)))###1336:9:1348:63
a517e05654cce5521f50c9927fe3a9a0d146d44a###/google_truth/core/src/test/java/com/google/common/truth/CustomFailureMessageTest.java###/CustomFailureMessageTest.java###com.google.common.truth.CustomFailureMessageTest###assertWithMessageIsPrepended_withPlaceholders:###assertWithMessage("Invalid%s","month").that(13).isIn(Range.closed(1,12));###range###Range.closed(1,12)###134:7:134:83
3e8385f6621c4de62c29a7a0554f6a5ffc7cf82f###/google_truth/core/src/main/java/com/google/common/truth/ThrowableSubject.java###/ThrowableSubject.java###com.google.common.truth.ThrowableSubject###hasMessage:String ###if(!Objects.equal(message,getSubject().getMessage()))###actual###getSubject().getMessage()###37:5:39:6
d9404c08389156ea0336f68736af5f46cd60c9d6###/google_truth/core/src/main/java/com/google/common/truth/MapSubject.java###/MapSubject.java###com.google.common.truth.MapSubject###doesNotContainEntry:Object Object ###if(getSubject().entrySet().contains(Maps.immutableEntry(key,value)))###entry###Maps.immutableEntry(key,value)###85:5:87:6
4a5103508fc6961e1d6e3415e88ffd96379acd79###/google_truth/core/src/main/java/com/google/common/truth/ThrowableSubject.java###/ThrowableSubject.java###com.google.common.truth.ThrowableSubject###hasMessageThat:###returncheck("getMessage()").that(actual().getMessage());###check###check("getMessage()")###50:5:50:62
ad84f50c480efaf2e389caa465d501cc78e3d2db###/google_truth/core/src/main/java/com/google/common/truth/IterableSubject.java###/IterableSubject.java###com.google.common.truth.IterableSubject.UsingCorrespondence###failIfCandidateMappingHasMissing:List<? extends A> List<? extends E> ImmutableSetMultimap<Integer,Integer> ###subject.failWithoutActual(simpleFact(lenientFormat("Nottruethat%scontainsatleastoneelementthat%seachelementof<%s>."+"It%s",subject.actualAsString(),correspondence,expected,describeMissing(missing,extra))));###fact###simpleFact(lenientFormat("Nottruethat%scontainsatleastoneelementthat%seachelementof<%s>."+"It%s",subject.actualAsString(),correspondence,expected,describeMissing(missing,extra)))###1483:9:1491:56
ad84f50c480efaf2e389caa465d501cc78e3d2db###/google_truth/core/src/main/java/com/google/common/truth/IterableSubject.java###/IterableSubject.java###com.google.common.truth.IterableSubject.UsingCorrespondence###failIfCandidateMappingHasMissingOrExtra:List<? extends A> List<? extends E> ImmutableSetMultimap<Integer,Integer> ###subject.failWithoutActual(simpleFact(lenientFormat("Nottruethat%scontainsexactlyoneelementthat%seachelementof<%s>."+"It%s",subject.actualAsString(),correspondence,expected,describeMissingOrExtra(missing,extra))));###fact###simpleFact(lenientFormat("Nottruethat%scontainsexactlyoneelementthat%seachelementof<%s>."+"It%s",subject.actualAsString(),correspondence,expected,describeMissingOrExtra(missing,extra)))###1179:9:1187:63
a517e05654cce5521f50c9927fe3a9a0d146d44a###/google_truth/core/src/test/java/com/google/common/truth/CustomFailureMessageTest.java###/CustomFailureMessageTest.java###com.google.common.truth.CustomFailureMessageTest###assertWithMessageIsPrependedWithNamed:###assertWithMessage("Invalidmonth").that(13).named("Septober").isIn(Range.closed(1,12));###range###Range.closed(1,12)###57:7:57:95
a517e05654cce5521f50c9927fe3a9a0d146d44a###/google_truth/core/src/test/java/com/google/common/truth/CustomFailureMessageTest.java###/CustomFailureMessageTest.java###com.google.common.truth.CustomFailureMessageTest###customMessageIsPrependedWithNamed_withPlaceholders:###assert_().withFailureMessage("Inval%sdmon%s",'i',"th").that(13).named("Septober").isIn(Range.closed(1,12));###range###Range.closed(1,12)###177:7:181:38
485a3f7e0ebe6ba750d46d941d76e90e243c77e1###/google_truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeImpl.java###/FieldScopeImpl.java###com.google.common.truth.extensions.proto.FieldScopeImpl.toIgnoreCriteria.new IgnoreCriteria###isIgnored:Message Message FieldDescriptor List<SpecificField> ###return!includesField(Context.create(descriptor,fieldPath,fieldDescriptor,subMessages),cache);###context###Context.create(descriptor,fieldPath,fieldDescriptor,subMessages)###73:9:74:89
a517e05654cce5521f50c9927fe3a9a0d146d44a###/google_truth/core/src/test/java/com/google/common/truth/CustomFailureMessageTest.java###/CustomFailureMessageTest.java###com.google.common.truth.CustomFailureMessageTest###assertWithMessageIsPrepended:###assertWithMessage("Invalidmonth").that(13).isIn(Range.closed(1,12));###range###Range.closed(1,12)###47:7:47:77
a517e05654cce5521f50c9927fe3a9a0d146d44a###/google_truth/core/src/test/java/com/google/common/truth/CustomFailureMessageTest.java###/CustomFailureMessageTest.java###com.google.common.truth.CustomFailureMessageTest###customMessageIsPrependedWithNamed:###assert_().withFailureMessage("Invalidmonth").that(13).named("Septober").isIn(Range.closed(1,12));###range###Range.closed(1,12)###90:7:94:38
4c4dc238b4e805fd2f8c793684afc8f15038c80c###/google_truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeImpl.java###/FieldScopeImpl.java###com.google.common.truth.extensions.proto.FieldScopeImpl###createFromSetFields:Iterable<? extends Message> ###returncreate(FieldScopeLogic.partialScope(builder.build()),Functions.constant(String.format("FieldScopes.fromSetFields(%s)",formatList(messages))));###aggregateMessage###builder.build()###95:5:97:99
e119258272b8febfae493454ceb47bae4d69ec72###/google_truth/core/src/main/java/com/google/common/truth/IterableSubject.java###/IterableSubject.java###com.google.common.truth.IterableSubject###pickGrouping:Iterable<Entry<?>> Iterable<Entry<?>> ###if(hasMultiple(first)&&containsEmptyOrLong(first))###firstHasMultiple###hasMultiple(first)###668:5:670:6
a517e05654cce5521f50c9927fe3a9a0d146d44a###/google_truth/core/src/test/java/com/google/common/truth/CustomFailureMessageTest.java###/CustomFailureMessageTest.java###com.google.common.truth.CustomFailureMessageTest###customMessageIsPrepended:###assert_().withFailureMessage("Invalidmonth").that(13).isIn(Range.closed(1,12));###range###Range.closed(1,12)###80:7:80:88
9e81c652da55279ac03c6e7b25f72b7399904f23###/google_truth/core/src/main/java/com/google/common/truth/Platform.java###/Platform.java###com.google.common.truth.Platform###makeDiff:String String ###returnImmutableList.of(field("diff",hideLines(expectedLines,actualLines,prefix,suffix)));###originalActualLines###actualLines###124:5:124:99
9e81c652da55279ac03c6e7b25f72b7399904f23###/google_truth/core/src/main/java/com/google/common/truth/Platform.java###/Platform.java###com.google.common.truth.Platform###makeDiff:String String ###returnImmutableList.of(field("diff",hideLines(expectedLines,actualLines,prefix,suffix)));###originalExpectedLines###expectedLines###124:5:124:99
5790e7543386b3b2d2a84ecdbabe5a4d51f76cef###/google_truth/core/src/test/java/com/google/common/truth/ThrowableSubjectTest.java###/ThrowableSubjectTest.java###com.google.common.truth.ThrowableSubjectTest###hasMessageThat_NullMessageHasMessage_failure:###assertThat(newNullPointerException(null)).hasMessageThat().isEqualTo("message");###npe###newNullPointerException(null)###98:7:98:88
9714107a8d82160f79bc8d2bd7916d26e1bc50aa###/google_truth/extensions/proto/src/main/java/com/google/common/truth/extensions/proto/FieldScopeLogic.java###/FieldScopeLogic.java###com.google.common.truth.extensions.proto.FieldScopeLogic.FieldNumbersLogic###validate:Descriptor ###checkArgument(rootDescriptor.findFieldByNumber(fieldNumber)!=null,"Messagetype%shasnofieldwithnumber%s.",rootDescriptor.getFullName(),fieldNumber);###fieldDescriptor###rootDescriptor.findFieldByNumber(fieldNumber)###344:9:348:26
a94bba51f2120bbde742a03c9fca39cd8c383012###/google_truth/core/src/main/java/com/google/common/truth/Expect.java###/Expect.java###com.google.common.truth.Expect.ExpectationGatherer###toString:###for(failure:getFailures())###failures###getFailures()###85:7:96:8
0d7457ab64d149b6b8984f7ad5d7995c32594ad3###/google_truth/core/src/main/java/com/google/common/truth/IterableSubject.java###/IterableSubject.java###com.google.common.truth.IterableSubject###isEqualTo:Object ###if(Objects.equal(actual,expected))###equal###Objects.equal(actual,expected)###120:5:122:6
bd86b71b3ea9444b02f877e7fec6607e0019a3bf###/google_truth/core/src/main/java/com/google/common/truth/MultimapSubject.java###/MultimapSubject.java###com.google.common.truth.MultimapSubject###isEqualTo:Object ###if(Objects.equal(actual(),other))###isEqual###Objects.equal(actual(),other)###168:5:170:6
4df2dc8ddd8910e38234de62563851e8e8264cd7###/google_truth/core/src/main/java/com/google/common/truth/TruthFailureSubject.java###/TruthFailureSubject.java###com.google.common.truth.TruthFailureSubject###doFactValue:String Integer ###returncheck.that(factsWithName.get(firstNonNull(index,0)).value);###value###factsWithName.get(firstNonNull(index,0)).value###150:5:150:72
5790e7543386b3b2d2a84ecdbabe5a4d51f76cef###/google_truth/core/src/test/java/com/google/common/truth/ThrowableSubjectTest.java###/ThrowableSubjectTest.java###com.google.common.truth.ThrowableSubjectTest###hasMessageThat_Named_failure:###assertThat(newNullPointerException("message")).named("NPE").hasMessageThat().isEqualTo("foobar");###npe###newNullPointerException("message")###82:7:85:32
559fd8124098232d4c3e2de3dfc0a647e4b6f363###/google_truth/core/src/test/java/com/google/common/truth/PrimitiveFloatArraySubjectTest.java###/PrimitiveFloatArraySubjectTest.java###com.google.common.truth.PrimitiveFloatArraySubjectTest###usingExactEquality_contains_nullExpected:###assertThat(array(1.0f,2.0f,3.0f)).usingExactEquality().contains(null);###actual###array(1.0f,2.0f,3.0f)###1185:7:1185:79
559fd8124098232d4c3e2de3dfc0a647e4b6f363###/google_truth/core/src/test/java/com/google/common/truth/PrimitiveFloatArraySubjectTest.java###/PrimitiveFloatArraySubjectTest.java###com.google.common.truth.PrimitiveFloatArraySubjectTest###usingTolerance_contains_nullExpected:###assertThat(array(1.0f,2.0f,3.0f)).usingTolerance(DEFAULT_TOLERANCE).contains(null);###actual###array(1.0f,2.0f,3.0f)###899:7:899:92
b05db78071e3574b59ef9ff3003c61373f5c0616###/google_truth/core/src/test/java/com/google/common/truth/ThrowableTest.java###/ThrowableTest.java###com.google.common.truth.ThrowableTest###hasMessage_failure:###assertThat(newNullPointerException("message")).hasMessage("foobar");###subject###newNullPointerException("message")###45:7:45:76
a517e05654cce5521f50c9927fe3a9a0d146d44a###/google_truth/core/src/test/java/com/google/common/truth/CustomFailureMessageTest.java###/CustomFailureMessageTest.java###com.google.common.truth.CustomFailureMessageTest###customMessageIsPrepended_withPlaceholders:###assert_().withFailureMessage("In%slid%snth","va","mo").that(13).isIn(Range.closed(1,12));###range###Range.closed(1,12)###167:7:167:100
d9404c08389156ea0336f68736af5f46cd60c9d6###/google_truth/core/src/main/java/com/google/common/truth/MapSubject.java###/MapSubject.java###com.google.common.truth.MapSubject###containsEntry:Object Object ###if(!getSubject().entrySet().contains(Maps.immutableEntry(key,value)))###entry###Maps.immutableEntry(key,value)###76:5:78:6
