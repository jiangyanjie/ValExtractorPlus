5b5b8c64047a8d4d9c2c6064eee29881610e8675###/trinodb_trino/plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/aggregation/ImplementCovarianceSamp.java###/ImplementCovarianceSamp.java###io.trino.plugin.jdbc.aggregation.ImplementCovarianceSamp###rewrite:AggregateFunction Captures RewriteContext ###JdbcColumnHandlecolumnHandle1=(JdbcColumnHandle)context.getAssignment(arguments.get(0).getName());###argument1###arguments.get(0)###61:9:61:111
bb60e2d755d5cc80a3df64f0084e99dd8bfcccf8###/trinodb_trino/core/trino-spi/src/main/java/io/trino/spi/block/AbstractRowBlock.java###/AbstractRowBlock.java###io.trino.spi.block.AbstractRowBlock###copyRegion:int int ###if(arraySame(newBlocks,getRawFieldBlocks())&&newOffsets==getFieldBlockOffsets()&&newRowIsNull==rowIsNull)###fieldBlockOffsets###getFieldBlockOffsets()###191:9:193:10
5a43d04e050904900d4802049e99e67177b0d9c1###/trinodb_trino/core/trino-spi/src/main/java/io/trino/spi/block/AbstractArrayBlock.java###/AbstractArrayBlock.java###io.trino.spi.block.AbstractArrayBlock###getPositionsSizeInBytes:boolean[] ###checkValidPositions(positions,getPositionCount());###positionCount###getPositionCount()###121:9:121:60
e4d628e604dbc40c64082f485cec6511752b945c###/trinodb_trino/core/trino-main/src/main/java/io/trino/execution/buffer/SpoolingExchangeOutputBuffer.java###/SpoolingExchangeOutputBuffer.java###io.trino.execution.buffer.SpoolingExchangeOutputBuffer###abort:###exchangeSink.abort().whenComplete((value,failure)->{if(failure!=null){log.warn(failure,"Errorabortingexchangesink");}updateMemoryUsage(0);});###sink###exchangeSink###206:9:211:12
276b8bb24f7bede8fe1f028cc9acafc6785b9708###/trinodb_trino/lib/trino-collect/src/test/java/io/trino/collect/cache/TestEvictableCache.java###/TestEvictableCache.java###io.trino.collect.cache.TestEvictableCache###testDisabledCache:###Cache<Integer,Integer>cache=EvictableCacheBuilder.newBuilder().maximumSize(0).build();###builder###EvictableCacheBuilder.newBuilder().maximumSize(0)###138:9:140:26
fd212853a95c82e7ce8398b270842a97e83074ea###/trinodb_trino/core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/PushPredicateIntoTableScan.java###/PushPredicateIntoTableScan.java###io.trino.sql.planner.iterative.rule.PushPredicateIntoTableScan###pushFilterIntoTableScan:FilterNode TableScanNode boolean Session SymbolAllocator PlannerContext TypeAnalyzer StatsProvider DomainTranslator ###Optional<ConnectorExpression>connectorExpression=newConnectorExpressionTranslator.SqlToConnectorExpressionTranslator(session,remainingExpressionTypes,plannerContext).process(decomposedPredicate.getRemainingExpression());###translator###newConnectorExpressionTranslator.SqlToConnectorExpressionTranslator(session,remainingExpressionTypes,plannerContext)###181:9:182:72
271a713651dc42bd25b74f0fb2b1b804f41ce15d###/trinodb_trino/plugin/trino-mongodb/src/main/java/io/trino/plugin/mongodb/MongoMetadata.java###/MongoMetadata.java###io.trino.plugin.mongodb.MongoMetadata###getTableMetadata:ConnectorSession SchemaTableName ###MongoTableHandletableHandle=mongoSession.getTable(tableName).getTableHandle();###mongoTable###mongoSession.getTable(tableName)###335:9:335:90
e589d531ae531b995e06444dba4f6eb826b4b179###/trinodb_trino/plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/DefaultQueryBuilder.java###/DefaultQueryBuilder.java###io.trino.plugin.jdbc.DefaultQueryBuilder###prepareJoinQuery:JdbcClient ConnectorSession JoinType PreparedQuery PreparedQuery List<JdbcJoinCondition> Map<JdbcColumnHandle,String> Map<JdbcColumnHandle,String> ###Stringquery=format("SELECT%s,%sFROM(%s)l%s(%s)rON%s",formatAssignments(client,"l",leftAssignments),formatAssignments(client,"r",rightAssignments),leftSource.getQuery(),formatJoinType(joinType),rightSource.getQuery(),joinConditions.stream().map(condition->formatJoinCondition(client,condition)).collect(joining("AND")));###leftRelationAlias###"l"###115:9:124:53
2bfd417de5eec4a88fc1f1a3e4fcfe9a0e751685###/trinodb_trino/core/trino-main/src/main/java/io/trino/sql/planner/LocalExecutionPlanner.java###/LocalExecutionPlanner.java###io.trino.sql.planner.LocalExecutionPlanner.Visitor###preparePhysicalValuePointers:ExpressionAndValuePointers Map<IrLabel,Integer> PhysicalOperation ConnectorSession LocalExecutionPlanContext int int ###List<Type>signatureTypes=pointer.getFunction().getSignature().getArgumentTypes();###resolvedFunction###pointer.getFunction()###1516:21:1516:105
4bc5857e5ee7d551d6e4867cf110cc50534d84c1###/trinodb_trino/plugin/trino-elasticsearch/src/main/java/io/trino/plugin/elasticsearch/ElasticsearchMetadata.java###/ElasticsearchMetadata.java###io.trino.plugin.elasticsearch.ElasticsearchMetadata###applyFilter:ConnectorSession ConnectorTableHandle Constraint ###StringvariableName=((Variable)call.getArguments().get(0)).getName();###arguments###call.getArguments()###550:21:550:93
5b5b8c64047a8d4d9c2c6064eee29881610e8675###/trinodb_trino/plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/aggregation/ImplementRegrSlope.java###/ImplementRegrSlope.java###io.trino.plugin.jdbc.aggregation.ImplementRegrSlope###rewrite:AggregateFunction Captures RewriteContext ###JdbcColumnHandlecolumnHandle1=(JdbcColumnHandle)context.getAssignment(arguments.get(0).getName());###argument1###arguments.get(0)###61:9:61:111
48d3fe3c9ea14861ca44124dcd4fec92e1d9bf78###/trinodb_trino/core/trino-main/src/test/java/io/trino/cost/TestJoinStatsRule.java###/TestJoinStatsRule.java###io.trino.cost.TestJoinStatsRule###testStatsForInnerJoinWithTwoEquiClauses:###tester().assertStatsFor(pb->{SymbolleftJoinColumnSymbol=pb.symbol(LEFT_JOIN_COLUMN,BIGINT);SymbolrightJoinColumnSymbol=pb.symbol(RIGHT_JOIN_COLUMN,DOUBLE);SymbolleftJoinColumnSymbol2=pb.symbol(LEFT_JOIN_COLUMN_2,BIGINT);SymbolrightJoinColumnSymbol2=pb.symbol(RIGHT_JOIN_COLUMN_2,DOUBLE);returnpb.join(INNER,pb.values(leftJoinColumnSymbol,leftJoinColumnSymbol2),pb.values(rightJoinColumnSymbol,rightJoinColumnSymbol2),newEquiJoinClause(leftJoinColumnSymbol2,rightJoinColumnSymbol2),newEquiJoinClause(leftJoinColumnSymbol,rightJoinColumnSymbol));}).withSourceStats(0,planNodeStats(LEFT_ROWS_COUNT,LEFT_JOIN_COLUMN_STATS,LEFT_JOIN_COLUMN_2_STATS)).withSourceStats(1,planNodeStats(RIGHT_ROWS_COUNT,RIGHT_JOIN_COLUMN_STATS,RIGHT_JOIN_COLUMN_2_STATS)).check(stats->stats.equalTo(innerJoinStats));###planProvider###pb->{SymbolleftJoinColumnSymbol=pb.symbol(LEFT_JOIN_COLUMN,BIGINT);SymbolrightJoinColumnSymbol=pb.symbol(RIGHT_JOIN_COLUMN,DOUBLE);SymbolleftJoinColumnSymbol2=pb.symbol(LEFT_JOIN_COLUMN_2,BIGINT);SymbolrightJoinColumnSymbol2=pb.symbol(RIGHT_JOIN_COLUMN_2,DOUBLE);returnpb.join(INNER,pb.values(leftJoinColumnSymbol,leftJoinColumnSymbol2),pb.values(rightJoinColumnSymbol,rightJoinColumnSymbol2),newEquiJoinClause(leftJoinColumnSymbol2,rightJoinColumnSymbol2),newEquiJoinClause(leftJoinColumnSymbol,rightJoinColumnSymbol));}###153:9:166:64
5a43d04e050904900d4802049e99e67177b0d9c1###/trinodb_trino/core/trino-spi/src/main/java/io/trino/spi/block/DictionaryBlock.java###/DictionaryBlock.java###io.trino.spi.block.DictionaryBlock###getCompactedDictionaryPositionsSizeInBytes:boolean[] ###used[getId(i)]=true;###id###getId(i)###295:17:295:39
e589d531ae531b995e06444dba4f6eb826b4b179###/trinodb_trino/plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/DefaultQueryBuilder.java###/DefaultQueryBuilder.java###io.trino.plugin.jdbc.DefaultQueryBuilder###prepareJoinQuery:JdbcClient ConnectorSession JoinType PreparedQuery PreparedQuery List<JdbcJoinCondition> Map<JdbcColumnHandle,String> Map<JdbcColumnHandle,String> ###Stringquery=format("SELECT%s,%sFROM(%s)l%s(%s)rON%s",formatAssignments(client,"l",leftAssignments),formatAssignments(client,"r",rightAssignments),leftSource.getQuery(),formatJoinType(joinType),rightSource.getQuery(),joinConditions.stream().map(condition->formatJoinCondition(client,condition)).collect(joining("AND")));###rightRelationAlias###"r"###115:9:124:53
e4d628e604dbc40c64082f485cec6511752b945c###/trinodb_trino/core/trino-main/src/main/java/io/trino/execution/buffer/SpoolingExchangeOutputBuffer.java###/SpoolingExchangeOutputBuffer.java###io.trino.execution.buffer.SpoolingExchangeOutputBuffer###enqueue:int List<Slice> ###exchangeSink.add(partition,page);###sink###exchangeSink###163:13:163:47
5b5b8c64047a8d4d9c2c6064eee29881610e8675###/trinodb_trino/plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/aggregation/ImplementCovariancePop.java###/ImplementCovariancePop.java###io.trino.plugin.jdbc.aggregation.ImplementCovariancePop###rewrite:AggregateFunction Captures RewriteContext ###JdbcColumnHandlecolumnHandle1=(JdbcColumnHandle)context.getAssignment(arguments.get(0).getName());###argument1###arguments.get(0)###61:9:61:111
5edca2791f01e44d451f355e69ae10e4150825e7###/trinodb_trino/plugin/trino-iceberg/src/main/java/io/trino/plugin/iceberg/IcebergPageSink.java###/IcebergPageSink.java###io.trino.plugin.iceberg.IcebergPageSink###getWriterIndexes:Page ###if(writers.get(writerIndex)!=null)###writer###writers.get(writerIndex)###291:13:293:14
e4d628e604dbc40c64082f485cec6511752b945c###/trinodb_trino/core/trino-main/src/main/java/io/trino/execution/buffer/SpoolingExchangeOutputBuffer.java###/SpoolingExchangeOutputBuffer.java###io.trino.execution.buffer.SpoolingExchangeOutputBuffer###isFull:###returntoListenableFuture(exchangeSink.isBlocked());###sink###exchangeSink###142:9:142:61
a953b7bbce122eb677329ce798c1aeb4dd83be93###/trinodb_trino/testing/trino-testing/src/main/java/io/trino/testing/AbstractTestingTrinoClient.java###/AbstractTestingTrinoClient.java###io.trino.testing.AbstractTestingTrinoClient###toClientSession:Session URI Duration ###properties.put(catalogAndConnectorProperties.getKey()+"."+connectorProperties.getKey(),connectorProperties.getValue());###catalogName###catalogAndConnectorProperties.getKey()###139:17:139:141
5b5b8c64047a8d4d9c2c6064eee29881610e8675###/trinodb_trino/plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/aggregation/ImplementRegrIntercept.java###/ImplementRegrIntercept.java###io.trino.plugin.jdbc.aggregation.ImplementRegrIntercept###rewrite:AggregateFunction Captures RewriteContext ###JdbcColumnHandlecolumnHandle1=(JdbcColumnHandle)context.getAssignment(arguments.get(0).getName());###argument1###arguments.get(0)###61:9:61:111
cf92324e67ce3ce852db49a47686c1c971241812###/trinodb_trino/plugin/trino-iceberg/src/main/java/io/trino/plugin/iceberg/ManifestsTable.java###/ManifestsTable.java###io.trino.plugin.iceberg.ManifestsTable###writePartitionSummaries:BlockBuilder List<PartitionFieldSummary> PartitionSpec ###BOOLEAN.writeBoolean(rowBuilder,summary.containsNaN());###containsNan###summary.containsNaN()###140:13:140:69
148c6929781b4815d07aacbcca1304f67afcc21e###/trinodb_trino/plugin/trino-kudu/src/test/java/io/trino/plugin/kudu/TestingKuduServer.java###/TestingKuduServer.java###io.trino.plugin.kudu.TestingKuduServer###TestingKuduServer:###this.master=newGenericContainer<>("apache/kudu:1.10.0").withExposedPorts(KUDU_MASTER_PORT).withCommand("master").withNetwork(network).withNetworkAliases("kudu-master");###masterContainerAlias###"kudu-master"###40:9:44:52
82127390bedb534e5b41735a3019251afd0a5af6###/trinodb_trino/core/trino-main/src/main/java/io/trino/execution/buffer/PartitionedOutputBuffer.java###/PartitionedOutputBuffer.java###io.trino.execution.buffer.PartitionedOutputBuffer###checkFlushComplete:###if(stateMachine.getState()!=FLUSHING&&stateMachine.getState()!=NO_MORE_BUFFERS)###state###stateMachine.getState()###284:9:286:10
a89b6004990952700640101577f2292061d780fe###/trinodb_trino/core/trino-spi/src/main/java/io/trino/spi/block/DictionaryBlock.java###/DictionaryBlock.java###io.trino.spi.block.DictionaryBlock###getPositions:int[] int int ###newIds[i]=getId(positions[offset+i]);###id###getId(positions[offset+i])###551:13:551:54
e802d9aac3e5cddc765d7dc47f635007d44fb79c###/trinodb_trino/core/trino-main/src/main/java/io/trino/execution/scheduler/StageTaskSourceFactory.java###/StageTaskSourceFactory.java###io.trino.execution.scheduler.StageTaskSourceFactory.SourceDistributionTaskSource###getMoreTasks:###inti=0###splitCount###0###560:26:560:35
07dd2a293cd3f8f40d3660682150f7d76db0258a###/trinodb_trino/core/trino-main/src/test/java/io/trino/execution/scheduler/TestStageTaskSourceFactory.java###/TestStageTaskSourceFactory.java###io.trino.execution.scheduler.TestStageTaskSourceFactory###testArbitraryDistributionTaskSource:###sources=ImmutableListMultimap.of(FRAGMENT_ID_1,newTestingExchangeSourceHandle(0,1),FRAGMENT_ID_1,newTestingExchangeSourceHandle(0,2),FRAGMENT_ID_2,newTestingExchangeSourceHandle(0,4));###sourceHandle2###newTestingExchangeSourceHandle(0,2)###172:9:175:71
76bb02c759cdf95a7db1c65cd99fedb3e1d2b39d###/trinodb_trino/plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/expression/ExpressionPatternBuilder.java###/ExpressionPatternBuilder.java###io.trino.plugin.jdbc.expression.ExpressionPatternBuilder###visitType:ConnectorExpressionPatternParser.TypeContext ###returnnewSimpleTypePattern(visit(context.identifier(),String.class),context.typeParameter().stream().map(parameter->{Objectresult=visit(parameter,Object.class);if(resultinstanceofString){returnnewTypeParameterCapture((String)result);}if(resultinstanceofLong){returnnewLongTypeParameter((Long)result);}thrownewUnsupportedOperationException(format("Unsupportedparameter%s(%s)from%s",result,result.getClass(),parameter));}).collect(toImmutableList()));###parameters###context.typeParameter()###61:9:74:54
6e0a16032046b463bcc8c768fc191a612354cb66###/trinodb_trino/core/trino-main/src/main/java/io/trino/execution/scheduler/FullNodeCapableNodeAllocatorService.java###/FullNodeCapableNodeAllocatorService.java###io.trino.execution.scheduler.FullNodeCapableNodeAllocatorService###refreshNodePoolSizes:###nodePoolSizes.put(entry.getKey(),memoryInfo.get().getPool().getMaxBytes());###nodePoolSize###memoryInfo.get().getPool().getMaxBytes()###150:13:150:89
0ee0eb22683752c407765a6302a474b3caf6b9d1###/trinodb_trino/core/trino-main/src/main/java/io/trino/operator/HttpPageBufferClient.java###/HttpPageBufferClient.java###io.trino.operator.HttpPageBufferClient.sendGetResults.addCallback.new FutureCallback<>###onSuccess:PagesResponse ###pagesReceived.addAndGet(pages.size());###pageCount###pages.size()###417:25:417:63
f4a2844a8bfafdb0fc5f5bfc0e6e723300c466f4###/trinodb_trino/plugin/trino-hive/src/main/java/io/trino/plugin/hive/metastore/cache/SharedHiveMetastoreCache.java###/SharedHiveMetastoreCache.java###io.trino.plugin.hive.metastore.cache.SharedHiveMetastoreCache.ImpersonationCachingHiveMetastoreFactory###createUserCachingMetastore:String ###returncachingHiveMetastore(metastoreFactory.createMetastore(Optional.of(ConnectorIdentity.ofUser(user))),newReentrantBoundedExecutor(executorService,maxMetastoreRefreshThreads),metastoreCacheTtl,metastoreRefreshInterval,metastoreCacheMaximumSize);###identity###ConnectorIdentity.ofUser(user)###203:13:208:48
73c18ac37227337d7f8281ba6db08a38e017b6d4###/trinodb_trino/plugin/trino-phoenix5/src/main/java/io/trino/plugin/phoenix5/PhoenixClient.java###/PhoenixClient.java###io.trino.plugin.phoenix5.PhoenixClient###arrayWriteFunction:ConnectorSession Type String ###ArrayjdbcArray=statement.getConnection().createArrayOf(elementJdbcTypeName,getJdbcObjectArray(session,elementType,block));###jdbcObjectArray###getJdbcObjectArray(session,elementType,block)###772:13:772:141
0daa29c77a7bd1003b88936d7886fbdfade5ef53###/trinodb_trino/core/trino-main/src/test/java/io/trino/type/TestArrayOperators.java###/TestArrayOperators.java###io.trino.type.TestArrayOperators###testStackRepresentation:###BlockactualBlock=arrayBlockOf(newArrayType(BIGINT),arrayBlockOf(BIGINT,1L,2L),arrayBlockOf(BIGINT,3L));###arrayType###newArrayType(BIGINT)###106:9:106:121
a64662ac8e8e599ae1f78609688a56b48f1178eb###/trinodb_trino/core/trino-main/src/main/java/io/trino/cost/CostCalculatorUsingExchanges.java###/CostCalculatorUsingExchanges.java###io.trino.cost.CostCalculatorUsingExchanges.CostEstimator###calculateJoinCost:PlanNode PlanNode PlanNode boolean ###LocalCostEstimatejoinInputCost=calculateJoinInputCost(probe,build,stats,types,replicated,taskCountEstimator.estimateSourceDistributedTaskCount(session));###estimatedSourceDistributedTaskCount###taskCountEstimator.estimateSourceDistributedTaskCount(session)###195:13:201:85
0ee0eb22683752c407765a6302a474b3caf6b9d1###/trinodb_trino/core/trino-main/src/main/java/io/trino/operator/HttpPageBufferClient.java###/HttpPageBufferClient.java###io.trino.operator.HttpPageBufferClient.sendGetResults.addCallback.new FutureCallback<>###onSuccess:PagesResponse ###rowsReceived.addAndGet(pages.stream().mapToLong(PagesSerde::getSerializedPagePositionCount).sum());###rowCount###pages.stream().mapToLong(PagesSerde::getSerializedPagePositionCount).sum()###418:25:418:124
5b5b8c64047a8d4d9c2c6064eee29881610e8675###/trinodb_trino/plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/aggregation/ImplementCorr.java###/ImplementCorr.java###io.trino.plugin.jdbc.aggregation.ImplementCorr###rewrite:AggregateFunction Captures RewriteContext ###JdbcColumnHandlecolumnHandle1=(JdbcColumnHandle)context.getAssignment(arguments.get(0).getName());###argument1###arguments.get(0)###61:9:61:111
0247b5c2ae98c0227d7cb03ab72cdb5ec36d4647###/trinodb_trino/core/trino-main/src/main/java/io/trino/testing/LocalQueryRunner.java###/LocalQueryRunner.java###io.trino.testing.LocalQueryRunner###LocalQueryRunner:Session FeaturesConfig NodeSpillConfig boolean boolean int Map<String,List<PropertyMetadata<?>>> PlanOptimizersProvider OperatorFactories Set<SystemSessionPropertiesProvider> ###this.connectorManager=newConnectorManager(metadata,catalogManager,accessControl,splitManager,pageSourceManager,indexManager,nodePartitioningManager,pageSinkManager,newHandleResolver(),nodeManager,nodeInfo,testingVersionEmbedder(),pageSorter,pageIndexerFactory,transactionManager,eventListenerManager,typeManager,newProcedureRegistry(),tableProceduresRegistry,sessionPropertyManager,schemaPropertyManager,columnPropertyManager,tablePropertyManager,materializedViewPropertyManager,analyzePropertyManager,tableProceduresPropertyManager,nodeSchedulerConfig);###handleResolver###newHandleResolver()###390:9:417:38
73c18ac37227337d7f8281ba6db08a38e017b6d4###/trinodb_trino/plugin/trino-phoenix/src/main/java/io/trino/plugin/phoenix/PhoenixClient.java###/PhoenixClient.java###io.trino.plugin.phoenix.PhoenixClient###arrayWriteFunction:ConnectorSession Type String ###ArrayjdbcArray=statement.getConnection().createArrayOf(elementJdbcTypeName,getJdbcObjectArray(session,elementType,block));###jdbcObjectArray###getJdbcObjectArray(session,elementType,block)###780:13:780:141
07dd2a293cd3f8f40d3660682150f7d76db0258a###/trinodb_trino/core/trino-main/src/test/java/io/trino/execution/scheduler/TestStageTaskSourceFactory.java###/TestStageTaskSourceFactory.java###io.trino.execution.scheduler.TestStageTaskSourceFactory###testArbitraryDistributionTaskSource:###sources=ImmutableListMultimap.of(FRAGMENT_ID_1,newTestingExchangeSourceHandle(0,1),FRAGMENT_ID_1,newTestingExchangeSourceHandle(0,3),FRAGMENT_ID_2,newTestingExchangeSourceHandle(0,4));###sourceHandle3###newTestingExchangeSourceHandle(0,3)###200:9:203:71
82127390bedb534e5b41735a3019251afd0a5af6###/trinodb_trino/core/trino-main/src/main/java/io/trino/execution/buffer/BroadcastOutputBuffer.java###/BroadcastOutputBuffer.java###io.trino.execution.buffer.BroadcastOutputBuffer###checkFlushComplete:###if(stateMachine.getState()!=FLUSHING&&stateMachine.getState()!=NO_MORE_BUFFERS)###state###stateMachine.getState()###421:9:423:10
76bb02c759cdf95a7db1c65cd99fedb3e1d2b39d###/trinodb_trino/plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/expression/ExpressionPatternBuilder.java###/ExpressionPatternBuilder.java###io.trino.plugin.jdbc.expression.ExpressionPatternBuilder###visitType:ConnectorExpressionPatternParser.TypeContext ###returnnewSimpleTypePattern(visit(context.identifier(),String.class),context.typeParameter().stream().map(parameter->{Objectresult=visit(parameter,Object.class);if(resultinstanceofString){returnnewTypeParameterCapture((String)result);}if(resultinstanceofLong){returnnewLongTypeParameter((Long)result);}thrownewUnsupportedOperationException(format("Unsupportedparameter%s(%s)from%s",result,result.getClass(),parameter));}).collect(toImmutableList()));###baseName###visit(context.identifier(),String.class)###61:9:74:54
09521ea19d8f8565a4fb23daa5d383867dd0895c###/trinodb_trino/core/trino-main/src/main/java/io/trino/execution/scheduler/FaultTolerantStageScheduler.java###/FaultTolerantStageScheduler.java###io.trino.execution.scheduler.FaultTolerantStageScheduler###schedule:###nodeLease=nodeAllocator.acquire(taskDescriptor.getNodeRequirements());###nodeRequirements###taskDescriptor.getNodeRequirements()###257:17:257:89
e4d628e604dbc40c64082f485cec6511752b945c###/trinodb_trino/core/trino-main/src/main/java/io/trino/execution/buffer/SpoolingExchangeOutputBuffer.java###/SpoolingExchangeOutputBuffer.java###io.trino.execution.buffer.SpoolingExchangeOutputBuffer###setNoMorePages:###exchangeSink.finish().whenComplete((value,failure)->{if(failure!=null){stateMachine.fail(failure);}else{stateMachine.finish();}updateMemoryUsage(0);});###sink###exchangeSink###177:9:185:12
