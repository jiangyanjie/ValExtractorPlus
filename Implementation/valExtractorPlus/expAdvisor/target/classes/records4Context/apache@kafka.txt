b68463c250ec99d86ffacdbd45e58059d0ca51e1###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/StandbyTaskAssignmentUtilsTest.java###/StandbyTaskAssignmentUtilsTest.java###org.apache.kafka.streams.processor.internals.assignment.StandbyTaskAssignmentUtilsTest###shouldReturnNumberOfStandbyTasksThatWereNotAssigned:###finalMap<TaskId,Integer>tasksToRemainingStandbys=computeTasksToRemainingStandbys(3,ACTIVE_TASKS);###numStandbyReplicas###3###58:9:58:112
fbe7fb941173c0907792a8b48e8e9122aabecbd8###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/TopologyTest.java###/TopologyTest.java###org.apache.kafka.streams.TopologyTest###timeWindowNamedMaterializedCountShouldPreserveTopologyStructure:###finalTopologyDescriptiondescribe=builder.build().describe();###topology###builder.build()###1234:9:1234:73
fbe7fb941173c0907792a8b48e8e9122aabecbd8###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/TopologyTest.java###/TopologyTest.java###org.apache.kafka.streams.TopologyTest###tableAnonymousMaterializedCountShouldPreserveTopologyStructure:###finalTopologyDescriptiondescribe=builder.build().describe();###topology###builder.build()###1398:9:1398:73
daaa9dfb54b86ccb93cc2018b374476dcb0beed1###/apache_kafka/clients/src/test/java/org/apache/kafka/clients/admin/MockAdminClient.java###/MockAdminClient.java###org.apache.kafka.clients.admin.MockAdminClient###MockAdminClient:List<Node> Node String int int List<List<String>> boolean ###this.brokerConfigs.add(newHashMap<>());###config###newHashMap<>()###190:13:190:53
1317f3f77a9e1e432e7a81de2dcb88365feeac43###/apache_kafka/streams/src/main/java/org/apache/kafka/streams/TopologyConfig.java###/TopologyConfig.java###org.apache.kafka.streams.TopologyConfig###TopologyConfig:String StreamsConfig Properties ###if(isTopologyOverride(STATESTORE_CACHE_MAX_BYTES_CONFIG,topologyOverrides)&&isTopologyOverride(CACHE_MAX_BYTES_BUFFERING_CONFIG,topologyOverrides))###stateStoreCacheMaxBytesOverridden###isTopologyOverride(STATESTORE_CACHE_MAX_BYTES_CONFIG,topologyOverrides)###143:9:165:10
7d9b9847f184ec72c4c80c046edc408789dcc066###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RecordQueueTest.java###/RecordQueueTest.java###org.apache.kafka.streams.processor.internals.RecordQueueTest###shouldNotThrowStreamsExceptionWhenValueDeserializationFailsWithSkipHandler:###finalList<ConsumerRecord<byte[],byte[]>>records=Collections.singletonList(newConsumerRecord<>("topic",1,1,0L,TimestampType.CREATE_TIME,0,0,recordKey,value,newRecordHeaders(),Optional.empty()));###record###newConsumerRecord<>("topic",1,1,0L,TimestampType.CREATE_TIME,0,0,recordKey,value,newRecordHeaders(),Optional.empty())###306:9:308:57
62ea4c46a9be7388baeaef1c505d3e5798a9066f###/apache_kafka/core/src/test/java/kafka/test/MockController.java###/MockController.java###kafka.test.MockController###createTopics:CreateTopicsRequestData ###response.topics().add(newCreatableTopicResult().setName(topic.name()).setErrorCode(Errors.NONE.code()).setTopicId(topicUuid));###creatableTopicResult###newCreatableTopicResult().setName(topic.name()).setErrorCode(Errors.NONE.code()).setTopicId(topicUuid)###128:17:131:44
fbe7fb941173c0907792a8b48e8e9122aabecbd8###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/TopologyTest.java###/TopologyTest.java###org.apache.kafka.streams.TopologyTest###kGroupedStreamZeroArgCountShouldPreserveTopologyStructure:###finalTopologyDescriptiondescribe=builder.build().describe();###topology###builder.build()###1156:9:1156:73
b68463c250ec99d86ffacdbd45e58059d0ca51e1###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/ClientTagAwareStandbyTaskAssignorTest.java###/ClientTagAwareStandbyTaskAssignorTest.java###org.apache.kafka.streams.processor.internals.assignment.ClientTagAwareStandbyTaskAssignorTest###shouldUpdateClientToRemainingStandbysAndPendingStandbyTasksToClientIdWhenNotAllStandbyTasksWereAssigned:###finalMap<TaskId,Integer>tasksToRemainingStandbys=computeTasksToRemainingStandbys(3,allActiveTasks);###numStandbyReplicas###3###146:9:146:114
fbe7fb941173c0907792a8b48e8e9122aabecbd8###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/TopologyTest.java###/TopologyTest.java###org.apache.kafka.streams.TopologyTest###tableZeroArgCountShouldPreserveTopologyStructure:###finalTopologyDescriptiondescribe=builder.build().describe();###topology###builder.build()###1333:9:1333:73
a5bb45c11ad7a68856d14c86184bc3488770aa43###/apache_kafka/connect/transforms/src/main/java/org/apache/kafka/connect/transforms/TimestampConverter.java###/TimestampConverter.java###org.apache.kafka.connect.transforms.TimestampConverter.put.new TimestampTranslator###toRaw:Config Object ###returnTimestamp.toLogical(Timestamp.SCHEMA,(Long)orig);###unixTime###(Long)orig###142:17:142:75
029a14b530dcaab980faee4fa18c925b95db3122###/apache_kafka/connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/Plugins.java###/Plugins.java###org.apache.kafka.connect.runtime.isolation.Plugins###connectorClass:String ###thrownewConnectException("FailedtofindanyclassthatimplementsConnectorandwhichnamematches"+connectorClassOrAlias+",availableconnectorsare:"+pluginNames(delegatingLoader.connectors()));###connectors###delegatingLoader.connectors()###191:17:196:19
fbe7fb941173c0907792a8b48e8e9122aabecbd8###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/TopologyTest.java###/TopologyTest.java###org.apache.kafka.streams.TopologyTest###kGroupedStreamAnonymousMaterializedCountShouldPreserveTopologyStructure:###finalTopologyDescriptiondescribe=builder.build().describe();###topology###builder.build()###1194:9:1194:73
265d3199ec741928c1731397302f6c320cf6af40###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/integration/StoreQueryIntegrationTest.java###/StoreQueryIntegrationTest.java###org.apache.kafka.streams.integration.StoreQueryIntegrationTest###shouldQuerySpecificStalePartitionStoresMultiStreamThreadsNamedTopology:###finalNamedTopologyBuilderbuilder1A=kafkaStreams1.newNamedTopologyBuilder("topology-A",streamsConfiguration1);###topologyA###"topology-A"###412:9:412:123
dc209f102a716fa48dce6c4533a8da5950ad66bb###/apache_kafka/clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.java###/ConsumerCoordinator.java###org.apache.kafka.clients.consumer.internals.ConsumerCoordinator###performAssignment:String String List<JoinGroupResponseData.JoinGroupResponseMember> ###log.debug("Performingassignmentusingstrategy{}withsubscriptions{}",assignor.name(),subscriptions);###assignorName###assignor.name()###572:9:572:116
e6db0ca48c42c03655e3781b46ac09dae75cf33e###/apache_kafka/clients/src/main/java/org/apache/kafka/clients/CommonClientConfigs.java###/CommonClientConfigs.java###org.apache.kafka.clients.CommonClientConfigs###postProcessReconnectBackoffConfigs:AbstractConfig Map<String,Object> ###if((!config.originals().containsKey(RECONNECT_BACKOFF_MAX_MS_CONFIG))&&config.originals().containsKey(RECONNECT_BACKOFF_MS_CONFIG))###originalConfig###config.originals()###197:9:202:10
fbe7fb941173c0907792a8b48e8e9122aabecbd8###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/TopologyTest.java###/TopologyTest.java###org.apache.kafka.streams.TopologyTest###sessionWindowZeroArgCountShouldPreserveTopologyStructure:###finalTopologyDescriptiondescribe=builder.build().describe();###topology###builder.build()###1274:9:1274:73
b68463c250ec99d86ffacdbd45e58059d0ca51e1###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/ClientTagAwareStandbyTaskAssignorTest.java###/ClientTagAwareStandbyTaskAssignorTest.java###org.apache.kafka.streams.processor.internals.assignment.ClientTagAwareStandbyTaskAssignorTest###shouldRemoveClientToRemainingStandbysAndNotPopulatePendingStandbyTasksToClientIdWhenAllStandbyTasksWereAssigned:###finalMap<TaskId,Integer>tasksToRemainingStandbys=computeTasksToRemainingStandbys(2,allActiveTasks);###numStandbyReplicas###2###105:9:105:114
539f006e65d9060cd46a4052d1b70f2312d8ca34###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/integration/NamedTopologyIntegrationTest.java###/NamedTopologyIntegrationTest.java###org.apache.kafka.streams.integration.NamedTopologyIntegrationTest###shouldRemoveNamedTopologyToRunningApplicationWithMultipleNodesAndResetsOffsets:###streams2.addNamedTopology(topology2Builder2.build()).all().get();###topology2Client2###topology2Builder2.build()###521:9:521:74
19a62697803a91fc24c1a704881e531f848a759c###/apache_kafka/streams/src/main/java/org/apache/kafka/streams/processor/internals/RepartitionTopics.java###/RepartitionTopics.java###org.apache.kafka.streams.processor.internals.RepartitionTopics###computeRepartitionTopicConfig:Cluster ###missingInputTopicsBySubtopology.put(subtopologyEntry.getKey(),missingSourceTopicsForSubtopology);###subtopology###subtopologyEntry.getKey()###157:21:157:119
52621613fd386203773ba93903abd50b46fa093a###/apache_kafka/metadata/src/test/java/org/apache/kafka/controller/ReplicationControlManagerTest.java###/ReplicationControlManagerTest.java###org.apache.kafka.controller.ReplicationControlManagerTest###testInvalidAlterIsrRequests:###sendAlterIsr(replicationControl,0,brokerEpoch-1,"foo",invalidBrokerEpochRequest)###leaderId###0###732:61:733:86
52621613fd386203773ba93903abd50b46fa093a###/apache_kafka/metadata/src/test/java/org/apache/kafka/controller/ReplicationControlManagerTest.java###/ReplicationControlManagerTest.java###org.apache.kafka.controller.ReplicationControlManagerTest###testInvalidAlterIsrRequests:###ControllerResult<AlterIsrResponseData>invalidLeaderResult=sendAlterIsr(replicationControl,1,ctx.currentBrokerEpoch(1),"foo",invalidLeaderRequest);###notLeaderId###1###724:9:726:42
fbe7fb941173c0907792a8b48e8e9122aabecbd8###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/TopologyTest.java###/TopologyTest.java###org.apache.kafka.streams.TopologyTest###sessionWindowNamedMaterializedCountShouldPreserveTopologyStructure:###finalTopologyDescriptiondescribe=builder.build().describe();###topology###builder.build()###1294:9:1294:73
fbe7fb941173c0907792a8b48e8e9122aabecbd8###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/TopologyTest.java###/TopologyTest.java###org.apache.kafka.streams.TopologyTest###tableNamedMaterializedCountShouldPreserveTopologyStructure:###finalTopologyDescriptiondescribe=builder.build().describe();###topology###builder.build()###1366:9:1366:73
8093331d81c87dbc55dbe8eed0503800cd9e71d6###/apache_kafka/clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java###/ProducerConfig.java###org.apache.kafka.clients.producer.ProducerConfig###maybeOverrideAcksAndRetries:Map<String,Object> ###booleanuserConfiguredRetries=this.originals().containsKey(RETRIES_CONFIG);###originalConfigs###this.originals()###450:13:450:90
57477886593a60cd92cc50b5722788f9ac1c3d7a###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/integration/IQv2StoreIntegrationTest.java###/IQv2StoreIntegrationTest.java###org.apache.kafka.streams.integration.IQv2StoreIntegrationTest###verifyStore:###shouldHandleRangeQueries(Function.identity());###valueExtractor###Function.identity()###489:21:489:67
e6db0ca48c42c03655e3781b46ac09dae75cf33e###/apache_kafka/clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java###/ProducerConfig.java###org.apache.kafka.clients.producer.ProducerConfig###maybeOverrideAcksAndRetries:Map<String,Object> ###booleanuserConfiguredRetries=this.originals().containsKey(RETRIES_CONFIG);###originalConfigs###this.originals()###473:13:473:90
529dde904a892ba2f95e6150066758e7476f15e3###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RepartitionTopicsTest.java###/RepartitionTopicsTest.java###org.apache.kafka.streams.processor.internals.RepartitionTopicsTest###shouldThrowMissingSourceTopicException:###setupClusterWithMissingTopics(mkSet(SOURCE_TOPIC_NAME1));###missingSourceTopics###mkSet(SOURCE_TOPIC_NAME1)###155:9:155:66
fbe7fb941173c0907792a8b48e8e9122aabecbd8###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/TopologyTest.java###/TopologyTest.java###org.apache.kafka.streams.TopologyTest###timeWindowZeroArgCountShouldPreserveTopologyStructure:###finalTopologyDescriptiondescribe=builder.build().describe();###topology###builder.build()###1214:9:1214:73
6eed7743ff6c0e73d65c09bac2e2ad9586cc56ce###/apache_kafka/clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.java###/ConsumerCoordinator.java###org.apache.kafka.clients.consumer.internals.ConsumerCoordinator###performAssignment:String String List<JoinGroupResponseData.JoinGroupResponseMember> ###log.debug("Performingassignmentusingstrategy{}withsubscriptions{}",assignor.name(),subscriptions);###assignorName###assignor.name()###587:9:587:116
9d602a01beb0a9467c43b9ee0b80ff53fdd2dbb4###/apache_kafka/streams/src/main/java/org/apache/kafka/streams/processor/internals/RepartitionTopics.java###/RepartitionTopics.java###org.apache.kafka.streams.processor.internals.RepartitionTopics###computeRepartitionTopicConfig:Map<String,Collection<TopicsInfo>> Cluster ###missingSourceTopics.addAll(computeMissingExternalSourceTopics(topicsInfo,clusterMetadata));###missingSourceTopicsForSubtopology###computeMissingExternalSourceTopics(topicsInfo,clusterMetadata)###125:17:125:109
f708dc58ed7f7e9d7aed2d43cd36aadaf32c75ee###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/integration/NamedTopologyIntegrationTest.java###/NamedTopologyIntegrationTest.java###org.apache.kafka.streams.integration.NamedTopologyIntegrationTest###shouldWaitForMissingInputTopicsToBeCreated:###assertThat(waitUntilMinKeyValueRecordsReceived(consumerConfig,OUTPUT_STREAM_1,3),equalTo(COUNT_OUTPUT_DATA));###output###waitUntilMinKeyValueRecordsReceived(consumerConfig,OUTPUT_STREAM_1,3)###782:13:782:125
fbe7fb941173c0907792a8b48e8e9122aabecbd8###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/TopologyTest.java###/TopologyTest.java###org.apache.kafka.streams.TopologyTest###kGroupedStreamNamedMaterializedCountShouldPreserveTopologyStructure:###finalTopologyDescriptiondescribe=builder.build().describe();###topology###builder.build()###1175:9:1175:73
fbe7fb941173c0907792a8b48e8e9122aabecbd8###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/TopologyTest.java###/TopologyTest.java###org.apache.kafka.streams.TopologyTest###timeWindowAnonymousMaterializedCountShouldPreserveTopologyStructure:###finalTopologyDescriptiondescribe=builder.build().describe();###topology###builder.build()###1254:9:1254:73
539f006e65d9060cd46a4052d1b70f2312d8ca34###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/integration/NamedTopologyIntegrationTest.java###/NamedTopologyIntegrationTest.java###org.apache.kafka.streams.integration.NamedTopologyIntegrationTest###shouldRemoveNamedTopologyToRunningApplicationWithMultipleNodesAndResetsOffsets:###finalAddNamedTopologyResultresult1=streams.addNamedTopology(topology2Builder.build());###topology2Client1###topology2Builder.build()###520:9:520:99
b68463c250ec99d86ffacdbd45e58059d0ca51e1###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/StandbyTaskAssignmentUtilsTest.java###/StandbyTaskAssignmentUtilsTest.java###org.apache.kafka.streams.processor.internals.assignment.StandbyTaskAssignmentUtilsTest###shouldReturnZeroWhenAllStandbyTasksWereSuccessfullyAssigned:###finalMap<TaskId,Integer>tasksToRemainingStandbys=computeTasksToRemainingStandbys(1,ACTIVE_TASKS);###numStandbyReplicas###1###76:9:76:112
bda5c34b030207f542c7987a5e0f9bcb23406c18###/apache_kafka/metadata/src/test/java/org/apache/kafka/controller/ConfigurationControlManagerTest.java###/ConfigurationControlManagerTest.java###org.apache.kafka.controller.ConfigurationControlManagerTest###testIncrementalAlterConfigsWithPolicy:###SnapshotRegistrysnapshotRegistry=newSnapshotRegistry(newLogContext());###logContext###newLogContext()###193:9:193:84
b68463c250ec99d86ffacdbd45e58059d0ca51e1###/apache_kafka/streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/ClientTagAwareStandbyTaskAssignor.java###/ClientTagAwareStandbyTaskAssignor.java###org.apache.kafka.streams.processor.internals.assignment.ClientTagAwareStandbyTaskAssignor###assignStandbyTasksToClientsWithDifferentTags:ConstrainedPrioritySet TaskId UUID Set<String> Map<UUID,ClientState> Map<TaskId,Integer> Map<String,Set<String>> Map<TagEntry,Set<UUID>> Map<TaskId,UUID> ###clientStates.get(clientOnUnusedTagDimensions).assignStandby(activeTaskId);###clientStateOnUsedTagDimensions###clientStates.get(clientOnUnusedTagDimensions)###214:13:214:87
539f006e65d9060cd46a4052d1b70f2312d8ca34###/apache_kafka/streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java###/StreamThread.java###org.apache.kafka.streams.processor.internals.StreamThread###resetOffsets:Set<TopicPartition> Exception ###switch(topologyMetadata.offsetResetStrategy(partition.topic()))###offsetResetStrategy###topologyMetadata.offsetResetStrategy(partition.topic())###981:13:999:14
7d9b9847f184ec72c4c80c046edc408789dcc066###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RecordQueueTest.java###/RecordQueueTest.java###org.apache.kafka.streams.processor.internals.RecordQueueTest###shouldNotThrowStreamsExceptionWhenKeyDeserializationFailsWithSkipHandler:###finalList<ConsumerRecord<byte[],byte[]>>records=Collections.singletonList(newConsumerRecord<>("topic",1,1,0L,TimestampType.CREATE_TIME,0,0,key,recordValue,newRecordHeaders(),Optional.empty()));###record###newConsumerRecord<>("topic",1,1,0L,TimestampType.CREATE_TIME,0,0,key,recordValue,newRecordHeaders(),Optional.empty())###295:9:297:57
fbe7fb941173c0907792a8b48e8e9122aabecbd8###/apache_kafka/streams/src/test/java/org/apache/kafka/streams/TopologyTest.java###/TopologyTest.java###org.apache.kafka.streams.TopologyTest###sessionWindowAnonymousMaterializedCountShouldPreserveTopologyStructure:###finalTopologyDescriptiondescribe=builder.build().describe();###topology###builder.build()###1314:9:1314:73
