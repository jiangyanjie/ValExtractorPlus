2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWheDenyAllConfiguredAndUserLoggedInThenRespondsWithForbidden:###this.mvc.perform(get("/").with(user("user").roles("USER"))).andExpect(status().isForbidden());###requestWithUser###get("/").with(user("user").roles("USER"))###499:3:501:40
7a715f908601a5ee72b7d62dc5eba4b0bfc47f2b###/spring-projects_spring-security/oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/oidc/web/logout/OidcClientInitiatedLogoutSuccessHandler.java###/OidcClientInitiatedLogoutSuccessHandler.java###org.springframework.security.oauth2.client.oidc.web.logout.OidcClientInitiatedLogoutSuccessHandler###endSessionEndpoint:ClientRegistration ###ObjectendSessionEndpoint=clientRegistration.getProviderDetails().getConfigurationMetadata().get("end_session_endpoint");###providerDetails###clientRegistration.getProviderDetails()###84:4:85:35
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpInterceptUrlTests.java###/NamespaceHttpInterceptUrlTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpInterceptUrlTests###authenticatedRequestWhenAuthorizedThenBehaviorMatchesNamespace:###this.mvc.perform(get("/users").with(authentication(user("ROLE_ADMIN")))).andExpect(status().isOk()).andReturn();###requestWithAdmin###get("/users").with(authentication(user("ROLE_ADMIN")))###75:3:75:115
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RememberMeConfigurerTests.java###/RememberMeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RememberMeConfigurerTests###rememberMeWhenInvokedTwiceThenUsesOriginalUserDetailsService:###this.mvc.perform(get("/").with(httpBasic("user","password")).param("remember-me","true"));###request###get("/").with(httpBasic("user","password")).param("remember-me","true")###102:3:102:95
5bdd7571088ea7c34f90b1162cc5abcbca127ee1###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/server/header/FeaturePolicyServerHttpHeadersWriter.java###/FeaturePolicyServerHttpHeadersWriter.java###org.springframework.security.web.server.header.FeaturePolicyServerHttpHeadersWriter###createDelegate:String ###returnStaticServerHttpHeadersWriter.builder().header(FEATURE_POLICY,policyDirectives).build();###builder###StaticServerHttpHeadersWriter.builder()###53:3:55:14
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenCustomExpressionHandlerAndRoleDoesNotMatchThenRespondsWithForbidden:###this.mvc.perform(get("/admin").with(user("user").roles("USER"))).andExpect(status().isForbidden());###requestWithUser###get("/admin").with(user("user").roles("USER"))###361:3:361:102
e14af37775c173055284a74cbc1e3c52be5974c1###/spring-projects_spring-security/webflux/src/main/java/org/springframework/security/web/server/ui/LoginPageGeneratingWebFilter.java###/LoginPageGeneratingWebFilter.java###org.springframework.security.web.server.ui.LoginPageGeneratingWebFilter###render:ServerWebExchange ###booleanisError=exchange.getRequest().getQueryParams().containsKey("error");###queryParams###exchange.getRequest().getQueryParams()###53:3:53:81
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/MultiHttpBlockConfigTests.java###/MultiHttpBlockConfigTests.java###org.springframework.security.config.http.MultiHttpBlockConfigTests###requestWhenTargettingAuthenticationManagersToCorrespondingHttpElementsThenAuthenticationProceeds:###this.mvc.perform(post("/second/login").param("username","second").param("password","password").with(csrf())).andExpect(redirectedUrl("/"));###formLoginRequest###post("/second/login").param("username","second").param("password","password").with(csrf())###84:3:85:36
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceSessionManagementTests.java###/NamespaceSessionManagementTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceSessionManagementTests###authenticateWhenNewSessionFixationProtectionThenMatchesNamespace:###MockHttpSessionresultingSession=(MockHttpSession)this.mvc.perform(get("/auth").session(givenSession).with(httpBasic("user","password"))).andExpect(status().isNotFound()).andReturn().getRequest().getSession(false);###request###get("/auth").session(givenSession).with(httpBasic("user","password"))###361:3:366:51
1a0bec5bf144fc4e2c804a7f021bebed174ea1c9###/spring-projects_spring-security/core/src/main/java/org/acegisecurity/providers/dao/DaoAuthenticationProvider.java###/DaoAuthenticationProvider.java###net.sf.acegisecurity.providers.dao.DaoAuthenticationProvider###authenticate:Authentication ###Useruser=this.userCache.getUserFromCache(authentication.getPrincipal().toString());###username###authentication.getPrincipal().toString()###152:9:153:80
779597af2a6ed777707f08ae8106818e0b8e299e###/spring-projects_spring-security/oauth2/oauth2-client/src/test/java/org/springframework/security/oauth2/client/web/OAuth2AuthorizationRequestRedirectFilterTests.java###/OAuth2AuthorizationRequestRedirectFilterTests.java###org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilterTests###doFilterWhenAuthorizationRequestIncludesPort80ThenExpandedRedirectUriExcludesPort:###StringrequestUri=OAuth2AuthorizationRequestRedirectFilter.DEFAULT_AUTHORIZATION_REQUEST_BASE_URI+"/"+this.registration1.getRegistrationId();###clientRegistration###this.registration1###277:3:278:49
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/authentication/AuthenticationManagerBuilderTests.java###/AuthenticationManagerBuilderTests.java###org.springframework.security.config.annotation.authentication.AuthenticationManagerBuilderTests###authenticationManagerWhenMultipleProvidersThenWorks:###this.mockMvc.perform(formLogin().user("admin")).andExpect(authenticated().withUsername("admin").withRoles("USER","ADMIN"));###admin###authenticated().withUsername("admin").withRoles("USER","ADMIN")###125:3:126:82
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/SessionManagementConfigTests.java###/SessionManagementConfigTests.java###org.springframework.security.config.http.SessionManagementConfigTests###requestWhenCreateSessionIsSetToStatelessThenIgnoresExistingSession:###MvcResultresult=this.mvc.perform(post("/login").param("username","user").param("password","password").session(newMockHttpSession()).with(csrf())).andExpect(status().isFound()).andExpect(session()).andReturn();###loginRequest###post("/login").param("username","user").param("password","password").session(newMockHttpSession()).with(csrf())###152:3:155:69
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenHasAnyAuthorityRoleUserConfiguredAndAuthorityIsRoleAdminThenRespondsWithForbidden:###this.mvc.perform(get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_ADMIN")))).andExpect(status().isForbidden());###requestWithAdmin###get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_ADMIN")))###183:3:185:40
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/CsrfConfigurerTests.java###/CsrfConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.CsrfConfigurerTests###logoutWhenCsrfEnabledAndGetRequestThenDoesNotLogout:###this.mvc.perform(get("/logout").with(user("username"))).andExpect(authenticated());###logoutRequest###get("/logout").with(user("username"))###334:3:334:86
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceRememberMeTests.java###/NamespaceRememberMeTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceRememberMeTests###rememberMeLoginWhenUsingDefaultsThenMatchesNamespace:###this.mvc.perform(post("/authentication-class").with(csrf()).cookie(rememberMe)).andExpect(redirectedUrl("http://localhost/login")).andReturn();###authenticationClassRequest###post("/authentication-class").with(csrf()).cookie(rememberMe)###94:3:95:69
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenContentSecurityPolicyWithReportOnlyInLambdaThenContentSecurityPolicyReportOnlyHeaderInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.CONTENT_SECURITY_POLICY_REPORT_ONLY,"default-src'self';script-srctrustedscripts.example.com")).andReturn();###csp###header().string(HttpHeaders.CONTENT_SECURITY_POLICY_REPORT_ONLY,"default-src'self';script-srctrustedscripts.example.com")###313:3:316:18
bd925313afdc5a47bafe1df7e6873bcf3cfa7b0a###/spring-projects_spring-security/core/src/test/java/org/springframework/security/jackson2/UserDeserializerTests.java###/UserDeserializerTests.java###org.springframework.security.jackson2.UserDeserializerTests###deserializeUserWithNoClassIdInAuthoritiesTest:###buildObjectMapper().readValue(userJson,User.class);###mapper###buildObjectMapper()###94:3:94:55
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenCustomExpressionHandlerAndAuthenticationNameMatchesThenRespondsWithOk:###this.mvc.perform(get("/allow").with(user("user").roles("USER"))).andExpect(status().isOk());###requestWithUser###get("/allow").with(user("user").roles("USER"))###373:3:373:95
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/MultiHttpBlockConfigTests.java###/MultiHttpBlockConfigTests.java###org.springframework.security.config.http.MultiHttpBlockConfigTests###requestWhenTargettingAuthenticationManagersToCorrespondingHttpElementsThenAuthenticationProceeds:###this.mvc.perform(get("/first").with(httpBasic("first","password")).with(csrf())).andExpect(status().isOk());###basicLoginRequest###get("/first").with(httpBasic("first","password")).with(csrf())###93:3:96:33
1a0bec5bf144fc4e2c804a7f021bebed174ea1c9###/spring-projects_spring-security/samples/contacts/src/main/java/sample/contact/ContactSecurityVoter.java###/ContactSecurityVoter.java###sample.contact.ContactSecurityVoter###vote:Authentication Object ConfigAttributeDefinition ###if(passedOwner.equals(authentication.getPrincipal().toString()))###username###authentication.getPrincipal().toString()###100:21:103:22
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/acl/src/main/java/org/springframework/security/acls/domain/AclImpl.java###/AclImpl.java###org.springframework.security.acls.domain.AclImpl###equals:Object ###returntrue;###result###true###332:11:332:23
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/FormLoginConfigTests.java###/FormLoginConfigTests.java###org.springframework.security.config.http.FormLoginConfigTests###authenticateWhenConfiguredWithSpelThenRedirectsAccordingly:###this.mvc.perform(post("/login").param("username","user").param("password","wrong").with(csrf())).andExpect(redirectedUrl(WebConfigUtilsTests.URL+"/failure"));###invalidPassword###post("/login").param("username","user").param("password","wrong").with(csrf())###85:3:86:69
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceSessionManagementTests.java###/NamespaceSessionManagementTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceSessionManagementTests###authenticateWhenUsingFailureUrlThenMatchesNamespace:###this.mvc.perform(get("/auth").with((request)->mock).with(httpBasic("user","password"))).andExpect(redirectedUrl("/session-auth-error"));###request###get("/auth").with((request)->mock).with(httpBasic("user","password"))###130:3:131:54
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/LogoutConfigurerClearSiteDataTests.java###/LogoutConfigurerClearSiteDataTests.java###org.springframework.security.config.annotation.web.configurers.LogoutConfigurerClearSiteDataTests###logoutWhenRequestTypePostAndNotSecureThenHeaderNotPresent:###this.mvc.perform(post("/logout").with(csrf())).andExpect(header().doesNotExist(CLEAR_SITE_DATA_HEADER));###logoutRequest###post("/logout").with(csrf())###83:3:84:62
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurerTests.java###/RequestCacheConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurerTests###getWhenBookmarkedRequestIsXRequestedWithThenPostAuthenticationRedirectsToRoot:###MockHttpSessionsession=(MockHttpSession)this.mvc.perform(get("/messages").header("X-Requested-With","XMLHttpRequest")).andExpect(redirectedUrl("http://localhost/login")).andReturn().getRequest().getSession();###xRequestedWith###get("/messages").header("X-Requested-With","XMLHttpRequest")###118:3:120:95
7e63fe735745c77a051a71ff089a7edcf0e85725###/spring-projects_spring-security/core/src/main/java/org/springframework/security/ui/webapp/DefaultLoginPageGeneratingFilter.java###/DefaultLoginPageGeneratingFilter.java###org.springframework.security.ui.webapp.DefaultLoginPageGeneratingFilter###doFilterHttp:HttpServletRequest HttpServletResponse FilterChain ###response.getOutputStream().print(generateLoginPageHtml(request));###loginPageHtml###generateLoginPageHtml(request)###78:13:78:78
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configuration/HttpSecurityConfigurationTests.java###/HttpSecurityConfigurationTests.java###org.springframework.security.config.annotation.web.configuration.HttpSecurityConfigurationTests###authenticateWhenDefaultFilterChainBeanThenSessionIdChanges:###MvcResultresult=this.mockMvc.perform(post("/login").param("username","user").param("password","password").session(session).with(csrf())).andReturn();###loginRequest###post("/login").param("username","user").param("password","password").session(session).with(csrf())###124:3:126:18
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/reactive/EnableWebFluxSecurityTests.java###/EnableWebFluxSecurityTests.java###org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurityTests###defaultPopulatesReactorContext:###WebTestClientclient=WebTestClientBuilder.bindToWebFilters((exchange,chain)->contextRepository.save(exchange,context).switchIfEmpty(chain.filter(exchange)).flatMap((e)->chain.filter(exchange)),this.springSecurityFilterChain,(exchange,chain)->ReactiveSecurityContextHolder.getContext().map(SecurityContext::getAuthentication).flatMap((principal)->exchange.getResponse().writeWith(Mono.just(toDataBuffer(principal.getName()))))).build();###contextRepositoryWebFilter###(exchange,chain)->contextRepository.save(exchange,context).switchIfEmpty(chain.filter(exchange)).flatMap((e)->chain.filter(exchange))###120:3:129:14
2a9a8a41dbec882df6b73e4cf43769bbdafbac37###/spring-projects_spring-security/core/src/test/java/org/springframework/security/ui/switchuser/SwitchUserProcessingFilterTests.java###/SwitchUserProcessingFilterTests.java###org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests###exitUserWithNoCurrentUserFails:###filter.doFilter(request,newMockHttpServletResponse(),newMockFilterChain(false));###response###newMockHttpServletResponse()###252:9:252:93
d4c105d8ba89aeff2a270a90109be08d83c738d7###/spring-projects_spring-security/core/src/main/java/org/springframework/security/config/HttpSecurityBeanDefinitionParser.java###/HttpSecurityBeanDefinitionParser.java###org.springframework.security.config.HttpSecurityBeanDefinitionParser###parseInterceptUrlsForFilterInvocationRequestMap:List boolean ParserContext ###filterInvocationDefinitionMap.put(newRequestKey(path,method),editor.getValue());###key###newRequestKey(path,method)###608:17:608:100
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/OAuth2ResourceServerBeanDefinitionParserTests.java###/OAuth2ResourceServerBeanDefinitionParserTests.java###org.springframework.security.config.http.OAuth2ResourceServerBeanDefinitionParserTests###requestWhenBearerTokenResolverAllowsRequestBodyAndRequestContainsTwoTokensThenInvalidRequest:###this.mvc.perform(post("/authenticated").param("access_token","token").header("Authorization","Bearertoken").with(csrf())).andExpect(status().isBadRequest()).andExpect(header().string(HttpHeaders.WWW_AUTHENTICATE,containsString("invalid_request")));###request###post("/authenticated").param("access_token","token").header("Authorization","Bearertoken").with(csrf())###553:3:558:98
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/http/HttpSecurityBeanDefinitionParser.java###/HttpSecurityBeanDefinitionParser.java###org.springframework.security.config.http.HttpSecurityBeanDefinitionParser###createFilterChain:Element ParserContext ###pc.getReaderContext().error("The'"+ATT_SECURED+"'attributemustbeusedincombinationwith"+"the'"+ATT_PATH_PATTERN+"'or'"+ATT_REQUEST_MATCHER_REF+"'attributes.",pc.extractSource(element));###message###"The'"+ATT_SECURED+"'attributemustbeusedincombinationwith"+"the'"+ATT_PATH_PATTERN+"'or'"+ATT_REQUEST_MATCHER_REF+"'attributes."###127:5:132:34
56eb658eae6c496f7d2cb9a343109d9f04648a67###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/annotation/method/configuration/GlobalMethodSecurityConfiguration.java###/GlobalMethodSecurityConfiguration.java###org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration###accessDecisionManager:###decisionVoters.add(newRoleVoter());###roleVoter###newRoleVoter()###258:3:258:39
549de2927e00e43831861c29a92b1a9be18631d8###/spring-projects_spring-security/core/src/main/java/org/springframework/security/config/LdapServerBeanDefinitionParser.java###/LdapServerBeanDefinitionParser.java###org.springframework.security.config.LdapServerBeanDefinitionParser###createEmbeddedServer:Element ParserContext ###apacheContainer.setSource(parserContext.extractSource(element));###source###parserContext.extractSource(element)###148:9:148:73
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenContentSecurityPolicyConfiguredThenContentSecurityPolicyHeaderInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.CONTENT_SECURITY_POLICY,"default-src'self'")).andReturn();###csp###header().string(HttpHeaders.CONTENT_SECURITY_POLICY,"default-src'self'")###644:3:646:18
8acd2054860f5dacf016184bdc6eda9778f0f818###/spring-projects_spring-security/web/src/test/java/org/springframework/security/web/headers/StaticHeaderFactoryTest.java###/StaticHeaderFactoryTest.java###org.springframework.security.web.headers.StaticHeaderFactoryTest###sameHeaderShouldBeReturned:###StaticHeaderFactoryfactory=newStaticHeaderFactory("X-header","foo");###headerValue###"foo"###19:9:19:82
82c15b18748d7bf9f4bd2cf7951757b88b4d75e0###/spring-projects_spring-security/core/src/main/java/org/acegisecurity/providers/jaas/JaasAuthenticationProvider.java###/JaasAuthenticationProvider.java###net.sf.acegisecurity.providers.jaas.JaasAuthenticationProvider###afterPropertiesSet:###Security.setProperty("login.config.url."+n,loginConfig.getURL().toString());###prefix###"login.config.url."###282:9:283:46
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurerTests.java###/SessionManagementConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurerTests###loginWhenUserLoggedInAndMaxSessionsOneInLambdaThenLoginPrevented:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password")).andExpect(status().isFound()).andExpect(redirectedUrl("/login?error"));###secondRequest###post("/login").with(csrf()).param("username","user").param("password","password")###159:3:160:77
1f03608b739ba61b7d334a1a37d8a5bc5add4ef2###/spring-projects_spring-security/saml2/saml2-service-provider/src/main/java/org/springframework/security/saml2/provider/service/authentication/OpenSamlAuthenticationProvider.java###/OpenSamlAuthenticationProvider.java###org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider###process:Saml2AuthenticationToken Response ###throwauthException(Saml2ErrorCodes.INVALID_SIGNATURE,"Eithertheresponseoroneoftheassertionsisunsigned."+"Pleaseeithersigntheresponseoralloftheassertions.");###description###"Eithertheresponseoroneoftheassertionsisunsigned."+"Pleaseeithersigntheresponseoralloftheassertions."###332:4:334:71
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenHpkpWithReportUriAsStringThenPublicKeyPinsReportOnlyHeaderWithReportUriInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\";report-uri=\"https://example.net/pkp-report\"")).andReturn();###pinsReportOnly###header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\";report-uri=\"https://example.net/pkp-report\"")###271:3:274:18
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/authentication/NamespaceJdbcUserServiceTests.java###/NamespaceJdbcUserServiceTests.java###org.springframework.security.config.annotation.authentication.NamespaceJdbcUserServiceTests###jdbcUserServiceCustom:###this.mockMvc.perform(formLogin()).andExpect(authenticated().withUsername("user").withRoles("DBA","USER"));###dba###authenticated().withUsername("user").withRoles("DBA","USER")###87:3:88:78
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenHpkpWithReportUriAsStringThenPublicKeyPinsReportOnlyHeaderWithReportUriInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\";report-uri=\"https://example.net/pkp-report\"")).andReturn();###pinsReportOnly###header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\";report-uri=\"https://example.net/pkp-report\"")###585:3:588:18
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenRoleUserOrAdminConfiguredAndRoleIsOtherThenRespondsWithForbidden:###this.mvc.perform(get("/").with(user("user").roles("OTHER"))).andExpect(status().isForbidden());###requestWithRoleOther###get("/").with(user("user").roles("OTHER"))###210:3:210:98
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenHpkpIncludeSubdomainThenPublicKeyPinsReportOnlyHeaderWithIncludeSubDomainsInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\";includeSubDomains")).andReturn();###pinsReportOnly###header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\";includeSubDomains")###530:3:533:18
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenRoleUserOrAdminConfiguredAndRoleIsUserThenRespondsWithOk:###this.mvc.perform(get("/").with(user("user").roles("USER"))).andExpect(status().isOk());###requestWithUser###get("/").with(user("user").roles("USER"))###341:3:343:33
366146ff8077dc83441e5a0b4e1f42ba3c02f08e###/spring-projects_spring-security/oauth2/oauth2-jose/src/main/java/org/springframework/security/oauth2/jwt/ReactiveJwtDecoders.java###/ReactiveJwtDecoders.java###org.springframework.security.oauth2.jwt.ReactiveJwtDecoders###withProviderConfiguration:Map<String,Object> String ###NimbusReactiveJwtDecoderjwtDecoder=NimbusReactiveJwtDecoder.withJwkSetUri(configuration.get("jwks_uri").toString()).build();###jwkSetUri###configuration.get("jwks_uri").toString()###109:3:110:70
82d105cbc337870f39b13a9e8be18432e3b1343e###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/context/HttpSessionSecurityContextRepository.java###/HttpSessionSecurityContextRepository.java###org.springframework.security.web.context.HttpSessionSecurityContextRepository.SaveToSessionResponseWrapper###saveContext:SecurityContext ###if(authenticationTrustResolver.isAnonymous(context.getAuthentication()))###authentication###context.getAuthentication()###332:13:337:14
625efa47820b72e0b6e64eb39ae342f9dc1e89d1###/spring-projects_spring-security/domain/src/main/java/org/acegisecurity/domain/hibernate/IntrospectionManagerHibernate.java###/IntrospectionManagerHibernate.java###net.sf.acegisecurity.domain.hibernate.IntrospectionManagerHibernate###obtainImmediateChildren:Object List ###allObjects.add(classMetadata.getPropertyValue(parentObject,propertyNames[i],EntityMode.POJO));###childObject###classMetadata.getPropertyValue(parentObject,propertyNames[i],EntityMode.POJO)###125:25:126:83
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenHasAnyAuthorityRoleUserConfiguredAndAuthorityIsRoleUserThenRespondsWithOk:###this.mvc.perform(get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_USER")))).andExpect(status().isOk());###requestWithUser###get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_USER")))###116:3:117:33
d0d0a8d958f5e2b250c84319cf902556f4430a68###/spring-projects_spring-security/saml2/saml2-service-provider/src/main/java/org/springframework/security/saml2/provider/service/authentication/OpenSamlAuthenticationRequestFactory.java###/OpenSamlAuthenticationRequestFactory.java###org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationRequestFactory###createRedirectAuthenticationRequest:Saml2AuthenticationRequestContext ###if(context.getRelyingPartyRegistration().getAssertingPartyDetails().getWantAuthnRequestsSigned())###registration###context.getRelyingPartyRegistration()###149:3:157:4
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenPermissionCheckAndAuthenticationNameDoesNotMatchThenRespondsWithForbidden:###this.mvc.perform(get("/deny").with(user("user").roles("USER"))).andExpect(status().isForbidden());###requestWithUser###get("/deny").with(user("user").roles("USER"))###744:3:746:40
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenHasAnyRoleUserConfiguredAndRoleIsUserThenRespondsWithOk:###this.mvc.perform(get("/").with(user("user").roles("USER"))).andExpect(status().isOk());###requestWithUser###get("/").with(user("user").roles("USER"))###311:3:313:33
0a2fa03160fd75edca9543852b1b4f1e893e0b78###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/authentication/logout/CookieClearingLogoutHandler.java###/CookieClearingLogoutHandler.java###org.springframework.security.web.authentication.logout.CookieClearingLogoutHandler###logout:HttpServletRequest HttpServletResponse Authentication ###cookie.setPath(request.getContextPath());###cookiePath###request.getContextPath()###29:13:29:54
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpInterceptUrlTests.java###/NamespaceHttpInterceptUrlTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpInterceptUrlTests###requestWhenMappedByPostInterceptUrlThenBehaviorMatchesNamespace:###this.mvc.perform(post("/admin/post").with(csrf()).with(authentication(user("ROLE_ADMIN")))).andExpect(status().isOk());###requestWithAdmin###post("/admin/post").with(csrf()).with(authentication(user("ROLE_ADMIN")))###83:3:84:33
93d6a38ffd0c751ce7300e88a9f7a11a5d2fb4ae###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/header/writers/HpkpHeaderWriter.java###/HpkpHeaderWriter.java###org.springframework.security.web.header.writers.HpkpHeaderWriter###writeHeaders:HttpServletRequest HttpServletResponse ###response.setHeader(reportOnly?HPKP_RO_HEADER_NAME:HPKP_HEADER_NAME,hpkpHeaderValue);###headerName###reportOnly?HPKP_RO_HEADER_NAME:HPKP_HEADER_NAME###177:5:177:94
6488295cadac85db75d8e3dc06f1d9cc5166e098###/spring-projects_spring-security/saml2/saml2-service-provider/src/test/java/org/springframework/security/saml2/provider/service/web/Saml2MetadataFilterTests.java###/Saml2MetadataFilterTests.java###org.springframework.security.saml2.provider.service.web.Saml2MetadataFilterTests###setup:###this.filter=newSaml2MetadataFilter(newDefaultRelyingPartyRegistrationResolver(this.repository),this.resolver);###relyingPartyRegistrationResolver###newDefaultRelyingPartyRegistrationResolver(this.repository)###66:3:67:20
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RememberMeConfigurerTests.java###/RememberMeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RememberMeConfigurerTests###loginWhenRememberMeTrueAndCookieDomainThenRememberMeCookieHasDomain:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")).andExpect(cookie().exists("remember-me")).andExpect(cookie().domain("remember-me","spring.io"));###request###post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")###159:3:161:61
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/CsrfConfigTests.java###/CsrfConfigTests.java###org.springframework.security.config.http.CsrfConfigTests###getWhenHasCsrfTokenButSessionExpiresThenRequestIsRememeberedAfterSuccessfulAuthentication:###this.mvc.perform(post("/login").param("username","user").param("password","password").session(session).with(csrf())).andExpect(redirectedUrl("http://localhost/authenticated"));###login###post("/login").param("username","user").param("password","password").session(session).with(csrf())###251:3:253:65
1bca645add331752564dd573f5466896f6bfd355###/spring-projects_spring-security/test/src/main/java/org/springframework/security/test/web/servlet/request/SecurityMockMvcRequestPostProcessors.java###/SecurityMockMvcRequestPostProcessors.java###org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.TestSecurityContextHolderPostProcessor###postProcessRequest:MockHttpServletRequest ###save(TestSecurityContextHolder.getContext(),request);###context###TestSecurityContextHolder.getContext()###511:4:511:58
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceRememberMeTests.java###/NamespaceRememberMeTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceRememberMeTests###rememberMeLoginWhenUsingDefaultsThenMatchesNamespace:###result=this.mvc.perform(post("/logout").with(csrf()).session(session).cookie(rememberMe)).andExpect(redirectedUrl("/login?logout")).andReturn();###logoutRequest###post("/logout").with(csrf()).session(session).cookie(rememberMe)###94:3:98:18
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurerTests.java###/SessionManagementConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurerTests###loginWhenUserLoggedInAndMaxSessionsIsOneThenLoginPrevented:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password")).andExpect(status().isFound()).andExpect(redirectedUrl("/login?error"));###secondRequest###post("/login").with(csrf()).param("username","user").param("password","password")###139:3:140:77
aa84c79e873cf86b8684fbfa8f2bcb533db225e1###/spring-projects_spring-security/oauth2/oauth2-jose/src/main/java/org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder.java###/NimbusReactiveJwtDecoder.java###org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder.JwkSetUriReactiveJwtDecoderBuilder###createSelector:Set<JWSAlgorithm> Header ###returnnewJWKSelector(JWKMatcher.forJWSHeader((JWSHeader)header));###jwsHeader###(JWSHeader)header###357:4:357:72
f518da9d8bb74c27ffcd72edb063d59df14ef410###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/access/intercept/DefaultFilterInvocationSecurityMetadataSource.java###/DefaultFilterInvocationSecurityMetadataSource.java###org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource###lookupAttributes:String String ###if(logger.isDebugEnabled())###debug###logger.isDebugEnabled()###195:17:197:18
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###postWhenAccessRoleUserOrGetRequestConfiguredThenRespondsWithUnauthorized:###this.mvc.perform(post("/").with(csrf())).andExpect(status().isUnauthorized());###requestWithCsrf###post("/").with(csrf())###605:3:607:43
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/MultiHttpBlockConfigTests.java###/MultiHttpBlockConfigTests.java###org.springframework.security.config.http.MultiHttpBlockConfigTests###requestWhenUsingMutuallyExclusiveHttpElementsThenIsRoutedAccordingly:###this.mvc.perform(post("/second/login").param("username","user").param("password","password").with(csrf())).andExpect(status().isFound()).andExpect(redirectedUrl("/"));###formLoginRequest###post("/second/login").param("username","user").param("password","password").with(csrf())###58:3:59:66
366146ff8077dc83441e5a0b4e1f42ba3c02f08e###/spring-projects_spring-security/oauth2/oauth2-jose/src/main/java/org/springframework/security/oauth2/jwt/JwtDecoders.java###/JwtDecoders.java###org.springframework.security.oauth2.jwt.JwtDecoders###withProviderConfiguration:Map<String,Object> String ###NimbusJwtDecoderjwtDecoder=NimbusJwtDecoder.withJwkSetUri(configuration.get("jwks_uri").toString()).build();###jwkSetUri###configuration.get("jwks_uri").toString()###109:3:109:114
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceRememberMeTests.java###/NamespaceRememberMeTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceRememberMeTests###rememberMeLoginWhenParameterSpecifiedThenMatchesNamespace:###CookierememberMe=this.mvc.perform(post("/login").with(rememberMeLogin("rememberMe",true))).andReturn().getResponse().getCookie("remember-me");###loginWithRememberme###post("/login").with(rememberMeLogin("rememberMe",true))###366:3:368:57
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configuration/HttpSecurityConfigurationTests.java###/HttpSecurityConfigurationTests.java###org.springframework.security.config.annotation.web.configuration.HttpSecurityConfigurationTests###authenticateWhenDefaultFilterChainBeanThenRolePrefixIsSet:###this.mockMvc.perform(get("/user").with(authentication(newTestingAuthenticationToken("user","password","ROLE_USER")))).andExpect(status().isOk());###user###newTestingAuthenticationToken("user","password","ROLE_USER")###193:3:195:33
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceRememberMeTests.java###/NamespaceRememberMeTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceRememberMeTests###rememberMeLoginWhenKeyDeclaredThenMatchesNamespace:###CookiewithoutKey=this.mvc.perform(post("/without-key/login").with(rememberMeLogin())).andExpect(redirectedUrl("/")).andReturn().getResponse().getCookie("remember-me");###requestWithRememberme###post("/without-key/login").with(rememberMeLogin())###201:3:204:57
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenCustomExpressionHandlerAndRoleMatchesThenRespondsWithOk:###this.mvc.perform(get("/user").with(user("user").roles("USER"))).andExpect(status().isOk());###requestWithUser###get("/user").with(user("user").roles("USER"))###367:3:367:94
14c50a9c967e4526eb060add4a5c1ccd8ef4121e###/spring-projects_spring-security/acl/src/test/java/org/springframework/security/acls/domain/AclImplTests.java###/AclImplTests.java###org.springframework.security.acls.domain.AclImplTests###testIsGrantingRejectsEmptyParameters:###acl.isGranted(newPermission[]{},newSid[]{newPrincipalSid("ben")},false);###ben###newPrincipalSid("ben")###233:13:233:94
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenPermissionCheckAndRoleMatchesThenRespondsWithOk:###this.mvc.perform(get("/user").with(user("user").roles("USER"))).andExpect(status().isOk());###requestWithUser###get("/user").with(user("user").roles("USER"))###726:3:728:33
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurerTests.java###/OAuth2ClientConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2ClientConfigurerTests###configureWhenAuthorizationCodeResponseSuccessThenAuthorizedClientSaved:###this.mockMvc.perform(get("/client-1").param(OAuth2ParameterNames.CODE,"code").param(OAuth2ParameterNames.STATE,"state").with(authentication(authentication)).session(session)).andExpect(status().is3xxRedirection()).andExpect(redirectedUrl("http://localhost/client-1"));###clientRequest###get("/client-1").param(OAuth2ParameterNames.CODE,"code").param(OAuth2ParameterNames.STATE,"state").with(authentication(authentication)).session(session)###184:3:190:59
dc47a7575e2c4777f832ff3514ce7f9f088a13f6###/spring-projects_spring-security/oauth2/oauth2-client/src/test/java/org/springframework/security/oauth2/client/web/server/DefaultServerOAuth2AuthorizationRequestResolverTests.java###/DefaultServerOAuth2AuthorizationRequestResolverTests.java###org.springframework.security.oauth2.client.web.server.DefaultServerOAuth2AuthorizationRequestResolverTests###resolveWhenForwardedHeadersClientRegistrationFoundThenWorks:###ServerWebExchangeexchange=MockServerWebExchange.from(MockServerHttpRequest.get("/oauth2/authorization/id").header("X-Forwarded-Host","evil.com"));###httpRequest###MockServerHttpRequest.get("/oauth2/authorization/id").header("X-Forwarded-Host","evil.com")###96:3:97:105
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/PermitAllSupportTests.java###/PermitAllSupportTests.java###org.springframework.security.config.annotation.web.configurers.PermitAllSupportTests###performWhenUsingPermitAllExactUrlRequestMatcherThenMatchesExactUrl:###this.mvc.perform(get("/app/xyz").contextPath("/app")).andExpect(status().isNotFound());###request###get("/app/xyz").contextPath("/app")###52:3:53:39
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/MiscHttpConfigTests.java###/MiscHttpConfigTests.java###org.springframework.security.config.http.MiscHttpConfigTests###getWhenUsingX509AndPropertyPlaceholderThenSubjectPrincipalRegexIsConfigured:###this.mvc.perform(get("/protected").with(x509("classpath:org/springframework/security/config/http/MiscHttpConfigTests-certificate.pem"))).andExpect(status().isOk());###x509###x509("classpath:org/springframework/security/config/http/MiscHttpConfigTests-certificate.pem")###429:3:431:33
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HttpBasicConfigurerTests.java###/HttpBasicConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HttpBasicConfigurerTests###httpBasicWhenRememberMeConfiguredThenSetsRememberMeCookie:###this.mvc.perform(get("/").with(httpBasic("user","password")).param("remember-me","true")).andExpect(cookie().exists("remember-me"));###rememberMeRequest###get("/").with(httpBasic("user","password")).param("remember-me","true")###108:3:109:48
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/OpenIDConfigTests.java###/OpenIDConfigTests.java###org.springframework.security.config.http.OpenIDConfigTests###requestWhenOpenIDAndRememberMeConfiguredThenRememberMePassedToIdp:###this.mvc.perform(get("/login/openid").param(OpenIDAuthenticationFilter.DEFAULT_CLAIMED_IDENTITY_FIELD,"https://ww1.openid.com").param(AbstractRememberMeServices.DEFAULT_PARAMETER,"on")).andExpect(status().isFound()).andExpect(redirectedUrl(openIdEndpointUrl+expectedReturnTo));###openidLogin###get("/login/openid").param(OpenIDAuthenticationFilter.DEFAULT_CLAIMED_IDENTITY_FIELD,"https://ww1.openid.com").param(AbstractRememberMeServices.DEFAULT_PARAMETER,"on")###116:3:119:69
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenRegisteringRoleHierarchyAndNoRelatedRolesAllowedThenRespondsWithForbidden:###this.mvc.perform(get("/deny").with(user("user").roles("USER"))).andExpect(status().isForbidden());###requestWithUser###get("/deny").with(user("user").roles("USER"))###978:3:980:40
4d24c88d1ecbf4296cc078781f27c92f559b7bc7###/spring-projects_spring-security/core/src/main/java/org/acegisecurity/userdetails/ldap/LdapUserDetailsImpl.java###/LdapUserDetailsImpl.java###org.acegisecurity.userdetails.ldap.LdapUserDetailsImpl.Essence###createUserDetails:###returninstance;###newInstance###instance###183:13:183:29
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/CsrfConfigurerTests.java###/CsrfConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.CsrfConfigurerTests###logoutWhenCsrfEnabledAndGetRequestThenDoesNotLogout:###this.mvc.perform(get("/logout").with(user("username"))).andExpect(authenticated());###logoutRequest###get("/logout").with(user("username"))###587:3:589:33
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/CsrfConfigTests.java###/CsrfConfigTests.java###org.springframework.security.config.http.CsrfConfigTests###postWhenCsrfMismatchesThenForbidden:###this.mvc.perform(post("/ok").session(session).with(csrf().useInvalidToken())).andExpect(status().isForbidden());###postOk###post("/ok").session(session).with(csrf().useInvalidToken())###467:3:470:40
1e864ad7645fcf6d66edd714cb4faf32f76c0716###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/annotation/method/configuration/GlobalMethodSecurityConfiguration.java###/GlobalMethodSecurityConfiguration.java###org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration###methodSecurityMetadataSource:###if(prePostEnabled())###isPrePostEnabled###prePostEnabled()###361:3:363:4
6db9a3faccc51ba862f4365d812b3b6c3dbd1331###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/context/HttpSessionSecurityContextRepository.java###/HttpSessionSecurityContextRepository.java###org.springframework.security.web.context.HttpSessionSecurityContextRepository###readSecurityContextFromSession:HttpSession ###if(logger.isDebugEnabled())###debug###logger.isDebugEnabled()###120:13:122:14
80dbc4fd75e87df28c59bbe32b52f3e9be347ee0###/spring-projects_spring-security/core/src/main/java/org/springframework/security/config/AuthenticationProviderBeanDefinitionParser.java###/AuthenticationProviderBeanDefinitionParser.java###org.springframework.security.config.AuthenticationProviderBeanDefinitionParser###parse:Element ParserContext ###parserContext.getRegistry().registerBeanDefinition(parserContext.getReaderContext().generateBeanName(cacheResolver),cacheResolver);###name###parserContext.getReaderContext().generateBeanName(cacheResolver)###89:9:90:92
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/MiscHttpConfigTests.java###/MiscHttpConfigTests.java###org.springframework.security.config.http.MiscHttpConfigTests###loginWhenUsingCustomAuthenticationDetailsSourceRefThenAuthenticationSourcesDetailsAccordingly:###MockHttpSessionsession=(MockHttpSession)this.mvc.perform(post("/login").param("username","user").param("password","password").with(csrf())).andReturn().getRequest().getSession(false);###loginRequest###post("/login").param("username","user").param("password","password").with(csrf())###713:3:718:51
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/server/header/ContentSecurityPolicyServerHttpHeadersWriter.java###/ContentSecurityPolicyServerHttpHeadersWriter.java###org.springframework.security.web.server.header.ContentSecurityPolicyServerHttpHeadersWriter###createDelegate:###returnStaticServerHttpHeadersWriter.builder().header(resolveHeader(this.reportOnly),this.policyDirectives).build();###builder###StaticServerHttpHeadersWriter.builder()###74:3:76:14
4a9fa0337a5eb5dc2603afa45fd513fdf001aaea###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/http/HttpSecurityBeanDefinitionParser.java###/HttpSecurityBeanDefinitionParser.java###org.springframework.security.config.http.HttpSecurityBeanDefinitionParser###registerFilterChainProxyIfNecessary:ParserContext Object ###pc.getRegistry().registerAlias(BeanIds.FILTER_CHAIN_PROXY,BeanIds.SPRING_SECURITY_FILTER_CHAIN);###registry###pc.getRegistry()###415:3:416:43
adbf18a091ba909fa2c71a9233c87036871a5310###/spring-projects_spring-security/core/src/main/java/org/springframework/security/config/AnnotationDrivenBeanDefinitionParser.java###/AnnotationDrivenBeanDefinitionParser.java###org.springframework.security.config.AnnotationDrivenBeanDefinitionParser###parse:Element ParserContext ###StringclassName="true".equals(element.getAttribute(ATT_USE_JSR250))?JSR_250_SECURITY_ANNOTATION_ATTRIBUTES_CLASS:SECURITY_ANNOTATION_ATTRIBUTES_CLASS;###useJsr250###"true".equals(element.getAttribute(ATT_USE_JSR250))###32:9:33:101
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configuration/HttpSecurityConfigurationTests.java###/HttpSecurityConfigurationTests.java###org.springframework.security.config.annotation.web.configuration.HttpSecurityConfigurationTests###loadConfigWhenDefaultConfigThenWebAsyncManagerIntegrationFilterAdded:###MvcResultmvcResult=this.mockMvc.perform(get("/name").with(user("Bob"))).andExpect(request().asyncStarted()).andReturn();###requestWithBob###get("/name").with(user("Bob"))###110:3:112:18
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurerTests.java###/SessionManagementConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurerTests###loginWhenUserLoggedInAndMaxSessionsIsOneThenLoginPrevented:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password")).andExpect(status().isFound()).andExpect(redirectedUrl("/login?error"));###secondRequest###post("/login").with(csrf()).param("username","user").param("password","password")###261:3:266:47
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenHasAnyRoleUserConfiguredAndRoleIsAdminThenRespondsWithForbidden:###this.mvc.perform(get("/").with(user("user").roles("ADMIN"))).andExpect(status().isForbidden());###requestWithAdmin###get("/").with(user("user").roles("ADMIN"))###320:3:322:40
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenReferrerPolicyConfiguredThenReferrerPolicyHeaderInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string("Referrer-Policy",ReferrerPolicy.NO_REFERRER.getPolicy())).andReturn();###referrerPolicy###header().string("Referrer-Policy",ReferrerPolicy.NO_REFERRER.getPolicy())###799:3:801:18
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RememberMeConfigurerTests.java###/RememberMeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RememberMeConfigurerTests###logoutWhenRememberMeCookieThenAuthenticationIsRememberMeCookieExpired:###MvcResultmvcResult=this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")).andReturn();###loginRequest###post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")###236:3:241:18
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RememberMeConfigurerTests.java###/RememberMeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RememberMeConfigurerTests###logoutWhenRememberMeCookieThenAuthenticationIsRememberMeCookieExpired:###this.mvc.perform(post("/logout").with(csrf()).cookie(rememberMeCookie).session((MockHttpSession)session)).andExpect(redirectedUrl("/login?logout")).andExpect(cookie().maxAge("remember-me",0));###logoutRequest###post("/logout").with(csrf()).cookie(rememberMeCookie).session((MockHttpSession)session)###130:3:131:93
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/core/src/main/java/org/springframework/security/jackson2/UserDeserializer.java###/UserDeserializer.java###org.springframework.security.jackson2.UserDeserializer###deserialize:JsonParser DeserializationContext ###Userresult=newUser(readJsonNode(jsonNode,"username").asText(),password.asText(""),readJsonNode(jsonNode,"enabled").asBoolean(),readJsonNode(jsonNode,"accountNonExpired").asBoolean(),readJsonNode(jsonNode,"credentialsNonExpired").asBoolean(),readJsonNode(jsonNode,"accountNonLocked").asBoolean(),authorities);###credentialsNonExpired###readJsonNode(jsonNode,"credentialsNonExpired").asBoolean()###65:3:70:5
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/CsrfConfigurerTests.java###/CsrfConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.CsrfConfigurerTests###csrfAuthenticationStrategyConfiguredThenStrategyUsed:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password")).andExpect(redirectedUrl("/"));###loginRequest###post("/login").with(csrf()).param("username","user").param("password","password")###369:3:370:36
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurerTests.java###/SessionManagementConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurerTests###loginWhenUserLoggedInAndMaxSessionsIsOneThenLoginPrevented:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password"));###firstRequest###post("/login").with(csrf()).param("username","user").param("password","password")###138:3:138:105
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenCustomExpressionHandlerAndAuthenticationNameDoesNotMatchThenRespondsWithForbidden:###this.mvc.perform(get("/deny").with(user("user").roles("USER"))).andExpect(status().isForbidden());###requestWithUser###get("/deny").with(user("user").roles("USER"))###810:3:812:40
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurerTests.java###/RequestCacheConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurerTests###getWhenBookmarkedRequestIsTextEventStreamThenPostAuthenticationRedirectsToRoot:###MockHttpSessionsession=(MockHttpSession)this.mvc.perform(get("/messages").header(HttpHeaders.ACCEPT,MediaType.TEXT_EVENT_STREAM)).andExpect(redirectedUrl("http://localhost/login")).andReturn().getRequest().getSession();###request###get("/messages").header(HttpHeaders.ACCEPT,MediaType.TEXT_EVENT_STREAM)###190:3:194:46
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenHstsConfiguredWithPreloadInLambdaThenStrictTransportSecurityHeaderWithPreloadInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.STRICT_TRANSPORT_SECURITY,"max-age=31536000;includeSubDomains;preload")).andReturn();###hsts###header().string(HttpHeaders.STRICT_TRANSPORT_SECURITY,"max-age=31536000;includeSubDomains;preload")###405:3:407:18
781d88bd30c6ae024592fd8fc763e8fdf4e981a4###/spring-projects_spring-security/core/src/test/java/org/springframework/security/config/HttpSecurityBeanDefinitionParserTests.java###/HttpSecurityBeanDefinitionParserTests.java###org.springframework.security.config.HttpSecurityBeanDefinitionParserTests###regexPathsWorkCorrectly:###checkAutoConfigFilters(getFilters("/ImCaughtByTheUniversalMatchPattern"));###allFilters###getFilters("/ImCaughtByTheUniversalMatchPattern")###140:9:140:83
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ServletApiConfigurerTests.java###/ServletApiConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ServletApiConfigurerTests###requestWhenServletApiWithDefaultsInLambdaThenUsesDefaultRolePrefix:###this.mvc.perform(get("/admin").with(user("user").authorities(AuthorityUtils.createAuthorityList("ROLE_ADMIN")))).andExpect(status().isOk());###request###get("/admin").with(user("user").authorities(AuthorityUtils.createAuthorityList("ROLE_ADMIN")))###254:3:256:33
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceSessionManagementTests.java###/NamespaceSessionManagementTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceSessionManagementTests###authenticateWhenUsingSessionFixationProtectionThenUsesNonNullEventPublisher:###this.mvc.perform(get("/auth").session(newMockHttpSession()).with(httpBasic("user","password"))).andExpect(status().isNotFound());###request###get("/auth").session(newMockHttpSession()).with(httpBasic("user","password"))###329:3:332:39
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurerTests.java###/RequestCacheConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurerTests###getWhenBookmarkedRequestIsApplicationJsonThenPostAuthenticationRedirectsToRoot:###MockHttpSessionsession=(MockHttpSession)this.mvc.perform(get("/messages").header(HttpHeaders.ACCEPT,MediaType.APPLICATION_JSON)).andExpect(redirectedUrl("http://localhost/login")).andReturn().getRequest().getSession();###request###get("/messages").header(HttpHeaders.ACCEPT,MediaType.APPLICATION_JSON)###158:3:162:46
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/saml2/saml2-service-provider/src/main/java/org/springframework/security/saml2/provider/service/authentication/OpenSamlAuthenticationProvider.java###/OpenSamlAuthenticationProvider.java###org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider###process:Saml2AuthenticationToken Response ###throwauthException(INVALID_SIGNATURE,"Eithertheresponseoroneoftheassertionsisunsigned."+"Pleaseeithersigntheresponseoralloftheassertions.");###description###"Eithertheresponseoroneoftheassertionsisunsigned."+"Pleaseeithersigntheresponseoralloftheassertions."###455:4:456:67
771ef0dadcbaf0e9887a36d884167c80025654e5###/spring-projects_spring-security/core/src/main/java/org/springframework/security/jackson2/UserDeserializer.java###/UserDeserializer.java###org.springframework.security.jackson2.UserDeserializer###deserialize:JsonParser DeserializationContext ###Userresult=newUser(readJsonNode(jsonNode,"username").asText(),password.asText(""),readJsonNode(jsonNode,"enabled").asBoolean(),readJsonNode(jsonNode,"accountNonExpired").asBoolean(),readJsonNode(jsonNode,"credentialsNonExpired").asBoolean(),readJsonNode(jsonNode,"accountNonLocked").asBoolean(),authorities);###enabled###readJsonNode(jsonNode,"enabled").asBoolean()###64:3:67:74
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/PermitAllSupportTests.java###/PermitAllSupportTests.java###org.springframework.security.config.annotation.web.configurers.PermitAllSupportTests###performWhenUsingPermitAllExactUrlRequestMatcherThenMatchesExactUrl:###this.mvc.perform(get("/app/abc").with(csrf()).contextPath("/app")).andExpect(status().isFound());###getWithCsrf###get("/app/abc").with(csrf()).contextPath("/app")###55:3:55:100
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenHasAnyAuthorityRoleUserConfiguredAndAuthorityIsRoleUserThenRespondsWithOk:###this.mvc.perform(get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_USER")))).andExpect(status().isOk());###requestWithUser###get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_USER")))###173:3:175:33
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/oauth2/oauth2-core/src/main/java/org/springframework/security/oauth2/core/web/reactive/function/OAuth2AccessTokenResponseBodyExtractor.java###/OAuth2AccessTokenResponseBodyExtractor.java###org.springframework.security.oauth2.core.web.reactive.function.OAuth2AccessTokenResponseBodyExtractor###oauth2AccessTokenResponse:TokenResponse ###oauth2Error=newOAuth2Error(errorObject.getCode()!=null?errorObject.getCode():OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI()!=null?errorObject.getURI().toString():null);###description###errorObject.getDescription()###99:4:102:77
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configuration/HttpSecurityConfigurationTests.java###/HttpSecurityConfigurationTests.java###org.springframework.security.config.annotation.web.configuration.HttpSecurityConfigurationTests###authenticateWhenDefaultFilterChainBeanThenSessionIdChanges:###MvcResultresult=this.mockMvc.perform(post("/login").param("username","user").param("password","password").session(session).with(csrf())).andReturn();###loginRequest###post("/login").param("username","user").param("password","password").session(session).with(csrf())###162:3:168:20
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/MiscHttpConfigTests.java###/MiscHttpConfigTests.java###org.springframework.security.config.http.MiscHttpConfigTests###loginWhenConfiguredWithNoInternalAuthenticationProvidersThenSuccessfullyAuthenticates:###this.mvc.perform(post("/login").param("username","user").param("password","password")).andExpect(redirectedUrl("/"));###loginRequest###post("/login").param("username","user").param("password","password")###452:3:453:36
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpBasicTests.java###/NamespaceHttpBasicTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpBasicTests###basicAuthenticationWhenUsingCustomRealmInLambdaThenMatchesNamespace:###this.mvc.perform(get("/").with(httpBasic("user","invalid"))).andExpect(status().isUnauthorized()).andExpect(header().string(HttpHeaders.WWW_AUTHENTICATE,"Basicrealm=\"CustomRealm\""));###requestWithInvalidPassword###get("/").with(httpBasic("user","invalid"))###166:3:169:95
0b1618d8b40ad44cba3620b8ad27398d35a02825###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/web/server/ServerHttpSecurity.java###/ServerHttpSecurity.java###org.springframework.security.config.web.server.ServerHttpSecurity.RequestCacheSpec###configure:ServerHttpSecurity ###http.addFilterAt(newServerRequestCacheWebFilter(),SecurityWebFiltersOrder.SERVER_REQUEST_CACHE);###filter###newServerRequestCacheWebFilter()###459:4:459:102
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/MiscHttpConfigTests.java###/MiscHttpConfigTests.java###org.springframework.security.config.http.MiscHttpConfigTests###loginWhenJeeFilterThenExtractsRoles:###this.mvc.perform(get("/roles").principal(user).with((request)->{request.addUserRole("admin");request.addUserRole("user");request.addUserRole("unmapped");returnrequest;})).andExpect(content().string("ROLE_admin,ROLE_user"));###rolesRequest###get("/roles").principal(user).with((request)->{request.addUserRole("admin");request.addUserRole("user");request.addUserRole("unmapped");returnrequest;})###491:3:496:59
d3b7a47ef81960d9400134c5ed0b90ea253ca3a2###/spring-projects_spring-security/oauth2/oauth2-client/src/test/java/org/springframework/security/oauth2/client/oidc/authentication/OidcAuthorizationCodeReactiveAuthenticationManagerTests.java###/OidcAuthorizationCodeReactiveAuthenticationManagerTests.java###org.springframework.security.oauth2.client.oidc.authentication.OidcAuthorizationCodeReactiveAuthenticationManagerTests###authenticationWhenRefreshTokenThenRefreshTokenInAuthorizedClient:###OAuth2LoginAuthenticationTokenresult=(OAuth2LoginAuthenticationToken)this.manager.authenticate(loginToken()).block();###authorizationCodeAuthentication###loginToken()###233:3:233:124
28153f2c7f54eefc8f49252c04966e128dd05790###/spring-projects_spring-security/core/src/test/java/org/springframework/security/providers/ldap/LdapAuthenticationProviderTests.java###/LdapAuthenticationProviderTests.java###org.springframework.security.providers.ldap.LdapAuthenticationProviderTests###testNormalUsage:###LdapAuthenticationProviderldapProvider=newLdapAuthenticationProvider(newMockAuthenticator(),newMockAuthoritiesPopulator());###populator###newMockAuthoritiesPopulator()###92:9:93:49
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/authentication/www/DigestAuthenticationFilter.java###/DigestAuthenticationFilter.java###org.springframework.security.web.authentication.www.DigestAuthenticationFilter###doFilter:ServletRequest ServletResponse FilterChain ###fail(request,response,newBadCredentialsException(this.messages.getMessage("DigestAuthenticationFilter.usernameNotFound",newObject[]{digestAuth.getUsername()},"Username{0}notfound")));###message###this.messages.getMessage("DigestAuthenticationFilter.usernameNotFound",newObject[]{digestAuth.getUsername()},"Username{0}notfound")###188:4:192:36
1474e73b1122e6f390a940e573c7911ccafe77f2###/spring-projects_spring-security/acl/src/test/java/org/springframework/security/acls/domain/AclImplTests.java###/AclImplTests.java###org.springframework.security.acls.domain.AclImplTests###isGrantingGrantsAccessForInheritableAcls:###MutableAclgrandParentAcl=newAclImpl(grandParentOid,1,mockAuthzStrategy,mockAuditLogger,null,null,false,newPrincipalSid("joe"));###joe###newPrincipalSid("joe")###302:9:303:42
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/FormLoginBeanDefinitionParserTests.java###/FormLoginBeanDefinitionParserTests.java###org.springframework.security.config.http.FormLoginBeanDefinitionParserTests###successfulLoginWhenConfiguredWithCustomAuthenticationSuccessThenForwardsAccordingly:###this.mvc.perform(post("/login").param("username","user").param("password","password")).andExpect(status().isOk()).andExpect(forwardedUrl("/success_forward_url"));###loginRequest###post("/login").param("username","user").param("password","password")###179:3:180:81
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenPermissionCheckAndAuthenticationNameMatchesThenRespondsWithOk:###this.mvc.perform(get("/allow").with(user("user").roles("USER"))).andExpect(status().isOk());###requestWithUser###get("/allow").with(user("user").roles("USER"))###349:3:349:95
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RememberMeConfigurerTests.java###/RememberMeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RememberMeConfigurerTests###loginWhenRememberMeConfiguredInLambdaThenRespondsWithRememberMeCookie:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")).andExpect(cookie().exists("remember-me"));###request###post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")###152:3:153:78
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpInterceptUrlTests.java###/NamespaceHttpInterceptUrlTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpInterceptUrlTests###authenticatedRequestWhenAuthorizedThenBehaviorMatchesNamespace:###this.mvc.perform(get("/users").with(authentication(user("ROLE_ADMIN")))).andExpect(status().isOk()).andReturn();###requestWithAdmin###get("/users").with(authentication(user("ROLE_ADMIN")))###80:3:83:18
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/SessionManagementConfigTests.java###/SessionManagementConfigTests.java###org.springframework.security.config.http.SessionManagementConfigTests###requestWhenCreateSessionIsSetToStatelessThenDoesNotCreateSessionOnLogin:###this.mvc.perform(post("/login").param("username","user").param("password","password").with(csrf())).andExpect(status().isFound()).andExpect(session().exists(false));###loginRequest###post("/login").param("username","user").param("password","password").with(csrf())###170:3:175:41
1a0bec5bf144fc4e2c804a7f021bebed174ea1c9###/spring-projects_spring-security/samples/contacts/src/main/java/sample/contact/WebContactAddController.java###/WebContactAddController.java###sample.contact.WebContactAddController###onSubmit:Object ###Stringowner=((SecureContext)ContextHolder.getContext()).getAuthentication().getPrincipal().toString();###auth###((SecureContext)ContextHolder.getContext()).getAuthentication()###57:9:58:52
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RememberMeConfigurerTests.java###/RememberMeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RememberMeConfigurerTests###rememberMeWhenInvokedTwiceThenUsesOriginalUserDetailsService:###this.mvc.perform(get("/").with(httpBasic("user","password")).param("remember-me","true"));###request###get("/").with(httpBasic("user","password")).param("remember-me","true")###166:3:168:36
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenHpkpWithReportOnlyFalseThenPublicKeyPinsHeaderInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.PUBLIC_KEY_PINS,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\"")).andReturn();###pins###header().string(HttpHeaders.PUBLIC_KEY_PINS,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\"")###502:3:505:18
3e3dac405064e5b6f8126212179361b191cbe20b###/spring-projects_spring-security/core/src/test/java/org/springframework/security/userdetails/jdbc/JdbcUserDetailsManagerTests.java###/JdbcUserDetailsManagerTests.java###org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests###changePasswordSucceedsWithIfReAuthenticationSucceeds:###assertEquals("newPassword",SecurityContextHolder.getContext().getAuthentication().getCredentials());###newAuth###SecurityContextHolder.getContext().getAuthentication()###142:9:142:110
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenReferrerPolicyConfiguredWithCustomValueInLambdaThenCustomValueInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string("Referrer-Policy",ReferrerPolicy.SAME_ORIGIN.getPolicy())).andReturn();###referrerPolicy###header().string("Referrer-Policy",ReferrerPolicy.SAME_ORIGIN.getPolicy())###874:3:876:18
b8d51725c78174141407725587ff0322ff158192###/spring-projects_spring-security/core/src/main/java/org/springframework/security/access/intercept/AbstractSecurityInterceptor.java###/AbstractSecurityInterceptor.java###org.springframework.security.access.intercept.AbstractSecurityInterceptor###beforeInvocation:Object ###SecurityContextHolder.setContext(SecurityContextHolder.createEmptyContext());###newCtx###SecurityContextHolder.createEmptyContext()###220:4:220:81
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenHasAuthorityRoleUserConfiguredAndAuthorityIsRoleAdminThenRespondsWithForbidden:###this.mvc.perform(get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_ADMIN")))).andExpect(status().isForbidden());###requestWithAdmin###get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_ADMIN")))###145:3:146:40
9d359780d95b1a44dc0dab288e08cc36bf52d5de###/spring-projects_spring-security/core/src/main/java/org/acegisecurity/ui/switchuser/SwitchUserProcessingFilter.java###/SwitchUserProcessingFilter.java###net.sf.acegisecurity.ui.switchuser.SwitchUserProcessingFilter###attemptExitUser:HttpServletRequest ###context.publishEvent(newAuthenticationSwitchUserEvent(current,null));###originalUser###null###258:13:259:32
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/FormLoginConfigurerTests.java###/FormLoginConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.FormLoginConfigurerTests###loginWhenFormLoginDefaultsInLambdaThenHasDefaultUsernameAndPasswordParameterNames:###this.mockMvc.perform(formLogin().user("username","user").password("password","password")).andExpect(status().isFound()).andExpect(redirectedUrl("/"));###loginRequest###formLogin().user("username","user").password("password","password")###203:3:205:36
7bf6008efe485e3f0c93411f46b77f263150dc8f###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/annotation/web/configuration/OAuth2ImportSelector.java###/OAuth2ImportSelector.java###org.springframework.security.config.annotation.web.configuration.OAuth2ImportSelector###selectImports:AnnotationMetadata ###booleanoauth2ClientPresent=ClassUtils.isPresent("org.springframework.security.oauth2.client.registration.ClientRegistration",getClass().getClassLoader());###classLoader###getClass().getClassLoader()###49:3:51:34
44cae6b2ee102496cfa3a0e4abe76a551da66134###/spring-projects_spring-security/core-tiger/src/main/java/org/acegisecurity/annotation/SecurityAnnotationAttributes.java###/SecurityAnnotationAttributes.java###org.acegisecurity.annotation.SecurityAnnotationAttributes###getAttributes:Method ###for(annotation:method.getAnnotations())###annotations###method.getAnnotations()###99:9:110:10
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenAuthorityRoleUserOrAdminRequiredAndAuthorityIsRoleUserThenRespondsWithOk:###this.mvc.perform(get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_USER")))).andExpect(status().isOk());###requestWithUser###get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_USER")))###158:3:159:33
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ServletApiConfigurerTests.java###/ServletApiConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ServletApiConfigurerTests###requestWhenRolePrefixInLambdaThenUsesCustomRolePrefix:###this.mvc.perform(get("/admin").with(user("user").authorities(AuthorityUtils.createAuthorityList("ROLE_ADMIN")))).andExpect(status().isForbidden());###requestWithAdminRole###get("/admin").with(user("user").authorities(AuthorityUtils.createAuthorityList("ROLE_ADMIN")))###278:3:280:40
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/CsrfConfigurerTests.java###/CsrfConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.CsrfConfigurerTests###logoutWhenGetRequestAndGetEnabledForLogoutThenLogsOut:###this.mvc.perform(get("/logout").with(user("username"))).andExpect(unauthenticated());###logoutRequest###get("/logout").with(user("username"))###340:3:340:88
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/PermitAllSupportTests.java###/PermitAllSupportTests.java###org.springframework.security.config.annotation.web.configurers.PermitAllSupportTests###performWhenUsingPermitAllExactUrlRequestMatcherThenMatchesExactUrl:###this.mvc.perform(get("/app/xyz?def").contextPath("/app")).andExpect(status().isFound());###getWithQuery###get("/app/xyz?def").contextPath("/app")###54:3:55:36
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceSessionManagementTests.java###/NamespaceSessionManagementTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceSessionManagementTests###authenticateWhenUsingCustomSessionAuthenticationStrategyThenMatchesNamespace:###this.mvc.perform(get("/auth").with(httpBasic("user","password"))).andExpect(status().isOk());###request###get("/auth").with(httpBasic("user","password"))###237:3:239:33
72a267a311fe08d49ff9a2e3f05f3fdd65c7c6fb###/spring-projects_spring-security/core/src/main/java/org/springframework/security/authentication/UserDetailsRepositoryReactiveAuthenticationManager.java###/UserDetailsRepositoryReactiveAuthenticationManager.java###org.springframework.security.authentication.UserDetailsRepositoryReactiveAuthenticationManager###authenticate:Authentication ###this.passwordEncoder.matches((String)authentication.getCredentials(),u.getPassword())###presentedPassword###(String)authentication.getCredentials()###53:19:53:106
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceSessionManagementTests.java###/NamespaceSessionManagementTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceSessionManagementTests###authenticateWhenUsingSessionFixationProtectionThenUsesNonNullEventPublisher:###this.mvc.perform(get("/auth").session(newMockHttpSession()).with(httpBasic("user","password"))).andExpect(status().isNotFound());###request###get("/auth").session(newMockHttpSession()).with(httpBasic("user","password"))###196:3:197:39
2c2e8e5f24f77ef7970fdf9504b5ee9abc1b8638###/spring-projects_spring-security/oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/registration/ClientRegistrations.java###/ClientRegistrations.java###org.springframework.security.oauth2.client.registration.ClientRegistrations###fromIssuerLocation:String ###returnOptional.ofNullable((String)configuration.get("userinfo_endpoint")).map(builder::userInfoUri).orElse(builder);###userinfoEndpoint###(String)configuration.get("userinfo_endpoint")###144:3:145:48
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpInterceptUrlTests.java###/NamespaceHttpInterceptUrlTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpInterceptUrlTests###requestWhenMappedByPostInterceptUrlThenBehaviorMatchesNamespace:###this.mvc.perform(post("/admin/post").with(authentication(user("ROLE_USER")))).andExpect(status().isForbidden());###postWithUser###post("/admin/post").with(authentication(user("ROLE_USER")))###94:3:96:40
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/authentication/NamespaceAuthenticationManagerTests.java###/NamespaceAuthenticationManagerTests.java###org.springframework.security.config.annotation.authentication.NamespaceAuthenticationManagerTests###authenticationMangerWhenDefaultThenEraseCredentialsIsTrue:###this.mockMvc.perform(formLogin()).andExpect(authenticated().withAuthentication((a)->assertThat(a.getCredentials()).isNull()));###nullCredentials###authenticated().withAuthentication((a)->assertThat(a.getCredentials()).isNull())###50:3:51:100
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurerTests.java###/OAuth2ResourceServerConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.OAuth2ResourceServerConfigurerTests###requestWhenBearerTokenResolverAllowsRequestBodyAndRequestContainsTwoTokensThenInvalidRequest:###this.mvc.perform(post("/authenticated").param("access_token",JWT_TOKEN).with(bearerToken(JWT_TOKEN)).with(csrf())).andExpect(status().isBadRequest()).andExpect(header().string(HttpHeaders.WWW_AUTHENTICATE,containsString("invalid_request")));###request###post("/authenticated").param("access_token",JWT_TOKEN).with(bearerToken(JWT_TOKEN)).with(csrf())###717:3:722:98
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configuration/OAuth2ClientConfigurationTests.java###/OAuth2ClientConfigurationTests.java###org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfigurationTests###requestWhenAuthorizedClientManagerConfiguredThenUsed:###this.mockMvc.perform(get("/authorized-client").with(authentication(authentication))).andExpect(status().isOk()).andExpect(content().string("resolved"));###authenticatedRequest###get("/authorized-client").with(authentication(authentication))###349:3:351:46
c67ff42b8abe124b7956896c78e9aac896fd79d9###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/http/FilterInvocationSecurityMetadataSourceParser.java###/FilterInvocationSecurityMetadataSourceParser.java###org.springframework.security.config.http.FilterInvocationSecurityMetadataSourceParser###isUseExpressions:Element ###return"true".equals(elt.getAttribute(ATT_USE_EXPRESSIONS));###useExpressions###elt.getAttribute(ATT_USE_EXPRESSIONS)###103:9:103:69
df613ed4ccecc405d938556f3bd87d002fcedfd1###/spring-projects_spring-security/core/src/main/java/org/springframework/security/jackson2/UserDeserializer.java###/UserDeserializer.java###org.springframework.security.jackson2.UserDeserializer###deserialize:JsonParser DeserializationContext ###returnnewUser(readJsonNode(jsonNode,"username").asText(),readJsonNode(jsonNode,"password").asText(""),readJsonNode(jsonNode,"enabled").asBoolean(),readJsonNode(jsonNode,"accountNonExpired").asBoolean(),readJsonNode(jsonNode,"credentialsNonExpired").asBoolean(),readJsonNode(jsonNode,"accountNonLocked").asBoolean(),authorities);###password###readJsonNode(jsonNode,"password")###61:3:66:5
0ac1176152fe823318a40ddac8d143eea80d1577###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/authentication/DelegatingAuthenticationEntryPoint.java###/DelegatingAuthenticationEntryPoint.java###org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint###commence:HttpServletRequest HttpServletResponse AuthenticationException ###entryPoints.get(requestMatcher).commence(request,response,authException);###entryPoint###entryPoints.get(requestMatcher)###72:16:72:91
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenHstsConfiguredWithPreloadInLambdaThenStrictTransportSecurityHeaderWithPreloadInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.STRICT_TRANSPORT_SECURITY,"max-age=31536000;includeSubDomains;preload")).andReturn();###hsts###header().string(HttpHeaders.STRICT_TRANSPORT_SECURITY,"max-age=31536000;includeSubDomains;preload")###975:3:978:18
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/core/src/main/java/org/springframework/security/jackson2/UserDeserializer.java###/UserDeserializer.java###org.springframework.security.jackson2.UserDeserializer###deserialize:JsonParser DeserializationContext ###Userresult=newUser(readJsonNode(jsonNode,"username").asText(),password.asText(""),readJsonNode(jsonNode,"enabled").asBoolean(),readJsonNode(jsonNode,"accountNonExpired").asBoolean(),readJsonNode(jsonNode,"credentialsNonExpired").asBoolean(),readJsonNode(jsonNode,"accountNonLocked").asBoolean(),authorities);###enabled###readJsonNode(jsonNode,"enabled").asBoolean()###65:3:70:5
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/CsrfConfigTests.java###/CsrfConfigTests.java###org.springframework.security.config.http.CsrfConfigTests###loginWhenDefaultConfigurationThenCsrfCleared:###this.mvc.perform(post("/login").param("username","user").param("password","password").session(session).with(csrf())).andExpect(status().isFound());###loginRequest###post("/login").param("username","user").param("password","password").session(session).with(csrf())###302:3:304:36
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceRememberMeTests.java###/NamespaceRememberMeTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceRememberMeTests###rememberMeLoginWhenKeyDeclaredThenMatchesNamespace:###CookiewithKey=this.mvc.perform(post("/login").with(rememberMeLogin())).andReturn().getResponse().getCookie("remember-me");###loginWithRememberme###post("/login").with(rememberMeLogin())###211:3:213:57
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/FormLoginConfigTests.java###/FormLoginConfigTests.java###org.springframework.security.config.http.FormLoginConfigTests###authenticateWhenLoginPageIsSlashLoginAndAuthenticationFailsThenRedirectContainsErrorParameter:###this.mvc.perform(post("/login").param("username","user").param("password","wrong").with(csrf())).andExpect(redirectedUrl("/login?error"));###loginRequest###post("/login").param("username","user").param("password","wrong").with(csrf())###205:3:209:47
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWheDenyAllConfiguredAndUserLoggedInThenRespondsWithForbidden:###this.mvc.perform(get("/").with(user("user").roles("USER"))).andExpect(status().isForbidden());###requestWithUser###get("/").with(user("user").roles("USER"))###266:3:266:97
a4a0aab66f2f185ce26c6c955722aab6afb9c2a8###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/http/HttpSecurityBeanDefinitionParser.java###/HttpSecurityBeanDefinitionParser.java###org.springframework.security.config.http.HttpSecurityBeanDefinitionParser###createSecurityContextPersistenceFilter:Element ParserContext ###Stringid=pc.getReaderContext().registerWithGeneratedName(contextRepo.getBeanDefinition());###repoBean###contextRepo.getBeanDefinition()###688:13:688:106
d93c774691e9119c90a4343aedfee7eb77766628###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/web/server/HttpSecurity.java###/HttpSecurity.java###org.springframework.security.config.web.server.HttpSecurity###build:###filters.add(newExceptionTranslationWebFilter());###exceptionTranslationWebFilter###newExceptionTranslationWebFilter()###140:4:140:53
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpLogoutTests.java###/NamespaceHttpLogoutTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpLogoutTests###logoutWhenDisabledInLambdaThenRespondsWithNotFound:###this.mvc.perform(post("/logout").with(csrf()).with(user("user"))).andExpect(status().isNotFound());###logoutRequest###post("/logout").with(csrf()).with(user("user"))###83:3:83:102
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/RememberMeConfigTests.java###/RememberMeConfigTests.java###org.springframework.security.config.http.RememberMeConfigTests###requestWithRememberMeWhenUsingCustomRememberMeParameterThenReauthenticates:###MvcResultresult=this.mvc.perform(login("user","password").param("custom-remember-me-parameter","true").with(csrf())).andExpect(redirectedUrl("/")).andReturn();###request###login("user","password").param("custom-remember-me-parameter","true").with(csrf())###224:3:226:48
d3b7a47ef81960d9400134c5ed0b90ea253ca3a2###/spring-projects_spring-security/oauth2/oauth2-client/src/test/java/org/springframework/security/oauth2/client/oidc/authentication/OidcAuthorizationCodeReactiveAuthenticationManagerTests.java###/OidcAuthorizationCodeReactiveAuthenticationManagerTests.java###org.springframework.security.oauth2.client.oidc.authentication.OidcAuthorizationCodeReactiveAuthenticationManagerTests###authenticationWhenOAuth2UserNotFoundThenEmpty:###assertThat(this.manager.authenticate(loginToken()).block()).isNull();###authorizationCodeAuthentication###loginToken()###184:3:184:72
a577871bcaf128fdcfac65e0d61e86ac94b59109###/spring-projects_spring-security/oauth2/oauth2-core/src/main/java/org/springframework/security/oauth2/core/web/reactive/function/OAuth2AccessTokenResponseBodyExtractor.java###/OAuth2AccessTokenResponseBodyExtractor.java###org.springframework.security.oauth2.core.web.reactive.function.OAuth2AccessTokenResponseBodyExtractor###oauth2AccessTokenResponse:TokenResponse ###oauth2Error=newOAuth2Error((errorObject.getCode()!=null)?errorObject.getCode():OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),(errorObject.getURI()!=null)?errorObject.getURI().toString():null);###uri###(errorObject.getURI()!=null)?errorObject.getURI().toString():null###101:4:104:79
a4a0aab66f2f185ce26c6c955722aab6afb9c2a8###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/http/HttpSecurityBeanDefinitionParser.java###/HttpSecurityBeanDefinitionParser.java###org.springframework.security.config.http.HttpSecurityBeanDefinitionParser###createSessionFixationProtectionFilter:ParserContext String BeanReference BeanReference ###Stringid=pc.getReaderContext().registerWithGeneratedName(sessionStrategy.getBeanDefinition());###strategyBean###sessionStrategy.getBeanDefinition()###931:13:931:110
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/CsrfConfigTests.java###/CsrfConfigTests.java###org.springframework.security.config.http.CsrfConfigTests###postWhenHasCsrfTokenButSessionExpiresThenRequestIsCancelledAfterSuccessfulAuthentication:###this.mvc.perform(post("/login").param("username","user").param("password","password").session(session).with(csrf())).andExpect(redirectedUrl("/"));###login###post("/login").param("username","user").param("password","password").session(session).with(csrf())###359:3:364:36
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpBasicTests.java###/NamespaceHttpBasicTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpBasicTests###basicAuthenticationWhenUsingDefaultsThenMatchesNamespace:###this.mvc.perform(get("/").with(httpBasic("user","invalid"))).andExpect(status().isUnauthorized()).andExpect(header().string(HttpHeaders.WWW_AUTHENTICATE,"Basicrealm=\"Realm\""));###requestWithInvalidPassword###get("/").with(httpBasic("user","invalid"))###69:3:70:88
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenReferrerPolicyInLambdaThenReferrerPolicyHeaderInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string("Referrer-Policy",ReferrerPolicy.NO_REFERRER.getPolicy())).andReturn();###referrerPolicy###header().string("Referrer-Policy",ReferrerPolicy.NO_REFERRER.getPolicy())###823:3:825:18
0c47bfb1e344f3feafb3372d563f68bbece3dc3e###/spring-projects_spring-security/saml2/saml2-service-provider/src/main/java/org/springframework/security/saml2/provider/service/servlet/filter/Saml2WebSsoAuthenticationRequestFilter.java###/Saml2WebSsoAuthenticationRequestFilter.java###org.springframework.security.saml2.provider.service.servlet.filter.Saml2WebSsoAuthenticationRequestFilter###createSamlRequestRedirectUrl:HttpServletRequest RelyingPartyRegistration ###Stringredirect=UriComponentsBuilder.fromUriString(relyingParty.getIdpWebSsoUrl()).queryParam("SAMLRequest",UriUtils.encode(encoded,StandardCharsets.ISO_8859_1)).queryParam("RelayState",UriUtils.encode(relayState,StandardCharsets.ISO_8859_1)).build(true).toUriString();###uriBuilder###UriComponentsBuilder.fromUriString(relyingParty.getIdpWebSsoUrl()).queryParam("SAMLRequest",UriUtils.encode(encoded,StandardCharsets.ISO_8859_1))###97:3:102:20
d10450cfb784f0233bcd65660ba2ff1677b33714###/spring-projects_spring-security/core/src/main/java/org/springframework/security/intercept/web/AbstractFilterInvocationDefinitionSource.java###/AbstractFilterInvocationDefinitionSource.java###org.springframework.security.intercept.web.AbstractFilterInvocationDefinitionSource###lookupAttributes:String ###returnnull;###attributes###null###130:9:130:21
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurerTests.java###/RequestCacheConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurerTests###postWhenRequestIsMultipartThenPostAuthenticationRedirectsToRoot:###MockHttpSessionsession=(MockHttpSession)this.mvc.perform(multipart("/upload").file(aFile)).andReturn().getRequest().getSession();###request###multipart("/upload").file(aFile)###189:3:190:32
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/FormLoginConfigurerTests.java###/FormLoginConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.FormLoginConfigurerTests###loginWhenInvalidLoginAndFailureForwardUrlThenForwardsToFailureForwardUrl:###this.mockMvc.perform(formLogin().user("invalid")).andExpect(forwardedUrl("/failure_forward_url"));###loginRequest###formLogin().user("invalid")###591:3:592:54
d3b7a47ef81960d9400134c5ed0b90ea253ca3a2###/spring-projects_spring-security/oauth2/oauth2-client/src/test/java/org/springframework/security/oauth2/client/oidc/authentication/OidcAuthorizationCodeReactiveAuthenticationManagerTests.java###/OidcAuthorizationCodeReactiveAuthenticationManagerTests.java###org.springframework.security.oauth2.client.oidc.authentication.OidcAuthorizationCodeReactiveAuthenticationManagerTests###authenticationWhenOAuth2UserFoundThenSuccess:###OAuth2LoginAuthenticationTokenresult=(OAuth2LoginAuthenticationToken)this.manager.authenticate(loginToken()).block();###authorizationCodeAuthentication###loginToken()###206:3:206:124
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpInterceptUrlTests.java###/NamespaceHttpInterceptUrlTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpInterceptUrlTests###requestWhenMappedByPostInterceptUrlThenBehaviorMatchesNamespace:###this.mvc.perform(post("/admin/post").with(authentication(user("ROLE_USER")))).andExpect(status().isForbidden());###postWithUser###post("/admin/post").with(authentication(user("ROLE_USER")))###82:3:82:115
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceRememberMeTests.java###/NamespaceRememberMeTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceRememberMeTests###rememberMeLoginWhenUsingDefaultsThenMatchesNamespace:###result=this.mvc.perform(post("/logout").with(csrf()).session(session).cookie(rememberMe)).andExpect(redirectedUrl("/login?logout")).andReturn();###logoutRequest###post("/logout").with(csrf()).session(session).cookie(rememberMe)###90:3:91:60
7a715f908601a5ee72b7d62dc5eba4b0bfc47f2b###/spring-projects_spring-security/oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/endpoint/NimbusAuthorizationCodeTokenResponseClient.java###/NimbusAuthorizationCodeTokenResponseClient.java###org.springframework.security.oauth2.client.endpoint.NimbusAuthorizationCodeTokenResponseClient###getTokenResponse:OAuth2AuthorizationCodeGrantRequest ###oauth2Error=newOAuth2Error((errorObject.getCode()!=null)?errorObject.getCode():OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),(errorObject.getURI()!=null)?errorObject.getURI().toString():null);###errorCode###(errorObject.getCode()!=null)?errorObject.getCode():OAuth2ErrorCodes.SERVER_ERROR###130:5:133:80
ce19b470e2647e9de5948759a2a5649a420eb5a4###/spring-projects_spring-security/taglibs/src/test/java/org/springframework/security/taglibs/authz/AccessControlListTagTests.java###/AccessControlListTagTests.java###org.springframework.security.taglibs.authz.AccessControlListTagTests###bodyIsSkippedIfAclDeniesAccess:###tag.setDomainObject(newObject());###domainObject###newObject()###85:9:85:43
57b5f38df12e813ce497105ac9b7d99f3afa6d4f###/spring-projects_spring-security/core/src/test/java/org/springframework/security/config/HttpSecurityBeanDefinitionParserTests.java###/HttpSecurityBeanDefinitionParserTests.java###org.springframework.security.config.HttpSecurityBeanDefinitionParserTests###checkAutoConfigFilters:List ###assertTrue(filters.next()instanceofAuthenticationProcessingFilter);###authProcFilter###filters.next()###85:9:85:78
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/saml2/Saml2LoginConfigurerTests.java###/Saml2LoginConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.saml2.Saml2LoginConfigurerTests###authenticateWhenCustomAuthenticationConverterThenUses:###this.mvc.perform(post("/login/saml2/sso/"+relyingPartyRegistration.getRegistrationId()).param("SAMLResponse",SIGNED_RESPONSE)).andExpect(redirectedUrl("/"));###request###post("/login/saml2/sso/"+relyingPartyRegistration.getRegistrationId()).param("SAMLResponse",SIGNED_RESPONSE)###201:3:202:53
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/FormLoginConfigurerTests.java###/FormLoginConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.FormLoginConfigurerTests###loginWhenCustomLoginPageAndInvalidUserThenRedirectsToCustomLoginPageWithError:###this.mockMvc.perform(formLogin("/authenticate").user("invalid")).andExpect(status().isFound()).andExpect(redirectedUrl("/authenticate?error"));###request###formLogin("/authenticate").user("invalid")###197:3:198:54
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/PermitAllSupportTests.java###/PermitAllSupportTests.java###org.springframework.security.config.annotation.web.configurers.PermitAllSupportTests###performWhenUsingPermitAllExactUrlRequestMatcherThenMatchesExactUrl:###this.mvc.perform(post("/app/abc?def").with(csrf()).contextPath("/app")).andExpect(status().isNotFound());###postWithQueryAndCsrf###post("/app/abc?def").with(csrf()).contextPath("/app")###54:3:54:108
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurerTests.java###/SessionManagementConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurerTests###loginWhenUserSessionExpiredAndMaxSessionsIsOneThenLoggedIn:###MvcResultmvcResult=this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password")).andReturn();###firstRequest###post("/login").with(csrf()).param("username","user").param("password","password")###146:3:148:18
a4a0aab66f2f185ce26c6c955722aab6afb9c2a8###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/http/HttpSecurityBeanDefinitionParser.java###/HttpSecurityBeanDefinitionParser.java###org.springframework.security.config.http.HttpSecurityBeanDefinitionParser###createAuthenticationManager:Element ParserContext ManagedList<BeanReference> BeanReference ###Stringid=pc.getReaderContext().registerWithGeneratedName(authManager.getBeanDefinition());###authMgrBean###authManager.getBeanDefinition()###377:9:377:102
5678490c1f965e7089863e39e0da5030cb8b01b3###/spring-projects_spring-security/saml2/saml2-service-provider/src/main/java/org/springframework/security/saml2/provider/service/servlet/filter/Saml2WebSsoAuthenticationFilter.java###/Saml2WebSsoAuthenticationFilter.java###org.springframework.security.saml2.provider.service.servlet.filter.Saml2WebSsoAuthenticationFilter###attemptAuthentication:HttpServletRequest HttpServletResponse ###RelyingPartyRegistrationrp=this.relyingPartyRegistrationRepository.findByRegistrationId(this.matcher.matcher(request).getVariables().get("registrationId"));###registrationId###this.matcher.matcher(request).getVariables().get("registrationId")###89:3:90:134
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenContentSecurityPolicyConfiguredThenContentSecurityPolicyHeaderInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.CONTENT_SECURITY_POLICY,"default-src'self'")).andReturn();###csp###header().string(HttpHeaders.CONTENT_SECURITY_POLICY,"default-src'self'")###292:3:293:104
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurerTests.java###/RequestCacheConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurerTests###getWhenBookmarkedRequestIsAllMediaTypeThenPostAuthenticationRemembers:###MockHttpSessionsession=(MockHttpSession)this.mvc.perform(get("/messages").header(HttpHeaders.ACCEPT,MediaType.ALL)).andExpect(redirectedUrl("http://localhost/login")).andReturn().getRequest().getSession();###request###get("/messages").header(HttpHeaders.ACCEPT,MediaType.ALL)###141:3:143:95
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ServletApiConfigurerTests.java###/ServletApiConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ServletApiConfigurerTests###servletApiWhenInvokedTwiceThenUsesOriginalRole:###this.mvc.perform(get("/admin").with(user("user").authorities(AuthorityUtils.createAuthorityList("PERMISSION_ADMIN")))).andExpect(status().isOk());###request###get("/admin").with(user("user").authorities(AuthorityUtils.createAuthorityList("PERMISSION_ADMIN")))###128:3:130:33
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenAuthorityRoleUserOrAdminRequiredAndAuthorityIsRoleOtherThenRespondsWithForbidden:###this.mvc.perform(get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_OTHER")))).andExpect(status().isForbidden());###requestWithUser###get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_OTHER")))###279:3:281:40
9afee9e4e200411f32cc0491a1d98c225ad5fec9###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/authentication/AuthenticationProviderBeanDefinitionParser.java###/AuthenticationProviderBeanDefinitionParser.java###org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParser###parse:Element ParserContext ###authProvider.getPropertyValues().addPropertyValue("passwordEncoder",pep.getPasswordEncoder());###passwordEncoder###pep.getPasswordEncoder()###48:4:49:32
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenHpkpWithMultiplePinsThenPublicKeyPinsReportOnlyHeaderWithMultiplePinsInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\";pin-sha256=\"E9CZ9INDbd+2eRQozYqqbQ2yXLVKB9+xcprMF+44U1g=\"")).andReturn();###pinsReportOnly###header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\";pin-sha256=\"E9CZ9INDbd+2eRQozYqqbQ2yXLVKB9+xcprMF+44U1g=\"")###445:3:448:18
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configuration/HttpSecurityConfigurationTests.java###/HttpSecurityConfigurationTests.java###org.springframework.security.config.annotation.web.configuration.HttpSecurityConfigurationTests###authenticateWhenDefaultFilterChainBeanThenRedirectsToSavedRequest:###this.mockMvc.perform(post("/login").param("username","user").param("password","password").session(session).with(csrf())).andExpect(redirectedUrl("http://localhost/messages"));###loginRequest###post("/login").param("username","user").param("password","password").session(session).with(csrf())###181:3:186:60
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/saml2/saml2-service-provider/src/main/java/org/springframework/security/saml2/provider/service/servlet/filter/Saml2WebSsoAuthenticationRequestFilter.java###/Saml2WebSsoAuthenticationRequestFilter.java###org.springframework.security.saml2.provider.service.servlet.filter.Saml2WebSsoAuthenticationRequestFilter###createSamlPostRequestFormData:Saml2PostAuthenticationRequest ###StringBuilderpostHtml=newStringBuilder().append("<!DOCTYPEhtml>\n").append("<html>\n").append("<head>\n").append("<metacharset=\"utf-8\"/>\n").append("</head>\n").append("<bodyonload=\"document.forms[0].submit()\">\n").append("<noscript>\n").append("<p>\n").append("<strong>Note:</strong>SinceyourbrowserdoesnotsupportJavaScript,\n").append("youmustpresstheContinuebuttononcetoproceed.\n").append("</p>\n").append("</noscript>\n").append("\n").append("<formaction=\"").append(authenticationRequestUri).append("\"method=\"post\">\n").append("<div>\n").append("<inputtype=\"hidden\"name=\"SAMLRequest\"value=\"").append(HtmlUtils.htmlEscape(samlRequest)).append("\"/>\n");###html###newStringBuilder()###194:3:212:23
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/FormLoginConfigTests.java###/FormLoginConfigTests.java###org.springframework.security.config.http.FormLoginConfigTests###authenticateWhenDefaultTargetUrlConfiguredThenRedirectsAccordingly:###this.mvc.perform(post("/login").param("username","user").param("password","password").with(csrf())).andExpect(redirectedUrl("/default"));###loginRequest###post("/login").param("username","user").param("password","password").with(csrf())###81:3:85:43
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenContentSecurityPolicyWithReportOnlyThenContentSecurityPolicyReportOnlyHeaderInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.CONTENT_SECURITY_POLICY_REPORT_ONLY,"default-src'self';script-srctrustedscripts.example.com")).andReturn();###cspReportOnly###header().string(HttpHeaders.CONTENT_SECURITY_POLICY_REPORT_ONLY,"default-src'self';script-srctrustedscripts.example.com")###301:3:304:18
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/FormLoginConfigTests.java###/FormLoginConfigTests.java###org.springframework.security.config.http.FormLoginConfigTests###authenticateWhenLoginPageIsSlashLoginAndAuthenticationFailsThenRedirectContainsErrorParameter:###this.mvc.perform(post("/login").param("username","user").param("password","wrong").with(csrf())).andExpect(redirectedUrl("/login?error"));###loginRequest###post("/login").param("username","user").param("password","wrong").with(csrf())###151:3:152:47
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenFullyAuthenticatedConfiguredAndUserThenRespondsWithOk:###this.mvc.perform(get("/").with(user("user").roles("USER"))).andExpect(status().isOk());###requestWithUser###get("/").with(user("user").roles("USER"))###294:3:294:90
ebada9fd124fb8d873171840f45f26a258c934f3###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/HttpSecurityBeanDefinitionParserTests.java###/HttpSecurityBeanDefinitionParserTests.java###org.springframework.security.config.http.HttpSecurityBeanDefinitionParserTests###concurrentSessionMaxSessionsIsCorrectlyConfigured:###seshStrategy.onAuthentication(auth,newMockHttpServletRequest(),newMockHttpServletResponse());###response###newMockHttpServletResponse()###722:13:722:110
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/FormLoginConfigurerTests.java###/FormLoginConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.FormLoginConfigurerTests###loginWhenFormLoginConfiguredThenHasDefaultUsernameAndPasswordParameterNames:###this.mockMvc.perform(formLogin().user("username","user").password("password","password")).andExpect(status().isFound()).andExpect(redirectedUrl("/"));###loginRequest###formLogin().user("username","user").password("password","password")###88:3:89:66
5bdd7571088ea7c34f90b1162cc5abcbca127ee1###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter.java###/ReferrerPolicyServerHttpHeadersWriter.java###org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter###createDelegate:ReferrerPolicy ###returnStaticServerHttpHeadersWriter.builder().header(REFERRER_POLICY,policy.getPolicy()).build();###builder###StaticServerHttpHeadersWriter.builder()###61:3:63:14
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/MiscHttpConfigTests.java###/MiscHttpConfigTests.java###org.springframework.security.config.http.MiscHttpConfigTests###loginWhenConfiguredWithNoInternalAuthenticationProvidersThenSuccessfullyAuthenticates:###this.mvc.perform(post("/login").param("username","user").param("password","password")).andExpect(redirectedUrl("/"));###loginRequest###post("/login").param("username","user").param("password","password")###626:3:629:36
7a715f908601a5ee72b7d62dc5eba4b0bfc47f2b###/spring-projects_spring-security/oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/oidc/userinfo/OidcUserService.java###/OidcUserService.java###org.springframework.security.oauth2.client.oidc.userinfo.OidcUserService###shouldRetrieveUserInfo:OidcUserRequest ###if(StringUtils.isEmpty(userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri()))###providerDetails###userRequest.getClientRegistration().getProviderDetails()###166:3:170:4
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/RememberMeConfigTests.java###/RememberMeConfigTests.java###org.springframework.security.config.http.RememberMeConfigTests###requestWithRememberMeWhenUsingCustomRememberMeParameterThenReauthenticates:###MvcResultresult=this.mvc.perform(login("user","password").param("custom-remember-me-parameter","true").with(csrf())).andExpect(redirectedUrl("/")).andReturn();###request###login("user","password").param("custom-remember-me-parameter","true").with(csrf())###305:3:310:20
5382627d4a6066c61d8a48a53715bcaaf4bbf820###/spring-projects_spring-security/core/src/test/java/org/springframework/security/providers/ldap/LdapAuthenticationProviderTests.java###/LdapAuthenticationProviderTests.java###org.springframework.security.providers.ldap.LdapAuthenticationProviderTests###testNormalUsage:###UserDetailsuser=(UserDetails)ldapProvider.authenticate(authRequest).getPrincipal();###authResult###ldapProvider.authenticate(authRequest)###101:9:101:96
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/authentication/AuthenticationManagerBuilderTests.java###/AuthenticationManagerBuilderTests.java###org.springframework.security.config.annotation.authentication.AuthenticationManagerBuilderTests###authenticationManagerWhenMultipleProvidersThenWorks:###this.mockMvc.perform(formLogin()).andExpect(authenticated().withUsername("user").withRoles("USER"));###user###authenticated().withUsername("user").withRoles("USER")###124:3:124:103
b83a4c298517231ca1fd4a7ff03ad9a1dd886b2f###/spring-projects_spring-security/oauth2/oauth2-core/src/main/java/org/springframework/security/oauth2/core/converter/ClaimTypeConverter.java###/ClaimTypeConverter.java###org.springframework.security.oauth2.core.converter.ClaimTypeConverter###convert:Map<String,Object> ###result.put(claimName,typeConverter.convert(claim));###mappedClaim###typeConverter.convert(claim)###59:5:59:57
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HttpBasicConfigurerTests.java###/HttpBasicConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HttpBasicConfigurerTests###httpBasicWhenRememberMeConfiguredThenSetsRememberMeCookie:###this.mvc.perform(get("/").with(httpBasic("user","password")).param("remember-me","true")).andExpect(cookie().exists("remember-me"));###rememberMeRequest###get("/").with(httpBasic("user","password")).param("remember-me","true")###239:3:242:48
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/OAuth2ResourceServerBeanDefinitionParserTests.java###/OAuth2ResourceServerBeanDefinitionParserTests.java###org.springframework.security.config.http.OAuth2ResourceServerBeanDefinitionParserTests###requestWhenBearerTokenResolverAllowsQueryParameterAndRequestContainsTwoTokensThenInvalidRequest:###this.mvc.perform(get("/authenticated").header("Authorization","Bearertoken").param("access_token","token")).andExpect(status().isBadRequest()).andExpect(header().string(HttpHeaders.WWW_AUTHENTICATE,containsString("invalid_request")));###request###get("/authenticated").header("Authorization","Bearertoken").param("access_token","token")###567:3:571:98
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/server/header/XXssProtectionServerHttpHeadersWriter.java###/XXssProtectionServerHttpHeadersWriter.java###org.springframework.security.web.server.header.XXssProtectionServerHttpHeadersWriter###updateDelegate:###this.delegate=StaticServerHttpHeadersWriter.builder().header(X_XSS_PROTECTION,createHeaderValue()).build();###builder###StaticServerHttpHeadersWriter.builder()###102:3:104:14
779597af2a6ed777707f08ae8106818e0b8e299e###/spring-projects_spring-security/oauth2/oauth2-client/src/test/java/org/springframework/security/oauth2/client/web/OAuth2AuthorizationRequestRedirectFilterTests.java###/OAuth2AuthorizationRequestRedirectFilterTests.java###org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilterTests###doFilterWhenAuthorizationRequestRedirectUriTemplatedThenRedirectUriExpanded:###StringrequestUri=OAuth2AuthorizationRequestRedirectFilter.DEFAULT_AUTHORIZATION_REQUEST_BASE_URI+"/"+this.registration2.getRegistrationId();###clientRegistration###this.registration2###247:3:248:49
bed3371b8085472b3c35d2dfcd025c6763d4f24b###/spring-projects_spring-security/oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/oidc/authentication/ReactiveOidcIdTokenDecoderFactory.java###/ReactiveOidcIdTokenDecoderFactory.java###org.springframework.security.oauth2.client.oidc.authentication.ReactiveOidcIdTokenDecoderFactory###createDecoder:ClientRegistration ###if(!StringUtils.hasText(clientRegistration.getProviderDetails().getJwkSetUri()))###jwkSetUri###clientRegistration.getProviderDetails().getJwkSetUri()###55:4:64:5
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###postWhenAccessRoleUserOrGetRequestConfiguredAndRoleUserThenRespondsWithOk:###this.mvc.perform(post("/").with(csrf()).with(user("user").roles("USER"))).andExpect(status().isOk());###requestWithUser###post("/").with(csrf()).with(user("user").roles("USER"))###595:3:598:33
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RememberMeConfigurerTests.java###/RememberMeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RememberMeConfigurerTests###loginWhenRememberMeTrueThenRespondsWithRememberMeCookie:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")).andExpect(cookie().exists("remember-me"));###request###post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")###206:3:211:48
8e7c540b167250119296fee3cd5f04be9925a8b2###/spring-projects_spring-security/core/src/main/java/org/springframework/security/config/LogoutBeanDefinitionParser.java###/LogoutBeanDefinitionParser.java###org.springframework.security.config.LogoutBeanDefinitionParser###doParse:Element ParserContext BeanDefinitionBuilder ###handlers.add(newSecurityContextLogoutHandler());###sclh###newSecurityContextLogoutHandler()###45:9:45:58
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenHpkpWithCustomAgeThenPublicKeyPinsReportOnlyHeaderWithCustomAgeInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=604800;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\"")).andReturn();###pinsReportOnly###header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=604800;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\"")###475:3:478:18
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpBasicTests.java###/NamespaceHttpBasicTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpBasicTests###basicAuthenticationWhenUsingDefaultsInLambdaThenMatchesNamespace:###this.mvc.perform(get("/").with(httpBasic("user","password"))).andExpect(status().isNotFound());###requestWithValidPassword###get("/").with(httpBasic("user","password"))###80:3:80:99
7739a0e91a3d3842b91c6e3fd57cfe4002811ba8###/spring-projects_spring-security/oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/endpoint/OAuth2AuthorizationCodeGrantRequestEntityConverter.java###/OAuth2AuthorizationCodeGrantRequestEntityConverter.java###org.springframework.security.oauth2.client.endpoint.OAuth2AuthorizationCodeGrantRequestEntityConverter###buildFormParameters:OAuth2AuthorizationCodeGrantRequest ###formParameters.add(OAuth2ParameterNames.REDIRECT_URI,authorizationExchange.getAuthorizationRequest().getRedirectUri());###redirectUri###authorizationExchange.getAuthorizationRequest().getRedirectUri()###77:3:77:123
00084cf986efa597fa60154dd33d26d301f04511###/spring-projects_spring-security/saml2/saml2-service-provider/src/opensaml4Main/java/org/springframework/security/saml2/provider/service/authentication/OpenSaml4AuthenticationProvider.java###/OpenSaml4AuthenticationProvider.java###org.springframework.security.saml2.provider.service.authentication.OpenSaml4AuthenticationProvider###createValidationContext:AssertionToken Consumer<Map<String,Object>> ###Stringaudience=assertionToken.token.getRelyingPartyRegistration().getEntityId();###relyingPartyRegistration###assertionToken.token.getRelyingPartyRegistration()###675:3:675:86
f5a525e740db864ea0f49cda1fad34e4f5880b20###/spring-projects_spring-security/saml2/saml2-service-provider/src/opensaml4Main/java/org/springframework/security/saml2/provider/service/authentication/OpenSaml4AuthenticationProvider.java###/OpenSaml4AuthenticationProvider.java###org.springframework.security.saml2.provider.service.authentication.OpenSaml4AuthenticationProvider###createDefaultResponseAuthenticationConverter:###returnnewSaml2Authentication(newDefaultSaml2AuthenticatedPrincipal(username,attributes),token.getSaml2Response(),AuthorityUtils.createAuthorityList("ROLE_USER"));###principal###newDefaultSaml2AuthenticatedPrincipal(username,attributes)###428:4:429:81
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/authentication/NamespaceJdbcUserServiceTests.java###/NamespaceJdbcUserServiceTests.java###org.springframework.security.config.annotation.authentication.NamespaceJdbcUserServiceTests###jdbcUserService:###this.mockMvc.perform(formLogin()).andExpect(authenticated().withUsername("user"));###user###authenticated().withUsername("user")###56:3:57:53
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/authentication/NamespaceJdbcUserServiceTests.java###/NamespaceJdbcUserServiceTests.java###org.springframework.security.config.annotation.authentication.NamespaceJdbcUserServiceTests###jdbcUserService:###this.mockMvc.perform(formLogin()).andExpect(authenticated().withUsername("user"));###user###authenticated().withUsername("user")###56:3:56:85
9654df2cc3e0945dc6696ccf5af8e531329e9e79###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/annotation/method/configuration/GlobalMethodSecuritySelector.java###/GlobalMethodSecuritySelector.java###org.springframework.security.config.annotation.method.configuration.GlobalMethodSecuritySelector###selectImports:AnnotationMetadata ###StringautoProxyClassName=AdviceMode.PROXY==mode?AutoProxyRegistrar.class.getName():GlobalMethodSecurityAspectJAutoProxyRegistrar.class.getName();###isProxy###AdviceMode.PROXY==mode###57:3:59:16
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpFormLoginTests.java###/NamespaceHttpFormLoginTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpFormLoginTests###formLoginWhenDefaultConfigurationThenMatchesNamespace:###this.mvc.perform(post("/login").param("username","user").param("password","password").with(csrf())).andExpect(redirectedUrl("/"));###loginRequest###post("/login").param("username","user").param("password","password").with(csrf())###68:3:69:36
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenHasAnyAuthorityRoleUserConfiguredAndAuthorityIsRoleAdminThenRespondsWithForbidden:###this.mvc.perform(get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_ADMIN")))).andExpect(status().isForbidden());###requestWithAdmin###get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_ADMIN")))###124:3:125:40
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/CsrfConfigurerTests.java###/CsrfConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.CsrfConfigurerTests###logoutWhenGetRequestAndGetEnabledForLogoutThenLogsOut:###this.mvc.perform(get("/logout").with(user("username"))).andExpect(unauthenticated());###logoutRequest###get("/logout").with(user("username"))###608:3:610:35
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenRegisteringRoleHierarchyAndRelatedRoleAllowedThenRespondsWithOk:###this.mvc.perform(get("/allow").with(user("user").roles("USER"))).andExpect(status().isOk());###requestWithUser###get("/allow").with(user("user").roles("USER"))###421:3:421:95
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/CsrfConfigurerTests.java###/CsrfConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.CsrfConfigurerTests###logoutWhenNoCsrfTokenThenRespondsWithForbidden:###this.mvc.perform(post("/logout").with(user("username"))).andExpect(status().isForbidden()).andExpect(authenticated());###logoutRequest###post("/logout").with(user("username"))###326:3:327:33
c64b80564e0622b60a585f95f7926af51b2721e7###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/authentication/www/DigestAuthenticationFilter.java###/DigestAuthenticationFilter.java###org.springframework.security.web.authentication.www.DigestAuthenticationFilter###doFilter:ServletRequest ServletResponse FilterChain ###SecurityContextHolder.getContext().setAuthentication(createSuccessfulAuthentication(request,user));###authentication###createSuccessfulAuthentication(request,user)###207:9:207:109
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/MiscHttpConfigTests.java###/MiscHttpConfigTests.java###org.springframework.security.config.http.MiscHttpConfigTests###loginWhenUsingCustomAuthenticationDetailsSourceRefThenAuthenticationSourcesDetailsAccordingly:###MockHttpSessionsession=(MockHttpSession)this.mvc.perform(post("/login").param("username","user").param("password","password").with(csrf())).andReturn().getRequest().getSession(false);###loginRequest###post("/login").param("username","user").param("password","password").with(csrf())###511:3:513:49
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurerTests.java###/OAuth2ResourceServerConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.OAuth2ResourceServerConfigurerTests###requestWhenBearerTokenResolverAllowsQueryParameterAndRequestContainsTwoTokensThenInvalidRequest:###this.mvc.perform(get("/authenticated").with(bearerToken(JWT_TOKEN)).param("access_token",JWT_TOKEN)).andExpect(status().isBadRequest()).andExpect(header().string(HttpHeaders.WWW_AUTHENTICATE,containsString("invalid_request")));###request###get("/authenticated").with(bearerToken(JWT_TOKEN)).param("access_token",JWT_TOKEN)###549:3:551:98
05ed028f9ddbaf4629562a4d2e8b56a0cde4967f###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/authentication/ui/DefaultLoginPageGeneratingFilter.java###/DefaultLoginPageGeneratingFilter.java###org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter###generateLoginPageHtml:HttpServletRequest boolean boolean ###sb.append("<ahref=\"").append(request.getContextPath()).append(clientAuthenticationUrlToClientName.getKey()).append("\">");###contextPath###request.getContextPath()###289:5:289:129
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenAuthorityRoleUserOrAdminRequiredAndAuthorityIsRoleUserThenRespondsWithOk:###this.mvc.perform(get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_USER")))).andExpect(status().isOk());###requestWithUser###get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_USER")))###259:3:261:33
771ef0dadcbaf0e9887a36d884167c80025654e5###/spring-projects_spring-security/core/src/main/java/org/springframework/security/jackson2/UserDeserializer.java###/UserDeserializer.java###org.springframework.security.jackson2.UserDeserializer###deserialize:JsonParser DeserializationContext ###Userresult=newUser(readJsonNode(jsonNode,"username").asText(),password.asText(""),readJsonNode(jsonNode,"enabled").asBoolean(),readJsonNode(jsonNode,"accountNonExpired").asBoolean(),readJsonNode(jsonNode,"credentialsNonExpired").asBoolean(),readJsonNode(jsonNode,"accountNonLocked").asBoolean(),authorities);###username###readJsonNode(jsonNode,"username").asText()###64:3:67:74
406bb1d4d516472314a2f431ca1365649e8cb523###/spring-projects_spring-security/ldap/src/main/java/org/springframework/security/ldap/server/ApacheDSContainer.java###/ApacheDSContainer.java###org.springframework.security.ldap.server.ApacheDSContainer###afterPropertiesSet:###server.setTransports(newTcpTransport(port));###transport###newTcpTransport(port)###133:3:133:48
e211f9b35ff631160eaaabe9d4b77841e2516d5c###/spring-projects_spring-security/openid/src/main/java/org/springframework/security/openid/OpenIDAuthenticationFilter.java###/OpenIDAuthenticationFilter.java###org.springframework.security.openid.OpenIDAuthenticationFilter###buildReturnToUrl:HttpServletRequest ###returnrequest.getRequestURL().toString();###sb###request.getRequestURL()###197:9:197:51
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenAuthorityRoleUserOrAdminRequiredAndAuthorityIsRoleAdminThenRespondsWithOk:###this.mvc.perform(get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_ADMIN")))).andExpect(status().isOk());###requestWithUser###get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_ADMIN")))###269:3:271:33
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenHpkpIncludeSubdomainThenPublicKeyPinsReportOnlyHeaderWithIncludeSubDomainsInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\";includeSubDomains")).andReturn();###pinsReportOnly###header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\";includeSubDomains")###250:3:253:18
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpBasicTests.java###/NamespaceHttpBasicTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpBasicTests###basicAuthenticationWhenUsingDefaultsInLambdaThenMatchesNamespace:###this.mvc.perform(get("/").with(httpBasic("user","invalid"))).andExpect(status().isUnauthorized()).andExpect(header().string(HttpHeaders.WWW_AUTHENTICATE,"Basicrealm=\"Realm\""));###requestWithInvalidPassword###get("/").with(httpBasic("user","invalid"))###113:3:116:88
1c4a809e093c24a0422f6d32e167a198a5e0ce42###/spring-projects_spring-security/core/src/main/java/org/springframework/security/access/expression/SecurityExpressionRoot.java###/SecurityExpressionRoot.java###org.springframework.security.access.expression.SecurityExpressionRoot###hasRole:String ###authentication.getAuthorities()###userAuthorities###authentication.getAuthorities()###35:43:35:74
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/LogoutConfigurerTests.java###/LogoutConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.LogoutConfigurerTests###logoutWhenAcceptFromChromeThenRedirectsToLogin:###this.mvc.perform(post("/logout").with(csrf()).with(user("user")).header(HttpHeaders.ACCEPT,"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8")).andExpect(status().isFound()).andExpect(redirectedUrl("/login?logout"));###request###post("/logout").with(csrf()).with(user("user")).header(HttpHeaders.ACCEPT,"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8")###438:3:442:48
85b0e468adc019435dd6a8375f936cca3d6bc00d###/spring-projects_spring-security/test/src/main/java/org/springframework/security/test/web/reactive/server/SecurityMockServerConfigurers.java###/SecurityMockServerConfigurers.java###org.springframework.security.test.web.reactive.server.SecurityMockServerConfigurers.OidcLoginMutator###afterConfigureAdded:WebTestClient.MockServerSpec<?> ###mockAuthentication(getToken()).afterConfigureAdded(serverSpec);###token###getToken()###967:4:967:67
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenPermissionCheckAndRoleDoesNotMatchThenRespondsWithForbidden:###this.mvc.perform(get("/admin").with(user("user").roles("USER"))).andExpect(status().isForbidden());###requestWithUser###get("/admin").with(user("user").roles("USER"))###717:3:719:40
5f9dfb73bec6ed4fb28d97742f7bff6df78e85ff###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/context/HttpSessionSecurityContextRepository.java###/HttpSessionSecurityContextRepository.java###org.springframework.security.web.context.HttpSessionSecurityContextRepository###loadContext:HttpRequestResponseHolder ###requestResponseHolder.setResponse(newSaveToSessionResponseWrapper(response,request,httpSession!=null,context));###wrappedResponse###newSaveToSessionResponseWrapper(response,request,httpSession!=null,context)###92:9:93:100
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpInterceptUrlTests.java###/NamespaceHttpInterceptUrlTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpInterceptUrlTests###requestWhenMappedByPostInterceptUrlThenBehaviorMatchesNamespace:###this.mvc.perform(get("/admin/post").with(authentication(user("ROLE_USER")))).andExpect(status().isOk());###getWithUser###get("/admin/post").with(authentication(user("ROLE_USER")))###90:3:92:33
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenPermissionCheckAndRoleDoesNotMatchThenRespondsWithForbidden:###this.mvc.perform(get("/admin").with(user("user").roles("USER"))).andExpect(status().isForbidden());###requestWithUser###get("/admin").with(user("user").roles("USER"))###337:3:337:102
2566abec31d251d5151c4b998af634174a68d48a###/spring-projects_spring-security/oauth2/oauth2-jose/src/test/java/org/springframework/security/oauth2/jwt/JwtDecodersTests.java###/JwtDecodersTests.java###org.springframework.security.oauth2.jwt.JwtDecodersTests###issuerWhenOAuth2ContainsTrailingSlashThenSuccess:###assertThat(JwtDecoders.fromIssuerLocation(this.issuer)).isNotNull();###jwtDecoder###JwtDecoders.fromIssuerLocation(this.issuer)###160:3:160:71
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpBasicTests.java###/NamespaceHttpBasicTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpBasicTests###basicAuthenticationWhenUsingDefaultsInLambdaThenMatchesNamespace:###this.mvc.perform(get("/").with(httpBasic("user","invalid"))).andExpect(status().isUnauthorized()).andExpect(header().string(HttpHeaders.WWW_AUTHENTICATE,"Basicrealm=\"Realm\""));###requestWithInvalidPassword###get("/").with(httpBasic("user","invalid"))###78:3:79:88
acf3966651c5c181216269521c6b331e7e73c1d9###/spring-projects_spring-security/core/src/test/java/org/springframework/security/util/FilterChainProxyTests.java###/FilterChainProxyTests.java###org.springframework.security.util.FilterChainProxyTests###normalOperationWithNewConfigRegex:###doNormalOperation((FilterChainProxy)appCtx.getBean("newFilterChainProxyRegex",FilterChainProxy.class));###filterChainProxy###(FilterChainProxy)appCtx.getBean("newFilterChainProxyRegex",FilterChainProxy.class)###136:9:136:114
2566abec31d251d5151c4b998af634174a68d48a###/spring-projects_spring-security/oauth2/oauth2-jose/src/test/java/org/springframework/security/oauth2/jwt/JwtDecodersTests.java###/JwtDecodersTests.java###org.springframework.security.oauth2.jwt.JwtDecodersTests###issuerWhenContainsTrailingSlashThenSuccess:###assertThat(JwtDecoders.fromOidcIssuerLocation(this.issuer)).isNotNull();###jwtDecoder###JwtDecoders.fromOidcIssuerLocation(this.issuer)###144:3:144:75
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurerTests.java###/SessionManagementConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurerTests###getWhenSessionFixationDisabledAndConcurrencyControlEnabledThenSessionIsNotInvalidated:###MvcResultmvcResult=this.mvc.perform(get("/").with(httpBasic("user","password")).session(session)).andExpect(status().isNotFound()).andReturn();###request###get("/").with(httpBasic("user","password")).session(session)###174:3:178:18
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceRememberMeTests.java###/NamespaceRememberMeTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceRememberMeTests###rememberMeLoginWhenKeyDeclaredThenMatchesNamespace:###CookiewithoutKey=this.mvc.perform(post("/without-key/login").with(rememberMeLogin())).andExpect(redirectedUrl("/")).andReturn().getResponse().getCookie("remember-me");###requestWithRememberme###post("/without-key/login").with(rememberMeLogin())###128:3:129:87
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/FormLoginConfigTests.java###/FormLoginConfigTests.java###org.springframework.security.config.http.FormLoginConfigTests###authenticateWhenCustomHandlerBeansConfiguredThenInvokesAccordingly:###this.mvc.perform(post("/login").param("username","user").param("password","password").with(csrf())).andExpect(status().isIAmATeapot());###loginRequest###post("/login").param("username","user").param("password","password").with(csrf())###105:3:106:41
acfe4bdcfba829b0929de703cd0b98010d775812###/spring-projects_spring-security/oauth2/oauth2-jose/src/main/java/org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder.java###/NimbusReactiveJwtDecoder.java###org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder###validateJwt:Jwt ###thrownewJwtValidationException(message,result.getErrors());###errors###result.getErrors()###189:4:189:66
fa9e7999daffd9a848c0abc9e0f30468d40b716d###/spring-projects_spring-security/web/src/test/java/org/springframework/security/web/savedrequest/SavedRequestAwareWrapperTests.java###/SavedRequestAwareWrapperTests.java###org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests###savedRequestCookiesAreReturnedIfSavedRequestIsSet:###SavedRequestAwareWrapperwrapper=createWrapper(savedRequest,newMockHttpServletRequest());###newRequest###newMockHttpServletRequest()###30:9:30:102
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/LogoutConfigurerTests.java###/LogoutConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.LogoutConfigurerTests###logoutWhenAcceptAllThenReturnsStatusNoContent:###this.mvc.perform(post("/logout").with(csrf()).with(user("user")).header(HttpHeaders.ACCEPT,MediaType.ALL_VALUE)).andExpect(status().isNoContent());###logoutRequest###post("/logout").with(csrf()).with(user("user")).header(HttpHeaders.ACCEPT,MediaType.ALL_VALUE)###426:3:430:40
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###authorizeRequestsWhenInvokedTwiceThenUsesOriginalConfiguration:###this.mvc.perform(post("/").with(csrf())).andExpect(status().isUnauthorized());###requestWithCsrf###post("/").with(csrf())###630:3:632:43
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/oidc/authentication/OidcAuthorizationCodeAuthenticationProvider.java###/OidcAuthorizationCodeAuthenticationProvider.java###org.springframework.security.oauth2.client.oidc.authentication.OidcAuthorizationCodeAuthenticationProvider###createOidcToken:ClientRegistration OAuth2AccessTokenResponse ###jwt=jwtDecoder.decode((String)accessTokenResponse.getAdditionalParameters().get(OidcParameterNames.ID_TOKEN));###parameters###accessTokenResponse.getAdditionalParameters()###223:4:223:117
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurerTests.java###/SessionManagementConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurerTests###loginWhenUserSessionExpiredAndMaxSessionsIsOneThenLoggedIn:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password")).andExpect(status().isFound()).andExpect(redirectedUrl("/"));###secondRequest###post("/login").with(csrf()).param("username","user").param("password","password")###281:3:286:36
1e864ad7645fcf6d66edd714cb4faf32f76c0716###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/annotation/method/configuration/GlobalMethodSecurityConfiguration.java###/GlobalMethodSecurityConfiguration.java###org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration###methodSecurityMetadataSource:###if(jsr250Enabled())###isJsr250Enabled###jsr250Enabled()###367:3:376:4
0ac1176152fe823318a40ddac8d143eea80d1577###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/util/MediaTypeRequestMatcher.java###/MediaTypeRequestMatcher.java###org.springframework.security.web.util.MediaTypeRequestMatcher###matches:HttpServletRequest ###if(matchingMediaType.isCompatibleWith(httpRequestMediaType))###isCompatibleWith###matchingMediaType.isCompatibleWith(httpRequestMediaType)###186:17:188:18
b8d51725c78174141407725587ff0322ff158192###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/authentication/AnonymousAuthenticationFilter.java###/AnonymousAuthenticationFilter.java###org.springframework.security.web.authentication.AnonymousAuthenticationFilter###doFilter:ServletRequest ServletResponse FilterChain ###SecurityContextHolder.getContext().setAuthentication(createAuthentication((HttpServletRequest)req));###authentication###createAuthentication((HttpServletRequest)req)###90:4:90:105
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/CsrfConfigTests.java###/CsrfConfigTests.java###org.springframework.security.config.http.CsrfConfigTests###loginWhenDefaultConfigurationThenCsrfCleared:###this.mvc.perform(post("/login").param("username","user").param("password","password").session(session).with(csrf())).andExpect(status().isFound());###loginRequest###post("/login").param("username","user").param("password","password").session(session).with(csrf())###486:3:491:35
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceRememberMeTests.java###/NamespaceRememberMeTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceRememberMeTests###rememberMeLoginWhenUserDetailsServiceDeclaredThenMatchesNamespace:###given(UserServiceRefConfig.USERDETAILS_SERVICE.loadUserByUsername("user")).willReturn(newUser("user","password",AuthorityUtils.createAuthorityList("ROLE_USER")));###user###newUser("user","password",AuthorityUtils.createAuthorityList("ROLE_USER"))###210:3:211:96
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RememberMeConfigurerTests.java###/RememberMeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RememberMeConfigurerTests###getWhenRememberMeCookieAndNoKeyConfiguredThenKeyFromRememberMeServicesIsUsed:###MvcResultmvcResult=this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")).andReturn();###loginRequest###post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")###184:3:185:78
6488295cadac85db75d8e3dc06f1d9cc5166e098###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/annotation/web/configurers/saml2/Saml2LoginConfigurer.java###/Saml2LoginConfigurer.java###org.springframework.security.config.annotation.web.configurers.saml2.Saml2LoginConfigurer.AuthenticationRequestEndpointConfig###getContextResolver:B ###returnnewDefaultSaml2AuthenticationRequestContextResolver(newDefaultRelyingPartyRegistrationResolver(Saml2LoginConfigurer.this.relyingPartyRegistrationRepository));###relyingPartyRegistrationResolver###newDefaultRelyingPartyRegistrationResolver(Saml2LoginConfigurer.this.relyingPartyRegistrationRepository)###393:5:394:70
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/LogoutConfigurerTests.java###/LogoutConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.LogoutConfigurerTests###logoutWhenInvokedTwiceThenUsesOriginalLogoutUrl:###this.mvc.perform(post("/custom/logout").with(csrf())).andExpect(status().isFound()).andExpect(redirectedUrl("/login?logout"));###logoutRequest###post("/custom/logout").with(csrf())###104:3:105:48
2a9a8a41dbec882df6b73e4cf43769bbdafbac37###/spring-projects_spring-security/core/src/test/java/org/springframework/security/ui/switchuser/SwitchUserProcessingFilterTests.java###/SwitchUserProcessingFilterTests.java###org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests###exitUserJackLordToDanoSucceeds:###filter.doFilter(request,newMockHttpServletResponse(),newMockFilterChain(false));###response###newMockHttpServletResponse()###230:9:230:93
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpOpenIDLoginTests.java###/NamespaceHttpOpenIDLoginTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpOpenIDLoginTests###openidLoginWithCustomHandlersThenBehaviorMatchesNamespace:###this.mvc.perform(post("/login/openid").with(csrf()).param("openid.identity","identity")).andExpect(redirectedUrl("/custom/failure"));###login###post("/login/openid").with(csrf()).param("openid.identity","identity")###151:3:152:50
ce19b470e2647e9de5948759a2a5649a420eb5a4###/spring-projects_spring-security/taglibs/src/test/java/org/springframework/security/taglibs/authz/AccessControlListTagTests.java###/AccessControlListTagTests.java###org.springframework.security.taglibs.authz.AccessControlListTagTests###bodyIsEvaluatedIfAclGrantsAccess:###tag.setDomainObject(newObject());###domainObject###newObject()###73:9:73:43
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configuration/OAuth2ClientConfigurationTests.java###/OAuth2ClientConfigurationTests.java###org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfigurationTests###requestWhenAuthorizedClientNotFoundAndClientCredentialsThenTokenResponseClientIsUsed:###this.mockMvc.perform(get("/authorized-client").with(authentication(authentication))).andExpect(status().isOk()).andExpect(content().string("resolved"));###authenticatedRequest###get("/authorized-client").with(authentication(authentication))###131:3:133:46
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurerTests.java###/RequestCacheConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurerTests###getWhenBookmarkedRequestIsAllMediaTypeThenPostAuthenticationRemembers:###MockHttpSessionsession=(MockHttpSession)this.mvc.perform(get("/messages").header(HttpHeaders.ACCEPT,MediaType.ALL)).andExpect(redirectedUrl("http://localhost/login")).andReturn().getRequest().getSession();###request###get("/messages").header(HttpHeaders.ACCEPT,MediaType.ALL)###206:3:210:46
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/LogoutConfigurerTests.java###/LogoutConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.LogoutConfigurerTests###logoutWhenAcceptApplicationJsonThenReturnsStatusNoContent:###this.mvc.perform(post("/logout").with(csrf()).with(user("user")).header(HttpHeaders.ACCEPT,MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNoContent());###request###post("/logout").with(csrf()).with(user("user")).header(HttpHeaders.ACCEPT,MediaType.APPLICATION_JSON_VALUE)###200:3:201:74
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/MultiHttpBlockConfigTests.java###/MultiHttpBlockConfigTests.java###org.springframework.security.config.http.MultiHttpBlockConfigTests###requestWhenUsingMutuallyExclusiveHttpElementsThenIsRoutedAccordingly:###this.mvc.perform(post("/second/login").param("username","user").param("password","password").with(csrf())).andExpect(status().isFound()).andExpect(redirectedUrl("/"));###formLoginRequest###post("/second/login").param("username","user").param("password","password").with(csrf())###62:3:67:36
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurerTests.java###/RequestCacheConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurerTests###getWhenBookmarkedRequestIsApplicationJsonThenPostAuthenticationRedirectsToRoot:###MockHttpSessionsession=(MockHttpSession)this.mvc.perform(get("/messages").header(HttpHeaders.ACCEPT,MediaType.APPLICATION_JSON)).andExpect(redirectedUrl("http://localhost/login")).andReturn().getRequest().getSession();###request###get("/messages").header(HttpHeaders.ACCEPT,MediaType.APPLICATION_JSON)###105:3:107:95
952743269d9abeb25daa1b8aea16ef1a1d382d28###/spring-projects_spring-security/oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/web/method/annotation/OAuth2AuthorizedClientArgumentResolver.java###/OAuth2AuthorizedClientArgumentResolver.java###org.springframework.security.oauth2.client.web.method.annotation.OAuth2AuthorizedClientArgumentResolver###resolveArgument:MethodParameter ModelAndViewContainer NativeWebRequest WebDataBinderFactory ###OAuth2AuthorizedClientauthorizedClient=this.authorizedClientRepository.loadAuthorizedClient(clientRegistrationId,principal,webRequest.getNativeRequest(HttpServletRequest.class));###servletRequest###webRequest.getNativeRequest(HttpServletRequest.class)###103:3:104:92
d208cf3824e46651fb8ffa8f0051e11d9047bee8###/spring-projects_spring-security/core/src/test/java/org/acegisecurity/providers/ldap/authenticator/PasswordComparisonAuthenticatorMockTests.java###/PasswordComparisonAuthenticatorMockTests.java###org.acegisecurity.providers.ldap.authenticator.PasswordComparisonAuthenticatorMockTests###testLdapCompareIsUsedWhenPasswordIsNotRetrieved:###mockCtx.expects(once()).method("getAttributes").with(eq("cn=Bob,ou=people"),NULL).will(returnValue(newBasicAttributes()));###attrs###newBasicAttributes()###48:9:49:58
1f03608b739ba61b7d334a1a37d8a5bc5add4ef2###/spring-projects_spring-security/saml2/saml2-service-provider/src/main/java/org/springframework/security/saml2/provider/service/authentication/OpenSamlAuthenticationProvider.java###/OpenSamlAuthenticationProvider.java###org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider###process:Saml2AuthenticationToken Response ###validationExceptions.put(Saml2ErrorCodes.SUBJECT_NOT_FOUND,authException(Saml2ErrorCodes.SUBJECT_NOT_FOUND,"Assertion["+firstAssertion.getID()+"]ismissingasubject"));###description###"Assertion["+firstAssertion.getID()+"]ismissingasubject"###341:4:342:74
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer.java###/OAuth2LoginConfigurer.java###org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2LoginConfigurer.OidcAuthenticationRequestChecker###authenticate:Authentication ###if(authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationRequest().getScopes().contains(OidcScopes.OPENID))###authorizationRequest###authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationRequest()###729:4:738:5
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurerTests.java###/OpenIDLoginConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.openid.OpenIDLoginConfigurerTests###requestWhenAttributeNameNotSpecifiedThenAttributeNameDefaulted:###MvcResultmvcResult=this.mvc.perform(get("/login/openid").param(OpenIDAuthenticationFilter.DEFAULT_CLAIMED_IDENTITY_FIELD,endpoint)).andExpect(status().isFound()).andReturn();###request###get("/login/openid").param(OpenIDAuthenticationFilter.DEFAULT_CLAIMED_IDENTITY_FIELD,endpoint)###147:4:149:49
d3685d89c5139e4411667f2e371ddb721ca566d7###/spring-projects_spring-security/core/src/main/java/org/springframework/security/authentication/encoding/PasswordEncoderUtils.java###/PasswordEncoderUtils.java###org.springframework.security.authentication.encoding.PasswordEncoderUtils###equals:String String ###result|=expectedBytes[i%(expectedLength!=0?expectedLength:1)]^actualBytes[i%actualLength];###actualByte###actualBytes[i%actualLength]###47:4:47:102
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurerTests.java###/SessionManagementConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurerTests###loginWhenUserLoggedInAndMaxSessionsOneInLambdaThenLoginPrevented:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password"));###firstRequest###post("/login").with(csrf()).param("username","user").param("password","password")###317:3:320:37
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RememberMeConfigurerTests.java###/RememberMeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RememberMeConfigurerTests###getWhenRememberMeCookieAndLoggedOutThenRedirectsToLogin:###this.mvc.perform(get("/abc").with(csrf()).cookie(expiredRememberMeCookie)).andExpect(redirectedUrl("http://localhost/login"));###expiredRequest###get("/abc").with(csrf()).cookie(expiredRememberMeCookie)###272:3:275:57
6eb0a4763236c8a15b3124edfc4228589f0a27a3###/spring-projects_spring-security/core/src/main/java/org/acegisecurity/intercept/web/FilterInvocation.java###/FilterInvocation.java###net.sf.acegisecurity.intercept.web.FilterInvocation###getRequestUrl:###returngetHttpRequest().getServletPath()+((getHttpRequest().getQueryString()==null)?"":("?"+getHttpRequest().getQueryString()));###queryString###getHttpRequest().getQueryString()###104:9:107:47
24caad5a67fba9c8da7154551b0a2674a82d2ebb###/spring-projects_spring-security/core/src/main/java/org/springframework/security/config/HttpSecurityBeanDefinitionParser.java###/HttpSecurityBeanDefinitionParser.java###org.springframework.security.config.HttpSecurityBeanDefinitionParser###parse:Element ParserContext ###filterChainProxy.getPropertyValues().addPropertyValue("matcher",newRegexUrlPathMatcher());###matcher###newRegexUrlPathMatcher()###124:13:124:105
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenRegisteringRoleHierarchyAndRelatedRoleAllowedThenRespondsWithOk:###this.mvc.perform(get("/allow").with(user("user").roles("USER"))).andExpect(status().isOk());###requestWithUser###get("/allow").with(user("user").roles("USER"))###969:3:971:33
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpOpenIDLoginTests.java###/NamespaceHttpOpenIDLoginTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpOpenIDLoginTests###openidLoginWithCustomHandlersThenBehaviorMatchesNamespace:###this.mvc.perform(post("/login/openid").with(csrf()).param("openid.identity","identity")).andExpect(redirectedUrl("/custom/failure"));###login###post("/login/openid").with(csrf()).param("openid.identity","identity")###243:3:245:50
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceRememberMeTests.java###/NamespaceRememberMeTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceRememberMeTests###rememberMeLoginWhenKeyDeclaredThenMatchesNamespace:###CookiewithKey=this.mvc.perform(post("/login").with(rememberMeLogin())).andReturn().getResponse().getCookie("remember-me");###loginWithRememberme###post("/login").with(rememberMeLogin())###132:3:133:31
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenContentSecurityPolicyWithReportOnlyInLambdaThenContentSecurityPolicyReportOnlyHeaderInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.CONTENT_SECURITY_POLICY_REPORT_ONLY,"default-src'self';script-srctrustedscripts.example.com")).andReturn();###csp###header().string(HttpHeaders.CONTENT_SECURITY_POLICY_REPORT_ONLY,"default-src'self';script-srctrustedscripts.example.com")###695:3:698:18
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpCustomFilterTests.java###/NamespaceHttpCustomFilterTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpCustomFilterTests.UserDetailsServiceConfig###userDetailsService:###returnnewInMemoryUserDetailsManager(User.withDefaultPasswordEncoder().username("user").password("password").roles("USER").build());###user###User.withDefaultPasswordEncoder().username("user").password("password").roles("USER").build()###196:4:197:101
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/PermitAllSupportTests.java###/PermitAllSupportTests.java###org.springframework.security.config.annotation.web.configurers.PermitAllSupportTests###performWhenUsingPermitAllExactUrlRequestMatcherThenMatchesExactUrl:###this.mvc.perform(get("/app/abc").with(csrf()).contextPath("/app")).andExpect(status().isFound());###getWithCsrf###get("/app/abc").with(csrf()).contextPath("/app")###58:3:59:36
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenHasAnyRoleUserConfiguredAndRoleIsUserThenRespondsWithOk:###this.mvc.perform(get("/").with(user("user").roles("USER"))).andExpect(status().isOk());###requestWithUser###get("/").with(user("user").roles("USER"))###186:3:186:90
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/LogoutConfigurerTests.java###/LogoutConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.LogoutConfigurerTests###logoutWhenAcceptTextHtmlThenRedirectsToLogin:###this.mvc.perform(post("/logout").with(csrf()).with(user("user")).header(HttpHeaders.ACCEPT,MediaType.TEXT_HTML_VALUE)).andExpect(status().isFound()).andExpect(redirectedUrl("/login?logout"));###logoutRequest###post("/logout").with(csrf()).with(user("user")).header(HttpHeaders.ACCEPT,MediaType.TEXT_HTML_VALUE)###401:3:406:48
a577871bcaf128fdcfac65e0d61e86ac94b59109###/spring-projects_spring-security/oauth2/oauth2-core/src/main/java/org/springframework/security/oauth2/core/web/reactive/function/OAuth2AccessTokenResponseBodyExtractor.java###/OAuth2AccessTokenResponseBodyExtractor.java###org.springframework.security.oauth2.core.web.reactive.function.OAuth2AccessTokenResponseBodyExtractor###oauth2AccessTokenResponse:TokenResponse ###oauth2Error=newOAuth2Error((errorObject.getCode()!=null)?errorObject.getCode():OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),(errorObject.getURI()!=null)?errorObject.getURI().toString():null);###code###(errorObject.getCode()!=null)?errorObject.getCode():OAuth2ErrorCodes.SERVER_ERROR###101:4:104:79
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurerTests.java###/RequestCacheConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurerTests###getWhenBookmarkedRequestIsXRequestedWithThenPostAuthenticationRedirectsToRoot:###MockHttpSessionsession=(MockHttpSession)this.mvc.perform(get("/messages").header("X-Requested-With","XMLHttpRequest")).andExpect(redirectedUrl("http://localhost/login")).andReturn().getRequest().getSession();###xRequestedWith###get("/messages").header("X-Requested-With","XMLHttpRequest")###175:3:179:46
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/JeeConfigurerTests.java###/JeeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.JeeConfigurerTests###requestWhenJeeMappableRolesInLambdaThenAuthenticatedWithMappableRoles:###this.mvc.perform(get("/").principal(user).with((request)->{request.addUserRole("ROLE_ADMIN");request.addUserRole("ROLE_USER");returnrequest;})).andExpect(authenticated().withRoles("USER"));###request###get("/").principal(user).with((request)->{request.addUserRole("ROLE_ADMIN");request.addUserRole("ROLE_USER");returnrequest;})###93:3:97:52
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/FormLoginConfigurerTests.java###/FormLoginConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.FormLoginConfigurerTests###loginWhenCustomLoginPageAndInvalidUserThenRedirectsToCustomLoginPageWithError:###this.mockMvc.perform(formLogin("/authenticate").user("invalid")).andExpect(status().isFound()).andExpect(redirectedUrl("/authenticate?error"));###request###formLogin("/authenticate").user("invalid")###337:3:339:54
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurerTests.java###/RequestCacheConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurerTests###getWhenBookmarkedRequestIsTextHtmlThenPostAuthenticationRemembers:###MockHttpSessionsession=(MockHttpSession)this.mvc.perform(get("/messages").header(HttpHeaders.ACCEPT,MediaType.TEXT_HTML)).andExpect(redirectedUrl("http://localhost/login")).andReturn().getRequest().getSession();###request###get("/messages").header(HttpHeaders.ACCEPT,MediaType.TEXT_HTML)###150:3:152:95
56ec1b4b05775e0dec27cc5c3a2ed6176d39a9d9###/spring-projects_spring-security/core/src/main/java/org/springframework/security/access/intercept/AbstractSecurityInterceptor.java###/AbstractSecurityInterceptor.java###org.springframework.security.access.intercept.AbstractSecurityInterceptor###beforeInvocation:Object ###if(logger.isDebugEnabled())###debug###logger.isDebugEnabled()###181:13:183:14
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/OpenIDConfigTests.java###/OpenIDConfigTests.java###org.springframework.security.config.http.OpenIDConfigTests###requestWhenOpenIDAndRememberMeConfiguredThenRememberMePassedToIdp:###this.mvc.perform(get("/login/openid").param(OpenIDAuthenticationFilter.DEFAULT_CLAIMED_IDENTITY_FIELD,"https://ww1.openid.com").param(AbstractRememberMeServices.DEFAULT_PARAMETER,"on")).andExpect(status().isFound()).andExpect(redirectedUrl(openIdEndpointUrl+expectedReturnTo));###openidLogin###get("/login/openid").param(OpenIDAuthenticationFilter.DEFAULT_CLAIMED_IDENTITY_FIELD,"https://ww1.openid.com").param(AbstractRememberMeServices.DEFAULT_PARAMETER,"on")###143:3:147:69
5bdd7571088ea7c34f90b1162cc5abcbca127ee1###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/server/header/XFrameOptionsServerHttpHeadersWriter.java###/XFrameOptionsServerHttpHeadersWriter.java###org.springframework.security.web.server.header.XFrameOptionsServerHttpHeadersWriter###createDelegate:Mode ###returnStaticServerHttpHeadersWriter.builder().header(X_FRAME_OPTIONS,mode.name()).build();###builder###StaticServerHttpHeadersWriter.builder()###83:3:83:95
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurerTests.java###/OAuth2ClientConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2ClientConfigurerTests###configureWhenRequestCacheProvidedAndClientAuthorizationSucceedsThenRequestCacheUsed:###this.mockMvc.perform(get("/client-1").param(OAuth2ParameterNames.CODE,"code").param(OAuth2ParameterNames.STATE,"state").with(authentication(authentication)).session(session)).andExpect(status().is3xxRedirection()).andExpect(redirectedUrl("http://localhost/client-1"));###clientRequest###get("/client-1").param(OAuth2ParameterNames.CODE,"code").param(OAuth2ParameterNames.STATE,"state").with(authentication(authentication)).session(session)###238:3:244:60
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/MiscHttpConfigTests.java###/MiscHttpConfigTests.java###org.springframework.security.config.http.MiscHttpConfigTests###authenticateWhenUsingPortMapperThenRedirectsAppropriately:###session=(MockHttpSession)this.mvc.perform(post("/login").param("username","user").param("password","password").session(session).with(csrf())).andExpect(redirectedUrl("https://localhost:9443/protected")).andReturn().getRequest().getSession(false);###loginRequest###post("/login").param("username","user").param("password","password").session(session).with(csrf())###570:3:574:24
229866e29381265748a49e7e56e9e56eb8b72b22###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/http/HttpSecurityBeanDefinitionParser.java###/HttpSecurityBeanDefinitionParser.java###org.springframework.security.config.http.HttpSecurityBeanDefinitionParser###createSessionFixationProtectionFilter:ParserContext String BeanReference BeanReference ###if(!sessionFixationAttribute.equals(OPT_SESSION_FIXATION_NO_PROTECTION))###sessionFixationProtectionRequired###!sessionFixationAttribute.equals(OPT_SESSION_FIXATION_NO_PROTECTION)###928:9:946:10
4c44bd782f76a7a7c9982206d4063e5857915c3d###/spring-projects_spring-security/core/src/test/java/org/springframework/security/ui/rememberme/PersistentTokenBasedRememberMeServicesTests.java###/PersistentTokenBasedRememberMeServicesTests.java###org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServicesTests###successfulAutoLoginCreatesNewTokenAndCookieWithSameSeries:###services.processAutoLoginCookie(newString[]{"series","token"},newMockHttpServletRequest(),newMockHttpServletResponse());###response###newMockHttpServletResponse()###56:9:57:48
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RememberMeConfigurerTests.java###/RememberMeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RememberMeConfigurerTests###getWhenRememberMeCookieAndLoggedOutThenRedirectsToLogin:###MvcResultloginMvcResult=this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")).andReturn();###loginRequest###post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")###257:3:262:18
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/MultiHttpBlockConfigTests.java###/MultiHttpBlockConfigTests.java###org.springframework.security.config.http.MultiHttpBlockConfigTests###requestWhenTargettingAuthenticationManagersToCorrespondingHttpElementsThenAuthenticationProceeds:###this.mvc.perform(post("/second/login").param("username","second").param("password","password").with(csrf())).andExpect(redirectedUrl("/"));###formLoginRequest###post("/second/login").param("username","second").param("password","password").with(csrf())###98:3:102:36
9eb34fe51cddc63ce053ecfe7a3f0fd022d52608###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/http/RememberMeBeanDefinitionParser.java###/RememberMeBeanDefinitionParser.java###org.springframework.security.config.http.RememberMeBeanDefinitionParser###parse:Element ParserContext ###if(StringUtils.hasText(useSecureCookie))###useSecureCookieSet###StringUtils.hasText(useSecureCookie)###124:13:126:14
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/CsrfConfigurerTests.java###/CsrfConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.CsrfConfigurerTests###logoutWhenNoCsrfTokenThenRespondsWithForbidden:###this.mvc.perform(post("/logout").with(user("username"))).andExpect(status().isForbidden()).andExpect(authenticated());###logoutRequest###post("/logout").with(user("username"))###576:3:579:33
95c2403968950d0301b4300ee39ae9797d5be4f3###/spring-projects_spring-security/oauth2/oauth2-resource-server/src/main/java/org/springframework/security/oauth2/server/resource/introspection/NimbusOpaqueTokenIntrospector.java###/NimbusOpaqueTokenIntrospector.java###org.springframework.security.oauth2.server.resource.introspection.NimbusOpaqueTokenIntrospector###adaptToNimbusResponse:ResponseEntity<String> ###response.setHeader(HttpHeaders.CONTENT_TYPE,responseEntity.getHeaders().getContentType().toString());###contentType###responseEntity.getHeaders().getContentType()###163:3:163:105
4984d4be650889981423c0dac9e6b48cdb134610###/spring-projects_spring-security/core/src/main/java/org/springframework/security/config/LogoutBeanDefinitionParser.java###/LogoutBeanDefinitionParser.java###org.springframework.security.config.LogoutBeanDefinitionParser###parse:Element ParserContext ###builder.setSource(parserContext.extractSource(element));###source###parserContext.extractSource(element)###41:9:41:65
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ServletApiConfigurerTests.java###/ServletApiConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ServletApiConfigurerTests###requestWhenRolePrefixInLambdaThenUsesCustomRolePrefix:###this.mvc.perform(get("/admin").with(user("user").authorities(AuthorityUtils.createAuthorityList("PERMISSION_ADMIN")))).andExpect(status().isOk());###requestWithAdminPermission###get("/admin").with(user("user").authorities(AuthorityUtils.createAuthorityList("PERMISSION_ADMIN")))###274:3:276:33
3b284231dae6e55220b02d897036f303553c0ec7###/spring-projects_spring-security/core/src/test/java/org/acegisecurity/providers/jaas/TestAuthorityGranter.java###/TestAuthorityGranter.java###net.sf.acegisecurity.providers.jaas.TestAuthorityGranter###grant:Principal ###return"ROLE_TEST";###role###"ROLE_TEST"###15:13:15:32
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpBasicTests.java###/NamespaceHttpBasicTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpBasicTests###basicAuthenticationWhenUsingDefaultsThenMatchesNamespace:###this.mvc.perform(get("/").with(httpBasic("user","password"))).andExpect(status().isNotFound());###requestWithValidPassword###get("/").with(httpBasic("user","password"))###71:3:71:99
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurerTests.java###/RequestCacheConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurerTests###getWhenBookmarkedRequestIsTextEventStreamThenPostAuthenticationRedirectsToRoot:###MockHttpSessionsession=(MockHttpSession)this.mvc.perform(get("/messages").header(HttpHeaders.ACCEPT,MediaType.TEXT_EVENT_STREAM)).andExpect(redirectedUrl("http://localhost/login")).andReturn().getRequest().getSession();###request###get("/messages").header(HttpHeaders.ACCEPT,MediaType.TEXT_EVENT_STREAM)###129:3:131:95
7bf6008efe485e3f0c93411f46b77f263150dc8f###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/web/server/ServerHttpSecurity.java###/ServerHttpSecurity.java###org.springframework.security.config.web.server.ServerHttpSecurity.OAuth2ResourceServerSpec###registerDefaultCsrfOverride:ServerHttpSecurity ###http.csrf().requireCsrfProtectionMatcher(newAndServerWebExchangeMatcher(CsrfWebFilter.DEFAULT_CSRF_MATCHER,newNegatedServerWebExchangeMatcher(this.authenticationConverterServerWebExchangeMatcher)));###matcher###newAndServerWebExchangeMatcher(CsrfWebFilter.DEFAULT_CSRF_MATCHER,newNegatedServerWebExchangeMatcher(this.authenticationConverterServerWebExchangeMatcher))###3760:5:3766:68
7bf6008efe485e3f0c93411f46b77f263150dc8f###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/http/HttpConfigurationBuilder.java###/HttpConfigurationBuilder.java###org.springframework.security.config.http.HttpConfigurationBuilder###HttpConfigurationBuilder:Element boolean ParserContext BeanReference BeanReference BeanReference ###pc.getReaderContext().error("Theuseof\"filters='none'\"isnolongersupported.Pleasedefinea"+"separate<http>elementforthepatternyouwanttoexcludeandusetheattribute"+"\"security='none'\".",pc.extractSource(urlElt));###message###"Theuseof\"filters='none'\"isnolongersupported.Pleasedefinea"+"separate<http>elementforthepatternyouwanttoexcludeandusetheattribute"+"\"security='none'\"."###184:5:187:62
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/core/src/main/java/org/springframework/security/jackson2/UserDeserializer.java###/UserDeserializer.java###org.springframework.security.jackson2.UserDeserializer###deserialize:JsonParser DeserializationContext ###Userresult=newUser(readJsonNode(jsonNode,"username").asText(),password.asText(""),readJsonNode(jsonNode,"enabled").asBoolean(),readJsonNode(jsonNode,"accountNonExpired").asBoolean(),readJsonNode(jsonNode,"credentialsNonExpired").asBoolean(),readJsonNode(jsonNode,"accountNonLocked").asBoolean(),authorities);###username###readJsonNode(jsonNode,"username").asText()###65:3:70:5
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/RememberMeConfigTests.java###/RememberMeConfigTests.java###org.springframework.security.config.http.RememberMeConfigTests###rememberAuthentication:String String ###returnthis.mvc.perform(login(username,password).param(AbstractRememberMeServices.DEFAULT_PARAMETER,"true").with(csrf())).andExpect(redirectedUrl("/"));###request###login(username,password).param(AbstractRememberMeServices.DEFAULT_PARAMETER,"true").with(csrf())###261:3:263:36
163445acebc2afe09ba44d032b6536464fac81d2###/spring-projects_spring-security/oauth2/oauth2-client/src/test/java/org/springframework/security/oauth2/client/endpoint/WebClientReactiveClientCredentialsTokenResponseClientTests.java###/WebClientReactiveClientCredentialsTokenResponseClientTests.java###org.springframework.security.oauth2.client.endpoint.WebClientReactiveClientCredentialsTokenResponseClientTests###getTokenResponseWhenPostThenSuccess:###Stringbody=this.server.takeRequest().getUtf8Body();###actualRequest###this.server.takeRequest()###98:3:98:57
bd5a64825d86441bd840ff847697e246f997f548###/spring-projects_spring-security/core/src/test/java/org/springframework/security/providers/cas/CasAuthenticationProviderTests.java###/CasAuthenticationProviderTests.java###org.springframework.security.providers.cas.CasAuthenticationProviderTests###testGettersSetters:###cap.setStatelessTicketCache(newMockStatelessTicketCache());###cache###newMockStatelessTicketCache()###277:9:277:69
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceRememberMeTests.java###/NamespaceRememberMeTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceRememberMeTests###rememberMeLoginWhenParameterSpecifiedThenMatchesNamespace:###CookierememberMe=this.mvc.perform(post("/login").with(rememberMeLogin("rememberMe",true))).andReturn().getResponse().getCookie("remember-me");###loginWithRememberme###post("/login").with(rememberMeLogin("rememberMe",true))###184:3:185:45
acf3966651c5c181216269521c6b331e7e73c1d9###/spring-projects_spring-security/core/src/test/java/org/springframework/security/util/FilterChainProxyTests.java###/FilterChainProxyTests.java###org.springframework.security.util.FilterChainProxyTests###normalOperationWithNewConfig:###doNormalOperation((FilterChainProxy)appCtx.getBean("newFilterChainProxy",FilterChainProxy.class));###filterChainProxy###(FilterChainProxy)appCtx.getBean("newFilterChainProxy",FilterChainProxy.class)###131:9:131:109
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurerTests.java###/OAuth2ClientConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2ClientConfigurerTests###configureWhenRequestCacheProvidedAndClientAuthorizationSucceedsThenRequestCacheUsed:###this.mockMvc.perform(get("/client-1").param(OAuth2ParameterNames.CODE,"code").param(OAuth2ParameterNames.STATE,"state").with(authentication(authentication)).session(session)).andExpect(status().is3xxRedirection()).andExpect(redirectedUrl("http://localhost/client-1"));###clientRequest###get("/client-1").param(OAuth2ParameterNames.CODE,"code").param(OAuth2ParameterNames.STATE,"state").with(authentication(authentication)).session(session)###205:3:207:99
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenHasAuthorityRoleUserConfiguredAndAuthorityIsRoleAdminThenRespondsWithForbidden:###this.mvc.perform(get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_ADMIN")))).andExpect(status().isForbidden());###requestWithAdmin###get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_ADMIN")))###226:3:228:40
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpBasicTests.java###/NamespaceHttpBasicTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpBasicTests###basicAuthenticationWhenUsingCustomRealmThenMatchesNamespace:###this.mvc.perform(get("/").with(httpBasic("user","invalid"))).andExpect(status().isUnauthorized()).andExpect(header().string(HttpHeaders.WWW_AUTHENTICATE,"Basicrealm=\"CustomRealm\""));###requestWithInvalidPassword###get("/").with(httpBasic("user","invalid"))###89:3:90:95
887e3361d28e2c31c0068b5b52f376b8d559fc66###/spring-projects_spring-security/core/src/test/java/org/springframework/security/access/intercept/aopalliance/MethodSecurityInterceptorTests.java###/MethodSecurityInterceptorTests.java###org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests###runAsReplacementIsCorrectlySet:###SecurityContextHolder.getContext().setAuthentication(token);###ctx###SecurityContextHolder.getContext()###279:9:279:69
6db9a3faccc51ba862f4365d812b3b6c3dbd1331###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/context/SecurityContextPersistenceFilter.java###/SecurityContextPersistenceFilter.java###org.springframework.security.web.context.SecurityContextPersistenceFilter###doFilterHttp:HttpServletRequest HttpServletResponse FilterChain ###if(logger.isDebugEnabled())###debug###logger.isDebugEnabled()###80:13:82:14
c699f7d40ecc7461fedfc94d82d28e754d01c43a###/spring-projects_spring-security/core/src/main/java/org/acegisecurity/userdetails/jdbc/JdbcDaoImpl.java###/JdbcDaoImpl.java###net.sf.acegisecurity.providers.dao.jdbc.JdbcDaoImpl###loadUserByUsername:String ###returnnewUser(user.getUsername(),user.getPassword(),user.isEnabled(),true,true,true,arrayAuths);###returnUsername###user.getUsername()###194:9:195:61
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/LogoutConfigurerTests.java###/LogoutConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.LogoutConfigurerTests###logoutWhenXMLHttpRequestThenReturnsStatusNoContent:###this.mvc.perform(post("/logout").with(csrf()).with(user("user")).header(HttpHeaders.ACCEPT,"text/html,application/json").header("X-Requested-With","XMLHttpRequest")).andExpect(status().isNoContent());###request###post("/logout").with(csrf()).with(user("user")).header(HttpHeaders.ACCEPT,"text/html,application/json").header("X-Requested-With","XMLHttpRequest")###226:3:228:40
d472e99528b5c151930bc08ccf5e22eefb4b88b4###/spring-projects_spring-security/saml2/saml2-service-provider/src/main/java/org/springframework/security/saml2/provider/service/authentication/OpenSamlAuthenticationProvider.java###/OpenSamlAuthenticationProvider.java###org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider###getUsername:Saml2AuthenticationToken Assertion ###returnnull;###username###null###173:4:173:16
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter.java###/ReferrerPolicyServerHttpHeadersWriter.java###org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter###createDelegate:ReferrerPolicy ###returnStaticServerHttpHeadersWriter.builder().header(REFERRER_POLICY,policy.getPolicy()).build();###builder###StaticServerHttpHeadersWriter.builder()###62:3:64:14
510d1b81213719302ec441943be8aba874498601###/spring-projects_spring-security/oauth2/oauth2-jose/src/main/java/org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder.java###/NimbusReactiveJwtDecoder.java###org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder###validateJwt:Jwt ###thrownewJwtValidationException(message,result.getErrors());###errors###result.getErrors()###178:4:178:66
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/MiscHttpConfigTests.java###/MiscHttpConfigTests.java###org.springframework.security.config.http.MiscHttpConfigTests###getWhenUsingX509AndPropertyPlaceholderThenSubjectPrincipalRegexIsConfigured:###this.mvc.perform(get("/protected").with(x509("classpath:org/springframework/security/config/http/MiscHttpConfigTests-certificate.pem"))).andExpect(status().isOk());###x509###x509("classpath:org/springframework/security/config/http/MiscHttpConfigTests-certificate.pem")###315:3:317:33
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenHpkpWithReportUriThenPublicKeyPinsReportOnlyHeaderWithReportUriInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\";report-uri=\"https://example.net/pkp-report\"")).andReturn();###pinsReportOnly###header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\";report-uri=\"https://example.net/pkp-report\"")###260:3:263:18
0d77abb9c1d21259e6de8c0ad543670cb35709e3###/spring-projects_spring-security/core/src/main/java/org/acegisecurity/intercept/web/FilterInvocation.java###/FilterInvocation.java###net.sf.acegisecurity.intercept.web.FilterInvocation###getRequestUrl:###returngetHttpRequest().getServletPath()+((pathInfo==null)?"":pathInfo)+((queryString==null)?"":("?"+queryString));###uri###getHttpRequest().getServletPath()###117:9:119:62
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/endpoint/NimbusAuthorizationCodeTokenResponseClient.java###/NimbusAuthorizationCodeTokenResponseClient.java###org.springframework.security.oauth2.client.endpoint.NimbusAuthorizationCodeTokenResponseClient###getTokenResponse:OAuth2AuthorizationCodeGrantRequest ###oauth2Error=newOAuth2Error(errorObject.getCode()!=null?errorObject.getCode():OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),errorObject.getURI()!=null?errorObject.getURI().toString():null);###description###errorObject.getDescription()###115:5:118:78
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenRoleUserOrAdminConfiguredAndRoleIsUserThenRespondsWithOk:###this.mvc.perform(get("/").with(user("user").roles("USER"))).andExpect(status().isOk());###requestWithUser###get("/").with(user("user").roles("USER"))###198:3:198:90
5fce0a58bdc43a336c2d9f829bc2d4cdb87049dd###/spring-projects_spring-security/core/src/test/java/org/springframework/security/access/intercept/aopalliance/MethodSecurityInterceptorTests.java###/MethodSecurityInterceptorTests.java###org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests###runAsReplacementIsCorrectlySet:###SecurityContextHolder.getContext().setAuthentication(token);###ctx###SecurityContextHolder.getContext()###254:9:254:69
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurerTests.java###/SessionManagementConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurerTests###loginWhenUserLoggedInAndMaxSessionsIsOneThenLoginPrevented:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password"));###firstRequest###post("/login").with(csrf()).param("username","user").param("password","password")###256:3:259:37
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/LogoutConfigurerTests.java###/LogoutConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.LogoutConfigurerTests###logoutWhenAcceptFromChromeThenRedirectsToLogin:###this.mvc.perform(post("/logout").with(csrf()).with(user("user")).header(HttpHeaders.ACCEPT,"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8")).andExpect(status().isFound()).andExpect(redirectedUrl("/login?logout"));###request###post("/logout").with(csrf()).with(user("user")).header(HttpHeaders.ACCEPT,"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8")###217:3:219:78
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceSessionManagementTests.java###/NamespaceSessionManagementTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceSessionManagementTests###authenticateWhenDefaultSessionManagementThenMatchesNamespace:###MvcResultresult=this.mvc.perform(get("/auth").session(session).with(httpBasic("user","password"))).andExpect(session()).andReturn();###request###get("/auth").session(session).with(httpBasic("user","password"))###87:3:88:39
bf41d487180784abb38f51241eaa10fa8ee1a191###/spring-projects_spring-security/oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/web/HttpSessionOAuth2AuthorizationRequestRepository.java###/HttpSessionOAuth2AuthorizationRequestRepository.java###org.springframework.security.oauth2.client.web.HttpSessionOAuth2AuthorizationRequestRepository###saveAuthorizationRequest:OAuth2AuthorizationRequest HttpServletRequest HttpServletResponse ###Assert.hasText(authorizationRequest.getState(),"authorizationRequest.statecannotbeempty");###state###authorizationRequest.getState()###62:3:62:97
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenCustomExpressionHandlerAndRoleDoesNotMatchThenRespondsWithForbidden:###this.mvc.perform(get("/admin").with(user("user").roles("USER"))).andExpect(status().isForbidden());###requestWithUser###get("/admin").with(user("user").roles("USER"))###780:3:782:40
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/http/HttpConfigurationBuilder.java###/HttpConfigurationBuilder.java###org.springframework.security.config.http.HttpConfigurationBuilder###HttpConfigurationBuilder:Element boolean ParserContext BeanReference BeanReference BeanReference ###pc.getReaderContext().error("Theuseof\"filters='none'\"isnolongersupported.Pleasedefinea"+"separate<http>elementforthepatternyouwanttoexcludeandusetheattribute"+"\"security='none'\".",pc.extractSource(urlElt));###message###"Theuseof\"filters='none'\"isnolongersupported.Pleasedefinea"+"separate<http>elementforthepatternyouwanttoexcludeandusetheattribute"+"\"security='none'\"."###169:5:172:62
d84542cf88b6113530da37a104a64f0e58208982###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/authentication/www/BasicAuthenticationFilter.java###/BasicAuthenticationFilter.java###org.springframework.security.web.authentication.www.BasicAuthenticationFilter###doFilter:ServletRequest ServletResponse FilterChain ###if(logger.isDebugEnabled())###debug###logger.isDebugEnabled()###117:9:119:10
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenHasAnyRoleUserConfiguredAndRoleIsAdminThenRespondsWithForbidden:###this.mvc.perform(get("/").with(user("user").roles("ADMIN"))).andExpect(status().isForbidden());###requestWithAdmin###get("/").with(user("user").roles("ADMIN"))###192:3:192:98
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/saml2/Saml2LoginConfigurerTests.java###/Saml2LoginConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.saml2.Saml2LoginConfigurerTests###authenticateWhenCustomAuthenticationConverterThenUses:###this.mvc.perform(post("/login/saml2/sso/"+relyingPartyRegistration.getRegistrationId()).param("SAMLResponse",SIGNED_RESPONSE)).andExpect(redirectedUrl("/"));###request###post("/login/saml2/sso/"+relyingPartyRegistration.getRegistrationId()).param("SAMLResponse",SIGNED_RESPONSE)###205:3:207:36
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/LogoutConfigurerTests.java###/LogoutConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.LogoutConfigurerTests###logoutWhenAcceptTextHtmlThenRedirectsToLogin:###this.mvc.perform(post("/logout").with(csrf()).with(user("user")).header(HttpHeaders.ACCEPT,MediaType.TEXT_HTML_VALUE)).andExpect(status().isFound()).andExpect(redirectedUrl("/login?logout"));###logoutRequest###post("/logout").with(csrf()).with(user("user")).header(HttpHeaders.ACCEPT,MediaType.TEXT_HTML_VALUE)###191:3:193:78
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/CsrfConfigTests.java###/CsrfConfigTests.java###org.springframework.security.config.http.CsrfConfigTests###postWhenUsingCsrfAndCustomSessionManagementAndNoSessionThenStillRedirectsToInvalidSessionUrl:###MvcResultresult=this.mvc.perform(post("/ok").param("_csrf","abc")).andExpect(redirectedUrl("/error/sessionError")).andReturn();###postToOk###post("/ok").param("_csrf","abc")###403:3:405:22
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/test/src/main/java/org/springframework/security/test/web/support/WebTestUtils.java###/WebTestUtils.java###org.springframework.security.test.web.support.WebTestUtils###getSpringSecurityFilterChain:ServletContext ###returnwebApplicationContext.getBean(AbstractSecurityWebApplicationInitializer.DEFAULT_FILTER_NAME,Filter.class);###beanName###AbstractSecurityWebApplicationInitializer.DEFAULT_FILTER_NAME###148:5:150:21
f5a525e740db864ea0f49cda1fad34e4f5880b20###/spring-projects_spring-security/saml2/saml2-service-provider/src/opensaml3Main/java/org/springframework/security/saml2/provider/service/authentication/OpenSamlAuthenticationProvider.java###/OpenSamlAuthenticationProvider.java###org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider###createDefaultResponseAuthenticationConverter:###returnnewSaml2Authentication(newDefaultSaml2AuthenticatedPrincipal(username,attributes),token.getSaml2Response(),Collections.singleton(newSimpleGrantedAuthority("ROLE_USER")));###principal###newDefaultSaml2AuthenticatedPrincipal(username,attributes)###427:4:428:96
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenCustomExpressionHandlerAndRoleMatchesThenRespondsWithOk:###this.mvc.perform(get("/user").with(user("user").roles("USER"))).andExpect(status().isOk());###requestWithUser###get("/user").with(user("user").roles("USER"))###790:3:792:33
1f03608b739ba61b7d334a1a37d8a5bc5add4ef2###/spring-projects_spring-security/saml2/saml2-service-provider/src/main/java/org/springframework/security/saml2/provider/service/servlet/filter/Saml2WebSsoAuthenticationRequestFilter.java###/Saml2WebSsoAuthenticationRequestFilter.java###org.springframework.security.saml2.provider.service.servlet.filter.Saml2WebSsoAuthenticationRequestFilter###createSamlPostRequestFormData:Saml2PostAuthenticationRequest ###StringBuilderpostHtml=newStringBuilder().append("<!DOCTYPEhtml>\n").append("<html>\n").append("<head>\n").append("<metacharset=\"utf-8\"/>\n").append("</head>\n").append("<bodyonload=\"document.forms[0].submit()\">\n").append("<noscript>\n").append("<p>\n").append("<strong>Note:</strong>SinceyourbrowserdoesnotsupportJavaScript,\n").append("youmustpresstheContinuebuttononcetoproceed.\n").append("</p>\n").append("</noscript>\n").append("\n").append("<formaction=\"").append(authenticationRequestUri).append("\"method=\"post\">\n").append("<div>\n").append("<inputtype=\"hidden\"name=\"SAMLRequest\"value=\"").append(HtmlUtils.htmlEscape(samlRequest)).append("\"/>\n");###html###newStringBuilder()###195:3:205:65
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RememberMeConfigurerTests.java###/RememberMeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RememberMeConfigurerTests###getWhenRememberMeCookieAndLoggedOutThenRedirectsToLogin:###this.mvc.perform(get("/abc").with(csrf()).cookie(expiredRememberMeCookie)).andExpect(redirectedUrl("http://localhost/login"));###expiredRequest###get("/abc").with(csrf()).cookie(expiredRememberMeCookie)###145:3:146:57
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenReferrerPolicyConfiguredWithCustomValueThenReferrerPolicyHeaderWithCustomValueInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string("Referrer-Policy",ReferrerPolicy.SAME_ORIGIN.getPolicy())).andReturn();###referrerPolicy###header().string("Referrer-Policy",ReferrerPolicy.SAME_ORIGIN.getPolicy())###850:3:852:18
771ef0dadcbaf0e9887a36d884167c80025654e5###/spring-projects_spring-security/core/src/main/java/org/springframework/security/access/method/DelegatingMethodSecurityMetadataSource.java###/DelegatingMethodSecurityMetadataSource.java###org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource.DefaultCacheKey###toString:###return"CacheKey["+((this.targetClass!=null)?this.targetClass.getName():"-")+";"+this.method+"]";###targetClassName###(this.targetClass!=null)?this.targetClass.getName():"-"###130:4:131:12
5bdd7571088ea7c34f90b1162cc5abcbca127ee1###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/context/HttpSessionSecurityContextRepository.java###/HttpSessionSecurityContextRepository.java###org.springframework.security.web.context.HttpSessionSecurityContextRepository.SaveToSessionResponseWrapper###saveContext:SecurityContext ###httpSession.removeAttribute(HttpSessionSecurityContextRepository.this.springSecurityContextKey);###springSecurityContextKey###HttpSessionSecurityContextRepository.this.springSecurityContextKey###364:6:364:102
068f4f01475b8dadf58915e411c00893207a8c4c###/spring-projects_spring-security/oauth2/oauth2-resource-server/src/main/java/org/springframework/security/oauth2/server/resource/introspection/NimbusReactiveOpaqueTokenIntrospector.java###/NimbusReactiveOpaqueTokenIntrospector.java###org.springframework.security.oauth2.server.resource.introspection.NimbusReactiveOpaqueTokenIntrospector###convertClaimsSet:TokenIntrospectionSuccessResponse ###claims.put(SCOPE,Collections.unmodifiableList(response.getScope().toStringList()));###scopes###Collections.unmodifiableList(response.getScope().toStringList())###180:4:180:88
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurerTests.java###/SessionManagementConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurerTests###loginWhenUserLoggedInAndMaxSessionsOneInLambdaThenLoginPrevented:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password")).andExpect(status().isFound()).andExpect(redirectedUrl("/login?error"));###secondRequest###post("/login").with(csrf()).param("username","user").param("password","password")###322:3:327:47
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceSessionManagementTests.java###/NamespaceSessionManagementTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceSessionManagementTests###authenticateWhenNewSessionFixationProtectionThenMatchesNamespace:###MockHttpSessionresultingSession=(MockHttpSession)this.mvc.perform(get("/auth").session(givenSession).with(httpBasic("user","password"))).andExpect(status().isNotFound()).andReturn().getRequest().getSession(false);###request###get("/auth").session(givenSession).with(httpBasic("user","password"))###207:3:209:82
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/OAuth2ResourceServerBeanDefinitionParserTests.java###/OAuth2ResourceServerBeanDefinitionParserTests.java###org.springframework.security.config.http.OAuth2ResourceServerBeanDefinitionParserTests###requestWhenBearerTokenResolverAllowsRequestBodyAndRequestContainsTwoTokensThenInvalidRequest:###this.mvc.perform(post("/authenticated").param("access_token","token").header("Authorization","Bearertoken").with(csrf())).andExpect(status().isBadRequest()).andExpect(header().string(HttpHeaders.WWW_AUTHENTICATE,containsString("invalid_request")));###request###post("/authenticated").param("access_token","token").header("Authorization","Bearertoken").with(csrf())###405:3:407:98
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/OAuth2ResourceServerBeanDefinitionParserTests.java###/OAuth2ResourceServerBeanDefinitionParserTests.java###org.springframework.security.config.http.OAuth2ResourceServerBeanDefinitionParserTests###requestWhenBearerTokenResolverAllowsQueryParameterAndRequestContainsTwoTokensThenInvalidRequest:###this.mvc.perform(get("/authenticated").header("Authorization","Bearertoken").param("access_token","token")).andExpect(status().isBadRequest()).andExpect(header().string(HttpHeaders.WWW_AUTHENTICATE,containsString("invalid_request")));###request###get("/authenticated").header("Authorization","Bearertoken").param("access_token","token")###414:3:416:98
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/FormLoginConfigurerTests.java###/FormLoginConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.FormLoginConfigurerTests###loginWhenFormLoginDefaultsInLambdaThenHasDefaultUsernameAndPasswordParameterNames:###this.mockMvc.perform(formLogin().user("username","user").password("password","password")).andExpect(status().isFound()).andExpect(redirectedUrl("/"));###loginRequest###formLogin().user("username","user").password("password","password")###127:3:128:66
1db1a3cd62419563858d48309a1f12f662248d31###/spring-projects_spring-security/core/src/main/java/org/acegisecurity/providers/ldap/DefaultInitialDirContextFactory.java###/DefaultInitialDirContextFactory.java###org.acegisecurity.providers.ldap.DefaultInitialDirContextFactory###newInitialDirContext:###returnconnect(getEnvironment());###env###getEnvironment()###133:9:133:42
068f4f01475b8dadf58915e411c00893207a8c4c###/spring-projects_spring-security/oauth2/oauth2-resource-server/src/main/java/org/springframework/security/oauth2/server/resource/introspection/NimbusOpaqueTokenIntrospector.java###/NimbusOpaqueTokenIntrospector.java###org.springframework.security.oauth2.server.resource.introspection.NimbusOpaqueTokenIntrospector###convertClaimsSet:TokenIntrospectionSuccessResponse ###claims.put(SCOPE,Collections.unmodifiableList(response.getScope().toStringList()));###scopes###Collections.unmodifiableList(response.getScope().toStringList())###219:4:219:88
4c44bd782f76a7a7c9982206d4063e5857915c3d###/spring-projects_spring-security/core/src/test/java/org/springframework/security/ui/rememberme/PersistentTokenBasedRememberMeServicesTests.java###/PersistentTokenBasedRememberMeServicesTests.java###org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServicesTests###loginSuccessCreatesNewTokenAndCookieWithNewSeries:###services.loginSuccess(newMockHttpServletRequest(),newMockHttpServletResponse(),newUsernamePasswordAuthenticationToken("joe","password"));###response###newMockHttpServletResponse()###69:9:70:107
2735a1f487961f39d287e870479e3df011986ead###/spring-projects_spring-security/cas/cas-client/src/test/java/org/springframework/security/providers/cas/cache/EhCacheBasedTicketCacheTests.java###/EhCacheBasedTicketCacheTests.java###org.springframework.security.providers.cas.cache.EhCacheBasedTicketCacheTests###testCacheOperation:###cache.putTicketInCache(getToken());###token###getToken()###78:9:78:44
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/FormLoginConfigTests.java###/FormLoginConfigTests.java###org.springframework.security.config.http.FormLoginConfigTests###authenticateWhenConfiguredWithSpelThenRedirectsAccordingly:###this.mvc.perform(post("/login").param("username","user").param("password","password").with(csrf())).andExpect(redirectedUrl(WebConfigUtilsTests.URL+"/default"));###loginRequest###post("/login").param("username","user").param("password","password").with(csrf())###83:3:84:69
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/CsrfConfigurerTests.java###/CsrfConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.CsrfConfigurerTests###loginWhenCustomCsrfTokenRepositoryThenCsrfTokenIsCleared:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password")).andExpect(redirectedUrl("/"));###loginRequest###post("/login").with(csrf()).param("username","user").param("password","password")###291:3:292:36
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ServletApiConfigurerTests.java###/ServletApiConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ServletApiConfigurerTests###requestWhenRolePrefixInLambdaThenUsesCustomRolePrefix:###this.mvc.perform(get("/admin").with(user("user").authorities(AuthorityUtils.createAuthorityList("PERMISSION_ADMIN")))).andExpect(status().isOk());###requestWithAdminPermission###get("/admin").with(user("user").authorities(AuthorityUtils.createAuthorityList("PERMISSION_ADMIN")))###152:3:154:33
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenCustomExpressionHandlerAndAuthenticationNameMatchesThenRespondsWithOk:###this.mvc.perform(get("/allow").with(user("user").roles("USER"))).andExpect(status().isOk());###requestWithUser###get("/allow").with(user("user").roles("USER"))###800:3:802:33
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/FormLoginConfigurerTests.java###/FormLoginConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.FormLoginConfigurerTests###loginWhenFormLoginConfiguredThenHasDefaultUsernameAndPasswordParameterNames:###this.mockMvc.perform(formLogin().user("username","user").password("password","password")).andExpect(status().isFound()).andExpect(redirectedUrl("/"));###loginRequest###formLogin().user("username","user").password("password","password")###118:3:120:36
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/authentication/NamespaceAuthenticationManagerTests.java###/NamespaceAuthenticationManagerTests.java###org.springframework.security.config.annotation.authentication.NamespaceAuthenticationManagerTests###authenticationMangerWhenEraseCredentialsIsFalseThenCredentialsNotNull:###this.mockMvc.perform(formLogin()).andExpect(authenticated().withAuthentication((a)->assertThat(a.getCredentials()).isNotNull()));###notNullCredentials###authenticated().withAuthentication((a)->assertThat(a.getCredentials()).isNotNull())###60:3:61:103
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RememberMeConfigurerTests.java###/RememberMeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RememberMeConfigurerTests###logoutWhenRememberMeCookieThenAuthenticationIsRememberMeCookieExpired:###MvcResultmvcResult=this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")).andReturn();###loginRequest###post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")###126:3:127:78
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configuration/SecurityReactorContextConfigurationResourceServerTests.java###/SecurityReactorContextConfigurationResourceServerTests.java###org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfigurationResourceServerTests###requestWhenNotUsingFilterThenBearerTokenNotPropagated:###this.mockMvc.perform(get("/token").with(authentication(authentication))).andExpect(status().isOk()).andExpect(content().string(""));###authenticatedRequest###get("/token").with(authentication(authentication))###76:3:79:38
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ServletApiConfigurerTests.java###/ServletApiConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ServletApiConfigurerTests###requestWhenRolePrefixInLambdaThenUsesCustomRolePrefix:###this.mvc.perform(get("/admin").with(user("user").authorities(AuthorityUtils.createAuthorityList("ROLE_ADMIN")))).andExpect(status().isForbidden());###requestWithAdminRole###get("/admin").with(user("user").authorities(AuthorityUtils.createAuthorityList("ROLE_ADMIN")))###155:3:156:40
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/PermitAllSupportTests.java###/PermitAllSupportTests.java###org.springframework.security.config.annotation.web.configurers.PermitAllSupportTests###performWhenUsingPermitAllExactUrlRequestMatcherThenMatchesExactUrl:###this.mvc.perform(get("/app/xyz?def").contextPath("/app")).andExpect(status().isFound());###getWithQuery###get("/app/xyz?def").contextPath("/app")###53:3:53:91
5bdd7571088ea7c34f90b1162cc5abcbca127ee1###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/authentication/www/DigestAuthenticationFilter.java###/DigestAuthenticationFilter.java###org.springframework.security.web.authentication.www.DigestAuthenticationFilter###doFilter:ServletRequest ServletResponse FilterChain ###fail(request,response,newBadCredentialsException(this.messages.getMessage("DigestAuthenticationFilter.usernameNotFound",newObject[]{digestAuth.getUsername()},"Username{0}notfound")));###message###this.messages.getMessage("DigestAuthenticationFilter.usernameNotFound",newObject[]{digestAuth.getUsername()},"Username{0}notfound")###180:4:182:79
ef951bae90a388217564f60529134ea9b2094b9d###/spring-projects_spring-security/test/src/main/java/org/springframework/security/test/web/support/WebTestUtils.java###/WebTestUtils.java###org.springframework.security.test.web.support.WebTestUtils###getSpringSecurityFilterChain:ServletContext ###returnwebApplicationContext.getBean(AbstractSecurityWebApplicationInitializer.DEFAULT_FILTER_NAME,Filter.class);###beanName###AbstractSecurityWebApplicationInitializer.DEFAULT_FILTER_NAME###139:5:140:21
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenHpkpWithCustomAgeThenPublicKeyPinsReportOnlyHeaderWithCustomAgeInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=604800;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\"")).andReturn();###pinsReportOnly###header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=604800;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\"")###229:3:232:18
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ServletApiConfigurerTests.java###/ServletApiConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ServletApiConfigurerTests###requestWhenServletApiWithDefaultsInLambdaThenUsesDefaultRolePrefix:###this.mvc.perform(get("/admin").with(user("user").authorities(AuthorityUtils.createAuthorityList("ROLE_ADMIN")))).andExpect(status().isOk());###request###get("/admin").with(user("user").authorities(AuthorityUtils.createAuthorityList("ROLE_ADMIN")))###145:3:146:33
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurerTests.java###/SessionManagementConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurerTests###getWhenSessionFixationDisabledAndConcurrencyControlEnabledThenSessionIsNotInvalidated:###MvcResultmvcResult=this.mvc.perform(get("/").with(httpBasic("user","password")).session(session)).andExpect(status().isNotFound()).andReturn();###request###get("/").with(httpBasic("user","password")).session(session)###117:3:118:51
218480fb7c07e40b0b141e5201f1e7a6af39f682###/spring-projects_spring-security/acl/src/main/java/org/springframework/security/acls/domain/AclImpl.java###/AclImpl.java###org.springframework.security.acls.domain.AclImpl###equals:Object ###returntrue;###result###true###308:11:308:23
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/FormLoginBeanDefinitionParserTests.java###/FormLoginBeanDefinitionParserTests.java###org.springframework.security.config.http.FormLoginBeanDefinitionParserTests###successfulLoginWhenConfiguredWithCustomAuthenticationSuccessThenForwardsAccordingly:###this.mvc.perform(post("/login").param("username","user").param("password","password")).andExpect(status().isOk()).andExpect(forwardedUrl("/success_forward_url"));###loginRequest###post("/login").param("username","user").param("password","password")###246:3:250:54
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/JeeConfigurerTests.java###/JeeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.JeeConfigurerTests###jeeWhenInvokedTwiceThenUsesOriginalMappableRoles:###this.mvc.perform(get("/").principal(user).with((request)->{request.addUserRole("ROLE_ADMIN");request.addUserRole("ROLE_USER");returnrequest;})).andExpect(authenticated().withRoles("USER"));###request###get("/").principal(user).with((request)->{request.addUserRole("ROLE_ADMIN");request.addUserRole("ROLE_USER");returnrequest;})###81:3:85:52
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenHasAuthorityRoleUserConfiguredAndAuthorityIsRoleUserThenRespondsWithOk:###this.mvc.perform(get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_USER")))).andExpect(status().isOk());###requestWithUser###get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_USER")))###137:3:138:33
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurerTests.java###/OpenIDLoginConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.openid.OpenIDLoginConfigurerTests###requestWhenAttributeNameNotSpecifiedThenAttributeNameDefaulted:###MvcResultmvcResult=this.mvc.perform(get("/login/openid").param(OpenIDAuthenticationFilter.DEFAULT_CLAIMED_IDENTITY_FIELD,endpoint)).andExpect(status().isFound()).andReturn();###request###get("/login/openid").param(OpenIDAuthenticationFilter.DEFAULT_CLAIMED_IDENTITY_FIELD,endpoint)###272:4:275:19
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenHstsConfiguredWithPreloadThenStrictTransportSecurityHeaderWithPreloadInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.STRICT_TRANSPORT_SECURITY,"max-age=31536000;includeSubDomains;preload")).andReturn();###hsts###header().string(HttpHeaders.STRICT_TRANSPORT_SECURITY,"max-age=31536000;includeSubDomains;preload")###948:3:951:18
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurerTests.java###/OAuth2ResourceServerConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.OAuth2ResourceServerConfigurerTests###requestWhenBearerTokenResolverAllowsRequestBodyAndRequestContainsTwoTokensThenInvalidRequest:###this.mvc.perform(post("/authenticated").param("access_token",JWT_TOKEN).with(bearerToken(JWT_TOKEN)).with(csrf())).andExpect(status().isBadRequest()).andExpect(header().string(HttpHeaders.WWW_AUTHENTICATE,containsString("invalid_request")));###request###post("/authenticated").param("access_token",JWT_TOKEN).with(bearerToken(JWT_TOKEN)).with(csrf())###535:3:538:98
88028d82edc2702209da3a52663004608b3c287e###/spring-projects_spring-security/test/src/main/java/org/springframework/security/test/web/servlet/request/SecurityMockMvcRequestBuilders.java###/SecurityMockMvcRequestBuilders.java###org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestBuilders.FormLoginRequestBuilder###buildRequest:ServletContext ###MockHttpServletRequestrequest=post(this.loginProcessingUrl).accept(this.acceptMediaType).param(this.usernameParam,this.username).param(this.passwordParam,this.password).buildRequest(servletContext);###loginRequest###post(this.loginProcessingUrl).accept(this.acceptMediaType).param(this.usernameParam,this.username).param(this.passwordParam,this.password)###147:4:150:36
2f67bb30322da8255a3abb5f3597671beaed0acd###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/method/GlobalMethodSecurityBeanDefinitionParser.java###/GlobalMethodSecurityBeanDefinitionParser.java###org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParser###registerMethodSecurityInterceptor:ParserContext String String BeanReference List<BeanMetadataElement> Object boolean ###bldr.addPropertyValue("authenticationManager",newRootBeanDefinition(AuthenticationManagerDelegator.class));###authMgr###newRootBeanDefinition(AuthenticationManagerDelegator.class)###318:9:318:118
f20649f0357a9d464370a398d81aa2b31d79949f###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/authentication/SavedRequestAwareAuthenticationSuccessHandler.java###/SavedRequestAwareAuthenticationSuccessHandler.java###org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler###onAuthenticationSuccess:HttpServletRequest HttpServletResponse Authentication ###if(isAlwaysUseDefaultTargetUrl()||StringUtils.hasText(request.getParameter(getTargetUrlParameter())))###targetUrlParameter###getTargetUrlParameter()###68:9:73:10
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpOpenIDLoginTests.java###/NamespaceHttpOpenIDLoginTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpOpenIDLoginTests###openidLoginWithCustomHandlersThenBehaviorMatchesNamespace:###given(OpenIDLoginCustomRefsConfig.AUDS.loadUserDetails(any(Authentication.class))).willReturn(newUser("user","password",AuthorityUtils.createAuthorityList("ROLE_USER")));###user###newUser("user","password",AuthorityUtils.createAuthorityList("ROLE_USER"))###144:3:145:96
b37d2ed9787546da877a8f9d4bd773d54de2949f###/spring-projects_spring-security/acl/src/main/java/org/springframework/security/acls/AclPermissionEvaluator.java###/AclPermissionEvaluator.java###org.springframework.security.acls.AclPermissionEvaluator###checkPermission:Authentication ObjectIdentity Object ###if(logger.isDebugEnabled())###debug###logger.isDebugEnabled()###78:17:80:18
7238097310e86e1b14a4cf00659cf95ac265f687###/spring-projects_spring-security/core/src/test/java/org/springframework/security/config/HttpSecurityBeanDefinitionParserTests.java###/HttpSecurityBeanDefinitionParserTests.java###org.springframework.security.config.HttpSecurityBeanDefinitionParserTests###checkAutoConfigFilters:List ###assertTrue(filters.next()instanceofFilterSecurityInterceptor);###fsiObj###filters.next()###100:9:100:73
f798e56d757b9e1f9b99de41d08ecb3abaa61f4f###/spring-projects_spring-security/core/src/main/java/org/acegisecurity/ui/AbstractProcessingFilter.java###/AbstractProcessingFilter.java###net.sf.acegisecurity.ui.AbstractProcessingFilter###doFilter:ServletRequest ServletResponse FilterChain ###httpResponse.sendRedirect(httpResponse.encodeRedirectURL(httpRequest.getContextPath()+authenticationFailureUrl));###failureUrl###authenticationFailureUrl###228:17:229:72
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RememberMeConfigurerTests.java###/RememberMeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RememberMeConfigurerTests###loginWhenRememberMeTrueAndCookieDomainInLambdaThenRememberMeCookieHasDomain:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")).andExpect(cookie().exists("remember-me")).andExpect(cookie().domain("remember-me","spring.io"));###loginRequest###post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")###385:3:391:61
90e5f45e1f3a2c0b1e2d63faaabf3df6b86ee34f###/spring-projects_spring-security/oauth2/oauth2-jose/src/main/java/org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder.java###/NimbusReactiveJwtDecoder.java###org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder###validateJwt:Jwt ###thrownewJwtValidationException(message,result.getErrors());###errors###result.getErrors()###184:4:184:66
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ServletApiConfigurerTests.java###/ServletApiConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ServletApiConfigurerTests###servletApiWhenInvokedTwiceThenUsesOriginalRole:###this.mvc.perform(get("/admin").with(user("user").authorities(AuthorityUtils.createAuthorityList("PERMISSION_ADMIN")))).andExpect(status().isOk());###request###get("/admin").with(user("user").authorities(AuthorityUtils.createAuthorityList("PERMISSION_ADMIN")))###205:3:207:33
b37d2ed9787546da877a8f9d4bd773d54de2949f###/spring-projects_spring-security/core/src/main/java/org/springframework/security/access/expression/method/DefaultMethodSecurityExpressionHandler.java###/DefaultMethodSecurityExpressionHandler.java###org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler###filter:Object Expression EvaluationContext ###if(logger.isDebugEnabled())###debug###logger.isDebugEnabled()###65:9:67:10
db5f1e69f1d10ad3af645aef3576a78f36932861###/spring-projects_spring-security/core/src/main/java/org/springframework/security/config/RememberMeBeanDefinitionParser.java###/RememberMeBeanDefinitionParser.java###org.springframework.security.config.RememberMeBeanDefinitionParser###parse:Element ParserContext ###services.getPropertyValues().addPropertyValue("tokenValiditySeconds",newInteger(tokenValiditySeconds));###tokenValidity###newInteger(tokenValiditySeconds)###101:17:101:122
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpBasicTests.java###/NamespaceHttpBasicTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpBasicTests###basicAuthenticationWhenUsingDefaultsThenMatchesNamespace:###this.mvc.perform(get("/").with(httpBasic("user","invalid"))).andExpect(status().isUnauthorized()).andExpect(header().string(HttpHeaders.WWW_AUTHENTICATE,"Basicrealm=\"Realm\""));###requestWithInvalidPassword###get("/").with(httpBasic("user","invalid"))###71:3:74:88
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/FormLoginConfigurerTests.java###/FormLoginConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.FormLoginConfigurerTests###loginWhenInvalidLoginAndFailureForwardUrlThenForwardsToFailureForwardUrl:###this.mockMvc.perform(formLogin().user("invalid")).andExpect(forwardedUrl("/failure_forward_url"));###loginRequest###formLogin().user("invalid")###257:3:257:101
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/CsrfConfigurerTests.java###/CsrfConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.CsrfConfigurerTests###loginWhenNoCsrfTokenThenRespondsWithForbidden:###this.mvc.perform(post("/login").param("username","user").param("password","password")).andExpect(status().isForbidden()).andExpect(unauthenticated());###loginRequest###post("/login").param("username","user").param("password","password")###319:3:320:69
a9a86cd826a61bff3633457f7c4d04673722b140###/spring-projects_spring-security/web/src/test/java/org/springframework/security/web/util/matcher/MediaTypeRequestMatcherTests.java###/MediaTypeRequestMatcherTests.java###org.springframework.security.web.util.matcher.MediaTypeRequestMatcherTests###constructorNullCNSVarargs:###newMediaTypeRequestMatcher(null,MediaType.ALL);###c###null###57:3:57:52
76dc21469e8ef207f122ecc7e191e0133a2600af###/spring-projects_spring-security/core/src/test/java/org/springframework/security/intercept/method/aopalliance/MethodSecurityInterceptorTests.java###/MethodSecurityInterceptorTests.java###org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests###testMethodCallWithRunAsReplacement:###SecurityContextHolder.getContext().setAuthentication(token);###ctx###SecurityContextHolder.getContext()###169:9:169:69
061f69eb70075d8b417d4688af42bcd1a8553cff###/spring-projects_spring-security/core/src/main/java/org/springframework/security/authorization/method/AuthorizationManagerAfterMethodInterceptor.java###/AuthorizationManagerAfterMethodInterceptor.java###org.springframework.security.authorization.method.AuthorizationManagerAfterMethodInterceptor###attemptAuthorization:MethodInvocation Object ###AuthorizationDecisiondecision=this.authorizationManager.check(AUTHENTICATION_SUPPLIER,newMethodInvocationResult(mi,result));###object###newMethodInvocationResult(mi,result)###145:3:146:45
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/authentication/www/DigestAuthenticationFilter.java###/DigestAuthenticationFilter.java###org.springframework.security.web.authentication.www.DigestAuthenticationFilter###doFilter:ServletRequest ServletResponse FilterChain ###fail(request,response,newNonceExpiredException(this.messages.getMessage("DigestAuthenticationFilter.nonceExpired","Noncehasexpired/timedout")));###message###this.messages.getMessage("DigestAuthenticationFilter.nonceExpired","Noncehasexpired/timedout")###217:4:220:41
9cfb890207d5f037b274755efe9ff134f669da25###/spring-projects_spring-security/oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/authentication/AuthorizationCodeAuthenticationProvider.java###/AuthorizationCodeAuthenticationProvider.java###org.springframework.security.oauth2.client.authentication.AuthorizationCodeAuthenticationProvider###authenticate:Authentication ###OAuth2AuthenticationTokenaccessTokenAuthentication=newOAuth2AuthenticationToken(authorizationCodeAuthentication.getClientRegistration(),accessToken);###clientRegistration###authorizationCodeAuthentication.getClientRegistration()###95:3:96:75
070514b9ddf002418a48b9a59d4a273813f21fd8###/spring-projects_spring-security/saml2/saml2-service-provider/src/opensaml4Main/java/org/springframework/security/saml2/provider/service/authentication/OpenSaml4AuthenticationProvider.java###/OpenSaml4AuthenticationProvider.java###org.springframework.security.saml2.provider.service.authentication.OpenSaml4AuthenticationProvider###createValidationContext:AssertionToken Consumer<Map<String,Object>> ###RelyingPartyRegistrationrelyingPartyRegistration=assertionToken.token.getRelyingPartyRegistration();###token###assertionToken.token###777:3:777:106
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceSessionManagementTests.java###/NamespaceSessionManagementTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceSessionManagementTests###authenticateWhenUsingCustomInvalidSessionStrategyThenMatchesNamespace:###this.mvc.perform(get("/auth").with((request)->{request.setRequestedSessionIdValid(false);request.setRequestedSessionId("id");returnrequest;})).andExpect(status().isOk());###request###get("/auth").with((request)->{request.setRequestedSessionIdValid(false);request.setRequestedSessionId("id");returnrequest;})###147:3:151:34
51995dc1873d9cb3901d619a9a6d2182d81247b8###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer.java###/SessionManagementConfigurer.java###org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurer###configure:H ###sessionManagementFilter.setInvalidSessionStrategy(getInvalidSessionStrategy());###strategy###getInvalidSessionStrategy()###405:4:406:62
1c8d28501c6e7bf68f6a8f1c3027e88b256a7acb###/spring-projects_spring-security/ldap/src/test/java/org/springframework/security/ldap/populator/UserDetailsServiceLdapAuthoritiesPopulatorTests.java###/UserDetailsServiceLdapAuthoritiesPopulatorTests.java###org.springframework.security.ldap.populator.UserDetailsServiceLdapAuthoritiesPopulatorTests###delegationToUserDetailsServiceReturnsCorrectRoles:###when(user.getAuthorities()).thenReturn(AuthorityUtils.createAuthorityList("ROLE_USER"));###authorities###AuthorityUtils.createAuthorityList("ROLE_USER")###26:9:26:97
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurerTests.java###/SessionManagementConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurerTests###authenticateWhenNewSessionFixationProtectionInLambdaThenCreatesNewSession:###MockHttpSessionresultingSession=(MockHttpSession)this.mvc.perform(get("/auth").session(givenSession).with(httpBasic("user","password"))).andExpect(status().isNotFound()).andReturn().getRequest().getSession(false);###request###get("/auth").session(givenSession).with(httpBasic("user","password"))###215:3:220:51
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenHstsConfiguredWithPreloadThenStrictTransportSecurityHeaderWithPreloadInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.STRICT_TRANSPORT_SECURITY,"max-age=31536000;includeSubDomains;preload")).andReturn();###hsts###header().string(HttpHeaders.STRICT_TRANSPORT_SECURITY,"max-age=31536000;includeSubDomains;preload")###395:3:397:18
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/MultiHttpBlockConfigTests.java###/MultiHttpBlockConfigTests.java###org.springframework.security.config.http.MultiHttpBlockConfigTests###requestWhenTargettingAuthenticationManagersToCorrespondingHttpElementsThenAuthenticationProceeds:###this.mvc.perform(get("/first").with(httpBasic("first","password")).with(csrf())).andExpect(status().isOk());###basicLoginRequest###get("/first").with(httpBasic("first","password")).with(csrf())###83:3:83:112
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpFormLoginTests.java###/NamespaceHttpFormLoginTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpFormLoginTests###formLoginWhenDefaultConfigurationThenMatchesNamespace:###this.mvc.perform(post("/login").param("username","user").param("password","password").with(csrf())).andExpect(redirectedUrl("/"));###loginRequest###post("/login").param("username","user").param("password","password").with(csrf())###74:3:78:36
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpFormLoginTests.java###/NamespaceHttpFormLoginTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpFormLoginTests###formLoginWithCustomHandlersThenBehaviorMatchesNamespace:###this.mvc.perform(post("/login").param("username","user").param("password","password").with(csrf())).andExpect(redirectedUrl("/custom/targetUrl"));###loginRequest###post("/login").param("username","user").param("password","password").with(csrf())###149:3:153:52
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/OAuth2ResourceServerBeanDefinitionParserTests.java###/OAuth2ResourceServerBeanDefinitionParserTests.java###org.springframework.security.config.http.OAuth2ResourceServerBeanDefinitionParserTests###getWhenIntrospectionFailsThenUnauthorized:###this.mvc.perform(get("/").header("Authorization","Bearertoken")).andExpect(status().isUnauthorized()).andExpect(header().string(HttpHeaders.WWW_AUTHENTICATE,containsString("Providedtokenisn'tactive")));###request###get("/").header("Authorization","Bearertoken")###540:3:542:101
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurerTests.java###/SessionManagementConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurerTests###loginWhenUserSessionExpiredAndMaxSessionsIsOneThenLoggedIn:###MvcResultmvcResult=this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password")).andReturn();###firstRequest###post("/login").with(csrf()).param("username","user").param("password","password")###273:3:277:18
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceSessionManagementTests.java###/NamespaceSessionManagementTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceSessionManagementTests###authenticateWhenNoSessionFixationProtectionThenMatchesNamespace:###MockHttpSessionresultingSession=(MockHttpSession)this.mvc.perform(get("/auth").session(givenSession).with(httpBasic("user","password"))).andExpect(status().isOk()).andReturn().getRequest().getSession(false);###request###get("/auth").session(givenSession).with(httpBasic("user","password"))###272:3:277:51
16e17d242e1f13b2e3c337d7c516114bf0cbbbd3###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/annotation/web/configurers/saml2/Saml2LoginConfigurer.java###/Saml2LoginConfigurer.java###org.springframework.security.config.annotation.web.configurers.saml2.Saml2LoginConfigurer.AuthenticationRequestEndpointConfig###build:B ###returnpostProcess(newSaml2WebSsoAuthenticationRequestFilter(contextResolver,authenticationRequestResolver));###filter###newSaml2WebSsoAuthenticationRequestFilter(contextResolver,authenticationRequestResolver)###351:4:352:98
24950258451f07ad03de0bb400b5bcb1d3888f25###/spring-projects_spring-security/samples/boot/authcodegrant-webflux/src/main/java/sample/config/WebClientConfig.java###/WebClientConfig.java###sample.config.WebClientConfig###webClient:ReactiveClientRegistrationRepository ServerOAuth2AuthorizedClientRepository ###returnWebClient.builder().filter(newServerOAuth2AuthorizedClientExchangeFilterFunction(clientRegistrationRepository,authorizedClientRepository)).build();###oauth###newServerOAuth2AuthorizedClientExchangeFilterFunction(clientRegistrationRepository,authorizedClientRepository)###36:3:38:14
8e615d0feed958c7bfd7aeb8cbb55ff2ce04f6db###/spring-projects_spring-security/oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/endpoint/DefaultClientCredentialsTokenResponseClient.java###/DefaultClientCredentialsTokenResponseClient.java###org.springframework.security.oauth2.client.endpoint.DefaultClientCredentialsTokenResponseClient###buildRequest:OAuth2ClientCredentialsGrantRequest ###URIuri=UriComponentsBuilder.fromUriString(clientCredentialsGrantRequest.getClientRegistration().getProviderDetails().getTokenUri()).build().toUri();###clientRegistration###clientCredentialsGrantRequest.getClientRegistration()###157:3:159:14
b1d013e8f0ffebce8c3a736e93ec34575487a10c###/spring-projects_spring-security/core/src/test/java/org/springframework/security/jackson2/SecurityContextMixinTests.java###/SecurityContextMixinTests.java###org.springframework.security.jackson2.SecurityContextMixinTests###securityContextDeserializeTest:###assertThat(context.getAuthentication().getAuthorities()).hasSize(1).contains(newSimpleGrantedAuthority("ROLE_USER"));###authorities###context.getAuthentication().getAuthorities()###62:3:62:121
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/CsrfConfigurerTests.java###/CsrfConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.CsrfConfigurerTests###csrfAuthenticationStrategyConfiguredThenStrategyUsed:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password")).andExpect(redirectedUrl("/"));###loginRequest###post("/login").with(csrf()).param("username","user").param("password","password")###734:3:738:36
2566abec31d251d5151c4b998af634174a68d48a###/spring-projects_spring-security/oauth2/oauth2-jose/src/test/java/org/springframework/security/oauth2/jwt/JwtDecodersTests.java###/JwtDecodersTests.java###org.springframework.security.oauth2.jwt.JwtDecodersTests###issuerWhenOidcFallbackContainsTrailingSlashThenSuccess:###assertThat(JwtDecoders.fromIssuerLocation(this.issuer)).isNotNull();###jwtDecoder###JwtDecoders.fromIssuerLocation(this.issuer)###152:3:152:71
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/CsrfConfigTests.java###/CsrfConfigTests.java###org.springframework.security.config.http.CsrfConfigTests###getWhenHasCsrfTokenButSessionExpiresThenRequestIsRememeberedAfterSuccessfulAuthentication:###this.mvc.perform(post("/login").param("username","user").param("password","password").session(session).with(csrf())).andExpect(redirectedUrl("http://localhost/authenticated"));###login###post("/login").param("username","user").param("password","password").session(session).with(csrf())###384:3:389:65
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###configureWhenContentSecurityPolicyNoPolicyDirectivesInLambdaThenDefaultHeaderValue:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.CONTENT_SECURITY_POLICY,"default-src'self'")).andReturn();###csp###header().string(HttpHeaders.CONTENT_SECURITY_POLICY,"default-src'self'")###772:3:775:18
6894ff5d12de93d9f06b328d5cd4d34041c60cff###/spring-projects_spring-security/oauth2/oauth2-client/src/test/java/org/springframework/security/oauth2/client/userinfo/DelegatingOAuth2UserServiceTests.java###/DelegatingOAuth2UserServiceTests.java###org.springframework.security.oauth2.client.userinfo.DelegatingOAuth2UserServiceTests###loadUserWhenUserRequestIsNullThenThrowIllegalArgumentException:###DelegatingOAuth2UserService<OAuth2UserRequest,OAuth2User>delegatingUserService=newDelegatingOAuth2UserService<>(Arrays.asList(mock(OAuth2UserService.class),mock(OAuth2UserService.class)));###userService###mock(OAuth2UserService.class)###50:3:51:82
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenAuthorityRoleUserOrAdminRequiredAndAuthorityIsRoleAdminThenRespondsWithOk:###this.mvc.perform(get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_ADMIN")))).andExpect(status().isOk());###requestWithUser###get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_ADMIN")))###165:3:166:33
5bdd7571088ea7c34f90b1162cc5abcbca127ee1###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/authentication/www/DigestAuthenticationFilter.java###/DigestAuthenticationFilter.java###org.springframework.security.web.authentication.www.DigestAuthenticationFilter###doFilter:ServletRequest ServletResponse FilterChain ###fail(request,response,newNonceExpiredException(this.messages.getMessage("DigestAuthenticationFilter.nonceExpired","Noncehasexpired/timedout")));###message###this.messages.getMessage("DigestAuthenticationFilter.nonceExpired","Noncehasexpired/timedout")###204:4:205:94
371221d7297a073c6248ea1b4e4f7c4495a714c4###/spring-projects_spring-security/oauth2/oauth2-client/src/test/java/org/springframework/security/oauth2/client/web/OAuth2AuthorizationCodeGrantFilterTests.java###/OAuth2AuthorizationCodeGrantFilterTests.java###org.springframework.security.oauth2.client.web.OAuth2AuthorizationCodeGrantFilterTests###setUp:###securityContext.setAuthentication(newTestingAuthenticationToken(this.principalName1,"password"));###authentication###newTestingAuthenticationToken(this.principalName1,"password")###102:3:102:102
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenAnonymousConfiguredAndLoggedInUserThenRespondsWithForbidden:###this.mvc.perform(get("/").with(user("user"))).andExpect(status().isForbidden());###requestWithUser###get("/").with(user("user"))###426:3:428:40
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurerTests.java###/OAuth2ClientConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2ClientConfigurerTests###configureWhenAuthorizationCodeResponseSuccessThenAuthorizedClientSaved:###this.mockMvc.perform(get("/client-1").param(OAuth2ParameterNames.CODE,"code").param(OAuth2ParameterNames.STATE,"state").with(authentication(authentication)).session(session)).andExpect(status().is3xxRedirection()).andExpect(redirectedUrl("http://localhost/client-1"));###clientRequest###get("/client-1").param(OAuth2ParameterNames.CODE,"code").param(OAuth2ParameterNames.STATE,"state").with(authentication(authentication)).session(session)###168:3:170:99
7a715f908601a5ee72b7d62dc5eba4b0bfc47f2b###/spring-projects_spring-security/oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/endpoint/NimbusAuthorizationCodeTokenResponseClient.java###/NimbusAuthorizationCodeTokenResponseClient.java###org.springframework.security.oauth2.client.endpoint.NimbusAuthorizationCodeTokenResponseClient###getTokenResponse:OAuth2AuthorizationCodeGrantRequest ###oauth2Error=newOAuth2Error((errorObject.getCode()!=null)?errorObject.getCode():OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),(errorObject.getURI()!=null)?errorObject.getURI().toString():null);###description###errorObject.getDescription()###130:5:133:80
779597af2a6ed777707f08ae8106818e0b8e299e###/spring-projects_spring-security/oauth2/oauth2-client/src/test/java/org/springframework/security/oauth2/client/web/OAuth2AuthorizationRequestRedirectFilterTests.java###/OAuth2AuthorizationRequestRedirectFilterTests.java###org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilterTests###doFilterWhenAuthorizationRequestIncludesPort443ThenExpandedRedirectUriExcludesPort:###StringrequestUri=OAuth2AuthorizationRequestRedirectFilter.DEFAULT_AUTHORIZATION_REQUEST_BASE_URI+"/"+this.registration1.getRegistrationId();###clientRegistration###this.registration1###296:3:297:49
05ed028f9ddbaf4629562a4d2e8b56a0cde4967f###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/authentication/ui/DefaultLoginPageGeneratingFilter.java###/DefaultLoginPageGeneratingFilter.java###org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter###generateLoginPageHtml:HttpServletRequest boolean boolean ###sb.append("<ahref=\"").append(request.getContextPath()).append(clientAuthenticationUrlToClientName.getKey()).append("\">");###url###clientAuthenticationUrlToClientName.getKey()###289:5:289:129
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpFormLoginTests.java###/NamespaceHttpFormLoginTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpFormLoginTests###formLoginWithCustomEndpointsThenBehaviorMatchesNamespace:###this.mvc.perform(post("/authentication/login/process").param("username","user").param("password","password").with(csrf())).andExpect(redirectedUrl("/default"));###request###post("/authentication/login/process").param("username","user").param("password","password").with(csrf())###112:3:116:43
2a5bd6e7199e5a3e4e7b275980160ac2bacd2871###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/annotation/web/configuration/OAuth2ImportSelector.java###/OAuth2ImportSelector.java###org.springframework.security.config.annotation.web.configuration.OAuth2ImportSelector###selectImports:AnnotationMetadata ###if(ClassUtils.isPresent("org.springframework.security.oauth2.client.registration.ClientRegistration",getClass().getClassLoader()))###oauth2ClientPresent###ClassUtils.isPresent("org.springframework.security.oauth2.client.registration.ClientRegistration",getClass().getClassLoader())###42:3:45:4
1be44ecd18692a0ae6a85d925d4f94ef42326906###/spring-projects_spring-security/aspects/src/test/java/org/springframework/security/access/intercept/aspectj/aspect/AnnotationSecurityAspectTests.java###/AnnotationSecurityAspectTests.java###org.springframework.security.access.intercept.aspectj.aspect.AnnotationSecurityAspectTests###denyAllPreAuthorizeDeniesAccess:###interceptor.setSecurityMetadataSource(newPrePostAnnotationSecurityMetadataSource(newExpressionBasedAnnotationAttributeFactory(newDefaultMethodSecurityExpressionHandler())));###eh###newDefaultMethodSecurityExpressionHandler()###78:9:79:111
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenFeaturePolicyConfiguredThenFeaturePolicyHeaderInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string("Feature-Policy","geolocation'self'")).andReturn();###featurePolicy###header().string("Feature-Policy","geolocation'self'")###902:3:904:18
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceRememberMeTests.java###/NamespaceRememberMeTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceRememberMeTests###rememberMeLoginWhenKeyDeclaredThenMatchesNamespace:###this.mvc.perform(get("/somewhere").cookie(withoutKey)).andExpect(status().isFound()).andExpect(redirectedUrl("http://localhost/login"));###somewhereRequest###get("/somewhere").cookie(withoutKey)###130:3:131:57
d10450cfb784f0233bcd65660ba2ff1677b33714###/spring-projects_spring-security/core/src/main/java/org/springframework/security/config/HttpSecurityBeanDefinitionParser.java###/HttpSecurityBeanDefinitionParser.java###org.springframework.security.config.HttpSecurityBeanDefinitionParser###parse:Element ParserContext ###if(patternType.equals(OPT_PATH_TYPE_REGEX))###useRegex###patternType.equals(OPT_PATH_TYPE_REGEX)###139:9:155:10
68ee9aaabb5b5c9af01e46ffe2cd214f30928647###/spring-projects_spring-security/adapters/jboss/src/main/java/org/acegisecurity/adapters/jboss/JbossAcegiLoginModule.java###/JbossAcegiLoginModule.java###net.sf.acegisecurity.adapters.jboss.JbossAcegiLoginModule###initialize:Subject CallbackHandler Map Map ###ClassPathXmlApplicationContextctx=newClassPathXmlApplicationContext((String)options.get("appContextLocation"));###appContextLocation###(String)options.get("appContextLocation")###74:9:75:45
68d836d508402d04183f347c7b4d038fa6bd8cc5###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/web/server/ServerHttpSecurity.java###/ServerHttpSecurity.java###org.springframework.security.config.web.server.ServerHttpSecurity.OAuth2ResourceServerSpec.JwtSpec###configure:ServerHttpSecurity ###oauth2.setServerAuthenticationConverter(newServerBearerTokenAuthenticationConverter());###bearerTokenConverter###newServerBearerTokenAuthenticationConverter()###748:5:748:93
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpFormLoginTests.java###/NamespaceHttpFormLoginTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpFormLoginTests###formLoginWithCustomEndpointsThenBehaviorMatchesNamespace:###this.mvc.perform(post("/authentication/login/process").param("username","user").param("password","password").with(csrf())).andExpect(redirectedUrl("/default"));###request###post("/authentication/login/process").param("username","user").param("password","password").with(csrf())###78:3:79:57
59cef7d339de9d3a825a5ec35643d50e3f03cd4e###/spring-projects_spring-security/oauth2/oauth2-client/src/test/java/org/springframework/security/oauth2/client/web/OAuth2LoginAuthenticationFilterTests.java###/OAuth2LoginAuthenticationFilterTests.java###org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilterTests###doFilterWhenCustomFilterProcessesUrlThenFilterProcesses:###request.addParameter(OAuth2ParameterNames.STATE,"state");###state###"state"###254:3:254:61
f5a525e740db864ea0f49cda1fad34e4f5880b20###/spring-projects_spring-security/saml2/saml2-service-provider/src/opensaml3Main/java/org/springframework/security/saml2/provider/service/authentication/OpenSamlAuthenticationProvider.java###/OpenSamlAuthenticationProvider.java###org.springframework.security.saml2.provider.service.authentication.OpenSamlAuthenticationProvider###createCompatibleResponseAuthenticationConverter:###returnnewSaml2Authentication(newDefaultSaml2AuthenticatedPrincipal(username,attributes),token.getSaml2Response(),this.authoritiesMapper.mapAuthorities(getAssertionAuthorities(assertion)));###principal###newDefaultSaml2AuthenticatedPrincipal(username,attributes)###629:4:631:81
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenCustomExpressionHandlerAndAuthenticationNameDoesNotMatchThenRespondsWithForbidden:###this.mvc.perform(get("/deny").with(user("user").roles("USER"))).andExpect(status().isForbidden());###requestWithUser###get("/deny").with(user("user").roles("USER"))###380:3:380:101
32ac31c101807b3d46a9ba5c875ccbf61998aa5f###/spring-projects_spring-security/rsocket/src/main/java/org/springframework/security/rsocket/authentication/AuthenticationPayloadExchangeConverter.java###/AuthenticationPayloadExchangeConverter.java###org.springframework.security.rsocket.authentication.AuthenticationPayloadExchangeConverter###authentication:Map<String,Object> ###ByteBufrawAuthentication=ByteBufAllocator.DEFAULT.buffer().writeBytes(authenticationMetadata);###rawAuthentication###ByteBufAllocator.DEFAULT.buffer()###74:3:74:100
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenHpkpWithMultiplePinsThenPublicKeyPinsReportOnlyHeaderWithMultiplePinsInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\";pin-sha256=\"E9CZ9INDbd+2eRQozYqqbQ2yXLVKB9+xcprMF+44U1g=\"")).andReturn();###pinsReportOnly###header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\";pin-sha256=\"E9CZ9INDbd+2eRQozYqqbQ2yXLVKB9+xcprMF+44U1g=\"")###219:3:222:18
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/FormLoginConfigTests.java###/FormLoginConfigTests.java###org.springframework.security.config.http.FormLoginConfigTests###authenticateWhenDefaultTargetUrlConfiguredThenRedirectsAccordingly:###this.mvc.perform(post("/login").param("username","user").param("password","password").with(csrf())).andExpect(redirectedUrl("/default"));###loginRequest###post("/login").param("username","user").param("password","password").with(csrf())###76:3:77:43
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/web/server/ServerHttpSecurity.java###/ServerHttpSecurity.java###org.springframework.security.config.web.server.ServerHttpSecurity.OAuth2ResourceServerSpec###registerDefaultCsrfOverride:ServerHttpSecurity ###http.csrf().requireCsrfProtectionMatcher(newAndServerWebExchangeMatcher(CsrfWebFilter.DEFAULT_CSRF_MATCHER,newNegatedServerWebExchangeMatcher(this.authenticationConverterServerWebExchangeMatcher)));###matcher###newAndServerWebExchangeMatcher(CsrfWebFilter.DEFAULT_CSRF_MATCHER,newNegatedServerWebExchangeMatcher(this.authenticationConverterServerWebExchangeMatcher))###1815:5:1821:68
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceSessionManagementTests.java###/NamespaceSessionManagementTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceSessionManagementTests###authenticateWhenUsingCustomSessionAuthenticationStrategyThenMatchesNamespace:###this.mvc.perform(get("/auth").with(httpBasic("user","password"))).andExpect(status().isOk());###request###get("/auth").with(httpBasic("user","password"))###160:3:160:97
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpLogoutTests.java###/NamespaceHttpLogoutTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpLogoutTests###logoutWhenDisabledInLambdaThenRespondsWithNotFound:###this.mvc.perform(post("/logout").with(csrf()).with(user("user"))).andExpect(status().isNotFound());###logoutRequest###post("/logout").with(csrf()).with(user("user"))###93:3:94:39
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/oauth2/oauth2-client/src/test/java/org/springframework/security/oauth2/client/userinfo/DelegatingOAuth2UserServiceTests.java###/DelegatingOAuth2UserServiceTests.java###org.springframework.security.oauth2.client.userinfo.DelegatingOAuth2UserServiceTests###loadUserWhenUserRequestIsNullThenThrowIllegalArgumentException:###DelegatingOAuth2UserService<OAuth2UserRequest,OAuth2User>delegatingUserService=newDelegatingOAuth2UserService<>(Arrays.asList(mock(OAuth2UserService.class),mock(OAuth2UserService.class)));###userService###mock(OAuth2UserService.class)###49:3:51:82
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/LogoutConfigurerTests.java###/LogoutConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.LogoutConfigurerTests###logoutWhenXMLHttpRequestThenReturnsStatusNoContent:###this.mvc.perform(post("/logout").with(csrf()).with(user("user")).header(HttpHeaders.ACCEPT,"text/html,application/json").header("X-Requested-With","XMLHttpRequest")).andExpect(status().isNoContent());###request###post("/logout").with(csrf()).with(user("user")).header(HttpHeaders.ACCEPT,"text/html,application/json").header("X-Requested-With","XMLHttpRequest")###450:3:455:40
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenHpkpWithReportOnlyFalseThenPublicKeyPinsHeaderInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.PUBLIC_KEY_PINS,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\"")).andReturn();###pins###header().string(HttpHeaders.PUBLIC_KEY_PINS,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\"")###239:3:242:18
a3210c96d9f6fd64c285d71fd3175072b32c41bf###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/annotation/web/configurers/DefaultLoginPageConfigurer.java###/DefaultLoginPageConfigurer.java###org.springframework.security.config.annotation.web.configurers.DefaultLoginPageConfigurer###init:H ###this.loginPageGeneratingFilter.setResolveHiddenInputs(request->{CsrfTokentoken=(CsrfToken)request.getAttribute(CsrfToken.class.getName());if(token==null){returnCollections.emptyMap();}returnCollections.singletonMap(token.getParameterName(),token.getToken());});###hiddenInputs###request->{CsrfTokentoken=(CsrfToken)request.getAttribute(CsrfToken.class.getName());if(token==null){returnCollections.emptyMap();}returnCollections.singletonMap(token.getParameterName(),token.getToken());}###71:3:77:6
7013c6fd7609846ddbffd24231622273f5831801###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/web/server/ServerHttpSecurity.java###/ServerHttpSecurity.java###org.springframework.security.config.web.server.ServerHttpSecurity###build:###this.webFilters.add(newOrderedWebFilter(newLoginPageGeneratingWebFilter(),SecurityWebFiltersOrder.LOGIN_PAGE_GENERATING.getOrder()));###loginPageFilter###newLoginPageGeneratingWebFilter()###514:5:514:141
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RememberMeConfigurerTests.java###/RememberMeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RememberMeConfigurerTests###loginWhenRememberMeTrueAndCookieDomainThenRememberMeCookieHasDomain:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")).andExpect(cookie().exists("remember-me")).andExpect(cookie().domain("remember-me","spring.io"));###request###post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")###347:3:353:61
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###postWhenAccessRoleUserOrGetRequestConfiguredAndRoleUserThenRespondsWithOk:###this.mvc.perform(post("/").with(csrf()).with(user("user").roles("USER"))).andExpect(status().isOk());###requestWithUser###post("/").with(csrf()).with(user("user").roles("USER"))###306:3:306:104
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceSessionManagementTests.java###/NamespaceSessionManagementTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceSessionManagementTests###authenticateWhenDefaultSessionManagementThenMatchesNamespace:###MvcResultresult=this.mvc.perform(get("/auth").session(session).with(httpBasic("user","password"))).andExpect(session()).andReturn();###request###get("/auth").session(session).with(httpBasic("user","password"))###88:3:93:20
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/CsrfConfigTests.java###/CsrfConfigTests.java###org.springframework.security.config.http.CsrfConfigTests###postWhenHasCsrfTokenButSessionExpiresThenRequestIsCancelledAfterSuccessfulAuthentication:###this.mvc.perform(post("/login").param("username","user").param("password","password").session(session).with(csrf())).andExpect(redirectedUrl("/"));###login###post("/login").param("username","user").param("password","password").session(session).with(csrf())###236:3:238:36
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpBasicTests.java###/NamespaceHttpBasicTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpBasicTests###basicAuthenticationWhenUsingCustomRealmInLambdaThenMatchesNamespace:###this.mvc.perform(get("/").with(httpBasic("user","invalid"))).andExpect(status().isUnauthorized()).andExpect(header().string(HttpHeaders.WWW_AUTHENTICATE,"Basicrealm=\"CustomRealm\""));###requestWithInvalidPassword###get("/").with(httpBasic("user","invalid"))###96:3:97:95
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceSessionManagementTests.java###/NamespaceSessionManagementTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceSessionManagementTests###authenticateWhenNoSessionFixationProtectionThenMatchesNamespace:###MockHttpSessionresultingSession=(MockHttpSession)this.mvc.perform(get("/auth").session(givenSession).with(httpBasic("user","password"))).andExpect(status().isOk()).andReturn().getRequest().getSession(false);###request###get("/auth").session(givenSession).with(httpBasic("user","password"))###172:3:174:76
59cef7d339de9d3a825a5ec35643d50e3f03cd4e###/spring-projects_spring-security/oauth2/oauth2-client/src/test/java/org/springframework/security/oauth2/client/web/OAuth2LoginAuthenticationFilterTests.java###/OAuth2LoginAuthenticationFilterTests.java###org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilterTests###doFilterWhenAuthorizationResponseValidThenAuthorizationRequestRemoved:###request.addParameter(OAuth2ParameterNames.STATE,"state");###state###"state"###206:3:206:61
8ab7a27a20f95b033eb0f2515148e8f38045bac3###/spring-projects_spring-security/rsocket/src/main/java/org/springframework/security/rsocket/authentication/AuthenticationPayloadExchangeConverter.java###/AuthenticationPayloadExchangeConverter.java###org.springframework.security.rsocket.authentication.AuthenticationPayloadExchangeConverter###authentication:Map<String,Object> ###ByteBufrawAuthentication=ByteBufAllocator.DEFAULT.buffer().writeBytes(authenticationMetadata);###rawAuthentication###ByteBufAllocator.DEFAULT.buffer()###70:3:70:100
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenHpkpWithReportUriThenPublicKeyPinsReportOnlyHeaderWithReportUriInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\";report-uri=\"https://example.net/pkp-report\"")).andReturn();###pinsReportOnly###header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\";report-uri=\"https://example.net/pkp-report\"")###557:3:560:18
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configuration/HttpSecurityConfigurationTests.java###/HttpSecurityConfigurationTests.java###org.springframework.security.config.annotation.web.configuration.HttpSecurityConfigurationTests###authenticateWhenDefaultFilterChainBeanThenRolePrefixIsSet:###this.mockMvc.perform(get("/user").with(authentication(newTestingAuthenticationToken("user","password","ROLE_USER")))).andExpect(status().isOk());###user###newTestingAuthenticationToken("user","password","ROLE_USER")###143:3:146:33
1a0bec5bf144fc4e2c804a7f021bebed174ea1c9###/spring-projects_spring-security/samples/contacts/src/main/java/sample/contact/ContactManagerFacade.java###/ContactManagerFacade.java###sample.contact.ContactManagerFacade###getById:Integer ###if(auth.getPrincipal().toString().equals(result.getOwner()))###username###auth.getPrincipal().toString()###91:9:96:10
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpInterceptUrlTests.java###/NamespaceHttpInterceptUrlTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpInterceptUrlTests###authenticatedRequestWhenUrlRequiresElevatedPrivilegesThenBehaviorMatchesNamespace:###this.mvc.perform(get("/users").with(authentication(user("ROLE_USER")))).andExpect(status().isForbidden());###requestWithUser###get("/users").with(authentication(user("ROLE_USER")))###69:3:69:109
c4fe630f8eca2d44c6f73b4cdc3a379e7a9219f5###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurer.java###/HeadersConfigurer.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurer###createHeaderWriterFilter:###HeaderWriterFilterheadersFilter=newHeaderWriterFilter(getHeaderWriters());###writers###getHeaderWriters()###210:9:211:37
ea56a9888329a8706d716d5251a73fcccf4e3a20###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/SecurityNamespaceHandler.java###/SecurityNamespaceHandler.java###org.springframework.security.config.SecurityNamespaceHandler###reportMissingWebClasses:String ParserContext Node ###pc.getReaderContext().fatal("Theclassesfromthespring-security-webjar"+"(oroneofitsdependencies)arenotavailable.Youneedthesetouse<"+nodeName+">",node);###errorMessage###"Theclassesfromthespring-security-webjar"+"(oroneofitsdependencies)arenotavailable.Youneedthesetouse<"+nodeName+">"###122:9:123:115
d3b7a47ef81960d9400134c5ed0b90ea253ca3a2###/spring-projects_spring-security/oauth2/oauth2-client/src/test/java/org/springframework/security/oauth2/client/oidc/authentication/OidcAuthorizationCodeReactiveAuthenticationManagerTests.java###/OidcAuthorizationCodeReactiveAuthenticationManagerTests.java###org.springframework.security.oauth2.client.oidc.authentication.OidcAuthorizationCodeReactiveAuthenticationManagerTests###authenticateWhenTokenSuccessResponseThenAdditionalParametersAddedToUserRequest:###this.manager.authenticate(loginToken()).block();###authorizationCodeAuthentication###loginToken()###267:3:267:51
db96650d994721ba4eb50f7d5297b35c8791d5b0###/spring-projects_spring-security/core/src/main/java/org/acegisecurity/ui/webapp/SiteminderAuthenticationProcessingFilter.java###/SiteminderAuthenticationProcessingFilter.java###org.acegisecurity.ui.webapp.SiteminderAuthenticationProcessingFilter###attemptAuthentication:HttpServletRequest ###UsernamePasswordAuthenticationTokenauthRequest=newUsernamePasswordAuthenticationToken(username,null);###password###null###114:9:114:115
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/JeeConfigurerTests.java###/JeeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.JeeConfigurerTests###requestWhenCustomAuthenticatedUserDetailsServiceInLambdaThenCustomAuthenticatedUserDetailsServiceUsed:###this.mvc.perform(get("/").principal(user).with((request)->{request.addUserRole("ROLE_ADMIN");request.addUserRole("ROLE_USER");returnrequest;})).andExpect(authenticated().withRoles("USER"));###request###get("/").principal(user).with((request)->{request.addUserRole("ROLE_ADMIN");request.addUserRole("ROLE_USER");returnrequest;})###122:3:126:52
999adbc6ee46cf32a6fba139cf380b4bd9214a3f###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/http/RememberMeBeanDefinitionParser.java###/RememberMeBeanDefinitionParser.java###org.springframework.security.config.http.RememberMeBeanDefinitionParser###parse:Element ParserContext ###if("true".equals(element.getAttribute(ATT_SECURE_COOKIE)))###useSecureCookie###element.getAttribute(ATT_SECURE_COOKIE)###101:13:103:14
5bdd7571088ea7c34f90b1162cc5abcbca127ee1###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/access/ExceptionTranslationFilter.java###/ExceptionTranslationFilter.java###org.springframework.security.web.access.ExceptionTranslationFilter###handleSpringSecurityException:HttpServletRequest HttpServletResponse FilterChain RuntimeException ###if(this.authenticationTrustResolver.isAnonymous(authentication)||this.authenticationTrustResolver.isRememberMe(authentication))###isAnonymous###this.authenticationTrustResolver.isAnonymous(authentication)###176:4:194:5
fbe3ca48f4031aa5b6b97546a21bcf1d1b8deaa0###/spring-projects_spring-security/core/src/main/java/org/springframework/security/config/RememberMeBeanDefinitionParser.java###/RememberMeBeanDefinitionParser.java###org.springframework.security.config.RememberMeBeanDefinitionParser###parse:Element ParserContext ###if(StringUtils.hasText(userServiceRef))###userServiceSet###StringUtils.hasText(userServiceRef)###91:9:93:10
64e9ac995abcc42d15952cdddc0111882ab8502e###/spring-projects_spring-security/oauth2/oauth2-core/src/main/java/org/springframework/security/oauth2/core/ClaimAccessor.java###/ClaimAccessor.java###org.springframework.security.oauth2.core.ClaimAccessor###getClaimAsBoolean:String ###return!hasClaim(claim)?null:ClaimConversionService.getSharedInstance().convert(getClaims().get(claim),Boolean.class);###claimValue###getClaims().get(claim)###99:3:100:97
1a0bec5bf144fc4e2c804a7f021bebed174ea1c9###/spring-projects_spring-security/core/src/main/java/org/acegisecurity/providers/dao/DaoAuthenticationProvider.java###/DaoAuthenticationProvider.java###net.sf.acegisecurity.providers.dao.DaoAuthenticationProvider###authenticate:Authentication ###returnnewUsernamePasswordAuthenticationToken(user.getUsername(),authentication.getCredentials(),user.getAuthorities());###principalToReturn###user###199:9:200:69
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenContentSecurityPolicyWithReportOnlyThenContentSecurityPolicyReportOnlyHeaderInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.CONTENT_SECURITY_POLICY_REPORT_ONLY,"default-src'self';script-srctrustedscripts.example.com")).andReturn();###cspReportOnly###header().string(HttpHeaders.CONTENT_SECURITY_POLICY_REPORT_ONLY,"default-src'self';script-srctrustedscripts.example.com")###668:3:671:18
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurerTests.java###/RequestCacheConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurerTests###postWhenRequestIsMultipartThenPostAuthenticationRedirectsToRoot:###MockHttpSessionsession=(MockHttpSession)this.mvc.perform(multipart("/upload").file(aFile)).andReturn().getRequest().getSession();###request###multipart("/upload").file(aFile)###291:3:294:46
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenHpkpWithReportUriInLambdaThenPublicKeyPinsReportOnlyHeaderWithReportUriInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\";report-uri=\"https://example.net/pkp-report\"")).andReturn();###pinsReportOnly###header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\";report-uri=\"https://example.net/pkp-report\"")###282:3:285:18
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/FormLoginConfigurerTests.java###/FormLoginConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.FormLoginConfigurerTests###formLoginWhenInvokedTwiceThenUsesOriginalUsernameParameter:###this.mockMvc.perform(formLogin().user("custom-username","user")).andExpect(authenticated());###loginRequest###formLogin().user("custom-username","user")###251:3:251:96
7a715f908601a5ee72b7d62dc5eba4b0bfc47f2b###/spring-projects_spring-security/oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/oidc/authentication/OidcAuthorizationCodeAuthenticationProvider.java###/OidcAuthorizationCodeAuthenticationProvider.java###org.springframework.security.oauth2.client.oidc.authentication.OidcAuthorizationCodeAuthenticationProvider###createOidcToken:ClientRegistration OAuth2AccessTokenResponse ###jwt=jwtDecoder.decode((String)accessTokenResponse.getAdditionalParameters().get(OidcParameterNames.ID_TOKEN));###parameters###accessTokenResponse.getAdditionalParameters()###240:4:241:103
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurerTests.java###/SessionManagementConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurerTests###authenticateWhenNewSessionFixationProtectionInLambdaThenCreatesNewSession:###MockHttpSessionresultingSession=(MockHttpSession)this.mvc.perform(get("/auth").session(givenSession).with(httpBasic("user","password"))).andExpect(status().isNotFound()).andReturn().getRequest().getSession(false);###request###get("/auth").session(givenSession).with(httpBasic("user","password"))###128:3:130:82
75c05d0bb4f18f0c2deda573d4c3ac918ec5ad50###/spring-projects_spring-security/oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/registration/ClientRegistrations.java###/ClientRegistrations.java###org.springframework.security.oauth2.client.registration.ClientRegistrations###oidc:URI ###returnwithProviderConfiguration(metadata,issuer.toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()).userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString());###builder###withProviderConfiguration(metadata,issuer.toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString())###149:4:151:70
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenFeaturePolicyConfiguredThenFeaturePolicyHeaderInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string("Feature-Policy","geolocation'self'")).andReturn();###featurePolicy###header().string("Feature-Policy","geolocation'self'")###379:3:380:85
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/authentication/AuthenticationManagerBuilderTests.java###/AuthenticationManagerBuilderTests.java###org.springframework.security.config.annotation.authentication.AuthenticationManagerBuilderTests###authenticationManagerWhenMultipleProvidersThenWorks:###this.mockMvc.perform(formLogin()).andExpect(authenticated().withUsername("user").withRoles("USER"));###user###authenticated().withUsername("user").withRoles("USER")###160:3:161:71
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/WebSecurityConfigurerAdapterTests.java###/WebSecurityConfigurerAdapterTests.java###org.springframework.security.config.annotation.web.WebSecurityConfigurerAdapterTests###performWhenUsingAuthenticationEventPublisherInDslThenUses:###this.mockMvc.perform(get("/").with(httpBasic("user","password")));###userRequest###get("/").with(httpBasic("user","password"))###411:3:412:43
8a0c6868cd7f61b8e64c815910a12ed0d485ef8e###/spring-projects_spring-security/oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/oidc/authentication/OidcAuthorizationCodeReactiveAuthenticationManager.java###/OidcAuthorizationCodeReactiveAuthenticationManager.java###org.springframework.security.oauth2.client.oidc.authentication.OidcAuthorizationCodeReactiveAuthenticationManager###authenticationResult:OAuth2LoginAuthenticationToken OAuth2AccessTokenResponse ###if(!accessTokenResponse.getAdditionalParameters().containsKey(OidcParameterNames.ID_TOKEN))###additionalParameters###accessTokenResponse.getAdditionalParameters()###165:3:171:4
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/LogoutConfigurerTests.java###/LogoutConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.LogoutConfigurerTests###logoutWhenInvokedTwiceThenUsesOriginalLogoutUrl:###this.mvc.perform(post("/custom/logout").with(csrf())).andExpect(status().isFound()).andExpect(redirectedUrl("/login?logout"));###logoutRequest###post("/custom/logout").with(csrf())###181:3:184:48
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceRememberMeTests.java###/NamespaceRememberMeTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceRememberMeTests###rememberMeLoginWhenKeyDeclaredThenMatchesNamespace:###this.mvc.perform(get("/somewhere").cookie(withoutKey)).andExpect(status().isFound()).andExpect(redirectedUrl("http://localhost/login"));###somewhereRequest###get("/somewhere").cookie(withoutKey)###206:3:209:57
771ef0dadcbaf0e9887a36d884167c80025654e5###/spring-projects_spring-security/core/src/main/java/org/springframework/security/jackson2/UserDeserializer.java###/UserDeserializer.java###org.springframework.security.jackson2.UserDeserializer###deserialize:JsonParser DeserializationContext ###Userresult=newUser(readJsonNode(jsonNode,"username").asText(),password.asText(""),readJsonNode(jsonNode,"enabled").asBoolean(),readJsonNode(jsonNode,"accountNonExpired").asBoolean(),readJsonNode(jsonNode,"credentialsNonExpired").asBoolean(),readJsonNode(jsonNode,"accountNonLocked").asBoolean(),authorities);###accountNonLocked###readJsonNode(jsonNode,"accountNonLocked").asBoolean()###64:3:67:74
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurerTests.java###/OAuth2ResourceServerConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.OAuth2ResourceServerConfigurerTests###requestWhenBearerTokenResolverAllowsQueryParameterAndRequestContainsTwoTokensThenInvalidRequest:###this.mvc.perform(get("/authenticated").with(bearerToken(JWT_TOKEN)).param("access_token",JWT_TOKEN)).andExpect(status().isBadRequest()).andExpect(header().string(HttpHeaders.WWW_AUTHENTICATE,containsString("invalid_request")));###request###get("/authenticated").with(bearerToken(JWT_TOKEN)).param("access_token",JWT_TOKEN)###735:3:739:98
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/SessionManagementConfigTests.java###/SessionManagementConfigTests.java###org.springframework.security.config.http.SessionManagementConfigTests###requestWhenSessionFixationProtectionIsNoneAndInvalidSessionUrlIsSetThenStillRedirectsOnInvalidSession:###this.mvc.perform(get("/auth").with((request)->{request.setRequestedSessionId("1");request.setRequestedSessionIdValid(false);returnrequest;})).andExpect(redirectedUrl("/timeoutUrl"));###request###get("/auth").with((request)->{request.setRequestedSessionId("1");request.setRequestedSessionIdValid(false);returnrequest;})###317:3:321:47
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenHpkpWithReportUriInLambdaThenPublicKeyPinsReportOnlyHeaderWithReportUriInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\";report-uri=\"https://example.net/pkp-report\"")).andReturn();###pinsReportOnly###header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\";report-uri=\"https://example.net/pkp-report\"")###613:3:616:18
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/CsrfConfigurerTests.java###/CsrfConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.CsrfConfigurerTests###loginWhenCustomCsrfTokenRepositoryThenCsrfTokenIsCleared:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password")).andExpect(redirectedUrl("/"));###loginRequest###post("/login").with(csrf()).param("username","user").param("password","password")###474:3:478:36
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/LogoutConfigurerClearSiteDataTests.java###/LogoutConfigurerClearSiteDataTests.java###org.springframework.security.config.annotation.web.configurers.LogoutConfigurerClearSiteDataTests###logoutWhenRequestTypePostAndSecureThenHeaderIsPresent:###this.mvc.perform(post("/logout").secure(true).with(csrf())).andExpect(header().stringValues(CLEAR_SITE_DATA_HEADER,HEADER_VALUE));###logoutRequest###post("/logout").secure(true).with(csrf())###92:3:93:76
1490e8a707d44a28c95d312c732f8ca9ed6b3200###/spring-projects_spring-security/samples/contacts/src/main/java/sample/contact/SecureIndexController.java###/SecureIndexController.java###sample.contact.SecureIndexController###handleRequest:HttpServletRequest HttpServletResponse ###AuthenticationcurrentUser=((SecureContext)ContextHolder.getContext()).getAuthentication();###secureContext###((SecureContext)ContextHolder.getContext())###68:9:69:34
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpInterceptUrlTests.java###/NamespaceHttpInterceptUrlTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpInterceptUrlTests###requestWhenMappedByPostInterceptUrlThenBehaviorMatchesNamespace:###this.mvc.perform(post("/admin/post").with(csrf()).with(authentication(user("ROLE_ADMIN")))).andExpect(status().isOk());###requestWithAdmin###post("/admin/post").with(csrf()).with(authentication(user("ROLE_ADMIN")))###98:3:101:33
743cc9fec79976b343853568f4e4f906d67bd2b2###/spring-projects_spring-security/core/src/main/java/org/acegisecurity/ldap/search/FilterBasedLdapUserSearch.java###/FilterBasedLdapUserSearch.java###org.acegisecurity.ldap.search.FilterBasedLdapUserSearch###searchForUser:String ###userDn.append(ctx.getNameInNamespace());###nameInNamespace###ctx.getNameInNamespace()###140:13:140:53
366146ff8077dc83441e5a0b4e1f42ba3c02f08e###/spring-projects_spring-security/oauth2/oauth2-jose/src/main/java/org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder.java###/NimbusReactiveJwtDecoder.java###org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder.JwkSetUriReactiveJwtDecoderBuilder###jwsKeySelector:JWKSource<JWKSecurityContext> ###jwsAlgorithms.add(JWSAlgorithm.parse(signatureAlgorithm.getName()));###jwsAlgorithm###JWSAlgorithm.parse(signatureAlgorithm.getName())###380:5:380:73
59cef7d339de9d3a825a5ec35643d50e3f03cd4e###/spring-projects_spring-security/oauth2/oauth2-client/src/test/java/org/springframework/security/oauth2/client/web/OAuth2LoginAuthenticationFilterTests.java###/OAuth2LoginAuthenticationFilterTests.java###org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilterTests###doFilterWhenAuthorizationResponseValidThenAuthorizedClientSaved:###request.addParameter(OAuth2ParameterNames.STATE,"state");###state###"state"###225:3:225:61
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpBasicTests.java###/NamespaceHttpBasicTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpBasicTests###basicAuthenticationWhenUsingCustomRealmThenMatchesNamespace:###this.mvc.perform(get("/").with(httpBasic("user","invalid"))).andExpect(status().isUnauthorized()).andExpect(header().string(HttpHeaders.WWW_AUTHENTICATE,"Basicrealm=\"CustomRealm\""));###requestWithInvalidPassword###get("/").with(httpBasic("user","invalid"))###144:3:147:95
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/oauth2/oauth2-client/src/test/java/org/springframework/security/oauth2/client/web/server/DefaultServerOAuth2AuthorizationRequestResolverTests.java###/DefaultServerOAuth2AuthorizationRequestResolverTests.java###org.springframework.security.oauth2.client.web.server.DefaultServerOAuth2AuthorizationRequestResolverTests###resolveWhenForwardedHeadersClientRegistrationFoundThenWorks:###ServerWebExchangeexchange=MockServerWebExchange.from(MockServerHttpRequest.get("/oauth2/authorization/id").header("X-Forwarded-Host","evil.com"));###httpRequest###MockServerHttpRequest.get("/oauth2/authorization/id").header("X-Forwarded-Host","evil.com")###102:3:102:153
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/FormLoginBeanDefinitionParserTests.java###/FormLoginBeanDefinitionParserTests.java###org.springframework.security.config.http.FormLoginBeanDefinitionParserTests###failedLoginWhenConfiguredWithCustomAuthenticationFailureThenForwardsAccordingly:###this.mvc.perform(post("/login").param("username","bob").param("password","invalidpassword")).andExpect(status().isOk()).andExpect(forwardedUrl("/failure_forward_url")).andExpect(request().attribute(WebAttributes.AUTHENTICATION_EXCEPTION,not(nullValue())));###loginRequest###post("/login").param("username","bob").param("password","invalidpassword")###171:3:173:95
771ef0dadcbaf0e9887a36d884167c80025654e5###/spring-projects_spring-security/core/src/main/java/org/springframework/security/jackson2/UserDeserializer.java###/UserDeserializer.java###org.springframework.security.jackson2.UserDeserializer###deserialize:JsonParser DeserializationContext ###Userresult=newUser(readJsonNode(jsonNode,"username").asText(),password.asText(""),readJsonNode(jsonNode,"enabled").asBoolean(),readJsonNode(jsonNode,"accountNonExpired").asBoolean(),readJsonNode(jsonNode,"credentialsNonExpired").asBoolean(),readJsonNode(jsonNode,"accountNonLocked").asBoolean(),authorities);###credentialsNonExpired###readJsonNode(jsonNode,"credentialsNonExpired").asBoolean()###64:3:67:74
8b51c2c97d010af2c43f019891ba81827333eb4e###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/context/HttpSessionSecurityContextRepository.java###/HttpSessionSecurityContextRepository.java###org.springframework.security.web.context.HttpSessionSecurityContextRepository.SaveToSessionResponseWrapper###saveContext:SecurityContext ###if(authenticationTrustResolver.isAnonymous(context.getAuthentication()))###authentication###context.getAuthentication()###266:13:271:14
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenRegisteringRoleHierarchyAndNoRelatedRolesAllowedThenRespondsWithForbidden:###this.mvc.perform(get("/deny").with(user("user").roles("USER"))).andExpect(status().isForbidden());###requestWithUser###get("/deny").with(user("user").roles("USER"))###427:3:427:101
26f5f1a9b3c6282409bb247e91e3a3f4bca7e336###/spring-projects_spring-security/core/src/test/java/org/acegisecurity/intercept/web/SecurityEnforcementFilterTests.java###/SecurityEnforcementFilterTests.java###net.sf.acegisecurity.intercept.web.SecurityEnforcementFilterTests###testAccessDeniedWhenAccessDeniedException:###MockHttpServletRequestrequest=newMockHttpServletRequest(null,newMockHttpSession());###session###newMockHttpSession()###67:9:68:40
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/FormLoginConfigTests.java###/FormLoginConfigTests.java###org.springframework.security.config.http.FormLoginConfigTests###authenticateWhenConfiguredWithSpelThenRedirectsAccordingly:###this.mvc.perform(post("/login").param("username","user").param("password","password").with(csrf())).andExpect(redirectedUrl(WebConfigUtilsTest.URL+"/default"));###loginRequest###post("/login").param("username","user").param("password","password").with(csrf())###94:3:98:68
1a80d4a66cd6c89299c06abe11ef361034732a11###/spring-projects_spring-security/test/src/test/java/org/springframework/security/test/context/support/ReactorContextTestExecutionListenerTests.java###/ReactorContextTestExecutionListenerTests.java###org.springframework.security.test.context.support.ReactorContextTestExecutionListenerTests###afterTestMethodWhenDifferentHookIsRegistered:###assertThat(Mono.subscriberContext().block()).isEqualTo(obj);###result###Mono.subscriberContext().block()###184:3:184:63
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/SessionManagementConfigTests.java###/SessionManagementConfigTests.java###org.springframework.security.config.http.SessionManagementConfigTests###requestWhenCreateSessionIsSetToStatelessThenDoesNotCreateSessionOnLogin:###this.mvc.perform(post("/login").param("username","user").param("password","password").with(csrf())).andExpect(status().isFound()).andExpect(session().exists(false));###loginRequest###post("/login").param("username","user").param("password","password").with(csrf())###145:3:146:71
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/PermitAllSupportTests.java###/PermitAllSupportTests.java###org.springframework.security.config.annotation.web.configurers.PermitAllSupportTests###performWhenUsingPermitAllExactUrlRequestMatcherThenMatchesExactUrl:###this.mvc.perform(get("/app/xyz").contextPath("/app")).andExpect(status().isNotFound());###request###get("/app/xyz").contextPath("/app")###52:3:52:90
8acd2054860f5dacf016184bdc6eda9778f0f818###/spring-projects_spring-security/web/src/test/java/org/springframework/security/web/headers/StaticHeaderFactoryTest.java###/StaticHeaderFactoryTest.java###org.springframework.security.web.headers.StaticHeaderFactoryTest###sameHeaderShouldBeReturned:###StaticHeaderFactoryfactory=newStaticHeaderFactory("X-header","foo");###headerName###"X-header"###19:9:19:82
5953af0f6bdd1f53c94f0fc1fc0c45e940aa4455###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/http/HttpSecurityBeanDefinitionParser.java###/HttpSecurityBeanDefinitionParser.java###org.springframework.security.config.http.HttpSecurityBeanDefinitionParser###parse:Element ParserContext ###authenticationProviders.add(createOpenIDProvider(element,pc));###openIDProvider###createOpenIDProvider(element,pc)###297:13:297:76
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenReferrerPolicyConfiguredThenReferrerPolicyHeaderInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string("Referrer-Policy",ReferrerPolicy.NO_REFERRER.getPolicy())).andReturn();###referrerPolicy###header().string("Referrer-Policy",ReferrerPolicy.NO_REFERRER.getPolicy())###346:3:347:104
7bf6008efe485e3f0c93411f46b77f263150dc8f###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer.java###/OAuth2LoginConfigurer.java###org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2LoginConfigurer.OidcAuthenticationRequestChecker###authenticate:Authentication ###if(authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationRequest().getScopes().contains(OidcScopes.OPENID))###authorizationRequest###authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationRequest()###754:4:762:5
0c68eb1821217dc24b06998c5a7d3ee6062a0015###/spring-projects_spring-security/oauth2/oauth2-client/src/test/java/org/springframework/security/oauth2/client/web/OAuth2LoginAuthenticationFilterTests.java###/OAuth2LoginAuthenticationFilterTests.java###org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilterTests###doFilterWhenAuthorizationCodeSuccessResponseThenAuthenticationSuccessHandlerIsCalled:###OAuth2AuthenticationTokenuserAuthentication=newOAuth2AuthenticationToken(mock(OAuth2User.class),AuthorityUtils.createAuthorityList("ROLE_USER"),authorizedClient);###oauth2User###mock(OAuth2User.class)###104:3:105:95
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenRoleUserOrAdminConfiguredAndRoleIsAdminThenRespondsWithOk:###this.mvc.perform(get("/").with(user("user").roles("ADMIN"))).andExpect(status().isOk());###requestWithAdmin###get("/").with(user("user").roles("ADMIN"))###204:3:204:91
67e5c05a47067b6a65d493529ffa485a26bec219###/spring-projects_spring-security/core/src/test/java/org/springframework/security/access/method/AuthorizationManagerMethodAfterAdviceTests.java###/AuthorizationManagerMethodAfterAdviceTests.java###org.springframework.security.access.method.AuthorizationManagerMethodAfterAdviceTests###instantiateWhenMethodMatcherNullThenException:###newAuthorizationManagerMethodAfterAdvice<>(null,mock(AuthorizationManager.class))###mockAuthorizationManager###mock(AuthorizationManager.class)###44:23:44:106
82ae4db4ccc1bc0fc38556d1c6f6e30bf6695f42###/spring-projects_spring-security/samples/boot/oauth2resourceserver-multitenancy/src/main/java/sample/OAuth2ResourceServerSecurityConfiguration.java###/OAuth2ResourceServerSecurityConfiguration.java###sample.OAuth2ResourceServerSecurityConfiguration###jwt:###returnnewJwtAuthenticationProvider(jwtDecoder)::authenticate;###authenticationProvider###newJwtAuthenticationProvider(jwtDecoder)###87:3:87:66
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RememberMeConfigurerTests.java###/RememberMeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RememberMeConfigurerTests###loginWhenRememberMeTrueAndCookieDomainInLambdaThenRememberMeCookieHasDomain:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")).andExpect(cookie().exists("remember-me")).andExpect(cookie().domain("remember-me","spring.io"));###loginRequest###post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")###167:3:169:61
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurerTests.java###/RequestCacheConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurerTests###getWhenBookmarkedRequestIsRequestedWithAndroidThenPostAuthenticationRemembers:###MockHttpSessionsession=(MockHttpSession)this.mvc.perform(get("/messages").header("X-Requested-With","com.android")).andExpect(redirectedUrl("http://localhost/login")).andReturn().getRequest().getSession();###request###get("/messages").header("X-Requested-With","com.android")###248:3:252:46
5bdd7571088ea7c34f90b1162cc5abcbca127ee1###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/server/header/XXssProtectionServerHttpHeadersWriter.java###/XXssProtectionServerHttpHeadersWriter.java###org.springframework.security.web.server.header.XXssProtectionServerHttpHeadersWriter###updateDelegate:###this.delegate=StaticServerHttpHeadersWriter.builder().header(X_XSS_PROTECTION,createHeaderValue()).build();###builder###StaticServerHttpHeadersWriter.builder()###98:3:98:113
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenReferrerPolicyInLambdaThenReferrerPolicyHeaderInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string("Referrer-Policy",ReferrerPolicy.NO_REFERRER.getPolicy())).andReturn();###referrerPolicy###header().string("Referrer-Policy",ReferrerPolicy.NO_REFERRER.getPolicy())###354:3:355:104
b481a6c1ad1c6f9053fc9ec45a32b02849f009fd###/spring-projects_spring-security/taglibs/src/main/java/org/springframework/security/taglibs/authz/AccessControlListTag.java###/AccessControlListTag.java###org.springframework.security.taglibs.authz.AccessControlListTag###doStartTag:###if(SecurityContextHolder.getContext().getAuthentication()==null)###authentication###SecurityContextHolder.getContext().getAuthentication()###78:9:85:10
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/authentication/AuthenticationManagerBuilderTests.java###/AuthenticationManagerBuilderTests.java###org.springframework.security.config.annotation.authentication.AuthenticationManagerBuilderTests###authenticationManagerWhenMultipleProvidersThenWorks:###this.mockMvc.perform(formLogin().user("admin")).andExpect(authenticated().withUsername("admin").withRoles("USER","ADMIN"));###admin###authenticated().withUsername("admin").withRoles("USER","ADMIN")###163:3:164:81
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpBasicTests.java###/NamespaceHttpBasicTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpBasicTests###basicAuthenticationWhenUsingDefaultsInLambdaThenMatchesNamespace:###this.mvc.perform(get("/").with(httpBasic("user","password"))).andExpect(status().isNotFound());###requestWithValidPassword###get("/").with(httpBasic("user","password"))###118:3:120:39
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenSecureRequestAndHpkpWithPinThenPublicKeyPinsReportOnlyHeaderInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\"")).andReturn();###pinsReportOnly###header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\"")###201:3:204:18
366146ff8077dc83441e5a0b4e1f42ba3c02f08e###/spring-projects_spring-security/oauth2/oauth2-jose/src/main/java/org/springframework/security/oauth2/jwt/NimbusJwtDecoder.java###/NimbusJwtDecoder.java###org.springframework.security.oauth2.jwt.NimbusJwtDecoder.JwkSetUriJwtDecoderBuilder###jwsKeySelector:JWKSource<SecurityContext> ###jwsAlgorithms.add(JWSAlgorithm.parse(signatureAlgorithm.getName()));###jwsAlgorithm###JWSAlgorithm.parse(signatureAlgorithm.getName())###345:5:345:73
a19cc8f1c7d74643aa07872ae38e95d5aee09f87###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/http/HttpSecurityBeanDefinitionParser.java###/HttpSecurityBeanDefinitionParser.java###org.springframework.security.config.http.HttpSecurityBeanDefinitionParser###createAuthenticationManager:Element ParserContext ManagedList<BeanReference> ###authManager.addConstructorArgValue(newRuntimeBeanReference(parentMgrRef));###parentAuthManager###newRuntimeBeanReference(parentMgrRef)###234:13:234:88
1c8d28501c6e7bf68f6a8f1c3027e88b256a7acb###/spring-projects_spring-security/web/src/test/java/org/springframework/security/web/authentication/preauth/websphere/WebSphere2SpringSecurityPropagationInterceptorTests.java###/WebSphere2SpringSecurityPropagationInterceptorTests.java###org.springframework.security.web.authentication.preauth.websphere.WebSphere2SpringSecurityPropagationInterceptorTests###createdAuthenticationTokenIsAcceptableToPreauthProvider:###when(user.getAuthorities()).thenReturn(AuthorityUtils.createAuthorityList("SOME_ROLE"));###authorities###AuthorityUtils.createAuthorityList("SOME_ROLE")###57:9:57:97
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceSessionManagementTests.java###/NamespaceSessionManagementTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceSessionManagementTests###authenticateWhenUsingSessionRegistryThenMatchesNamespace:###this.mvc.perform(get("/auth").with(httpBasic("user","password"))).andExpect(status().isOk());###request###get("/auth").with(httpBasic("user","password"))###139:3:139:97
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpBasicTests.java###/NamespaceHttpBasicTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpBasicTests###basicAuthenticationWhenUsingDefaultsThenMatchesNamespace:###this.mvc.perform(get("/").with(httpBasic("user","password"))).andExpect(status().isNotFound());###requestWithValidPassword###get("/").with(httpBasic("user","password"))###76:3:78:39
ad91adf9dcd0f9d2ca7941b46d2cd07fd4145cab###/spring-projects_spring-security/samples/boot/oauth2login/src/main/java/sample/web/MainController.java###/MainController.java###sample.web.MainController###userinfo:Model OAuth2UserAuthenticationToken ###MapuserAttributes=this.webClient.filter(oauth2Credentials(authentication)).get().uri(authentication.getClientAuthentication().getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri()).retrieve().bodyToMono(Map.class).block();###userInfoEndpointUri###authentication.getClientAuthentication().getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri()###49:3:55:13
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/authentication/NamespaceJdbcUserServiceTests.java###/NamespaceJdbcUserServiceTests.java###org.springframework.security.config.annotation.authentication.NamespaceJdbcUserServiceTests###jdbcUserServiceCustom:###this.mockMvc.perform(formLogin()).andExpect(authenticated().withUsername("user").withRoles("DBA","USER"));###dba###authenticated().withUsername("user").withRoles("DBA","USER")###62:3:62:110
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenReferrerPolicyConfiguredWithCustomValueInLambdaThenCustomValueInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string("Referrer-Policy",ReferrerPolicy.SAME_ORIGIN.getPolicy())).andReturn();###referrerPolicy###header().string("Referrer-Policy",ReferrerPolicy.SAME_ORIGIN.getPolicy())###371:3:372:104
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurerTests.java###/SessionManagementConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurerTests###loginWhenUserLoggedInAndMaxSessionsOneInLambdaThenLoginPrevented:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password"));###firstRequest###post("/login").with(csrf()).param("username","user").param("password","password")###158:3:158:105
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RememberMeConfigurerTests.java###/RememberMeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RememberMeConfigurerTests###logoutWhenRememberMeCookieThenAuthenticationIsRememberMeCookieExpired:###this.mvc.perform(post("/logout").with(csrf()).cookie(rememberMeCookie).session((MockHttpSession)session)).andExpect(redirectedUrl("/login?logout")).andExpect(cookie().maxAge("remember-me",0));###logoutRequest###post("/logout").with(csrf()).cookie(rememberMeCookie).session((MockHttpSession)session)###245:3:250:51
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RememberMeConfigurerTests.java###/RememberMeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RememberMeConfigurerTests###getWhenRememberMeCookieAndNoKeyConfiguredThenKeyFromRememberMeServicesIsUsed:###MvcResultmvcResult=this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")).andReturn();###loginRequest###post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")###463:3:468:18
1463b9769d401ccfc24bc827a1006fac9def7c1c###/spring-projects_spring-security/core/src/main/java/org/springframework/security/config/HttpSecurityBeanDefinitionParser.java###/HttpSecurityBeanDefinitionParser.java###org.springframework.security.config.HttpSecurityBeanDefinitionParser###parse:Element ParserContext ###registry.registerBeanDefinition(BeanIds.HTTP_POST_PROCESSOR,newRootBeanDefinition(HttpSecurityConfigPostProcessor.class));###postProcessor###newRootBeanDefinition(HttpSecurityConfigPostProcessor.class)###263:9:263:133
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpCustomFilterTests.java###/NamespaceHttpCustomFilterTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpCustomFilterTests.UserDetailsServiceConfig###userDetailsService:###returnnewInMemoryUserDetailsManager(User.withDefaultPasswordEncoder().username("user").password("password").roles("USER").build());###user###User.withDefaultPasswordEncoder().username("user").password("password").roles("USER").build()###162:4:167:18
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpFormLoginTests.java###/NamespaceHttpFormLoginTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpFormLoginTests###formLoginWithCustomHandlersThenBehaviorMatchesNamespace:###this.mvc.perform(post("/login").param("username","user").param("password","password").with(csrf())).andExpect(redirectedUrl("/custom/targetUrl"));###loginRequest###post("/login").param("username","user").param("password","password").with(csrf())###88:3:89:52
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/core/src/main/java/org/springframework/security/jackson2/UserDeserializer.java###/UserDeserializer.java###org.springframework.security.jackson2.UserDeserializer###deserialize:JsonParser DeserializationContext ###Userresult=newUser(readJsonNode(jsonNode,"username").asText(),password.asText(""),readJsonNode(jsonNode,"enabled").asBoolean(),readJsonNode(jsonNode,"accountNonExpired").asBoolean(),readJsonNode(jsonNode,"credentialsNonExpired").asBoolean(),readJsonNode(jsonNode,"accountNonLocked").asBoolean(),authorities);###accountNonLocked###readJsonNode(jsonNode,"accountNonLocked").asBoolean()###65:3:70:5
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RememberMeConfigurerTests.java###/RememberMeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RememberMeConfigurerTests###loginWhenRememberMeConfiguredInLambdaThenRespondsWithRememberMeCookie:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")).andExpect(cookie().exists("remember-me"));###request###post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")###309:3:314:48
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/server/header/FeaturePolicyServerHttpHeadersWriter.java###/FeaturePolicyServerHttpHeadersWriter.java###org.springframework.security.web.server.header.FeaturePolicyServerHttpHeadersWriter###createDelegate:String ###returnStaticServerHttpHeadersWriter.builder().header(FEATURE_POLICY,policyDirectives).build();###builder###StaticServerHttpHeadersWriter.builder()###56:3:58:14
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/FormLoginBeanDefinitionParserTests.java###/FormLoginBeanDefinitionParserTests.java###org.springframework.security.config.http.FormLoginBeanDefinitionParserTests###failedLoginWhenConfiguredWithCustomAuthenticationFailureThenForwardsAccordingly:###this.mvc.perform(post("/login").param("username","bob").param("password","invalidpassword")).andExpect(status().isOk()).andExpect(forwardedUrl("/failure_forward_url")).andExpect(request().attribute(WebAttributes.AUTHENTICATION_EXCEPTION,not(nullValue())));###loginRequest###post("/login").param("username","bob").param("password","invalidpassword")###232:3:237:95
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/CsrfConfigTests.java###/CsrfConfigTests.java###org.springframework.security.config.http.CsrfConfigTests###postWhenCsrfMismatchesThenForbidden:###this.mvc.perform(post("/ok").session(session).with(csrf().useInvalidToken())).andExpect(status().isForbidden());###postOk###post("/ok").session(session).with(csrf().useInvalidToken())###294:3:294:115
cd08102b93dec81705e3f0b19ed72b6755cc9bee###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/server/DefaultServerRedirectStrategy.java###/DefaultServerRedirectStrategy.java###org.springframework.security.web.server.DefaultServerRedirectStrategy###sendRedirect:ServerWebExchange URI ###response.getHeaders().setLocation(createLocation(exchange,location));###newLocation###createLocation(exchange,location)###44:4:44:74
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenAnonymousConfiguredAndLoggedInUserThenRespondsWithForbidden:###this.mvc.perform(get("/").with(user("user"))).andExpect(status().isForbidden());###requestWithUser###get("/").with(user("user"))###240:3:240:83
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RememberMeConfigurerTests.java###/RememberMeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RememberMeConfigurerTests###loginWhenRememberMeTrueThenRespondsWithRememberMeCookie:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")).andExpect(cookie().exists("remember-me"));###request###post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")###109:3:110:78
5bdd7571088ea7c34f90b1162cc5abcbca127ee1###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/server/header/ContentSecurityPolicyServerHttpHeadersWriter.java###/ContentSecurityPolicyServerHttpHeadersWriter.java###org.springframework.security.web.server.header.ContentSecurityPolicyServerHttpHeadersWriter###createDelegate:###returnStaticServerHttpHeadersWriter.builder().header(resolveHeader(this.reportOnly),this.policyDirectives).build();###builder###StaticServerHttpHeadersWriter.builder()###72:3:74:14
bd5a64825d86441bd840ff847697e246f997f548###/spring-projects_spring-security/core/src/test/java/org/springframework/security/providers/cas/CasAuthenticationProviderTests.java###/CasAuthenticationProviderTests.java###org.springframework.security.providers.cas.CasAuthenticationProviderTests###testIgnoresUsernamePasswordAuthenticationTokensWithoutCasIdentifiersAsPrincipal:###cap.setStatelessTicketCache(newMockStatelessTicketCache());###cache###newMockStatelessTicketCache()###311:9:311:69
89415e3ee5a98e69276d427beb6672ad3d2c0297###/spring-projects_spring-security/core/src/main/java/org/springframework/security/vote/RoleVoter.java###/RoleVoter.java###org.springframework.security.vote.RoleVoter###vote:Authentication Object ConfigAttributeDefinition ###if(attribute.getAttribute().equals(authentication.getAuthorities()[i].getAuthority()))###authorities###authentication.getAuthorities()###106:21:108:22
771ef0dadcbaf0e9887a36d884167c80025654e5###/spring-projects_spring-security/core/src/main/java/org/springframework/security/jackson2/UserDeserializer.java###/UserDeserializer.java###org.springframework.security.jackson2.UserDeserializer###deserialize:JsonParser DeserializationContext ###Userresult=newUser(readJsonNode(jsonNode,"username").asText(),password.asText(""),readJsonNode(jsonNode,"enabled").asBoolean(),readJsonNode(jsonNode,"accountNonExpired").asBoolean(),readJsonNode(jsonNode,"credentialsNonExpired").asBoolean(),readJsonNode(jsonNode,"accountNonLocked").asBoolean(),authorities);###accountNonExpired###readJsonNode(jsonNode,"accountNonExpired").asBoolean()###64:3:67:74
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/CsrfConfigTests.java###/CsrfConfigTests.java###org.springframework.security.config.http.CsrfConfigTests###postWhenUsingCsrfAndCustomSessionManagementAndNoSessionThenStillRedirectsToInvalidSessionUrl:###MvcResultresult=this.mvc.perform(post("/ok").param("_csrf","abc")).andExpect(redirectedUrl("/error/sessionError")).andReturn();###postToOk###post("/ok").param("_csrf","abc")###263:3:264:66
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/MiscHttpConfigTests.java###/MiscHttpConfigTests.java###org.springframework.security.config.http.MiscHttpConfigTests###loginWhenUsingCustomAuthenticationDetailsSourceRefThenAuthenticationSourcesDetailsAccordingly:###this.mvc.perform(get("/details").with(x509("classpath:org/springframework/security/config/http/MiscHttpConfigTests-certificate.pem"))).andExpect(content().string(details.getClass().getName()));###x509###x509("classpath:org/springframework/security/config/http/MiscHttpConfigTests-certificate.pem")###709:3:711:64
5bdd7571088ea7c34f90b1162cc5abcbca127ee1###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/server/header/StrictTransportSecurityServerHttpHeadersWriter.java###/StrictTransportSecurityServerHttpHeadersWriter.java###org.springframework.security.web.server.header.StrictTransportSecurityServerHttpHeadersWriter###updateDelegate:###this.delegate=StaticServerHttpHeadersWriter.builder().header(STRICT_TRANSPORT_SECURITY,this.maxAge+this.subdomain+this.preload).build();###builder###StaticServerHttpHeadersWriter.builder()###95:3:96:93
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RememberMeConfigurerTests.java###/RememberMeConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RememberMeConfigurerTests###getWhenRememberMeCookieAndLoggedOutThenRedirectsToLogin:###MvcResultloginMvcResult=this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")).andReturn();###loginRequest###post("/login").with(csrf()).param("username","user").param("password","password").param("remember-me","true")###137:3:138:78
59cef7d339de9d3a825a5ec35643d50e3f03cd4e###/spring-projects_spring-security/oauth2/oauth2-client/src/test/java/org/springframework/security/oauth2/client/web/HttpSessionOAuth2AuthorizationRequestRepositoryTests.java###/HttpSessionOAuth2AuthorizationRequestRepositoryTests.java###org.springframework.security.oauth2.client.web.HttpSessionOAuth2AuthorizationRequestRepositoryTests###loadAuthorizationRequestWhenNotSavedThenReturnNull:###OAuth2AuthorizationRequestauthorizationRequest=this.authorizationRequestRepository.loadAuthorizationRequest(newMockHttpServletRequest());###request###newMockHttpServletRequest()###47:3:48:95
36c096858dba391bae00e2eb88c284d388b8aaca###/spring-projects_spring-security/core/src/main/java/org/acegisecurity/providers/AbstractAuthenticationToken.java###/AbstractAuthenticationToken.java###org.acegisecurity.providers.AbstractAuthenticationToken###hashCode:###code^=this.getAuthorities()[i].hashCode();###authorities###this.getAuthorities()###152:17:152:61
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###configureWhenContentSecurityPolicyNoPolicyDirectivesInLambdaThenDefaultHeaderValue:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.CONTENT_SECURITY_POLICY,"default-src'self'")).andReturn();###csp###header().string(HttpHeaders.CONTENT_SECURITY_POLICY,"default-src'self'")###338:3:339:104
87ed31a99c1bd949a61fe623160bd3b1ce873070###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/http/OAuth2ClientBeanDefinitionParser.java###/OAuth2ClientBeanDefinitionParser.java###org.springframework.security.config.http.OAuth2ClientBeanDefinitionParser###parse:Element ParserContext ###this.authorizationCodeGrantFilter=BeanDefinitionBuilder.rootBeanDefinition(OAuth2AuthorizationCodeGrantFilter.class).addConstructorArgValue(clientRegistrationRepository).addConstructorArgValue(authorizedClientRepository).addConstructorArgValue(this.authenticationManager).addPropertyValue("authorizationRequestRepository",authorizationRequestRepository).getBeanDefinition();###authorizationCodeGrantFilterBldr###BeanDefinitionBuilder.rootBeanDefinition(OAuth2AuthorizationCodeGrantFilter.class).addConstructorArgValue(clientRegistrationRepository).addConstructorArgValue(authorizedClientRepository).addConstructorArgValue(this.authenticationManager).addPropertyValue("authorizationRequestRepository",authorizationRequestRepository)###95:3:99:109
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configuration/SecurityReactorContextConfigurationResourceServerTests.java###/SecurityReactorContextConfigurationResourceServerTests.java###org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfigurationResourceServerTests###requestWhenUsingFilterThenBearerTokenPropagated:###this.mockMvc.perform(get("/token").with(authentication(authentication))).andExpect(status().isOk()).andExpect(content().string("Bearertoken"));###authenticatedRequest###get("/token").with(authentication(authentication))###64:3:67:50
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/DefaultLoginPageConfigurerTests.java###/DefaultLoginPageConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.DefaultLoginPageConfigurerTests###loginWhenValidCredentialsThenRedirectsToDefaultSuccessPage:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password")).andExpect(redirectedUrl("/"));###loginRequest###post("/login").with(csrf()).param("username","user").param("password","password")###173:3:177:36
7268c81192fc4a759bcb13d6e0e21ecde1cc6823###/spring-projects_spring-security/core/src/main/java/org/acegisecurity/ui/rememberme/RememberMeProcessingFilter.java###/RememberMeProcessingFilter.java###net.sf.acegisecurity.ui.rememberme.RememberMeProcessingFilter###doFilter:ServletRequest ServletResponse FilterChain ###SecurityContextHolder.getContext().setAuthentication(rememberMeServices.autoLogin(httpRequest,httpResponse));###rememberMeAuth###rememberMeServices.autoLogin(httpRequest,httpResponse)###124:13:125:56
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurerTests.java###/RequestCacheConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurerTests###getWhenBookmarkedRequestIsTextHtmlThenPostAuthenticationRemembers:###MockHttpSessionsession=(MockHttpSession)this.mvc.perform(get("/messages").header(HttpHeaders.ACCEPT,MediaType.TEXT_HTML)).andExpect(redirectedUrl("http://localhost/login")).andReturn().getRequest().getSession();###request###get("/messages").header(HttpHeaders.ACCEPT,MediaType.TEXT_HTML)###220:3:224:46
1f1ddeb02512813d908fec0d9057fb18feeb388d###/spring-projects_spring-security/test/src/main/java/org/springframework/security/test/web/servlet/setup/SecurityMockMvcConfigurer.java###/SecurityMockMvcConfigurer.java###org.springframework.security.test.web.servlet.setup.SecurityMockMvcConfigurer.DelegateFilter###getDelegate:###returnthis.delegate;###result###this.delegate###121:4:121:25
881cd0befbdd8625000e549c0522866d96f6f9db###/spring-projects_spring-security/core/src/main/java/org/springframework/security/jackson2/UsernamePasswordAuthenticationTokenDeserializer.java###/UsernamePasswordAuthenticationTokenDeserializer.java###org.springframework.security.jackson2.UsernamePasswordAuthenticationTokenDeserializer###deserialize:JsonParser DeserializationContext ###token.setDetails(readJsonNode(jsonNode,"details"));###detailsNode###readJsonNode(jsonNode,"details")###77:3:77:55
f57f50bae5536599b2b7cd855e5226da209ab154###/spring-projects_spring-security/samples/acegifier/src/java/acegifier/WebXmlConverter.java###/WebXmlConverter.java###acegifier.WebXmlConverter###WebXmlConverter:###acegiSecurityTransformer=tf.newTransformer(createTransformerSource(WEB_TO_SPRING_XSL_FILE));###source###createTransformerSource(WEB_TO_SPRING_XSL_FILE)###52:9:52:103
781d88bd30c6ae024592fd8fc763e8fdf4e981a4###/spring-projects_spring-security/core/src/main/java/org/springframework/security/config/HttpSecurityBeanDefinitionParser.java###/HttpSecurityBeanDefinitionParser.java###org.springframework.security.config.HttpSecurityBeanDefinitionParser###registerFilterSecurityInterceptor:Element ParserContext UrlMatcher String LinkedHashMap ###builder.addPropertyValue("objectDefinitionSource",newDefaultFilterInvocationDefinitionSource(matcher,filterInvocationDefinitionMap));###fids###newDefaultFilterInvocationDefinitionSource(matcher,filterInvocationDefinitionMap)###279:9:280:102
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/authentication/preauth/websphere/DefaultWASUsernameAndGroupsExtractor.java###/DefaultWASUsernameAndGroupsExtractor.java###org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor###invokeMethod:Method Object Object[] ###logger.error("Errorwhileinvokingmethod"+method.getClass().getName()+"."+method.getName()+"("+Arrays.asList(args)+")",e);###message###"Errorwhileinvokingmethod"+method.getClass().getName()+"."+method.getName()+"("+Arrays.asList(args)+")"###166:4:167:69
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/OAuth2ResourceServerBeanDefinitionParserTests.java###/OAuth2ResourceServerBeanDefinitionParserTests.java###org.springframework.security.config.http.OAuth2ResourceServerBeanDefinitionParserTests###getWhenIntrospectionFailsThenUnauthorized:###this.mvc.perform(get("/").header("Authorization","Bearertoken")).andExpect(status().isUnauthorized()).andExpect(header().string(HttpHeaders.WWW_AUTHENTICATE,containsString("Providedtokenisn'tactive")));###request###get("/").header("Authorization","Bearertoken")###770:3:774:55
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpInterceptUrlTests.java###/NamespaceHttpInterceptUrlTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpInterceptUrlTests###requestWhenMappedByPostInterceptUrlThenBehaviorMatchesNamespace:###this.mvc.perform(get("/admin/post").with(authentication(user("ROLE_USER")))).andExpect(status().isOk());###getWithUser###get("/admin/post").with(authentication(user("ROLE_USER")))###81:3:81:107
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenPermissionCheckAndAuthenticationNameMatchesThenRespondsWithOk:###this.mvc.perform(get("/allow").with(user("user").roles("USER"))).andExpect(status().isOk());###requestWithUser###get("/allow").with(user("user").roles("USER"))###735:3:737:33
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceRememberMeTests.java###/NamespaceRememberMeTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceRememberMeTests###rememberMeLoginWhenUsingDefaultsThenMatchesNamespace:###this.mvc.perform(post("/authentication-class").with(csrf()).cookie(rememberMe)).andExpect(redirectedUrl("http://localhost/login")).andReturn();###authenticationClassRequest###post("/authentication-class").with(csrf()).cookie(rememberMe)###103:3:106:18
b8d51725c78174141407725587ff0322ff158192###/spring-projects_spring-security/core/src/main/java/org/springframework/security/provisioning/JdbcUserDetailsManager.java###/JdbcUserDetailsManager.java###org.springframework.security.provisioning.JdbcUserDetailsManager###changePassword:String String ###SecurityContextHolder.getContext().setAuthentication(createNewAuthentication(currentUser,newPassword));###authentication###createNewAuthentication(currentUser,newPassword)###280:3:280:107
85b0e468adc019435dd6a8375f936cca3d6bc00d###/spring-projects_spring-security/test/src/main/java/org/springframework/security/test/web/reactive/server/SecurityMockServerConfigurers.java###/SecurityMockServerConfigurers.java###org.springframework.security.test.web.reactive.server.SecurityMockServerConfigurers.OAuth2LoginMutator###afterConfigureAdded:WebTestClient.MockServerSpec<?> ###mockAuthentication(getToken()).afterConfigureAdded(serverSpec);###token###getToken()###797:4:797:67
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/FormLoginConfigTests.java###/FormLoginConfigTests.java###org.springframework.security.config.http.FormLoginConfigTests###authenticateWhenCustomHandlerBeansConfiguredThenInvokesAccordingly:###this.mvc.perform(post("/login").param("username","user").param("password","password").with(csrf())).andExpect(status().isIAmATeapot());###loginRequest###post("/login").param("username","user").param("password","password").with(csrf())###130:3:134:41
aaa9708b952409269f2829e60126344a1288019e###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/annotation/web/configuration/WebMvcSecurityConfiguration.java###/WebMvcSecurityConfiguration.java###org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration###addArgumentResolvers:List<HandlerMethodArgumentResolver> ###argumentResolvers.add(newAuthenticationPrincipalArgumentResolver());###authenticationPrincipalResolver###newAuthenticationPrincipalArgumentResolver()###44:3:44:72
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/PermitAllSupportTests.java###/PermitAllSupportTests.java###org.springframework.security.config.annotation.web.configurers.PermitAllSupportTests###performWhenUsingPermitAllExactUrlRequestMatcherThenMatchesExactUrl:###this.mvc.perform(post("/app/abc?def").with(csrf()).contextPath("/app")).andExpect(status().isNotFound());###postWithQueryAndCsrf###post("/app/abc?def").with(csrf()).contextPath("/app")###56:3:57:39
6b4045667a0f0d1788a5afc006f442b96551eb0d###/spring-projects_spring-security/core/src/main/java/org/springframework/security/config/GlobalMethodSecurityBeanDefinitionParser.java###/GlobalMethodSecurityBeanDefinitionParser.java###org.springframework.security.config.GlobalMethodSecurityBeanDefinitionParser###parse:Element ParserContext ###delegates.add(BeanDefinitionBuilder.rootBeanDefinition(EXPRESSION_METHOD_DEFINITION_SOURCE_CLASS).getBeanDefinition());###mds###BeanDefinitionBuilder.rootBeanDefinition(EXPRESSION_METHOD_DEFINITION_SOURCE_CLASS)###79:13:79:132
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceHttpInterceptUrlTests.java###/NamespaceHttpInterceptUrlTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceHttpInterceptUrlTests###authenticatedRequestWhenUrlRequiresElevatedPrivilegesThenBehaviorMatchesNamespace:###this.mvc.perform(get("/users").with(authentication(user("ROLE_USER")))).andExpect(status().isForbidden());###requestWithUser###get("/users").with(authentication(user("ROLE_USER")))###71:3:73:40
59ac4c8b964c8ffa86084e53b99fc56fe1415516###/spring-projects_spring-security/ldap/src/main/java/org/springframework/security/ldap/authentication/ad/ActiveDirectoryLdapAuthenticationProvider.java###/ActiveDirectoryLdapAuthenticationProvider.java###org.springframework.security.ldap.authentication.ad.ActiveDirectoryLdapAuthenticationProvider###bindAsUser:String String ###env.put(Context.SECURITY_PRINCIPAL,createBindPrincipal(username));###bindPrincipal###createBindPrincipal(username)###111:9:111:76
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configuration/HttpSecurityConfigurationTests.java###/HttpSecurityConfigurationTests.java###org.springframework.security.config.annotation.web.configuration.HttpSecurityConfigurationTests###loadConfigWhenDefaultConfigThenWebAsyncManagerIntegrationFilterAdded:###MvcResultmvcResult=this.mockMvc.perform(get("/name").with(user("Bob"))).andExpect(request().asyncStarted()).andReturn();###requestWithBob###get("/name").with(user("Bob"))###108:3:109:18
6a8475adbbc9c6a1b363ca16727b484e4e33caa4###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/message/MessageSecurityBeanDefinitionParser.java###/MessageSecurityBeanDefinitionParser.java###org.springframework.security.config.message.MessageSecurityBeanDefinitionParser.MessageSecurityPostProcessor###postProcessBeanDefinitionRegistry:BeanDefinitionRegistry ###if(bd.getBeanClassName().equals(SimpAnnotationMethodMessageHandler.class.getName()))###beanClassName###bd.getBeanClassName()###155:17:163:18
373d07ce46ba55da433fdfe3d95d70096179aa2a###/spring-projects_spring-security/ldap/src/main/java/org/springframework/security/ldap/authentication/ad/ActiveDirectoryLdapAuthenticationProvider.java###/ActiveDirectoryLdapAuthenticationProvider.java###org.springframework.security.ldap.authentication.ad.ActiveDirectoryLdapAuthenticationProvider###searchRootFromPrincipal:String ###returnrootDnFromDomain(bindPrincipal.substring(bindPrincipal.lastIndexOf('@')+1,bindPrincipal.length()));###atChar###bindPrincipal.lastIndexOf('@')###259:9:259:118
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/oidc/web/logout/OidcClientInitiatedLogoutSuccessHandler.java###/OidcClientInitiatedLogoutSuccessHandler.java###org.springframework.security.oauth2.client.oidc.web.logout.OidcClientInitiatedLogoutSuccessHandler###endSessionEndpoint:ClientRegistration ###ObjectendSessionEndpoint=clientRegistration.getProviderDetails().getConfigurationMetadata().get("end_session_endpoint");###providerDetails###clientRegistration.getProviderDetails()###80:4:81:35
abe62f91467e2efe4d72f87157b564601825ef00###/spring-projects_spring-security/openid/src/main/java/org/springframework/security/ui/openid/OpenIdAuthenticationProcessingFilter.java###/OpenIdAuthenticationProcessingFilter.java###org.springframework.security.ui.openid.OpenIdAuthenticationProcessingFilter###attemptAuthentication:HttpServletRequest ###thrownewOpenIdAuthenticationRequiredException("ExternalAuthenticationRequired",obtainUsername(req));###username###obtainUsername(req)###68:13:68:118
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/FormLoginConfigurerTests.java###/FormLoginConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.FormLoginConfigurerTests###formLoginWhenInvokedTwiceThenUsesOriginalUsernameParameter:###this.mockMvc.perform(formLogin().user("custom-username","user")).andExpect(authenticated());###loginRequest###formLogin().user("custom-username","user")###560:3:561:33
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenSecureRequestAndHpkpWithPinThenPublicKeyPinsReportOnlyHeaderInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\"")).andReturn();###pinsReportOnly###header().string(HttpHeaders.PUBLIC_KEY_PINS_REPORT_ONLY,"max-age=5184000;pin-sha256=\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\"")###408:3:411:18
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/core/src/main/java/org/springframework/security/jackson2/UserDeserializer.java###/UserDeserializer.java###org.springframework.security.jackson2.UserDeserializer###deserialize:JsonParser DeserializationContext ###Userresult=newUser(readJsonNode(jsonNode,"username").asText(),password.asText(""),readJsonNode(jsonNode,"enabled").asBoolean(),readJsonNode(jsonNode,"accountNonExpired").asBoolean(),readJsonNode(jsonNode,"credentialsNonExpired").asBoolean(),readJsonNode(jsonNode,"accountNonLocked").asBoolean(),authorities);###accountNonExpired###readJsonNode(jsonNode,"accountNonExpired").asBoolean()###65:3:70:5
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/LogoutConfigurerTests.java###/LogoutConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.LogoutConfigurerTests###logoutWhenAcceptApplicationJsonThenReturnsStatusNoContent:###this.mvc.perform(post("/logout").with(csrf()).with(user("user")).header(HttpHeaders.ACCEPT,MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNoContent());###request###post("/logout").with(csrf()).with(user("user")).header(HttpHeaders.ACCEPT,MediaType.APPLICATION_JSON_VALUE)###414:3:418:40
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/FormLoginConfigTests.java###/FormLoginConfigTests.java###org.springframework.security.config.http.FormLoginConfigTests###authenticateWhenCsrfIsEnabledThenRequiresToken:###this.mvc.perform(post("/login").param("username","user").param("password","password")).andExpect(status().isForbidden());###loginRequest###post("/login").param("username","user").param("password","password")###132:3:133:40
88028d82edc2702209da3a52663004608b3c287e###/spring-projects_spring-security/test/src/main/java/org/springframework/security/test/web/servlet/request/SecurityMockMvcRequestBuilders.java###/SecurityMockMvcRequestBuilders.java###org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestBuilders.LogoutRequestBuilder###buildRequest:ServletContext ###MockHttpServletRequestrequest=post(this.logoutUrl).accept(MediaType.TEXT_HTML,MediaType.ALL).buildRequest(servletContext);###logoutRequest###post(this.logoutUrl).accept(MediaType.TEXT_HTML,MediaType.ALL)###95:4:97:36
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/FormLoginConfigTests.java###/FormLoginConfigTests.java###org.springframework.security.config.http.FormLoginConfigTests###authenticateWhenCsrfIsEnabledThenRequiresToken:###this.mvc.perform(post("/login").param("username","user").param("password","password")).andExpect(status().isForbidden());###loginRequest###post("/login").param("username","user").param("password","password")###178:3:181:40
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/MiscHttpConfigTests.java###/MiscHttpConfigTests.java###org.springframework.security.config.http.MiscHttpConfigTests###authenticateWhenUsingPortMapperThenRedirectsAppropriately:###session=(MockHttpSession)this.mvc.perform(post("/login").param("username","user").param("password","password").session(session).with(csrf())).andExpect(redirectedUrl("https://localhost:9443/protected")).andReturn().getRequest().getSession(false);###loginRequest###post("/login").param("username","user").param("password","password").session(session).with(csrf())###795:3:802:50
7a715f908601a5ee72b7d62dc5eba4b0bfc47f2b###/spring-projects_spring-security/oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/endpoint/NimbusAuthorizationCodeTokenResponseClient.java###/NimbusAuthorizationCodeTokenResponseClient.java###org.springframework.security.oauth2.client.endpoint.NimbusAuthorizationCodeTokenResponseClient###getTokenResponse:OAuth2AuthorizationCodeGrantRequest ###oauth2Error=newOAuth2Error((errorObject.getCode()!=null)?errorObject.getCode():OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),(errorObject.getURI()!=null)?errorObject.getURI().toString():null);###uri###(errorObject.getURI()!=null)?errorObject.getURI().toString():null###130:5:133:80
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenFullyAuthenticatedConfiguredAndUserThenRespondsWithOk:###this.mvc.perform(get("/").with(user("user").roles("USER"))).andExpect(status().isOk());###requestWithUser###get("/").with(user("user").roles("USER"))###562:3:564:33
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/LogoutConfigurerTests.java###/LogoutConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.LogoutConfigurerTests###logoutWhenAcceptAllThenReturnsStatusNoContent:###this.mvc.perform(post("/logout").with(csrf()).with(user("user")).header(HttpHeaders.ACCEPT,MediaType.ALL_VALUE)).andExpect(status().isNoContent());###logoutRequest###post("/logout").with(csrf()).with(user("user")).header(HttpHeaders.ACCEPT,MediaType.ALL_VALUE)###208:3:210:40
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/WebSecurityConfigurerAdapterTests.java###/WebSecurityConfigurerAdapterTests.java###org.springframework.security.config.annotation.web.WebSecurityConfigurerAdapterTests###performWhenUsingAuthenticationEventPublisherInDslThenUses:###this.mockMvc.perform(get("/").with(httpBasic("user","password")));###userRequest###get("/").with(httpBasic("user","password"))###191:3:191:70
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configuration/HttpSecurityConfigurationTests.java###/HttpSecurityConfigurationTests.java###org.springframework.security.config.annotation.web.configuration.HttpSecurityConfigurationTests###authenticateWhenDefaultFilterChainBeanThenRedirectsToSavedRequest:###this.mockMvc.perform(post("/login").param("username","user").param("password","password").session(session).with(csrf())).andExpect(redirectedUrl("http://localhost/messages"));###loginRequest###post("/login").param("username","user").param("password","password").session(session).with(csrf())###135:3:137:60
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/SessionManagementConfigTests.java###/SessionManagementConfigTests.java###org.springframework.security.config.http.SessionManagementConfigTests###requestWhenCreateSessionIsSetToStatelessThenIgnoresExistingSession:###MvcResultresult=this.mvc.perform(post("/login").param("username","user").param("password","password").session(newMockHttpSession()).with(csrf())).andExpect(status().isFound()).andExpect(session()).andReturn();###loginRequest###post("/login").param("username","user").param("password","password").session(newMockHttpSession()).with(csrf())###184:3:192:20
7bf6008efe485e3f0c93411f46b77f263150dc8f###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/http/HttpSecurityBeanDefinitionParser.java###/HttpSecurityBeanDefinitionParser.java###org.springframework.security.config.http.HttpSecurityBeanDefinitionParser###createFilterChain:Element ParserContext ###pc.getReaderContext().error("The'"+ATT_SECURED+"'attributemustbeusedincombinationwith"+"the'"+ATT_PATH_PATTERN+"'or'"+ATT_REQUEST_MATCHER_REF+"'attributes.",pc.extractSource(element));###message###"The'"+ATT_SECURED+"'attributemustbeusedincombinationwith"+"the'"+ATT_PATH_PATTERN+"'or'"+ATT_REQUEST_MATCHER_REF+"'attributes."###128:5:131:36
0ac1176152fe823318a40ddac8d143eea80d1577###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/util/NegatedRequestMatcher.java###/NegatedRequestMatcher.java###org.springframework.security.web.util.NegatedRequestMatcher###matches:HttpServletRequest ###return!requestMatcher.matches(request);###result###!requestMatcher.matches(request)###44:9:44:49
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###authorizeRequestsWhenInvokedTwiceThenUsesOriginalConfiguration:###this.mvc.perform(post("/").with(csrf())).andExpect(status().isUnauthorized());###requestWithCsrf###post("/").with(csrf())###318:3:318:81
381b4c118d9f5b28018479a8f4e7a0d2e7951a9d###/spring-projects_spring-security/test/src/test/java/org/springframework/security/test/context/support/ReactorContextTestExecutionListenerTests.java###/ReactorContextTestExecutionListenerTests.java###org.springframework.security.test.context.support.ReactorContextTestExecutionListenerTests###afterTestMethodWhenDifferentHookIsRegistered:###assertThat(Mono.subscriberContext().block()).isEqualTo(obj);###result###Mono.subscriberContext().block()###186:3:186:63
5c73816a1a7ad6d0306416361f34d32514696a63###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/authentication/www/DigestAuthenticationFilter.java###/DigestAuthenticationFilter.java###org.springframework.security.web.authentication.www.DigestAuthenticationFilter###doFilter:ServletRequest ServletResponse FilterChain ###SecurityContextHolder.getContext().setAuthentication(createSuccessfulAuthentication(request,user));###authentication###createSuccessfulAuthentication(request,user)###227:3:228:52
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenAuthorityRoleUserOrAdminRequiredAndAuthorityIsRoleOtherThenRespondsWithForbidden:###this.mvc.perform(get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_OTHER")))).andExpect(status().isForbidden());###requestWithUser###get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_OTHER")))###173:3:174:40
8a0c6868cd7f61b8e64c815910a12ed0d485ef8e###/spring-projects_spring-security/oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/oidc/authentication/OidcAuthorizationCodeAuthenticationProvider.java###/OidcAuthorizationCodeAuthenticationProvider.java###org.springframework.security.oauth2.client.oidc.authentication.OidcAuthorizationCodeAuthenticationProvider###authenticate:Authentication ###if(!accessTokenResponse.getAdditionalParameters().containsKey(OidcParameterNames.ID_TOKEN))###additionalParameters###accessTokenResponse.getAdditionalParameters()###142:3:148:4
b7ea7083c992be5d57d584171fea66ddc1e0ec24###/spring-projects_spring-security/oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/web/OAuth2LoginAuthenticationFilter.java###/OAuth2LoginAuthenticationFilter.java###org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter###attemptAuthentication:HttpServletRequest HttpServletResponse ###authenticationRequest.setDetails(this.authenticationDetailsSource.buildDetails(request));###authenticationDetails###this.authenticationDetailsSource.buildDetails(request)###183:3:183:92
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###postWhenAccessRoleUserOrGetRequestConfiguredThenRespondsWithUnauthorized:###this.mvc.perform(post("/").with(csrf())).andExpect(status().isUnauthorized());###requestWithCsrf###post("/").with(csrf())###312:3:312:81
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/LogoutConfigurerClearSiteDataTests.java###/LogoutConfigurerClearSiteDataTests.java###org.springframework.security.config.annotation.web.configurers.LogoutConfigurerClearSiteDataTests###logoutWhenRequestTypeGetThenHeaderNotPresentt:###this.mvc.perform(get("/logout").secure(true).with(csrf())).andExpect(header().doesNotExist(CLEAR_SITE_DATA_HEADER));###logoutRequest###get("/logout").secure(true).with(csrf())###74:3:75:62
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/HeadersConfigurerTests.java###/HeadersConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.HeadersConfigurerTests###getWhenReferrerPolicyConfiguredWithCustomValueThenReferrerPolicyHeaderWithCustomValueInResponse:###MvcResultmvcResult=this.mvc.perform(get("/").secure(true)).andExpect(header().string("Referrer-Policy",ReferrerPolicy.SAME_ORIGIN.getPolicy())).andReturn();###referrerPolicy###header().string("Referrer-Policy",ReferrerPolicy.SAME_ORIGIN.getPolicy())###363:3:364:104
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenPermissionCheckAndAuthenticationNameDoesNotMatchThenRespondsWithForbidden:###this.mvc.perform(get("/deny").with(user("user").roles("USER"))).andExpect(status().isForbidden());###requestWithUser###get("/deny").with(user("user").roles("USER"))###355:3:355:101
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenRoleUserOrAdminConfiguredAndRoleIsAdminThenRespondsWithOk:###this.mvc.perform(get("/").with(user("user").roles("ADMIN"))).andExpect(status().isOk());###requestWithAdmin###get("/").with(user("user").roles("ADMIN"))###350:3:352:33
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenRoleUserOrAdminConfiguredAndRoleIsOtherThenRespondsWithForbidden:###this.mvc.perform(get("/").with(user("user").roles("OTHER"))).andExpect(status().isForbidden());###requestWithRoleOther###get("/").with(user("user").roles("OTHER"))###359:3:361:40
64938ebcfc2fc8cd9ccd6cf31dbcd8cdd0660aca###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/annotation/web/socket/AbstractSecurityWebSocketMessageBrokerConfigurer.java###/AbstractSecurityWebSocketMessageBrokerConfigurer.java###org.springframework.security.config.annotation.web.socket.AbstractSecurityWebSocketMessageBrokerConfigurer###inboundChannelSecurity:###voters.add(newMessageExpressionVoter<Object>());###voter###newMessageExpressionVoter<Object>()###149:3:149:52
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/annotation/web/configuration/OAuth2ImportSelector.java###/OAuth2ImportSelector.java###org.springframework.security.config.annotation.web.configuration.OAuth2ImportSelector###selectImports:AnnotationMetadata ###booleanoauth2ClientPresent=ClassUtils.isPresent("org.springframework.security.oauth2.client.registration.ClientRegistration",getClass().getClassLoader());###classLoader###getClass().getClassLoader()###47:3:48:112
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/FormLoginConfigTests.java###/FormLoginConfigTests.java###org.springframework.security.config.http.FormLoginConfigTests###authenticateWhenCsrfIsDisabledThenDoesNotRequireToken:###this.mvc.perform(post("/login").param("username","user").param("password","password")).andExpect(status().isFound());###loginRequest###post("/login").param("username","user").param("password","password")###190:3:193:36
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/FormLoginConfigTests.java###/FormLoginConfigTests.java###org.springframework.security.config.http.FormLoginConfigTests###authenticateWhenCsrfIsDisabledThenDoesNotRequireToken:###this.mvc.perform(post("/login").param("username","user").param("password","password")).andExpect(status().isFound());###loginRequest###post("/login").param("username","user").param("password","password")###139:3:140:36
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/server/header/XFrameOptionsServerHttpHeadersWriter.java###/XFrameOptionsServerHttpHeadersWriter.java###org.springframework.security.web.server.header.XFrameOptionsServerHttpHeadersWriter###createDelegate:Mode ###returnStaticServerHttpHeadersWriter.builder().header(X_FRAME_OPTIONS,mode.name()).build();###builder###StaticServerHttpHeadersWriter.builder()###88:3:88:95
999eadc540bbf4321753cfdcb3fee4114db5bb55###/spring-projects_spring-security/acl/src/main/java/org/springframework/security/acls/jdbc/BasicLookupStrategy.java###/BasicLookupStrategy.java###org.springframework.security.acls.jdbc.BasicLookupStrategy###readAclsById:List<ObjectIdentity> List<Sid> ###Aclacl=aclCache.getFromCache(objects.get(i));###oid###objects.get(i)###320:17:320:65
c57fc309c245de8171e67be1ef1ebb6c5b6b0d4c###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/servletapi/HttpServlet3RequestFactory.java###/HttpServlet3RequestFactory.java###org.springframework.security.web.servletapi.HttpServlet3RequestFactory.Servlet3SecurityContextHolderAwareRequestWrapper###getAuthentication:AuthenticationManager String String ###returnauthManager.authenticate(newUsernamePasswordAuthenticationToken(username,password));###authentication###newUsernamePasswordAuthenticationToken(username,password)###236:5:236:98
881cd0befbdd8625000e549c0522866d96f6f9db###/spring-projects_spring-security/core/src/main/java/org/springframework/security/jackson2/UsernamePasswordAuthenticationTokenDeserializer.java###/UsernamePasswordAuthenticationTokenDeserializer.java###org.springframework.security.jackson2.UsernamePasswordAuthenticationTokenDeserializer###deserialize:JsonParser DeserializationContext ###Objectcredentials=readJsonNode(jsonNode,"credentials").asText();###credentialsNode###readJsonNode(jsonNode,"credentials")###68:3:68:71
8a3930e673b14ab61a64dd7cdf019c853178d24f###/spring-projects_spring-security/core/src/test/java/org/springframework/security/authentication/ProviderManagerTests.java###/ProviderManagerTests.java###org.springframework.security.authentication.ProviderManagerTests###concurrentLoginExceptionPreventsCallsToSubsequentProviders:###authMgr.authenticate(createAuthenticationToken());###request###createAuthenticationToken()###192:9:192:59
5f79a25860592eb30ea9d37165b95ccc87d0a323###/spring-projects_spring-security/core/src/main/java/org/acegisecurity/concurrent/SessionRegistryImpl.java###/SessionRegistryImpl.java###org.acegisecurity.concurrent.SessionRegistryImpl###getAllSessions:Object ###list.add(getSessionInformation(sessionId));###sessionInformation###getSessionInformation(sessionId)###73:10:73:53
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceSessionManagementTests.java###/NamespaceSessionManagementTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceSessionManagementTests###authenticateWhenUsingSessionRegistryThenMatchesNamespace:###this.mvc.perform(get("/auth").with(httpBasic("user","password"))).andExpect(status().isOk());###request###get("/auth").with(httpBasic("user","password"))###164:3:166:33
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenHasAuthorityRoleUserConfiguredAndAuthorityIsRoleUserThenRespondsWithOk:###this.mvc.perform(get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_USER")))).andExpect(status().isOk());###requestWithUser###get("/").with(user("user").authorities(newSimpleGrantedAuthority("ROLE_USER")))###216:3:218:33
18427b64113276c7bcaeda2e2e98cd7473c493aa###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/annotation/web/builders/WebSecurity.java###/WebSecurity.java###org.springframework.security.config.annotation.web.builders.WebSecurity###performBuild:###securityFilterChains.add(newDefaultSecurityFilterChain(ignoredRequest));###securityFilterChain###newDefaultSecurityFilterChain(ignoredRequest)###282:4:282:77
1e864ad7645fcf6d66edd714cb4faf32f76c0716###/spring-projects_spring-security/config/src/main/java/org/springframework/security/config/annotation/method/configuration/GlobalMethodSecurityConfiguration.java###/GlobalMethodSecurityConfiguration.java###org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration###methodSecurityMetadataSource:###if(securedEnabled())###isSecureEnabled###securedEnabled()###364:3:366:4
5bdd7571088ea7c34f90b1162cc5abcbca127ee1###/spring-projects_spring-security/web/src/main/java/org/springframework/security/web/authentication/preauth/websphere/DefaultWASUsernameAndGroupsExtractor.java###/DefaultWASUsernameAndGroupsExtractor.java###org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor###invokeMethod:Method Object Object[] ###logger.error("Errorwhileinvokingmethod"+method.getClass().getName()+"."+method.getName()+"("+Arrays.asList(args)+")",ex);###message###"Errorwhileinvokingmethod"+method.getClass().getName()+"."+method.getName()+"("+Arrays.asList(args)+")"###162:4:163:39
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurerTests.java###/RequestCacheConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurerTests###getWhenBookmarkedRequestIsChromeThenPostAuthenticationRemembers:###MockHttpSessionsession=(MockHttpSession)this.mvc.perform(get("/messages").header(HttpHeaders.ACCEPT,"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8")).andExpect(redirectedUrl("http://localhost/login")).andReturn().getRequest().getSession();###request###get("/messages").header(HttpHeaders.ACCEPT,"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8")###159:3:162:95
a577871bcaf128fdcfac65e0d61e86ac94b59109###/spring-projects_spring-security/oauth2/oauth2-core/src/main/java/org/springframework/security/oauth2/core/web/reactive/function/OAuth2AccessTokenResponseBodyExtractor.java###/OAuth2AccessTokenResponseBodyExtractor.java###org.springframework.security.oauth2.core.web.reactive.function.OAuth2AccessTokenResponseBodyExtractor###oauth2AccessTokenResponse:TokenResponse ###oauth2Error=newOAuth2Error((errorObject.getCode()!=null)?errorObject.getCode():OAuth2ErrorCodes.SERVER_ERROR,errorObject.getDescription(),(errorObject.getURI()!=null)?errorObject.getURI().toString():null);###description###errorObject.getDescription()###101:4:104:79
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/FormLoginConfigTests.java###/FormLoginConfigTests.java###org.springframework.security.config.http.FormLoginConfigTests###authenticateWhenConfiguredWithSpelThenRedirectsAccordingly:###this.mvc.perform(post("/login").param("username","user").param("password","wrong").with(csrf())).andExpect(redirectedUrl(WebConfigUtilsTest.URL+"/failure"));###invalidPassword###post("/login").param("username","user").param("password","wrong").with(csrf())###100:3:104:68
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/NamespaceSessionManagementTests.java###/NamespaceSessionManagementTests.java###org.springframework.security.config.annotation.web.configurers.NamespaceSessionManagementTests###authenticateWhenUsingInvalidSessionUrlThenMatchesNamespace:###this.mvc.perform(get("/auth").with((request)->{request.setRequestedSessionIdValid(false);request.setRequestedSessionId("id");returnrequest;})).andExpect(redirectedUrl("/invalid-session"));###request###get("/auth").with((request)->{request.setRequestedSessionIdValid(false);request.setRequestedSessionId("id");returnrequest;})###95:3:99:52
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/DefaultLoginPageConfigurerTests.java###/DefaultLoginPageConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.DefaultLoginPageConfigurerTests###loginWhenValidCredentialsThenRedirectsToDefaultSuccessPage:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password")).andExpect(redirectedUrl("/"));###loginRequest###post("/login").with(csrf()).param("username","user").param("password","password")###140:3:141:36
acf3966651c5c181216269521c6b331e7e73c1d9###/spring-projects_spring-security/core/src/test/java/org/springframework/security/util/FilterChainProxyTests.java###/FilterChainProxyTests.java###org.springframework.security.util.FilterChainProxyTests###normalOperation:###doNormalOperation((FilterChainProxy)appCtx.getBean("filterChain",FilterChainProxy.class));###filterChainProxy###(FilterChainProxy)appCtx.getBean("filterChain",FilterChainProxy.class)###126:9:126:101
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurerTests.java###/RequestCacheConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurerTests###getWhenBookmarkedRequestIsRequestedWithAndroidThenPostAuthenticationRemembers:###MockHttpSessionsession=(MockHttpSession)this.mvc.perform(get("/messages").header("X-Requested-With","com.android")).andExpect(redirectedUrl("http://localhost/login")).andReturn().getRequest().getSession();###request###get("/messages").header("X-Requested-With","com.android")###169:3:171:95
38ba70bbddee914055e1321469340d347cc24bbf###/spring-projects_spring-security/oauth2/oauth2-client/src/test/java/org/springframework/security/oauth2/client/endpoint/WebClientReactiveClientCredentialsTokenResponseClientTests.java###/WebClientReactiveClientCredentialsTokenResponseClientTests.java###org.springframework.security.oauth2.client.endpoint.WebClientReactiveClientCredentialsTokenResponseClientTests###getTokenResponseWhenPostThenSuccess:###Stringbody=this.server.takeRequest().getUtf8Body();###actualRequest###this.server.takeRequest()###101:3:101:57
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/CsrfConfigurerTests.java###/CsrfConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.CsrfConfigurerTests###loginWhenNoCsrfTokenThenRespondsWithForbidden:###this.mvc.perform(post("/login").param("username","user").param("password","password")).andExpect(status().isForbidden()).andExpect(unauthenticated());###loginRequest###post("/login").param("username","user").param("password","password")###565:3:569:35
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/http/MiscHttpConfigTests.java###/MiscHttpConfigTests.java###org.springframework.security.config.http.MiscHttpConfigTests###loginWhenUsingCustomAuthenticationDetailsSourceRefThenAuthenticationSourcesDetailsAccordingly:###this.mvc.perform(get("/details").with(x509("classpath:org/springframework/security/config/http/MiscHttpConfigTests-certificate.pem"))).andExpect(content().string(details.getClass().getName()));###x509###x509("classpath:org/springframework/security/config/http/MiscHttpConfigTests-certificate.pem")###508:3:510:64
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurerTests.java###/RequestCacheConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurerTests###getWhenBookmarkedRequestIsChromeThenPostAuthenticationRemembers:###MockHttpSessionsession=(MockHttpSession)this.mvc.perform(get("/messages").header(HttpHeaders.ACCEPT,"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8")).andExpect(redirectedUrl("http://localhost/login")).andReturn().getRequest().getSession();###request###get("/messages").header(HttpHeaders.ACCEPT,"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8")###234:3:238:46
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurerTests.java###/SessionManagementConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurerTests###loginWhenUserSessionExpiredAndMaxSessionsIsOneThenLoggedIn:###this.mvc.perform(post("/login").with(csrf()).param("username","user").param("password","password")).andExpect(status().isFound()).andExpect(redirectedUrl("/"));###secondRequest###post("/login").with(csrf()).param("username","user").param("password","password")###151:3:152:66
254f2e2aec14f1b51b07886f0c212fe28cbf91ea###/spring-projects_spring-security/config/src/test/java/org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurerTests.java###/ExpressionUrlAuthorizationConfigurerTests.java###org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurerTests###getWhenPermissionCheckAndRoleMatchesThenRespondsWithOk:###this.mvc.perform(get("/user").with(user("user").roles("USER"))).andExpect(status().isOk());###requestWithUser###get("/user").with(user("user").roles("USER"))###343:3:343:94
2abf59b695b3ad14719299ed17ff47b181eed802###/spring-projects_spring-security/oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/oidc/userinfo/OidcUserService.java###/OidcUserService.java###org.springframework.security.oauth2.client.oidc.userinfo.OidcUserService###shouldRetrieveUserInfo:OidcUserRequest ###if(StringUtils.isEmpty(userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri()))###providerDetails###userRequest.getClientRegistration().getProviderDetails()###154:3:158:4
a09b15ce5f265fed1eca0c25c1133978956824f1###/spring-projects_spring-security/core/src/main/java/org/springframework/security/ui/AuthenticationDetailsSourceImpl.java###/AuthenticationDetailsSourceImpl.java###org.springframework.security.ui.AuthenticationDetailsSourceImpl###buildDetails:Object ###returnnull;###result###null###42:9:42:21
b3f9f6f4e9cc227220515841616aa00d9c093974###/spring-projects_spring-security/core/src/test/java/org/acegisecurity/ui/webapp/AuthenticationProcessingFilterTests.java###/AuthenticationProcessingFilterTests.java###net.sf.acegisecurity.ui.webapp.AuthenticationProcessingFilterTests###testIgnoresAnyServletPathOtherThanFilterProcessesUrl:###executeFilterInContainerSimulator(config,filter,request,newMockHttpServletResponse(),chain);###response###newMockHttpServletResponse()###200:9:201:51
