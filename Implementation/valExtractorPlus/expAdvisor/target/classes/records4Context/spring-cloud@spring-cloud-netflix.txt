b8cf89fb45a412abe040c2c3658d9b4c2f47ea05###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/zuul/filters/pre/FormBodyWrapperFilter.java###/FormBodyWrapperFilter.java###org.springframework.cloud.netflix.zuul.filters.pre.FormBodyWrapperFilter###run:###ReflectionUtils.setField(this.requestField,request,newFormBodyRequestWrapper(wrapped));###wrapper###newFormBodyRequestWrapper(wrapped)###87:4:88:43
08ba0cc72bbddaf95290a6beb830b77a92ced2a4###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/ribbon/okhttp/OkHttpLoadBalancingClient.java###/OkHttpLoadBalancingClient.java###org.springframework.cloud.netflix.ribbon.okhttp.OkHttpLoadBalancingClient###execute:OkHttpRibbonRequest IClientConfig ###finalURIsecureUri=UriComponentsBuilder.fromUri(ribbonRequest.getUri()).scheme("https").build().toUri();###newRequest###ribbonRequest###74:4:75:39
b5a0274b58bee0882ccf936ee2a4dc29548ac27f###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/ribbon/okhttp/OkHttpLoadBalancingClient.java###/OkHttpLoadBalancingClient.java###org.springframework.cloud.netflix.ribbon.okhttp.OkHttpLoadBalancingClient.execute.executeWithRetry.new RetryCallback###doWithRetry:RetryContext ###if(isSecure(configOverride))###secure###isSecure(configOverride)###99:5:103:6
242886916f2e5961f9e5bcc6aef7600545e93b34###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/test/java/org/springframework/cloud/netflix/eureka/EurekaInstanceConfigBeanTests.java###/EurekaInstanceConfigBeanTests.java###org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBeanTests###testPerferIpAddressInDatacenter:###Stringid=((UniqueIdentifier)getInstanceConfig().getDataCenterInfo()).getId();###instance###getInstanceConfig()###123:3:123:84
408910e893b8dd8d58afbf336dd20d211ce75425###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-hystrix-dashboard/src/main/java/org/springframework/cloud/netflix/hystrix/dashboard/HystrixDashboardConfiguration.java###/HystrixDashboardConfiguration.java###org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardConfiguration###proxyStreamServlet:###returnnewServletRegistrationBean(newProxyStreamServlet(),"/proxy.stream");###proxyStreamServlet###newProxyStreamServlet()###77:3:77:81
ac86e7798ebc102860836b79bf8e66c404227cd8###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/feign/support/ResponseEntityDecoder.java###/ResponseEntityDecoder.java###org.springframework.cloud.netflix.feign.support.ResponseEntityDecoder###createResponse:Class<T> Object Response ###returnnewResponseEntity<T>(clazz.cast(instance),headers,HttpStatus.valueOf(response.status()));###retVal###clazz.cast(instance)###59:9:62:56
e73ee5f690b94014ea0df17acd6f0f21f31a222c###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/test/java/org/springframework/cloud/netflix/zuul/ServletPathZuulProxyApplicationTests.java###/ServletPathZuulProxyApplicationTests.java###org.springframework.cloud.netflix.zuul.ServletPathZuulProxyApplicationTests###optionsOnSelf:###assertEquals("http://localhost:9000",result.getHeaders().getFirst("Access-Control-Allow-Origin"));###httpHeaders###result.getHeaders()###102:3:102:102
723287b3054d6484903f68e3b2ec06a7637c3a15###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/zuul/filters/route/SimpleHostRoutingFilter.java###/SimpleHostRoutingFilter.java###org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter###newConnectionManager:###finalRegistry<ConnectionSocketFactory>registry=RegistryBuilder.<ConnectionSocketFactory>create().register("http",PlainConnectionSocketFactory.INSTANCE).register("https",newSSLConnectionSocketFactory(sslContext)).build();###registryBuilder###RegistryBuilder.<ConnectionSocketFactory>create().register("http",PlainConnectionSocketFactory.INSTANCE)###207:4:211:15
0235d779323cbb557ee1a576006f7a62192336ed###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/zuul/filters/route/RestClientRibbonCommandFactory.java###/RestClientRibbonCommandFactory.java###org.springframework.cloud.netflix.zuul.filters.route.RestClientRibbonCommandFactory###create:RibbonCommandContext ###RestClientrestClient=this.clientFactory.getClient(context.getServiceId(),RestClient.class);###serviceId###context.getServiceId()###48:3:49:23
46e6d24aa814435748abfa4d027349683ba50581###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/config/DiscoveryClientConfigServiceBootstrapConfiguration.java###/DiscoveryClientConfigServiceBootstrapConfiguration.java###org.springframework.cloud.netflix.config.DiscoveryClientConfigServiceBootstrapConfiguration###onApplicationEvent:ContextRefreshedEvent ###delegate.setUri(server.getHomePageUrl());###url###server.getHomePageUrl()###60:4:60:45
df5303912f65c7fb4a40ee73b8f9750a72ac3d1a###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/test/java/org/springframework/cloud/netflix/zuul/filters/ZuulPropertiesTests.java###/ZuulPropertiesTests.java###org.springframework.cloud.netflix.zuul.filters.ZuulPropertiesTests###addSensitiveHeaders:###assertFalse(this.zuul.getRoutes().get("foo").getSensitiveHeaders().contains("Cookie"));###foo###this.zuul.getRoutes().get("foo")###58:3:59:26
c883495f8ac5009e1ca7b266b17af550e4cea404###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/ribbon/RibbonLoadBalancerClient.java###/RibbonLoadBalancerClient.java###org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient###reconstructURI:ServiceInstance URI ###returncontext.reconstructURIWithServer(server,original);###uri###original###53:3:53:61
47747f32569559d5be785cd01918607d72b7bc3b###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/zuul/filters/route/RibbonRoutingFilter.java###/RibbonRoutingFilter.java###org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter###forward:RibbonCommandContext ###thrownewZuulException(ex,"Forwardingerror",500,ex.getFailureType().toString());###message###ex.getFailureType().toString()###140:4:141:38
ec4c02aba93c381eeff4d88c9b65cfe73571b71a###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/ribbon/apache/RibbonApacheHttpRequest.java###/RibbonApacheHttpRequest.java###org.springframework.cloud.netflix.ribbon.apache.RibbonApacheHttpRequest###toRequest:RequestConfig ###entity.setContentLength(this.context.getContentLength());###contentLength###this.context.getContentLength()###67:5:67:62
ac86e7798ebc102860836b79bf8e66c404227cd8###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/feign/support/ResponseEntityDecoder.java###/ResponseEntityDecoder.java###org.springframework.cloud.netflix.feign.support.ResponseEntityDecoder###decode:Response Type ###returncreateResponse(decodedObject.getClass(),decodedObject,response);###clazz###decodedObject.getClass()###42:13:45:31
6f569976e816dc36effea8510d2b12d6402b1612###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-turbine/src/main/java/org/springframework/cloud/netflix/turbine/EurekaInstanceDiscovery.java###/EurekaInstanceDiscovery.java###org.springframework.cloud.netflix.turbine.EurekaInstanceDiscovery###getInstancesForApp:String ###Applicationapp=DiscoveryManager.getInstance().getDiscoveryClient().getApplication(appName);###client###DiscoveryManager.getInstance().getDiscoveryClient()###114:3:115:30
a5e5f81d881c3289c8a9ec105da91d799ac27f53###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/test/java/org/springframework/cloud/netflix/resttemplate/RestTemplateRetryTests.java###/RestTemplateRetryTests.java###org.springframework.cloud.netflix.resttemplate.RestTemplateRetryTests###testRestRetriesWithReadTimeout:###for(intindex=0;index<15;index++)###numCalls###15###171:3:174:4
065d91fdbe24e4b27426cb9ab2b3afbb2ee8915a###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/zuul/filters/route/SimpleHostRoutingFilter.java###/SimpleHostRoutingFilter.java###org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter###run:###HttpServletRequestrequest=RequestContext.getCurrentContext().getRequest();###context###RequestContext.getCurrentContext()###198:3:198:80
da04c53726a7fff068f7a7d8c223cc6aa93ce05f###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/test/java/org/springframework/cloud/netflix/eureka/InstanceInfoFactoryTests.java###/InstanceInfoFactoryTests.java###org.springframework.cloud.netflix.eureka.InstanceInfoFactoryTests###instanceIdIsHostNameByDefault:###assertEquals(EurekaInstanceConfigBean.getFirstNonLoopbackAddress().getHostName(),setupInstance().getId());###instanceInfo###setupInstance()###20:3:21:30
34f277b816069f7c311460f2d836aeff2273b779###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/zuul/RouteLocator.java###/RouteLocator.java###org.springframework.cloud.netflix.zuul.RouteLocator###locateRoutes:###routesMap.put("/"+serviceId+"/**",serviceId);###key###"/"+serviceId+"/**"###77:5:77:55
5de52b96f40afac3388dc47f5460def46633026f###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/feign/support/SpringMvcContract.java###/SpringMvcContract.java###org.springframework.cloud.netflix.feign.support.SpringMvcContract###processAnnotationOnMethod:MethodMetadata Annotation Method ###checkOne(method,methodMapping.method(),"method");###methods###methodMapping.method()###155:3:155:54
834dfe22dde353d193b783b61ea1faa1e89824b2###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/zuul/filters/route/RibbonRoutingFilter.java###/RibbonRoutingFilter.java###org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter###forward:RibbonCommandContext ###thrownewZuulException(cause,"Forwardingerror",500,cause.getErrorType().toString());###statusCode###500###135:5:136:40
eed5a6f10baeddbe8caa8b9189ef52cf61103031###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/metrics/DefaultMetricsTagProvider.java###/DefaultMetricsTagProvider.java###org.springframework.cloud.netflix.metrics.DefaultMetricsTagProvider###clientHttpRequestTags:HttpRequest ClientHttpResponse ###returnImmutableMap.of("method",request.getMethod().name(),"uri",sanitizeUrlTemplate(urlTemplate.replaceAll("^https?://[^/]+/","")),"status",status,"clientName",host!=null?host:"none");###strippedUrlTemplate###urlTemplate.replaceAll("^https?://[^/]+/","")###53:3:55:67
64e5a2e0ba85f913b04c7733a798aae560cdcf11###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/zuul/filters/post/SendErrorFilter.java###/SendErrorFilter.java###org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter###run:###ctx.getRequest().getRequestDispatcher(errorPath).forward(ctx.getRequest(),ctx.getResponse());###dispatcher###ctx.getRequest().getRequestDispatcher(errorPath)###45:13:45:107
02948657a400ad57789d415003cda5e702774bc6###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/test/java/org/springframework/cloud/netflix/zuul/SampleZuulProxyApplicationTests.java###/SampleZuulProxyApplicationTests.java###org.springframework.cloud.netflix.zuul.SampleZuulProxyApplicationTests###simpleHostRouteWithNonExistentUrl:###ResponseEntity<String>result=newTestRestTemplate().exchange("http://localhost:"+this.port+"/self/nonExistentUrl",HttpMethod.GET,newHttpEntity<>((Void)null),String.class);###uri###"/self/nonExistentUrl"###116:3:118:50
a5e5f81d881c3289c8a9ec105da91d799ac27f53###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/test/java/org/springframework/cloud/netflix/resttemplate/RestTemplateRetryTests.java###/RestTemplateRetryTests.java###org.springframework.cloud.netflix.resttemplate.RestTemplateRetryTests###testRestRetries:###longtargetConnectionCount=goodServerStats.getTotalRequestsCount()+20;###numCalls###20###133:3:133:77
46b2e45fd572a14bd91e3cf3e5daee9781b4f508###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/ribbon/okhttp/OkHttpRibbonRequest.java###/OkHttpRibbonRequest.java###org.springframework.cloud.netflix.ribbon.okhttp.OkHttpRibbonRequest###toRequest:###returnnewRequest.Builder().url(url.build()).headers(headers.build()).method(this.context.getMethod(),requestBody).build();###builder###newRequest.Builder().url(url.build()).headers(headers.build()).method(this.context.getMethod(),requestBody)###75:3:79:14
7b6f14805d0b80b3a06d2c2cd10cd89d3666cdc3###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/ribbon/RibbonLoadBalancerClient.java###/RibbonLoadBalancerClient.java###org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient###choose:String ###returnnewRibbonServer(serviceId,getServer(serviceId));###server###getServer(serviceId)###56:3:56:60
92e7f572ba564725d471c3f0040a26536868d3be###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-eureka-client/src/main/java/org/springframework/cloud/netflix/eureka/http/DefaultEurekaClientHttpRequestFactorySupplier.java###/DefaultEurekaClientHttpRequestFactorySupplier.java###org.springframework.cloud.netflix.eureka.http.DefaultEurekaClientHttpRequestFactorySupplier###get:SSLContext HostnameVerifier ###HttpClientBuilderhttpClientBuilder=HttpClients.custom().setSSLContext(sslContext);###httpClientBuilder###HttpClients.custom()###41:3:41:88
52e4f5ea597590185c13ed596b5eb36677a20eb4###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-zuul/src/test/java/org/springframework/cloud/netflix/zuul/filters/ProxyRequestHelperTests.java###/ProxyRequestHelperTests.java###org.springframework.cloud.netflix.zuul.filters.ProxyRequestHelperTests###shouldDebugBodyNotMultitypeContentType:###ProxyRequestHelperhelper=newProxyRequestHelper(newZuulProperties());###zuulProperties###newZuulProperties()###154:3:154:76
24209635c449e1729f48fd001f2a0fb0a8fec734###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-zuul/src/main/java/org/springframework/cloud/netflix/zuul/filters/post/SendResponseFilter.java###/SendResponseFilter.java###org.springframework.cloud.netflix.zuul.filters.post.SendResponseFilter###writeResponse:###writeResponse(newByteArrayInputStream(body.getBytes(servletResponse.getCharacterEncoding())),outStream);###is###newByteArrayInputStream(body.getBytes(servletResponse.getCharacterEncoding()))###129:5:132:18
7e9faef2e7e93f61dcd070bd6951ee1c3079cbef###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/test/java/org/springframework/cloud/netflix/ribbon/apache/RibbonApacheHttpRequestTests.java###/RibbonApacheHttpRequestTests.java###org.springframework.cloud.netflix.ribbon.apache.RibbonApacheHttpRequestTests###testNotNullEntity:###RibbonApacheHttpRequesthttpRequest=newRibbonApacheHttpRequest("POST",uri,false,headers,newLinkedMultiValueMap<String,String>(),newByteArrayInputStream(entityValue.getBytes()),(long)entityValue.length());###length###(long)entityValue.length()###71:3:73:34
6290859f81a07a0786492ee6af435d0989330297###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/test/java/org/springframework/cloud/netflix/ribbon/apache/RibbonLoadBalancingHttpClientTests.java###/RibbonLoadBalancingHttpClientTests.java###org.springframework.cloud.netflix.ribbon.apache.RibbonLoadBalancingHttpClientTests###getBuiltRequestConfig:Class<?> IClientConfig SpringClientFactory ###given(delegate.execute(any(HttpUriRequest.class))).willReturn(mock(HttpResponse.class));###httpResponse###mock(HttpResponse.class)###398:3:399:31
6e799423d5f2a95ae26895d9a3ac1eece762ab98###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/test/java/org/springframework/cloud/netflix/hystrix/HystrixOnlyTests.java###/HystrixOnlyTests.java###org.springframework.cloud.netflix.hystrix.HystrixOnlyTests###getHealth:###returnnewTestRestTemplate().exchange("http://localhost:"+this.port+BASE_PATH+"/health",HttpMethod.GET,newHttpEntity<Void>(createBasicAuthHeader(USER,PASSWORD)),Map.class).getBody();###response###newTestRestTemplate().exchange("http://localhost:"+this.port+BASE_PATH+"/health",HttpMethod.GET,newHttpEntity<Void>(createBasicAuthHeader(USER,PASSWORD)),Map.class)###100:3:103:26
e73ee5f690b94014ea0df17acd6f0f21f31a222c###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/test/java/org/springframework/cloud/netflix/zuul/ServletPathZuulProxyApplicationTests.java###/ServletPathZuulProxyApplicationTests.java###org.springframework.cloud.netflix.zuul.ServletPathZuulProxyApplicationTests###optionsOnRawEndpoint:###assertEquals("http://localhost:9000",result.getHeaders().getFirst("Access-Control-Allow-Origin"));###httpHeaders###result.getHeaders()###90:3:90:102
29383de8c108c27a72123ba6e5f4d5a8cb71b979###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/zuul/filters/ProxyRouteLocator.java###/ProxyRouteLocator.java###org.springframework.cloud.netflix.zuul.filters.ProxyRouteLocator###locateRoutes:###routesMap.put(key,newZuulRoute(key,serviceId));###route###newZuulRoute(key,serviceId)###137:6:137:56
9eb5e64cd0708f1e7b9ea85eb7b01c9151ed17ff###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-eureka-client/src/test/java/org/springframework/cloud/netflix/eureka/serviceregistry/EurekaServiceRegistryTests.java###/EurekaServiceRegistryTests.java###org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistryTests###eurekaClientGetStatus:###EurekaRegistrationregistration=EurekaRegistration.builder(config).with(eurekaClient).with(mock(ApplicationInfoManager.class)).with(newEurekaClientConfigBean(),mock(ApplicationEventPublisher.class)).build();###applicationInfoManager###mock(ApplicationInfoManager.class)###84:3:88:14
834dfe22dde353d193b783b61ea1faa1e89824b2###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/zuul/filters/post/SendErrorFilter.java###/SendErrorFilter.java###org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter###run:###ctx.getRequest().setAttribute("javax.servlet.error.exception",e);###request###ctx.getRequest()###66:5:66:71
da04c53726a7fff068f7a7d8c223cc6aa93ce05f###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/test/java/org/springframework/cloud/netflix/eureka/InstanceInfoFactoryTests.java###/InstanceInfoFactoryTests.java###org.springframework.cloud.netflix.eureka.InstanceInfoFactoryTests###instanceIdIsIpWhenIpPreferred:###assertTrue(setupInstance("eureka.instance.preferIpAddress:true").getId().matches("(\\d+\\.){3}\\d+"));###instanceInfo###setupInstance("eureka.instance.preferIpAddress:true")###26:3:27:26
a5e5f81d881c3289c8a9ec105da91d799ac27f53###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/test/java/org/springframework/cloud/netflix/resttemplate/RestTemplateRetryTests.java###/RestTemplateRetryTests.java###org.springframework.cloud.netflix.resttemplate.RestTemplateRetryTests###testNullPointer:###longtargetConnectionCount=goodServerStats.getTotalRequestsCount()+10;###numCalls###10###86:3:86:77
52e4f5ea597590185c13ed596b5eb36677a20eb4###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-zuul/src/test/java/org/springframework/cloud/netflix/zuul/filters/ProxyRequestHelperTests.java###/ProxyRequestHelperTests.java###org.springframework.cloud.netflix.zuul.filters.ProxyRequestHelperTests###shouldDebugBodyNullContentType:###ProxyRequestHelperhelper=newProxyRequestHelper(newZuulProperties());###zuulProperties###newZuulProperties()###133:3:133:76
52e4f5ea597590185c13ed596b5eb36677a20eb4###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-zuul/src/test/java/org/springframework/cloud/netflix/zuul/filters/ProxyRequestHelperTests.java###/ProxyRequestHelperTests.java###org.springframework.cloud.netflix.zuul.filters.ProxyRequestHelperTests###shouldDebugBodyNullRequest:###ProxyRequestHelperhelper=newProxyRequestHelper(newZuulProperties());###zuulProperties###newZuulProperties()###142:3:142:76
a38b7b71ac8be9608ac2530dac41cd6298d696cf###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/zuul/filters/pre/PreDecorationFilter.java###/PreDecorationFilter.java###org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter###addProxyHeaders:RequestContext Route ###Stringhost=toHostHeader(ctx.getRequest());###request###ctx.getRequest()###166:3:166:48
da04c53726a7fff068f7a7d8c223cc6aa93ce05f###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/test/java/org/springframework/cloud/netflix/eureka/InstanceInfoFactoryTests.java###/InstanceInfoFactoryTests.java###org.springframework.cloud.netflix.eureka.InstanceInfoFactoryTests###instanceIdIsSidWhenSet:###assertEquals("special",setupInstance("eureka.instance.sid:special").getId());###instanceInfo###setupInstance("eureka.instance.sid:special")###32:3:32:81
7cfbcbd9e226c1fd2857c84de79a5fc6e29601fe###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/test/java/org/springframework/cloud/netflix/zuul/filters/route/restclient/RestClientRibbonCommandIntegrationTests.java###/RestClientRibbonCommandIntegrationTests.java###org.springframework.cloud.netflix.zuul.filters.route.restclient.RestClientRibbonCommandIntegrationTests###simpleHostRouteDefaultIgnoredHeader:###assertEquals("[testclient:0]",result.getHeaders().get("X-Application-Context").toString());###headers###result.getHeaders().get("X-Application-Context")###154:3:155:66
d6a604051f4c301c61e2b102c3765da00886723a###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-eureka-server/src/test/java/org/springframework/cloud/netflix/eureka/server/doc/RequestVerifierFilter.java###/RequestVerifierFilter.java###org.springframework.cloud.netflix.eureka.server.doc.WireMockRestAssuredRequestAdapter###header:String ###returnnewHttpHeader(key,request.getHeaders().getValue(key));###value###request.getHeaders().getValue(key)###231:3:231:66
a57c358702147aa356e4246fe96732cfd748d2e0###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-hystrix-amqp/src/main/java/org/springframework/netflix/hystrix/amqp/HystrixStreamTask.java###/HystrixStreamTask.java###org.springframework.netflix.hystrix.amqp.HystrixStreamTask###gatherMetrics:###json.writeStringField("name",key.name());###name###key.name()###194:17:194:59
02948657a400ad57789d415003cda5e702774bc6###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/test/java/org/springframework/cloud/netflix/zuul/ZuulProxyTestBase.java###/ZuulProxyTestBase.java###org.springframework.cloud.netflix.zuul.ZuulProxyTestBase###ribbonRouteWithNonExistentUri:###ResponseEntity<String>result=newTestRestTemplate().exchange("http://localhost:"+this.port+"/simple/nonExistent",HttpMethod.GET,newHttpEntity<>((Void)null),String.class);###uri###"/simple/nonExistent"###168:3:170:50
723287b3054d6484903f68e3b2ec06a7637c3a15###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/zuul/filters/route/SimpleHostRoutingFilter.java###/SimpleHostRoutingFilter.java###org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter###newClient:###returnHttpClients.custom().setConnectionManager(newConnectionManager()).setDefaultRequestConfig(requestConfig).setRetryHandler(newDefaultHttpRequestRetryHandler(0,false)).setRedirectStrategy(newRedirectStrategy(){@OverridepublicbooleanisRedirected(HttpRequestrequest,HttpResponseresponse,HttpContextcontext)throwsProtocolException{returnfalse;}@OverridepublicHttpUriRequestgetRedirect(HttpRequestrequest,HttpResponseresponse,HttpContextcontext)throwsProtocolException{returnnull;}}).build();###httpClientBuilder###HttpClients.custom()###231:3:248:16
92a35ba77f7c0ff9eb74e057138e8579139cf820###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-eureka-client/src/main/java/org/springframework/cloud/netflix/eureka/InstanceInfoFactory.java###/InstanceInfoFactory.java###org.springframework.cloud.netflix.eureka.InstanceInfoFactory###create:EurekaInstanceConfig ###builder.setNamespace(config.getNamespace()).setAppName(config.getAppname()).setInstanceId(config.getInstanceId()).setAppGroupName(config.getAppGroupName()).setDataCenterInfo(config.getDataCenterInfo()).setIPAddr(config.getIpAddress()).setHostName(config.getHostName(false)).setPort(config.getNonSecurePort()).enablePort(InstanceInfo.PortType.UNSECURE,config.isNonSecurePortEnabled()).setSecurePort(config.getSecurePort()).enablePort(InstanceInfo.PortType.SECURE,config.getSecurePortEnabled()).setVIPAddress(config.getVirtualHostName()).setSecureVIPAddress(config.getSecureVirtualHostName()).setHomePageUrl(config.getHomePageUrlPath(),config.getHomePageUrl()).setStatusPageUrl(config.getStatusPageUrlPath(),config.getStatusPageUrl()).setHealthCheckUrls(config.getHealthCheckUrlPath(),config.getHealthCheckUrl(),config.getSecureHealthCheckUrl()).setASGName(config.getASGName());###namespace###config.getNamespace()###43:3:62:38
0e1b856fc5e6aedd8dc6ccb9ea4dc693d89794ac###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/zuul/filters/pre/PreDecorationFilter.java###/PreDecorationFilter.java###org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter###run:###ctx.addZuulRequestHeader("X-Forwarded-Host",toHostHeader(ctx.getRequest()));###host###toHostHeader(ctx.getRequest())###122:6:122:83
02948657a400ad57789d415003cda5e702774bc6###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/test/java/org/springframework/cloud/netflix/zuul/ZuulProxyTestBase.java###/ZuulProxyTestBase.java###org.springframework.cloud.netflix.zuul.ZuulProxyTestBase###ribbonRouteWithSpace:###ResponseEntity<String>result=newTestRestTemplate().exchange("http://localhost:"+this.port+"/simple/space",HttpMethod.GET,newHttpEntity<>((Void)null),String.class);###uri###"/simple/space"###158:3:160:50
08f7076f6e6863516d956ce27c3f582f788d0330###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/feign/FeignClientsRegistrar.java###/FeignClientsRegistrar.java###org.springframework.cloud.netflix.feign.FeignClientsRegistrar###registerFeignClient:BeanDefinitionRegistry AnnotationMetadata Map<String,Object> ###BeanDefinitionHolderholder=newBeanDefinitionHolder(definition.getBeanDefinition(),className);###beanDefinition###definition.getBeanDefinition()###180:3:181:48
0e1b856fc5e6aedd8dc6ccb9ea4dc693d89794ac###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/zuul/filters/pre/PreDecorationFilter.java###/PreDecorationFilter.java###org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter###run:###ctx.addZuulRequestHeader("X-Forwarded-Port",String.valueOf(ctx.getRequest().getServerPort()));###port###String.valueOf(ctx.getRequest().getServerPort())###123:6:124:58
d54022d22dc74a2f085a8949b448f5f3cb944843###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-eureka-server/src/main/java/org/springframework/cloud/netflix/eureka/server/EurekaController.java###/EurekaController.java###org.springframework.cloud.netflix.eureka.server.EurekaController###populateApps:Map<String,Object> ###instance.put("url",p.second());###url###p.second()###236:6:236:38
99b86e7a29e3864a351291e7141750b4b96ec1ba###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/zuul/filters/pre/FormBodyWrapperFilter.java###/FormBodyWrapperFilter.java###org.springframework.cloud.netflix.zuul.filters.pre.FormBodyWrapperFilter.FormBodyRequestWrapper###findQueryParams:###for(value:StringUtils.split(query,"&"))###splitQuery###StringUtils.split(query,"&")###236:5:241:6
9e479481ccccfad60007d1ccecd959ce5fc2bd4f###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/feign/annotation/RequestParamParameterProcessor.java###/RequestParamParameterProcessor.java###org.springframework.cloud.netflix.feign.annotation.RequestParamParameterProcessor###processArgument:AnnotatedParameterContext Annotation ###Stringname=ANNOTATION.cast(annotation).value();###requestParam###ANNOTATION.cast(annotation)###47:9:47:59
ddd7979a25edf39bbdb53849a74fc9b11475b0d6###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-eureka-client/src/test/java/org/springframework/cloud/netflix/eureka/EurekaInstanceConfigBeanTests.java###/EurekaInstanceConfigBeanTests.java###org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBeanTests###init:###this.hostName=newInetUtils(newInetUtilsProperties()).findFirstNonLoopbackHostInfo().getHostname();###hostInfo###newInetUtils(newInetUtilsProperties()).findFirstNonLoopbackHostInfo()###49:3:50:51
238c1329c4417ba953adde3e762722742e8dbcbb###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/zuul/filters/route/ProxyRequestHelper.java###/ProxyRequestHelper.java###org.springframework.cloud.netflix.zuul.filters.route.ProxyRequestHelper###isIncludedHeader:String ###switch(headerName.toLowerCase())###name###headerName.toLowerCase()###136:3:146:4
a01fc5b7588947efe70e287222f3bf6a895f1504###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/zuul/filters/pre/FormBodyWrapperFilter.java###/FormBodyWrapperFilter.java###org.springframework.cloud.netflix.zuul.filters.pre.FormBodyWrapperFilter.FormBodyRequestWrapper###buildContentData:###this.contentData=data.getInput();###input###data.getInput()###195:5:195:40
f1bd9bdfaadb9603fd8f9ec294b0b7c7d1eff994###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/test/java/org/springframework/cloud/netflix/zuul/ProxyRouteLocatorTests.java###/ProxyRouteLocatorTests.java###org.springframework.cloud.netflix.zuul.ProxyRouteLocatorTests###testAutoRoutesCanBeOverridden:###this.properties.getRoutes().put(MYSERVICE,newZuulRoute("/"+MYSERVICE+"/**","http://example.com/"+MYSERVICE));###route###newZuulRoute("/"+MYSERVICE+"/**","http://example.com/"+MYSERVICE)###204:3:204:119
f4a69e43eb8d8355e90fa51c4cd42b81defcbece###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.java###/EurekaRibbonClientConfiguration.java###org.springframework.cloud.netflix.ribbon.eureka.EurekaRibbonClientConfiguration###preprocess:###if(this.clientConfig!=null&&ConfigurationManager.getDeploymentContext().getValue(ContextKey.zone)==null)###zone###ConfigurationManager.getDeploymentContext().getValue(ContextKey.zone)###92:3:103:4
9eb5e64cd0708f1e7b9ea85eb7b01c9151ed17ff###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-eureka-client/src/test/java/org/springframework/cloud/netflix/eureka/serviceregistry/EurekaServiceRegistryTests.java###/EurekaServiceRegistryTests.java###org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistryTests###eurekaClientGetStatusNoInstance:###EurekaRegistrationregistration=EurekaRegistration.builder(config).with(eurekaClient).with(mock(ApplicationInfoManager.class)).with(newEurekaClientConfigBean(),mock(ApplicationEventPublisher.class)).build();###applicationInfoManager###mock(ApplicationInfoManager.class)###115:3:119:14
561f3b2fbfbb6c727d629e34b0e5e31680e1ea6a###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-eureka-server/src/test/java/org/springframework/cloud/netflix/eureka/server/doc/AbstractDocumentationTests.java###/AbstractDocumentationTests.java###org.springframework.cloud.netflix.eureka.server.doc.AbstractDocumentationTests###assure:String Object ###returnRestAssured.given(document(body,filter)).filter(filter);###assured###RestAssured.given(document(body,filter))###88:3:88:67
8e1be547594c9331dd34dcaf72b93c59ed3973e9###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/ribbon/RibbonUtils.java###/RibbonUtils.java###org.springframework.cloud.netflix.ribbon.RibbonUtils###updateToHttpsIfNeeded:URI IClientConfig ServerIntrospector Server ###returnUriComponentsBuilder.fromUri(uri).scheme("https").build(true).toUri();###uriComponentsBuilder###UriComponentsBuilder.fromUri(uri).scheme("https")###73:4:74:15
45d769b05bdb0073a4941f1f9473716fb2826b01###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/feign/annotation/RequestHeaderParameterProcessor.java###/RequestHeaderParameterProcessor.java###org.springframework.cloud.netflix.feign.annotation.RequestHeaderParameterProcessor###processArgument:AnnotatedParameterContext Annotation ###checkState(emptyToNull(name)!=null,"RequestHeader.value()wasemptyonparameter%s",context.getParameterIndex());###parameterIndex###context.getParameterIndex()###48:9:49:97
3ea0f8d283e9624001f2f7167717d970bbfdbd39###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/test/java/org/springframework/cloud/netflix/zuul/ProxyRouteLocatorTests.java###/ProxyRouteLocatorTests.java###org.springframework.cloud.netflix.zuul.ProxyRouteLocatorTests###testAutoRoutesCanBeOverridden:###this.properties.getRoutes().put(MYSERVICE,newZuulRoute("/"+MYSERVICE+"/**","http://example.com/"+MYSERVICE));###route###newZuulRoute("/"+MYSERVICE+"/**","http://example.com/"+MYSERVICE)###236:3:239:23
8e11514e7c4063b9432c7625a98b2e2e76098461###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/zuul/filters/route/support/AbstractRibbonCommand.java###/AbstractRibbonCommand.java###org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand###getSetter:String ZuulProperties ###returnSetter.withGroupKey(HystrixCommandGroupKey.Factory.asKey("RibbonCommand")).andCommandKey(HystrixCommandKey.Factory.asKey(commandKey)).andCommandPropertiesDefaults(setter);###commandSetter###Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey("RibbonCommand")).andCommandKey(HystrixCommandKey.Factory.asKey(commandKey))###94:3:96:43
731c8bf0fde6b597299ec20ff937e81f8b677abf###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/zuul/filters/route/support/AbstractRibbonCommandFactory.java###/AbstractRibbonCommandFactory.java###org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommandFactory###AbstractRibbonCommandFactory:Set<ZuulFallbackProvider> ###fallbackProviderCache.put(provider.getRoute(),provider);###route###provider.getRoute()###37:4:37:61
1e12b7456e430d075d53a38e05e265c8ef8c277e###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/feign/SpringMvcContract.java###/SpringMvcContract.java###org.springframework.cloud.netflix.feign.SpringMvcContract###processAnnotationsOnParameter:MethodMetadata Annotation[] int ###returnfalse;###isHttpAnnotation###false###82:9:82:22
0c7be074f5f7399d550846952b14e752686a865e###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-eureka-client/src/test/java/org/springframework/cloud/netflix/eureka/http/RestTemplateEurekaHttpClientTest.java###/RestTemplateEurekaHttpClientTest.java###org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClientTest###testGetApplications:###Assert.assertNotNull(eurekaHttpClient.getApplications().getEntity());###entity###eurekaHttpClient.getApplications().getEntity()###108:3:108:72
47747f32569559d5be785cd01918607d72b7bc3b###/spring-cloud_spring-cloud-netflix/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/zuul/filters/route/RibbonRoutingFilter.java###/RibbonRoutingFilter.java###org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter###forward:RibbonCommandContext ###thrownewZuulException(ex,"Forwardingerror",500,ex.getFailureType().toString());###cause###ex###140:4:141:38
