565f6ca8e9528c6d3b69ab839afcc8b4f999ffc4###/micronaut-projects_micronaut-core/inject/src/main/java/io/micronaut/context/DefaultCustomScopeRegistry.java###/DefaultCustomScopeRegistry.java###io.micronaut.context.DefaultCustomScopeRegistry###findDeclaredScope:Argument<?> ###returnargument.getAnnotationMetadata().getAnnotationNameByStereotype(AnnotationUtil.SCOPE).flatMap(this::findScope);###annotationMetadata###argument.getAnnotationMetadata()###61:9:61:126
35b03d246933470c57492c7e539ee46e685a4e05###/micronaut-projects_micronaut-core/http-server-netty/src/main/java/io/micronaut/http/server/netty/handler/accesslog/HttpAccessLogHandler.java###/HttpAccessLogHandler.java###io.micronaut.http.server.netty.handler.accesslog.HttpAccessLogHandler###channelRead:ChannelHandlerContext Object ###accessLog(channel).onRequestHeaders(channel,request.method().name(),request.headers(),request.uri(),protocol);###accessLog###accessLog(channel)###94:13:94:127
679ac3087f3d0ce8dbccc28bd3624a2bdb354d7d###/micronaut-projects_micronaut-core/inject/src/main/java/io/micronaut/inject/processing/JavaModelUtils.java###/JavaModelUtils.java###io.micronaut.inject.processing.JavaModelUtils###getTypeReference:TypedElement ###for(inti=0;i<type.getArrayDimensions();i++)###arrayDimensions###type.getArrayDimensions()###302:21:304:22
3de71a40ce96c841fdec93a2ecf6d3e8bda053af###/micronaut-projects_micronaut-core/inject/src/main/java/io/micronaut/inject/writer/AbstractBeanDefinitionBuilder.java###/AbstractBeanDefinitionBuilder.java###io.micronaut.inject.writer.AbstractBeanDefinitionBuilder###withMethods:ElementQuery<MethodElement> Consumer<BeanMethodElement> ###this.beanType.getEnclosedElements(methods.onlyInstance().onlyAccessible(originatingType)).forEach((methodElement)->beanMethods.accept(newInternalBeanElementMethod(methodElement,false)));###baseQuery###methods.onlyInstance()###360:13:363:23
e7f3ea404c5248de6d597c9208ba9ab70c4ed063###/micronaut-projects_micronaut-core/inject-java-test/src/main/java/io/micronaut/annotation/processing/test/JavaParser.java###/JavaParser.java###io.micronaut.annotation.processing.test.JavaParser###getCompilerOptions:###options=CollectionUtils.setOf("--enable-preview","-source",Jvm.getCurrent().getJavaSpecificationVersion());###jvm###Jvm.getCurrent()###286:13:290:15
f6b2389f1cf93b7dda0f5b264a67df9523971276###/micronaut-projects_micronaut-core/http-server-netty/src/main/java/io/micronaut/http/server/netty/handler/accesslog/HttpAccessLogHandler.java###/HttpAccessLogHandler.java###io.micronaut.http.server.netty.handler.accesslog.HttpAccessLogHandler###processWriteEvent:ChannelHandlerContext Object ChannelPromise ###finalAccessLogaccessLogger=ctx.channel().attr(ACCESS_LOGGER).get();###attr###ctx.channel().attr(ACCESS_LOGGER)###170:9:170:80
170d011f1aefb7e1adda1df3ee0436c9c8daf36c###/micronaut-projects_micronaut-core/core/src/main/java/io/micronaut/core/naming/NameUtils.java###/NameUtils.java###io.micronaut.core.naming.NameUtils###isSetterName:String ###returnfalse;###isValid###false###209:9:209:22
4f67213127fbee2f0e32c8ed488b26ef4ba5608c###/micronaut-projects_micronaut-core/http-server-netty/src/main/java/io/micronaut/http/server/netty/RoutingInBoundHandler.java###/RoutingInBoundHandler.java###io.micronaut.http.server.netty.RoutingInBoundHandler.buildSubscriber.new CompletionAwareSubscriber<Object>###doOnNext:Object ###routeMatch=routeMatch.fulfill(Collections.singletonMap(argumentName,value.get()));###fulfillParamter###value.get()###789:41:789:126
5b84014077ece4f0180df2ec5ac4617739e5f343###/micronaut-projects_micronaut-core/jackson-databind/src/main/java/io/micronaut/jackson/databind/JacksonDatabindMapper.java###/JacksonDatabindMapper.java###io.micronaut.jackson.databind.JacksonDatabindMapper###readValueFromTree:JsonNode Argument<T> ###returnobjectMapper.readValue(treeCodec.treeAsTokens(tree),JacksonConfiguration.constructType(type,objectMapper.getTypeFactory()));###tokens###treeCodec.treeAsTokens(tree)###83:9:83:142
971da946731d939d0cef586972c2d1d8a9acdb8d###/micronaut-projects_micronaut-core/http-server/src/main/java/io/micronaut/http/server/RouteExecutor.java###/RouteExecutor.java###io.micronaut.http.server.RouteExecutor###processPublisherBody:HttpRequest<?> MutableHttpResponse<?> RouteInfo<?> ###Flux<Object>bodyPublisher=applyExecutorToPublisher(Publishers.convertPublisher(response.body(),Publisher.class),findExecutor(routeInfo));###body###response.body()###820:13:822:46
0c1a9dac46c2235b1ce253b5af00cb83d72c3377###/micronaut-projects_micronaut-core/http-server-netty/src/main/java/io/micronaut/http/server/netty/RoutingInBoundHandler.java###/RoutingInBoundHandler.java###io.micronaut.http.server.netty.RoutingInBoundHandler.buildSubscriber.new CompletionAwareSubscriber<Object>###doOnNext:Object ###routeMatch=routeMatch.fulfill(Collections.singletonMap(argumentName,value.get()));###fulfillParamter###value.get()###784:41:784:126
170d011f1aefb7e1adda1df3ee0436c9c8daf36c###/micronaut-projects_micronaut-core/core/src/main/java/io/micronaut/core/naming/NameUtils.java###/NameUtils.java###io.micronaut.core.naming.NameUtils###isGetterName:String ###returnfalse;###isValid###false###249:13:249:26
5b84014077ece4f0180df2ec5ac4617739e5f343###/micronaut-projects_micronaut-core/jackson-databind/src/main/java/io/micronaut/jackson/databind/JacksonDatabindMapper.java###/JacksonDatabindMapper.java###io.micronaut.jackson.databind.JacksonDatabindMapper###readValueFromTree:JsonNode Argument<T> ###returnobjectMapper.readValue(treeCodec.treeAsTokens(tree),JacksonConfiguration.constructType(type,objectMapper.getTypeFactory()));###javaType###JacksonConfiguration.constructType(type,objectMapper.getTypeFactory())###83:9:83:142
679ac3087f3d0ce8dbccc28bd3624a2bdb354d7d###/micronaut-projects_micronaut-core/inject/src/main/java/io/micronaut/inject/processing/JavaModelUtils.java###/JavaModelUtils.java###io.micronaut.inject.processing.JavaModelUtils###getTypeReference:TypedElement ###if(type.isArray())###isArray###type.isArray()###299:17:309:18
c33e3b81a8cd91c8e6600753cb61caceb3da42ec###/micronaut-projects_micronaut-core/http/src/main/java/io/micronaut/http/bind/binders/HeaderAnnotationBinder.java###/HeaderAnnotationBinder.java###io.micronaut.http.bind.binders.HeaderAnnotationBinder###bind:ArgumentConversionContext<T> HttpRequest<?> ###if(TemporalAccessor.class.isAssignableFrom(argument.getType())||argument.getType()==Date.class)###type###argument###56:9:58:10
b7458fc095d5603cf6c588c235c9d1c44be28444###/micronaut-projects_micronaut-core/http-client-core/src/main/java/io/micronaut/http/client/bind/DefaultHttpClientBinderRegistry.java###/DefaultHttpClientBinderRegistry.java###io.micronaut.http.client.bind.DefaultHttpClientBinderRegistry###DefaultHttpClientBinderRegistry:ConversionService<?> List<ClientRequestBinder> BeanContext ###StringattributeName=annotationMetadata.stringValue(RequestAttribute.class).filter(StringUtils::isNotEmpty).orElse(NameUtils.hyphenate(context.getArgument().getName()));###name###context.getArgument().getName()###127:13:130:83
cdb4e0442eadefe4b33029ad53d1dd5a4ac93501###/micronaut-projects_micronaut-core/http-server-netty/src/main/java/io/micronaut/http/server/netty/NettyHttpServer.java###/NettyHttpServer.java###io.micronaut.http.server.netty.NettyHttpServer.NettyHttpServerInitializer###initChannel:SocketChannel ###pipeline.addLast(ChannelPipelineCustomizer.HANDLER_SSL,sslContext.newHandler(ch.alloc()));###sslHandler###sslContext.newHandler(ch.alloc())###864:17:864:108
f400aeab6b2269953f001741cab663a7b38ad59f###/micronaut-projects_micronaut-core/http-server-netty/src/main/java/io/micronaut/http/server/netty/NettyHttpServer.java###/NettyHttpServer.java###io.micronaut.http.server.netty.NettyHttpServer.NettyHttpServerInitializer###initChannel:SocketChannel ###pipeline.addLast(ChannelPipelineCustomizer.HANDLER_SSL,sslContext.newHandler(ch.alloc()));###sslHandler###sslContext.newHandler(ch.alloc())###866:17:866:108
2bffcd29ffbca0befc43653ef3bfa3997b2585e0###/micronaut-projects_micronaut-core/http-server-netty/src/main/java/io/micronaut/http/server/netty/DefaultHttpContentProcessorResolver.java###/DefaultHttpContentProcessorResolver.java###io.micronaut.http.server.netty.DefaultHttpContentProcessorResolver###resolve:NettyHttpRequest<?> Argument<?> ###booleanisRaw=RAW_BODY_TYPES.contains(bodyType.getType());###type###bodyType###109:9:109:69
