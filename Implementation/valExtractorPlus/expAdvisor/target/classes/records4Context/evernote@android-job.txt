3cd98b4c17e00419b859e288907ba595f5fa48cd###/evernote_android-job/library/src/main/java/com/evernote/android/job/gcm/JobProxyGcm.java###/JobProxyGcm.java###com.evernote.android.job.gcm.JobProxyGcm###plantOneOff:JobRequest ###OneoffTasktask=newOneoffTask.Builder().setTag(createTag(request)).setService(PlatformGcmService.class).setUpdateCurrent(true).setExecutionWindow(Common.getStartMs(request)/1_000,Common.getEndMs(request)/1_000).setRequiredNetwork(convertNetworkType(request.requiredNetworkType())).setPersisted(request.isPersisted()).setRequiresCharging(request.requiresCharging()).build();###startSeconds###Common.getStartMs(request)/1_000###63:9:71:26
741ffef239db87277c1608aaf7b49e7eb5ee8a03###/evernote_android-job/library/src/androidTest/java/com/evernote/android/job/DatabaseUpgradeTest.java###/DatabaseUpgradeTest.java###com.evernote.android.job.DatabaseUpgradeTest###testDatabaseUpgrade1to3:###createDatabase(newJobOpenHelper1(context),false);###openHelper###newJobOpenHelper1(context)###46:9:46:60
9c3047aae44b49a51d3c6a7ef099231dd1ddf2b6###/evernote_android-job/library/src/main/java/com/evernote/android/job/JobStorage.java###/JobStorage.java###com.evernote.android.job.JobStorage###remove:JobRequest int ###getDatabase().delete(JOB_TABLE_NAME,COLUMN_ID+"=?",newString[]{String.valueOf(jobId)});###database###getDatabase()###200:13:200:105
9c3047aae44b49a51d3c6a7ef099231dd1ddf2b6###/evernote_android-job/library/src/main/java/com/evernote/android/job/JobStorage.java###/JobStorage.java###com.evernote.android.job.JobStorage###load:int boolean ###cursor=getDatabase().query(JOB_TABLE_NAME,null,where,newString[]{String.valueOf(id)},null,null,null);###database###getDatabase()###247:13:247:123
15a7b02b86cfcb5fe61dbef43cda8db391737e85###/evernote_android-job/library/src/main/java/com/evernote/android/job/gcm/JobProxyGcm.java###/JobProxyGcm.java###com.evernote.android.job.gcm.JobProxyGcm###plantOneOff:JobRequest ###CAT.d("ScheduledOneoffTask,%s,start%s,end%s",request,JobUtil.timeToString(Common.getStartMs(request)),JobUtil.timeToString(Common.getEndMs(request)));###endMs###Common.getEndMs(request)###75:9:76:115
cdb9d51ba25260fd4294154e70da0657bffd448d###/evernote_android-job/library/src/test/java/com/evernote/android/job/JobManagerTest.java###/JobManagerTest.java###com.evernote.android.job.JobManagerTest###testSameIdAfterCancel:###intnewId=request.cancelAndEdit().build().schedule();###requestNew###request.cancelAndEdit().build()###51:9:51:64
b997d744104fbc4d422dbc6e550d2ac9251e69d2###/evernote_android-job/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java###/JobProxy21.java###com.evernote.android.job.v21.JobProxy21###schedule:JobInfo ###returngetJobScheduler().schedule(jobInfo);###jobScheduler###getJobScheduler()###195:9:195:52
c8f7a2fadbf397e54c17e0beb8af767d0e6f8c18###/evernote_android-job/library/src/main/java/com/evernote/android/job/JobRequest.java###/JobRequest.java###com.evernote.android.job.JobRequest###cancelAndEdit:###longoffset=System.currentTimeMillis()-mScheduledAt;###scheduledAt###mScheduledAt###426:13:426:69
a19b43f5693d0dce2a9abb33bbf12202ff3d79f7###/evernote_android-job/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java###/JobProxy21.java###com.evernote.android.job.v21.JobProxy21###schedule:JobInfo ###if(e.getMessage()!=null&&e.getMessage().contains("RECEIVE_BOOT_COMPLETED"))###message###e.getMessage()###223:13:227:14
cdc59eaae7efdb63e55f9191e10824b7ddefe2c1###/evernote_android-job/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java###/JobProxyWorkManager.java###com.evernote.android.job.work.JobProxyWorkManager###plantOneOff:JobRequest ###getWorkManager().enqueue(workRequest);###workManager###getWorkManager()###63:9:63:47
741ffef239db87277c1608aaf7b49e7eb5ee8a03###/evernote_android-job/library/src/androidTest/java/com/evernote/android/job/DatabaseUpgradeTest.java###/DatabaseUpgradeTest.java###com.evernote.android.job.DatabaseUpgradeTest###testDatabaseUpgrade1to2to3:###createDatabase(newJobOpenHelper1(context),false);###openHelper###newJobOpenHelper1(context)###64:9:64:60
42029bbdff7871887de1d522190a5031b604c592###/evernote_android-job/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java###/JobProxy21.java###com.evernote.android.job.v21.JobProxy21###schedule:JobInfo ###if(e.getMessage()!=null&&e.getMessage().contains("RECEIVE_BOOT_COMPLETED"))###message###e.getMessage()###202:13:206:14
796655c936a9935fe041c12cf2a87a7ed1cde90e###/evernote_android-job/library/src/main/java/com/evernote/android/job/JobStorage.java###/JobStorage.java###com.evernote.android.job.JobStorage###update:JobRequest ContentValues ###getDatabase().update(JOB_TABLE_NAME,contentValues,COLUMN_ID+"=?",newString[]{String.valueOf(request.getJobId())});###database###getDatabase()###121:13:121:133
796655c936a9935fe041c12cf2a87a7ed1cde90e###/evernote_android-job/library/src/main/java/com/evernote/android/job/JobStorage.java###/JobStorage.java###com.evernote.android.job.JobStorage###load:int boolean ###cursor=getDatabase().query(JOB_TABLE_NAME,null,where,newString[]{String.valueOf(id)},null,null,null);###database###getDatabase()###222:13:222:123
796655c936a9935fe041c12cf2a87a7ed1cde90e###/evernote_android-job/library/src/main/java/com/evernote/android/job/JobStorage.java###/JobStorage.java###com.evernote.android.job.JobStorage###getAllJobRequests:String boolean ###cursor=getDatabase().query(JOB_TABLE_NAME,null,where,args,null,null,null);###database###getDatabase()###151:13:151:95
7031ceca1a79200065d3e98c97a7e42e07bbb675###/evernote_android-job/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmReceiver.java###/PlatformAlarmReceiver.java###com.evernote.android.job.v14.PlatformAlarmReceiver###onReceive:Context Intent ###startWakefulService(context,PlatformAlarmService.createIntent(context,intent.getIntExtra(EXTRA_JOB_ID,-1)));###serviceIntent###PlatformAlarmService.createIntent(context,intent.getIntExtra(EXTRA_JOB_ID,-1))###54:9:54:120
3a06647225e4f1ac03d2f9d9d41525c115f0a1f5###/evernote_android-job/library/src/main/java/com/evernote/android/job/JobStorage.java###/JobStorage.java###com.evernote.android.job.JobStorage###getAllJobRequests:###cursor=mDbHelper.getWritableDatabase().query(JOB_TABLE_NAME,null,null,null,null,null,null);###database###mDbHelper.getWritableDatabase()###134:13:134:112
cdc59eaae7efdb63e55f9191e10824b7ddefe2c1###/evernote_android-job/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java###/JobProxyWorkManager.java###com.evernote.android.job.work.JobProxyWorkManager###cancel:int ###getWorkManager().cancelAllWorkByTag(createTag(jobId));###workManager###getWorkManager()###85:9:85:63
173ace4d942e0af4d185248bdd6e88050b9a82cd###/evernote_android-job/library/src/main/java/com/evernote/android/job/JobStorage.java###/JobStorage.java###com.evernote.android.job.JobStorage###load:String ###cursor=mDbHelper.getWritableDatabase().query(JOB_TABLE_NAME,null,COLUMN_TAG+"=?",newString[]{tag},null,null,null);###database###mDbHelper.getWritableDatabase()###200:13:200:138
6a150947a8c55958c55e1984a719601eb9602fd5###/evernote_android-job/library/src/test/java/com/evernote/android/job/JobProxyTest.java###/JobProxyTest.java###com.evernote.android.job.JobProxyTest###verifyRecoverWithJobScheduler:###assertThat(scheduler.getAllPendingJobs()).isNotEmpty();###allPendingJobs###scheduler.getAllPendingJobs()###60:9:60:64
aea3c22cd534d6f3593bf39485eec191d7570884###/evernote_android-job/library/src/main/java/com/evernote/android/job/JobManager.java###/JobManager.java###com.evernote.android.job.JobManager###JobManager:Context ###setJobProxy(JobApi.getDefault(mContext,mConfig.isGcmApiEnabled()));###api###JobApi.getDefault(mContext,mConfig.isGcmApiEnabled())###181:9:181:77
42029bbdff7871887de1d522190a5031b604c592###/evernote_android-job/library/src/test/java/com/evernote/android/job/BaseJobManagerTest.java###/BaseJobManagerTest.java###com.evernote.android.job.BaseJobManagerTest###createMockContext:###when(packageManager.queryIntentServices(any(Intent.class),anyInt())).thenReturn(Collections.singletonList(newResolveInfo()));###resolveInfo###newResolveInfo()###124:9:124:136
7fdc5ab549a73723e7df4c86298ed7605d420d44###/evernote_android-job/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java###/JobProxy21.java###com.evernote.android.job.v21.JobProxy21###schedule:JobInfo ###returngetJobScheduler().schedule(jobInfo);###jobScheduler###getJobScheduler()###174:9:174:52
796655c936a9935fe041c12cf2a87a7ed1cde90e###/evernote_android-job/library/src/main/java/com/evernote/android/job/JobStorage.java###/JobStorage.java###com.evernote.android.job.JobStorage###remove:JobRequest ###getDatabase().delete(JOB_TABLE_NAME,COLUMN_ID+"=?",newString[]{String.valueOf(request.getJobId())});###database###getDatabase()###180:13:180:118
cdc59eaae7efdb63e55f9191e10824b7ddefe2c1###/evernote_android-job/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java###/JobProxyWorkManager.java###com.evernote.android.job.work.JobProxyWorkManager###plantPeriodic:JobRequest ###getWorkManager().enqueue(workRequest);###workManager###getWorkManager()###74:9:74:47
3f9c0aaae6e62601a9717471edb9fc0b5c95319b###/evernote_android-job/library/src/test/java/com/evernote/android/job/JobExecutionTest.java###/JobExecutionTest.java###com.evernote.android.job.JobExecutionTest###testSimpleJob:###assertThat(JobManager.instance().getAllJobRequestsForTag(TestJob.TAG)).isEmpty();###manager###JobManager.instance()###91:9:91:90
9c3047aae44b49a51d3c6a7ef099231dd1ddf2b6###/evernote_android-job/library/src/main/java/com/evernote/android/job/JobStorage.java###/JobStorage.java###com.evernote.android.job.JobStorage###getAllJobRequests:String boolean ###cursor=getDatabase().query(JOB_TABLE_NAME,null,where,args,null,null,null);###database###getDatabase()###165:13:165:95
93bd3ac1e7b4affafec11ff1d0b9d9c2695fd49a###/evernote_android-job/library/src/test/java/com/evernote/android/job/DailyJobTest.java###/DailyJobTest.java###com.evernote.android.job.DailyJobTest###verifyExecutionAndSuccessfulReschedule:Clock long long ###assertThat(manager().getJobRequest(jobId+1)).isNotNull();###newRequest###manager().getJobRequest(jobId+1)###158:9:158:68
14e7edabfebbaf54b0f1dde3137f508e7943f6c3###/evernote_android-job/library/src/test/java/com/evernote/android/job/DailyJobTest.java###/DailyJobTest.java###com.evernote.android.job.DailyJobTest###verifyScheduleOverMidnight:###inthour=Calendar.getInstance().get(Calendar.HOUR_OF_DAY);###calendar###Calendar.getInstance()###50:9:50:69
3f9c0aaae6e62601a9717471edb9fc0b5c95319b###/evernote_android-job/library/src/test/java/com/evernote/android/job/JobExecutionTest.java###/JobExecutionTest.java###com.evernote.android.job.JobExecutionTest.testSimpleJob.start.new Thread###run:###assertThat(JobManager.instance().getJobRequest(jobId)).isNull();###manager###JobManager.instance()###75:21:75:85
741ffef239db87277c1608aaf7b49e7eb5ee8a03###/evernote_android-job/library/src/androidTest/java/com/evernote/android/job/DatabaseUpgradeTest.java###/DatabaseUpgradeTest.java###com.evernote.android.job.DatabaseUpgradeTest###testDatabaseUpgrade2to3:###createDatabase(newJobOpenHelper2(context),false);###openHelper###newJobOpenHelper2(context)###55:9:55:60
15a7b02b86cfcb5fe61dbef43cda8db391737e85###/evernote_android-job/library/src/main/java/com/evernote/android/job/JobManager.java###/JobManager.java###com.evernote.android.job.JobManager###schedule:JobRequest ###if(request.isPeriodic())###periodic###request.isPeriodic()###211:9:215:10
9c3047aae44b49a51d3c6a7ef099231dd1ddf2b6###/evernote_android-job/library/src/main/java/com/evernote/android/job/JobStorage.java###/JobStorage.java###com.evernote.android.job.JobStorage###update:JobRequest ContentValues ###getDatabase().update(JOB_TABLE_NAME,contentValues,COLUMN_ID+"=?",newString[]{String.valueOf(request.getJobId())});###database###getDatabase()###133:13:133:133
4bd1b8d11db9e7eac00fc4f6a5e0e80ccd18e070###/evernote_android-job/library/src/main/java/com/evernote/android/job/JobExecutor.java###/JobExecutor.java###com.evernote.android.job.JobExecutor###getAllJobs:###result.add(mJobs.valueAt(i));###job###mJobs.valueAt(i)###80:13:80:42
14e7edabfebbaf54b0f1dde3137f508e7943f6c3###/evernote_android-job/library/src/test/java/com/evernote/android/job/DailyJobTest.java###/DailyJobTest.java###com.evernote.android.job.DailyJobTest###verifyScheduleInNextHour:###inthour=Calendar.getInstance().get(Calendar.HOUR_OF_DAY);###calendar###Calendar.getInstance()###26:9:26:69
15a7b02b86cfcb5fe61dbef43cda8db391737e85###/evernote_android-job/library/src/main/java/com/evernote/android/job/gcm/JobProxyGcm.java###/JobProxyGcm.java###com.evernote.android.job.gcm.JobProxyGcm###plantOneOff:JobRequest ###CAT.d("ScheduledOneoffTask,%s,start%s,end%s",request,JobUtil.timeToString(Common.getStartMs(request)),JobUtil.timeToString(Common.getEndMs(request)));###startMs###Common.getStartMs(request)###75:9:76:115
d2e65a56957e85c2033574e6eaad53a3e28ba5e4###/evernote_android-job/library/src/main/java/com/evernote/android/job/JobRequest.java###/JobRequest.java###com.evernote.android.job.JobRequest###cancelAndEdit:###longoffset=System.currentTimeMillis()-mScheduledAt;###scheduledAt###mScheduledAt###384:13:384:69
9c3047aae44b49a51d3c6a7ef099231dd1ddf2b6###/evernote_android-job/library/src/main/java/com/evernote/android/job/JobStorage.java###/JobStorage.java###com.evernote.android.job.JobStorage###store:JobRequest ###if(getDatabase().insertOrThrow(JOB_TABLE_NAME,null,contentValues)<0)###database###getDatabase()###230:9:232:10
