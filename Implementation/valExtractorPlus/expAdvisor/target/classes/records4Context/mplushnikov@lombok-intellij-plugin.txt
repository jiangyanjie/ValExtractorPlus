d6b5eeb9ef39f3b2d27e109a917e4e14c41e5718###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/handler/SuperBuilderHandler.java###/SuperBuilderHandler.java###de.plushnikov.intellij.plugin.processor.handler.SuperBuilderHandler###createAllMethodsOfImplBuilder:PsiClass PsiAnnotation PsiClass ###finalLombokLightMethodBuilderprivateConstructor=newLombokLightMethodBuilder(psiClass.getManager(),builderImplClassName).withConstructor(true).withContainingClass(implBuilderClass).withNavigationElement(psiClass).withModifier(PsiModifier.PRIVATE);###psiManager###psiClass.getManager()###330:7:334:44
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/DataPlain.java###/DataPlain.java###Data2###equals:Object ###if(this.getName()==null?other.getName()!=null:!this.getName().equals((java.lang.Object)other.getName()))###this$name###this.getName()###93:5:93:133
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/DataWithGetter.java###/DataWithGetter.java###DataWithGetter###hashCode:###result=result*PRIME+(this.getZ()==null?0:this.getZ().hashCode());###$z###this.getZ()###47:5:47:82
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/DataPlain.java###/DataPlain.java###Data2###equals:Object ###if(this.getName()==null?other.getName()!=null:!this.getName().equals((java.lang.Object)other.getName()))###other$name###other.getName()###93:5:93:133
fedb198152e12daee36fa586783b12f3a8182165###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/clazz/DataProcessor.java###/DataProcessor.java###de.plushnikov.intellij.plugin.processor.clazz.DataProcessor###shouldGenerateRequiredArgsConstructor:PsiClass String ###if(PsiAnnotationSearchUtil.isNotAnnotatedWith(psiClass,NoArgsConstructor.class,RequiredArgsConstructor.class,AllArgsConstructor.class,Builder.class))###notAnnotatedWith###PsiAnnotationSearchUtil.isNotAnnotatedWith(psiClass,NoArgsConstructor.class,RequiredArgsConstructor.class,AllArgsConstructor.class,Builder.class)###111:5:123:6
638a65c02544e516bb42aa70918f2840bf6780fd###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/handler/singular/AbstractSingularHandler.java###/AbstractSingularHandler.java###de.plushnikov.intellij.plugin.processor.handler.singular.AbstractSingularHandler###renderBuilderMethod:BuilderInfo ###finalStringsingularName=createSingularName(info.getSingularAnnotation(),info.getFieldName());###fieldName###info.getFieldName()###58:5:58:103
6c1338c3e6e7ba8ee747c1ea8719b108f7c7ead3###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/clazz/builder/AbstractSuperBuilderPreDefinedInnerClassProcessor.java###/AbstractSuperBuilderPreDefinedInnerClassProcessor.java###de.plushnikov.intellij.plugin.processor.clazz.builder.AbstractSuperBuilderPreDefinedInnerClassProcessor###process:PsiClass ###returnprocessAnnotation(parentClass.get(),psiAnnotation.get(),psiClass);###psiBuilderAnnotation###psiAnnotation.get()###48:7:48:82
df95f49cf33e774921936c71d5e841b6a9263edd###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/handler/BuilderHandler.java###/BuilderHandler.java###de.plushnikov.intellij.plugin.processor.handler.BuilderHandler###createFieldMethods:Collection<PsiField> PsiClass PsiAnnotation Collection<String> ###methods.add(newLombokLightMethodBuilder(psiField.getManager(),createSetterName(psiFieldName,fluentBuilder)).withMethodReturnType(createSetterReturnType(psiAnnotation,PsiClassUtil.getTypeWithGenerics(innerClass))).withContainingClass(innerClass).withParameter(psiFieldName,psiField.getType()).withNavigationElement(psiField.getNavigationElement()).withModifier(PsiModifier.PUBLIC).withBody(psiCodeBlock));###returnType###createSetterReturnType(psiAnnotation,PsiClassUtil.getTypeWithGenerics(innerClass))###385:9:391:38
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/GetterLazyEahcToString.java###/GetterLazyEahcToString.java###GetterLazyEahcToString###hashCode:###result=result*PRIME+(this.getValue()==null?0:this.getValue().hashCode());###$value###this.getValue()###28:5:28:90
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/GetterLazyNative.java###/GetterLazyNative.java###GetterLazyNative###getBooleanField:###value=newAtomicReference<java.lang.Boolean>(true);###actualValue###true###20:11:20:64
b8211f0ff19bf6fb2f5cdda06dd90a55c1ae5d82###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/util/PsiTypeUtil.java###/PsiTypeUtil.java###de.plushnikov.intellij.plugin.util.PsiTypeUtil###getCollectionClassType:PsiClassType Project String ###nameTypeMap.put(entry.getKey().getName(),entry.getValue());###entryValue###entry.getValue()###81:9:81:69
7b7ef9b22db5740b3ac6e2b751dd4c5763965849###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/field/WitherFieldProcessor.java###/WitherFieldProcessor.java###de.plushnikov.intellij.plugin.processor.field.WitherFieldProcessor###createWitherMethod:PsiField String AccessorsInfo ###result=newLombokLightMethodBuilder(psiField.getManager(),witherName(accessorsInfo.removePrefix(psiField.getName()))).withMethodReturnType(returnType).withContainingClass(psiFieldContainingClass).withParameter(psiField.getName(),psiField.getType()).withNavigationElement(psiField).withModifier(methodModifier);###psiFieldName###psiField.getName()###150:7:155:41
3af496bd9dd882ba79505cf2fd7866981ec2f9ad###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/clazz/builder/BuilderPreDefinedInnerClassFieldProcessor.java###/BuilderPreDefinedInnerClassFieldProcessor.java###de.plushnikov.intellij.plugin.processor.clazz.builder.BuilderPreDefinedInnerClassFieldProcessor###generatePsiElements:PsiClass PsiMethod PsiClass PsiAnnotation List<? super PsiElement> ###target.addAll(builderHandler.generateFields(builderFields,psiBuilderClass,AccessorsInfo.build(psiParentClass)));###accessorsInfo###AccessorsInfo.build(psiParentClass)###42:7:42:121
fdc60cdef44be42c8ba674cd976bf54a33852b48###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/activity/LombokProjectValidatorActivity.java###/LombokProjectValidatorActivity.java###de.plushnikov.intellij.plugin.activity.LombokProjectValidatorActivity###enableAnnotations:Project ###getCompilerConfiguration(project).getDefaultProcessorProfile().setEnabled(true);###compilerConfiguration###getCompilerConfiguration(project)###103:5:103:85
7424b5291e36fa054756ca28e4523e395d1e43fd###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/field/GetterFieldProcessor.java###/GetterFieldProcessor.java###de.plushnikov.intellij.plugin.processor.field.GetterFieldProcessor###createGetterMethod:PsiField String ###if(psiField.hasModifierProperty(PsiModifier.STATIC))###isStatic###psiField.hasModifierProperty(PsiModifier.STATIC)###136:5:138:6
cda8a4632740f3bd349a89c33507038be08267ed###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/clazz/constructor/AbstractConstructorClassProcessor.java###/AbstractConstructorClassProcessor.java###de.plushnikov.intellij.plugin.processor.clazz.constructor.AbstractConstructorClassProcessor###createStaticConstructor:PsiClass String boolean Collection<PsiField> PsiAnnotation ###method.withParameter(param.getName(),param.getType());###methodParameterType###param.getType()###295:9:295:64
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/GetterLazyNative.java###/GetterLazyNative.java###GetterLazyNative###getIntField:###value=newAtomicReference<java.lang.Integer>(1);###actualValue###1###65:11:65:61
a30bee0071a2c599482f30ecff42499b1a3b1a34###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/ValProcessor.java###/ValProcessor.java###de.plushnikov.intellij.plugin.processor.ValProcessor###isVal:PsiLocalVariable ###returnpsiLocalVariable.getInitializer()!=null&&isVal(resolveQualifiedName(psiLocalVariable.getTypeElement()));###typeElement###psiLocalVariable.getTypeElement()###35:5:35:120
66ed1a887657aebe34cb9963a8ee6d0caacc082b###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/method/BuilderMethodInnerClassProcessor.java###/BuilderMethodInnerClassProcessor.java###de.plushnikov.intellij.plugin.processor.method.BuilderMethodInnerClassProcessor###createFields:PsiMethod ###fields.add(newLombokLightFieldBuilder(psiMethod.getManager(),psiParameterName,psiParameter.getType()).withModifier(PsiModifier.PRIVATE));###psiManager###psiMethod.getManager()###110:7:111:47
127c8b1e0bfcc2b5a754889bc21999be0a9f8146###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/action/delombok/BaseDelombokHandler.java###/BaseDelombokHandler.java###de.plushnikov.intellij.plugin.action.delombok.BaseDelombokHandler###invoke:Project PsiClass boolean ###for(innerClass:psiClass.getAllInnerClasses())###allInnerClasses###psiClass.getAllInnerClasses()###73:7:75:8
f9e8590a8d5a60958f00049d38a03f794c4fbdf0###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/field/SetterFieldProcessor.java###/SetterFieldProcessor.java###de.plushnikov.intellij.plugin.processor.field.SetterFieldProcessor###createSetterMethod:PsiField String ###if(psiField.hasModifierProperty(PsiModifier.STATIC))###isStatic###psiField.hasModifierProperty(PsiModifier.STATIC)###149:5:151:6
66ed1a887657aebe34cb9963a8ee6d0caacc082b###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/clazz/BuilderInnerClassProcessor.java###/BuilderInnerClassProcessor.java###de.plushnikov.intellij.plugin.processor.clazz.BuilderInnerClassProcessor###createFields:PsiClass ###fields.add(newLombokLightFieldBuilder(psiClass.getManager(),psiField.getName(),psiField.getType()).withModifier(PsiModifier.PRIVATE));###psiManager###psiClass.getManager()###133:9:134:49
b1c1b8635abd2243b597a4c2026db6159dd05ab6###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/field/SetterFieldProcessor.java###/SetterFieldProcessor.java###de.plushnikov.intellij.plugin.processor.field.SetterFieldProcessor###createSetterMethod:PsiField PsiClass String ###blockText+="returnthis;";###codeBlockText###blockText###164:7:164:35
edaaaca7d54a5733d3305a090f2f46c52413b156###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/activity/LombokProjectValidatorActivity.java###/LombokProjectValidatorActivity.java###de.plushnikov.intellij.plugin.activity.LombokProjectValidatorActivity###enableAnnotations:Project ###getCompilerConfiguration(project).getDefaultProcessorProfile().setEnabled(true);###compilerConfiguration###getCompilerConfiguration(project)###102:5:102:85
1afb51c566a883fcc5a3d548074a275634752d54###/mplushnikov_lombok-intellij-plugin/src/test/java/de/plushnikov/intellij/plugin/processor/modifier/ValueModifierTest.java###/ValueModifierTest.java###de.plushnikov.intellij.plugin.processor.modifier.ValueModifierTest###testValueModifiers:###assertNotNull(clazz.getModifierList());###list###clazz.getModifierList()###46:5:46:44
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/GetterLazyNative.java###/GetterLazyNative.java###GetterLazyNative###getDoubleField:###value=newAtomicReference<java.lang.Double>(1.0);###actualValue###1.0###110:11:110:62
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/DataPlain.java###/DataPlain.java###Data1###equals:Object ###if(this.getName()==null?other.getName()!=null:!this.getName().equals((java.lang.Object)other.getName()))###other$name###other.getName()###34:5:34:133
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/GetterLazyNative.java###/GetterLazyNative.java###GetterLazyNative###getFloatField:###value=newAtomicReference<java.lang.Float>(1.0F);###actualValue###1.0F###95:11:95:62
0a180701a7b2139210ec46882a13e14797bb342f###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/LombokProcessorManager.java###/LombokProcessorManager.java###de.plushnikov.intellij.plugin.processor.LombokProcessorManager###getLombokModifierProcessors:###returnArrays.asList(ApplicationManager.getApplication().getService(FieldDefaultsModifierProcessor.class),ApplicationManager.getApplication().getService(UtilityClassModifierProcessor.class),ApplicationManager.getApplication().getService(ValModifierProcessor.class),ApplicationManager.getApplication().getService(ValueModifierProcessor.class));###application###ApplicationManager.getApplication()###84:5:88:85
ed54057c425f233151a514d9aa264e2a77c72d2a###/mplushnikov_lombok-intellij-plugin/ProcessorCore/src/main/java/de/plushnikov/intellij/lombok/processor/field/SetterFieldProcessor.java###/SetterFieldProcessor.java###de.plushnikov.intellij.lombok.processor.field.SetterFieldProcessor###process:PsiField PsiAnnotation List<Psi> ###target.add((Psi)createSetterMethod(psiField,methodVisibity,psiClass,manager,elementFactory));###setterMethod###createSetterMethod(psiField,methodVisibity,psiClass,manager,elementFactory)###43:7:43:105
6daa0777b2377f890f9be9051b87277fd178d64e###/mplushnikov_lombok-intellij-plugin/processor-core/src/main/java/de/plushnikov/intellij/lombok/processor/clazz/BuilderProcessor.java###/BuilderProcessor.java###de.plushnikov.intellij.lombok.processor.clazz.BuilderProcessor###processIntern:PsiClass PsiAnnotation List<? super PsiElement> ###LombokLightMethodBuildermethod=LombokPsiElementFactory.getInstance().createLightMethod(psiClass.getManager(),BuilderUtil.createBuilderMethodName(psiAnnotation)).withMethodReturnType(PsiClassUtil.getTypeWithGenerics(psiClass.getInnerClasses()[0])).withContainingClass(psiClass).withNavigationElement(psiAnnotation);###builderMethodName###BuilderUtil.createBuilderMethodName(psiAnnotation)###93:5:96:47
4e81135772aacea5ad1a4d470ba5da4b5b1b72a6###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/field/WitherFieldProcessor.java###/WitherFieldProcessor.java###de.plushnikov.intellij.plugin.processor.field.WitherFieldProcessor###validIsWitherUnique:PsiField PsiAnnotation ProblemBuilder ###if(PsiMethodUtil.hasSimilarMethod(PsiClassUtil.collectClassMethodsIntern(fieldContainingClass),witherName,1)||PsiMethodUtil.hasSimilarMethod(PsiClassUtil.collectClassMethodsIntern(fieldContainingClass),defaultWitherName(psiFieldName),1))###classMethods###PsiClassUtil.collectClassMethodsIntern(fieldContainingClass)###147:7:151:8
d6528687cb50af0553ed3efd1d0fa08d45ce481c###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/handler/BuilderHandler.java###/BuilderHandler.java###de.plushnikov.intellij.plugin.processor.handler.BuilderHandler###createMethods:PsiClass PsiMethod PsiClass PsiType PsiAnnotation Collection<? extends PsiVariable> PsiSubstitutor ###finalPsiTypereturnType=createSetterReturnType(psiAnnotation,PsiClassUtil.getTypeWithGenerics(psiBuilderClass));###psiBuilderClassType###PsiClassUtil.getTypeWithGenerics(psiBuilderClass)###355:9:355:125
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/DataPlain.java###/DataPlain.java###Data1###equals:Object ###if(this.getName()==null?other.getName()!=null:!this.getName().equals((java.lang.Object)other.getName()))###this$name###this.getName()###34:5:34:133
8847144dfb29c8e84697d89a31ba84b0e0ab60fc###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/handler/BuilderHandler.java###/BuilderHandler.java###de.plushnikov.intellij.plugin.processor.handler.BuilderHandler###createBuilderClass:PsiClass PsiMethod PsiAnnotation ###builderClass.withFields(createFields(psiMethod));###builderFields###createFields(psiMethod)###177:5:177:54
e9d4618711078ebf58e1b95152eb3806250fdccb###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/action/lombok/LombokLoggerHandler.java###/LombokLoggerHandler.java###de.plushnikov.intellij.plugin.action.lombok.LombokLoggerHandler###checkLoggerField:PsiField String boolean ###intresult=Messages.showOkCancelDialog(String.format("Loggerfield:\"%s\"Isnotprivate%sfinalfieldnamed\"%s\".Refactoranyway?",psiField.getName(),lombokLoggerIsStatic?"static":"",lombokLoggerName),"Attention!",Messages.getQuestionIcon());###messageText###String.format("Loggerfield:\"%s\"Isnotprivate%sfinalfieldnamed\"%s\".Refactoranyway?",psiField.getName(),lombokLoggerIsStatic?"static":"",lombokLoggerName)###61:7:64:51
178a7ddea7f70cd6e9fb69beb3aa472d6350641b###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/handler/singular/SingularMapHandler.java###/SingularMapHandler.java###de.plushnikov.intellij.plugin.processor.handler.singular.SingularMapHandler###addBuilderField:List<PsiField> PsiVariable PsiClass AccessorsInfo ###fields.add(newLombokLightFieldBuilder(psiManager,fieldName+LOMBOK_KEY,getBuilderFieldType(psiTypes[0],project)).withModifier(PsiModifier.PRIVATE).withNavigationElement(psiVariable).withContainingClass(innerClass));###builderFieldKeyType###getBuilderFieldType(psiTypes[0],project)###37:7:40:45
73b494df177133827c59351e4015d8f52a1db8c8###/mplushnikov_lombok-intellij-plugin/intellij-facade-11/src/main/java/de/plushnikov/intellij/lombok/psi/LombokLightParameter11Impl.java###/LombokLightParameter11Impl.java###de.plushnikov.intellij.lombok.psi.LombokLightParameter11Impl###LombokLightParameter11Impl:String PsiType PsiElement Language ###myNameIdentifier=newLightIdentifier(declarationScope.getManager(),name);###manager###declarationScope.getManager()###19:5:19:81
37e44af65e1978b1384d485e29cd803dd5b147fc###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/util/LombokProcessorUtil.java###/LombokProcessorUtil.java###de.plushnikov.intellij.plugin.util.LombokProcessorUtil###getNewOnX:PsiAnnotation String ###annotationStrings.add(annotation.getQualifiedName()+params.getText());###annotationQualifiedName###annotation.getQualifiedName()###104:7:104:79
178a7ddea7f70cd6e9fb69beb3aa472d6350641b###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/handler/singular/AbstractSingularHandler.java###/AbstractSingularHandler.java###de.plushnikov.intellij.plugin.processor.handler.singular.AbstractSingularHandler###addBuilderField:List<PsiField> PsiVariable PsiClass AccessorsInfo ###finalLombokLightFieldBuilderfieldBuilder=newLombokLightFieldBuilder(psiVariable.getManager(),fieldName,getBuilderFieldType(psiVariable.getType(),psiVariable.getProject())).withModifier(PsiModifier.PRIVATE).withNavigationElement(psiVariable).withContainingClass(innerClass);###fieldType###getBuilderFieldType(psiVariable.getType(),psiVariable.getProject())###30:5:34:46
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/GetterLazyEahcToString.java###/GetterLazyEahcToString.java###GetterLazyEahcToString###hashCode:###result=result*PRIME+(this.value2==null?0:this.value2.hashCode());###$value2###this.value2###29:5:29:82
e92679a3f5cbf4c57e60477d80a40a56e880bb3b###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/handler/BuilderHandler.java###/BuilderHandler.java###de.plushnikov.intellij.plugin.processor.handler.BuilderHandler###createMethods:PsiClass PsiMethod PsiClass PsiType PsiAnnotation Collection<? extends PsiVariable> ###finalStringsingularName=handler.createSingularName(singularAnnotation,accessorsInfo.removePrefix(psiVariable.getName()));###fieldName###accessorsInfo.removePrefix(psiVariable.getName())###296:9:296:135
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/DataPlain.java###/DataPlain.java###Data2###hashCode:###result=result*PRIME+(this.getName()==null?0:this.getName().hashCode());###$name###this.getName()###108:5:108:88
3c05a731958a5bd50631c2d03e9f0d2a3fcd69e8###/mplushnikov_lombok-intellij-plugin/processor-core/src/main/java/de/plushnikov/intellij/lombok/processor/field/WitherFieldProcessor.java###/WitherFieldProcessor.java###de.plushnikov.intellij.lombok.processor.field.WitherFieldProcessor###validIsWitherUnique:PsiField PsiAnnotation ProblemBuilder ###if(PsiMethodUtil.hasSimilarMethod(PsiClassUtil.collectClassMethodsIntern(field.getContainingClass()),witherName(field.getName()),1)||PsiMethodUtil.hasSimilarMethod(PsiClassUtil.collectClassMethodsIntern(field.getContainingClass()),secondWitherName(field.getName()),1))###fieldContainingClass###field.getContainingClass()###128:7:135:8
de8b827f5094cefb377669acfa9cdbe569d5e2da###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/ValProcessor.java###/ValProcessor.java###de.plushnikov.intellij.plugin.processor.ValProcessor###verifyVariable:PsiLocalVariable ProblemsHolder ###if(isSameName(psiLocalVariable.getTypeElement().getText()))###isVal###isSameName(psiLocalVariable.getTypeElement().getText())###69:5:83:6
3c05a731958a5bd50631c2d03e9f0d2a3fcd69e8###/mplushnikov_lombok-intellij-plugin/processor-core/src/main/java/de/plushnikov/intellij/lombok/processor/field/WitherFieldProcessor.java###/WitherFieldProcessor.java###de.plushnikov.intellij.lombok.processor.field.WitherFieldProcessor###createWitherMethod:PsiField String AccessorsInfo ###PsiTypereturnType=PsiClassUtil.getTypeWithGenerics(psiField.getContainingClass());###psiFieldContainingClass###psiField.getContainingClass()###142:7:142:92
c67964816111223a03676abeab11d7689d8f0da0###/mplushnikov_lombok-intellij-plugin/test-manual/src/main/java/de/plushnikov/superbuilder/SuperBuilderSimple.java###/SuperBuilderSimple.java###de.plushnikov.superbuilder.SuperBuilderSimple###test:###Childx=Child.builder().field3(0.0).field1(5).item("").build();###childBuilder###Child.builder()###20:5:20:70
d4f8cb5e157e5420ab0247ab60d0d30751c41af2###/mplushnikov_lombok-intellij-plugin/processor-core/src/main/java/de/plushnikov/intellij/lombok/processor/clazz/log/AbstractLogProcessor.java###/AbstractLogProcessor.java###de.plushnikov.intellij.lombok.processor.clazz.log.AbstractLogProcessor###processIntern:PsiClass PsiAnnotation List<Psi> ###LightElementloggerField=newMyLightFieldBuilder(manager,loggerName,psiLoggerType).setHasInitializer(true).setContainingClass(psiClass).setModifiers(PsiModifier.FINAL,PsiModifier.STATIC,PsiModifier.PRIVATE).setNavigationElement(psiAnnotation);###loggerField###newMyLightFieldBuilder(manager,loggerName,psiLoggerType).setHasInitializer(true).setContainingClass(psiClass).setModifiers(PsiModifier.FINAL,PsiModifier.STATIC,PsiModifier.PRIVATE)###60:5:64:46
01e5704043db84c5bf45e2e145d386dce4863b17###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/method/BuilderMethodInnerClassProcessor.java###/BuilderMethodInnerClassProcessor.java###de.plushnikov.intellij.plugin.processor.method.BuilderMethodInnerClassProcessor###createFields:PsiMethod ###fields.add(newLombokLightFieldBuilder(psiMethod.getManager(),psiParameter.getName(),psiParameter.getType()).withModifier(PsiModifier.PRIVATE));###psiParameterName###psiParameter.getName()###67:7:68:45
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/DataWithGetter.java###/DataWithGetter.java###DataWithGetter###equals:Object ###if(this.getZ()==null?other.getZ()!=null:!this.getZ().equals((java.lang.Object)other.getZ()))###other$z###other.getZ()###31:5:31:121
9655865252e15383a70c9c2237d8f013301c5b68###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/handler/BuilderHandler.java###/BuilderHandler.java###de.plushnikov.intellij.plugin.processor.handler.BuilderHandler###createBuilderClass:PsiClass PsiTypeParameterListOwner String PsiAnnotation ###returnnewLombokLightClassBuilder(project,builderClassName,builderClassQualifiedName).withContainingClass(psiClass).withNavigationElement(psiAnnotation).withParameterTypes(psiTypeParameterListOwner.getTypeParameterList()).withModifier(PsiModifier.PUBLIC).withModifier(PsiModifier.STATIC);###classBuilder###newLombokLightClassBuilder(project,builderClassName,builderClassQualifiedName).withContainingClass(psiClass).withNavigationElement(psiAnnotation).withParameterTypes(psiTypeParameterListOwner.getTypeParameterList()).withModifier(PsiModifier.PUBLIC)###379:5:384:43
b9a55c07a92b60bbb3e9b75217e603a9ef28a77b###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/action/delombok/DelombokHandler.java###/DelombokHandler.java###de.plushnikov.intellij.plugin.action.delombok.DelombokHandler###getTypeParameterAsString:PsiTypeParameter ###returntypeParameter.getName()+Stream.of(typeParameter.getExtendsList().getReferencedTypes()).map(this::getTypeWithParameter).collect(Collectors.joining("&","extends",""));###referencedTypes###typeParameter.getExtendsList().getReferencedTypes()###301:5:304:62
3af496bd9dd882ba79505cf2fd7866981ec2f9ad###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/handler/BuilderHandler.java###/BuilderHandler.java###de.plushnikov.intellij.plugin.processor.handler.BuilderHandler###getBuilderFields:PsiClass Collection<PsiField> ###selectField&=!psiField.getName().startsWith(LombokUtils.LOMBOK_INTERN_FIELD_MARKER);###psiFieldName###psiField.getName()###386:9:386:95
0b40db9e83d1de03c772945792ea6eddd95c6083###/mplushnikov_lombok-intellij-plugin/src/test/java/de/plushnikov/intellij/plugin/configsystem/AbstractLombokConfigSystemTestCase.java###/AbstractLombokConfigSystemTestCase.java###de.plushnikov.intellij.plugin.configsystem.AbstractLombokConfigSystemTestCase###doTest:###finalStringsubPath=fullFileName.substring(0,fullFileName.lastIndexOf('/'));###lastIndexOf###fullFileName.lastIndexOf('/')###12:5:12:85
de8b827f5094cefb377669acfa9cdbe569d5e2da###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/ValProcessor.java###/ValProcessor.java###de.plushnikov.intellij.plugin.processor.ValProcessor###verifyParameter:PsiParameter ProblemsHolder ###if(null!=typeElement&&isSameName(typeElement.getText()))###isVal###null!=typeElement&&isSameName(typeElement.getText())###88:5:92:6
7fa1ecea28b4a2b32134397dc99da5827dc091ca###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/AbstractProcessor.java###/AbstractProcessor.java###de.plushnikov.intellij.plugin.processor.AbstractProcessor###copyableAnnotations:PsiField LombokCopyableAnnotations ###finalCollection<String>existedShortAnnotationNames=ContainerUtil.map(psiField.getAnnotations(),PsiAnnotationSearchUtil::getShortNameOf);###fieldAnnotations###psiField.getAnnotations()###111:5:111:146
456f3e62400e250d0706dea76c79b9f314745305###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/handler/BuilderHandler.java###/BuilderHandler.java###de.plushnikov.intellij.plugin.processor.handler.BuilderHandler###createFieldMethods:PsiClass PsiClass PsiAnnotation ###createMethod&=!psiField.getName().startsWith(LombokUtils.LOMBOK_INTERN_FIELD_MARKER);###psiFieldName###psiField.getName()###272:9:272:96
ef957f5ba242bb37a32e3ab11c640404337d4e1e###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/action/delombok/BaseDelombokHandler.java###/BaseDelombokHandler.java###de.plushnikov.intellij.plugin.action.delombok.BaseDelombokHandler###processClass:Project PsiClass AbstractProcessor ###psiClass.add(rebuildPsiElement(project,(PsiElement)psiElement));###element###rebuildPsiElement(project,(PsiElement)psiElement)###80:9:80:75
8d4d3b355937adbde5ed0e2468f819da0e5baaa0###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/activity/LombokProjectValidatorActivity.java###/LombokProjectValidatorActivity.java###de.plushnikov.intellij.plugin.activity.LombokProjectValidatorActivity###runActivity:Project ###ReadAction.nonBlocking(()->{finalbooleanhasLombokLibrary=hasLombokLibrary(project);if(!hasLombokLibrary&&ProjectSettings.isEnabled(project,ProjectSettings.IS_MISSING_LOMBOK_CHECK_ENABLED,false)){returngetNotificationGroup().createNotification(LombokBundle.message("config.warn.dependency.missing.title"),LombokBundle.message("config.warn.dependency.missing.message",project.getName()),NotificationType.ERROR,NotificationListener.URL_OPENING_LISTENER);}if(hasLombokLibrary&&ProjectSettings.isEnabled(project,ProjectSettings.IS_LOMBOK_VERSION_CHECK_ENABLED,false)){finalModuleManagermoduleManager=ModuleManager.getInstance(project);for(Modulemodule:moduleManager.getModules()){StringlombokVersion=parseLombokVersion(findLombokEntry(ModuleRootManager.getInstance(module)));if(null!=lombokVersion&&compareVersionString(lombokVersion,Version.LAST_LOMBOK_VERSION)<0){returngetNotificationGroup().createNotification(LombokBundle.message("config.warn.dependency.outdated.title"),LombokBundle.message("config.warn.dependency.outdated.message",project.getName(),module.getName(),lombokVersion,Version.LAST_LOMBOK_VERSION),NotificationType.WARNING,NotificationListener.URL_OPENING_LISTENER);}}}if(hasLombokLibrary&&ProjectSettings.isEnabled(project,ProjectSettings.IS_ANNOTATION_PROCESSING_CHECK_ENABLED,true)&&!hasAnnotationProcessorsEnabled(project)){returngetNotificationGroup().createNotification(LombokBundle.message("config.warn.annotation-processing.disabled.title"),LombokBundle.message("config.warn.annotation-processing.disabled.message",project.getName()),NotificationType.ERROR,(not,e)->{if(e.getEventType()==HyperlinkEvent.EventType.ACTIVATED){enableAnnotations(project);not.expire();}});}returnnull;}).expireWith(LombokProcessorProvider.getInstance(project)).finishOnUiThread(ModalityState.NON_MODAL,notification->{if(notification!=null){Notifications.Bus.notify(notification,project);}}).submit(AppExecutorUtil.getAppExecutorService());###lombokProcessorProvider###LombokProcessorProvider.getInstance(project)###53:5:100:58
6c1338c3e6e7ba8ee747c1ea8719b108f7c7ead3###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/clazz/builder/AbstractSuperBuilderPreDefinedInnerClassProcessor.java###/AbstractSuperBuilderPreDefinedInnerClassProcessor.java###de.plushnikov.intellij.plugin.processor.clazz.builder.AbstractSuperBuilderPreDefinedInnerClassProcessor###processAnnotation:PsiClass PsiAnnotation PsiClass ###if(builderImplClassName.equals(psiClass.getName()))###psiClassName###psiClass.getName()###75:12:77:6
ed596ab504842b28af8e42d3231cd58a5554378f###/mplushnikov_lombok-intellij-plugin/processor-core/src/main/java/de/plushnikov/intellij/lombok/processor/field/SetterFieldProcessor.java###/SetterFieldProcessor.java###de.plushnikov.intellij.lombok.processor.field.SetterFieldProcessor###createSetterMethod:PsiField String ###LombokLightMethodBuildermethod=LombokPsiElementFactory.getInstance().createLightMethod(psiField.getManager(),methodName).withMethodReturnType(getReturnType(psiField)).withContainingClass(psiClass).withParameter(fieldName,psiFieldType).withNavigationElement(psiField);###returnType###getReturnType(psiField)###123:5:127:42
3af496bd9dd882ba79505cf2fd7866981ec2f9ad###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/clazz/builder/BuilderPreDefinedInnerClassFieldProcessor.java###/BuilderPreDefinedInnerClassFieldProcessor.java###de.plushnikov.intellij.plugin.processor.clazz.builder.BuilderPreDefinedInnerClassFieldProcessor###generatePsiElements:PsiClass PsiMethod PsiClass PsiAnnotation List<? super PsiElement> ###target.addAll(builderHandler.generateFields(builderParameters,psiBuilderClass,AccessorsInfo.EMPTY));###accessorsInfo###AccessorsInfo.EMPTY###45:7:45:109
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/DataPlain.java###/DataPlain.java###Data3###equals:Object ###if(this.getName()==null?other.getName()!=null:!this.getName().equals((java.lang.Object)other.getName()))###other$name###other.getName()###151:5:151:133
01e5704043db84c5bf45e2e145d386dce4863b17###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/method/BuilderMethodProcessor.java###/BuilderMethodProcessor.java###de.plushnikov.intellij.plugin.processor.method.BuilderMethodProcessor###processIntern:PsiMethod PsiAnnotation List<? super PsiElement> ###LombokLightMethodBuildermethod=newLombokLightMethodBuilder(psiMethod.getManager(),BuilderUtil.createBuilderMethodName(psiAnnotation)).withMethodReturnType(PsiClassUtil.getTypeWithGenerics(psiMethod.getContainingClass().getInnerClasses()[0])).withContainingClass(psiMethod.getContainingClass()).withNavigationElement(psiAnnotation);###builderMethodName###BuilderUtil.createBuilderMethodName(psiAnnotation)###51:5:54:47
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/DataWithGetter.java###/DataWithGetter.java###DataWithGetter###equals:Object ###if(this.getZ()==null?other.getZ()!=null:!this.getZ().equals((java.lang.Object)other.getZ()))###this$z###this.getZ()###31:5:31:121
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/GetterLazyNative.java###/GetterLazyNative.java###GetterLazyNative###getLongField:###value=newAtomicReference<java.lang.Long>(1);###actualValue###1###80:11:80:58
e7e37e8f9c954e80190653a509f099670891f5d3###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/extension/LombokReferenceSearcher.java###/LombokReferenceSearcher.java###de.plushnikov.intellij.plugin.extension.LombokReferenceSearcher###processPsiField:PsiField SearchRequestCollector ###Arrays.stream(containingClass.getInnerClasses()).forEach(psiClass->processClassMethods(refPsiField,collector,psiClass));###innerClasses###containingClass.getInnerClasses()###40:7:41:85
01e5704043db84c5bf45e2e145d386dce4863b17###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/method/BuilderMethodProcessor.java###/BuilderMethodProcessor.java###de.plushnikov.intellij.plugin.processor.method.BuilderMethodProcessor###processIntern:PsiMethod PsiAnnotation List<? super PsiElement> ###LombokLightMethodBuildermethod=newLombokLightMethodBuilder(psiMethod.getManager(),BuilderUtil.createBuilderMethodName(psiAnnotation)).withMethodReturnType(PsiClassUtil.getTypeWithGenerics(psiMethod.getContainingClass().getInnerClasses()[0])).withContainingClass(psiMethod.getContainingClass()).withNavigationElement(psiAnnotation);###containingClass###psiMethod.getContainingClass()###51:5:54:47
a061ab1a8b0e49b802bfa437ec963add8fc381d0###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/util/PsiAnnotationSearchUtil.java###/PsiAnnotationSearchUtil.java###de.plushnikov.intellij.plugin.util.PsiAnnotationSearchUtil###findAnnotationQuick:PsiAnnotationOwner String ###if(shortName.equals(referenceElement.getReferenceName()))###referenceName###referenceElement.getReferenceName()###61:9:74:10
af319817c329013d41b51808c0d279fac1216b37###/mplushnikov_lombok-intellij-plugin/ProcessorCore/src/main/java/de/plushnikov/intellij/lombok/processor/clazz/log/AbstractLogProcessor.java###/AbstractLogProcessor.java###de.plushnikov.intellij.lombok.processor.clazz.log.AbstractLogProcessor###processIntern:PsiClass PsiAnnotation List<Psi> ###PsiTypepsiLoggerType=JavaPsiFacade.getElementFactory(project).createTypeFromText(loggerType,psiClass);###psiElementFactory###JavaPsiFacade.getElementFactory(project)###56:5:56:111
b5910fc771ed008a3b5d117ecb98bbc504317db1###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/handler/BuilderHandler.java###/BuilderHandler.java###de.plushnikov.intellij.plugin.processor.handler.BuilderHandler###createBuilderMethod:PsiClass PsiMethod PsiClass PsiAnnotation ###LombokLightMethodBuildermethod=createBuilderMethod(containingClass,psiMethod,builderPsiClass,psiAnnotation,getBuilderMethodName(psiAnnotation));###builderMethodName###getBuilderMethodName(psiAnnotation)###228:5:228:156
7085060ac1deaff98bcb07cd4490a91a1f464f78###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/ValProcessor.java###/ValProcessor.java###de.plushnikov.intellij.plugin.processor.ValProcessor###verifyVariable:PsiLocalVariable ProblemsHolder ###booleanisVar=isVar(resolveQualifiedName(psiLocalVariable.getTypeElement()));###qualifiedName###resolveQualifiedName(psiLocalVariable.getTypeElement())###109:5:109:84
1550a58ce5f96dee587478acefb43e0f2aceceb1###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/provider/LombokAugmentProvider.java###/LombokAugmentProvider.java###de.plushnikov.intellij.plugin.provider.LombokAugmentProvider###getAugments:PsiElement Class<Psi> ###if(DumbService.getInstance(element.getProject()).isDumb())###project###element.getProject()###55:5:57:6
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/DataPlain.java###/DataPlain.java###Data3###equals:Object ###if(this.getName()==null?other.getName()!=null:!this.getName().equals((java.lang.Object)other.getName()))###this$name###this.getName()###151:5:151:133
3c05a731958a5bd50631c2d03e9f0d2a3fcd69e8###/mplushnikov_lombok-intellij-plugin/processor-core/src/main/java/de/plushnikov/intellij/lombok/processor/field/WitherFieldProcessor.java###/WitherFieldProcessor.java###de.plushnikov.intellij.lombok.processor.field.WitherFieldProcessor###validHasConstructor:PsiField ProblemBuilder ###finalbooleanhasRequiredArgsConstAnot=PsiAnnotationUtil.isAnnotatedWith(field.getContainingClass(),RequiredArgsConstructor.class);###fieldContainingClass###field.getContainingClass()###112:5:112:139
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/DataPlain.java###/DataPlain.java###Data1###hashCode:###result=result*PRIME+(this.getName()==null?0:this.getName().hashCode());###$name###this.getName()###49:5:49:88
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/GetterLazyEahcToString.java###/GetterLazyEahcToString.java###GetterLazyEahcToString###equals:Object ###if(this.getValue()==null?other.getValue()!=null:!this.getValue().equals((java.lang.Object)other.getValue()))###other$value###other.getValue()###13:5:13:137
4a9264139cda52f16e76e1b5605f88d674f0cb77###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/handler/OnXAnnotationHandler.java###/OnXAnnotationHandler.java###de.plushnikov.intellij.plugin.handler.OnXAnnotationHandler###isOnXParameterAnnotation:HighlightInfo PsiFile ###if(!(ANNOTATION_TYPE_EXPECTED.equals(highlightInfo.getDescription())||CANNOT_RESOLVE_UNDERSCORES_MESSAGE.matcher(StringUtil.notNullize(highlightInfo.getDescription())).matches()))###description###StringUtil.notNullize(highlightInfo.getDescription())###38:5:41:6
3ad4d88ca89128890dd7e7d0d12485722ae8be96###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/extension/LombokFieldFindUsagesHandlerFactory.java###/LombokFieldFindUsagesHandlerFactory.java###de.plushnikov.intellij.plugin.extension.LombokFieldFindUsagesHandlerFactory.createFindUsagesHandler.new JavaFindUsagesHandler###getSecondaryElements:###finalStringfieldName=accessorsInfo.removePrefix(psiField.getName());###psiFieldName###psiField.getName()###42:11:42:83
652d3f685c1f96bc17a7964a22c16665532571dc###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/field/SetterFieldProcessor.java###/SetterFieldProcessor.java###de.plushnikov.intellij.plugin.processor.field.SetterFieldProcessor###createSetterMethod:PsiField PsiClass String ###copyAnnotations(psiField,method.getModifierList(),LombokUtils.DEPRECATED_PATTERN);###methodModifierList###method.getModifierList()###164:5:164:89
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/GetterLazyEahcToString.java###/GetterLazyEahcToString.java###GetterLazyEahcToString###equals:Object ###if(this.getValue()==null?other.getValue()!=null:!this.getValue().equals((java.lang.Object)other.getValue()))###this$value###this.getValue()###13:5:13:137
4e81135772aacea5ad1a4d470ba5da4b5b1b72a6###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/field/WitherFieldProcessor.java###/WitherFieldProcessor.java###de.plushnikov.intellij.plugin.processor.field.WitherFieldProcessor###validIsWitherUnique:PsiField PsiAnnotation ProblemBuilder ###if(PsiMethodUtil.hasSimilarMethod(PsiClassUtil.collectClassMethodsIntern(fieldContainingClass),witherName,1)||PsiMethodUtil.hasSimilarMethod(PsiClassUtil.collectClassMethodsIntern(fieldContainingClass),defaultWitherName(psiFieldName),1))###defaultWitherName###defaultWitherName(psiFieldName)###147:7:151:8
35620e44a077f21c9461059ec6d7b94e8c0bfaa5###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/modifier/FieldDefaultsModifierProcessor.java###/FieldDefaultsModifierProcessor.java###de.plushnikov.intellij.plugin.processor.modifier.FieldDefaultsModifierProcessor###isSupported:PsiModifierList ###if(!(modifierList.getParent()instanceofPsiField))###psiElement###modifierList.getParent()###30:5:32:6
b1aa0ff64a80201be434cb8203a714ca92d14594###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/java/de/plushnikov/intellij/plugin/action/LombokLightActionTest.java###/LombokLightActionTest.java###de.plushnikov.intellij.plugin.action.LombokLightActionTest###createAnActionEvent:AnAction ###returnnewAnActionEvent(null,DataManager.getInstance().getDataContext(),"",anAction.getTemplatePresentation(),ActionManager.getInstance(),0);###context###DataManager.getInstance().getDataContext()###51:5:58:7
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/GetterLazyNative.java###/GetterLazyNative.java###GetterLazyNative###getIntArrayField:###value=newAtomicReference<int[]>(newint[]{1});###actualValue###newint[]{1}###140:11:140:60
d6739c42019fbf64908e9c31f9066dee54ab472e###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/java/de/plushnikov/lombok/LombokLightCodeInsightTestCase.java###/LombokLightCodeInsightTestCase.java###de.plushnikov.lombok.LombokLightCodeInsightTestCase###loadToPsiFile:String ###VirtualFilevirtualFile=myFixture.copyFileToProject(getBasePath()+"/"+fileName,fileName);###sourceFilePath###getBasePath()+"/"+fileName###67:5:67:101
cbd85afa5013dc11f5f29abd809728ec4b51ee4c###/mplushnikov_lombok-intellij-plugin/src/test/java/de/plushnikov/intellij/plugin/processor/FieldNameConstantsOldTest.java###/FieldNameConstantsOldTest.java###de.plushnikov.intellij.plugin.processor.FieldNameConstantsOldTest###setUp:###VfsRootAccess.allowRootAccess(newFile(getTestDataPath(),getBasePath()).getCanonicalPath(),newFile(OLD_LOMBOK_SRC_PATH).getCanonicalPath());###basePath###newFile(getTestDataPath(),getBasePath()).getCanonicalPath()###17:5:18:57
de6f89fca0170749741e3cf7b5c4674fd1b0696c###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/field/AccessorsInfo.java###/AccessorsInfo.java###de.plushnikov.intellij.plugin.processor.field.AccessorsInfo###buildAccessorsInfo:PsiClass Boolean Boolean Collection<String> ###isFluent=ConfigDiscovery.getInstance().getBooleanLombokConfigProperty(ConfigKey.ACCESSORS_FLUENT,psiClass);###configDiscovery###ConfigDiscovery.getInstance()###99:9:99:119
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/GetterLazyNative.java###/GetterLazyNative.java###GetterLazyNative###getByteField:###value=newAtomicReference<java.lang.Byte>(1);###actualValue###1###35:11:35:58
178a7ddea7f70cd6e9fb69beb3aa472d6350641b###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/handler/singular/SingularMapHandler.java###/SingularMapHandler.java###de.plushnikov.intellij.plugin.processor.handler.singular.SingularMapHandler###addBuilderField:List<PsiField> PsiVariable PsiClass AccessorsInfo ###fields.add(newLombokLightFieldBuilder(psiManager,fieldName+LOMBOK_VALUE,getBuilderFieldType(psiTypes[1],project)).withModifier(PsiModifier.PRIVATE).withNavigationElement(psiVariable).withContainingClass(innerClass));###builderFieldValueType###getBuilderFieldType(psiTypes[1],project)###42:7:45:45
a061ab1a8b0e49b802bfa437ec963add8fc381d0###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/util/PsiAnnotationSearchUtil.java###/PsiAnnotationSearchUtil.java###de.plushnikov.intellij.plugin.util.PsiAnnotationSearchUtil###findAnnotationQuick:PsiAnnotationOwner String[] ###if(ArrayUtil.find(shortNames,referenceElement.getReferenceName())>-1)###referenceName###referenceElement.getReferenceName()###100:9:114:10
652d3f685c1f96bc17a7964a22c16665532571dc###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/field/GetterFieldProcessor.java###/GetterFieldProcessor.java###de.plushnikov.intellij.plugin.processor.field.GetterFieldProcessor###createGetterMethod:PsiField PsiClass String ###copyAnnotations(psiField,method.getModifierList(),LombokUtils.NON_NULL_PATTERN,LombokUtils.NULLABLE_PATTERN,LombokUtils.DEPRECATED_PATTERN);###modifierList###method.getModifierList()###138:5:139:101
43dfba1fec4949f39da16edea6efba7c57f1b12a###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/method/BuilderClassMethodProcessor.java###/BuilderClassMethodProcessor.java###de.plushnikov.intellij.plugin.processor.method.BuilderClassMethodProcessor###processIntern:PsiMethod PsiAnnotation List<? super PsiElement> ###ServiceManager.getService(BuilderHandler.class).createBuilderClassIfNotExist(psiClass,psiMethod,psiAnnotation).ifPresent(target::add);###builderHandler###ServiceManager.getService(BuilderHandler.class)###43:7:43:143
a00cb1f918018c016f8714c95afb682be5fffd8a###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/action/delombok/BaseDelombokHandler.java###/BaseDelombokHandler.java###de.plushnikov.intellij.plugin.action.delombok.BaseDelombokHandler###rebuildMethod:Project PsiMethod ###for(originalAnnotation:parameter.getModifierList().getAnnotations())###parameterModifierList###parameter.getModifierList()###176:9:181:10
8ae83fcab57b67e94bb3a5d893751819d37deea7###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/action/BaseRefactorAction.java###/BaseRefactorAction.java###de.plushnikov.intellij.plugin.action.BaseRefactorAction###actionPerformed:AnActionEvent ###CommandProcessor.getInstance().executeCommand(project,newRunnable(){@Overridepublicvoidrun(){ApplicationManager.getApplication().runWriteAction(handler);}},getClass().getName()+"-Commandname",DocCommandGroupId.noneGroupId(editor.getDocument()));###name###getClass().getName()+"-Commandname"###49:7:54:102
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/GetterLazy.java###/GetterLazy.java###GetterLazy###getFieldName:###value=newjava.util.concurrent.atomic.AtomicReference<ValueType>(newValueType());###actualValue###newValueType()###17:11:17:95
f9d86ed428f2cf253f1f354e1c88e199db183c51###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/field/SetterFieldProcessor.java###/SetterFieldProcessor.java###de.plushnikov.intellij.plugin.processor.field.SetterFieldProcessor###createSetterMethod:PsiField String ###if(psiField.hasModifierProperty(PsiModifier.STATIC))###isStatic###psiField.hasModifierProperty(PsiModifier.STATIC)###157:5:159:6
0a180701a7b2139210ec46882a13e14797bb342f###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/LombokProcessorManager.java###/LombokProcessorManager.java###de.plushnikov.intellij.plugin.processor.LombokProcessorManager###getLombokProcessors:###returnArrays.asList(ApplicationManager.getApplication().getService(AllArgsConstructorProcessor.class),ApplicationManager.getApplication().getService(NoArgsConstructorProcessor.class),ApplicationManager.getApplication().getService(RequiredArgsConstructorProcessor.class),ApplicationManager.getApplication().getService(LogProcessor.class),ApplicationManager.getApplication().getService(Log4jProcessor.class),ApplicationManager.getApplication().getService(Log4j2Processor.class),ApplicationManager.getApplication().getService(Slf4jProcessor.class),ApplicationManager.getApplication().getService(XSlf4jProcessor.class),ApplicationManager.getApplication().getService(CommonsLogProcessor.class),ApplicationManager.getApplication().getService(JBossLogProcessor.class),ApplicationManager.getApplication().getService(FloggerProcessor.class),ApplicationManager.getApplication().getService(CustomLogProcessor.class),ApplicationManager.getApplication().getService(DataProcessor.class),ApplicationManager.getApplication().getService(EqualsAndHashCodeProcessor.class),ApplicationManager.getApplication().getService(GetterProcessor.class),ApplicationManager.getApplication().getService(SetterProcessor.class),ApplicationManager.getApplication().getService(ToStringProcessor.class),ApplicationManager.getApplication().getService(WitherProcessor.class),ApplicationManager.getApplication().getService(BuilderPreDefinedInnerClassFieldProcessor.class),ApplicationManager.getApplication().getService(BuilderPreDefinedInnerClassMethodProcessor.class),ApplicationManager.getApplication().getService(BuilderClassProcessor.class),ApplicationManager.getApplication().getService(BuilderProcessor.class),ApplicationManager.getApplication().getService(BuilderClassMethodProcessor.class),ApplicationManager.getApplication().getService(BuilderMethodProcessor.class),ApplicationManager.getApplication().getService(SuperBuilderPreDefinedInnerClassFieldProcessor.class),ApplicationManager.getApplication().getService(SuperBuilderPreDefinedInnerClassMethodProcessor.class),ApplicationManager.getApplication().getService(SuperBuilderClassProcessor.class),ApplicationManager.getApplication().getService(SuperBuilderProcessor.class),ApplicationManager.getApplication().getService(ValueProcessor.class),ApplicationManager.getApplication().getService(UtilityClassProcessor.class),ApplicationManager.getApplication().getService(FieldNameConstantsOldProcessor.class),ApplicationManager.getApplication().getService(FieldNameConstantsFieldProcessor.class),ApplicationManager.getApplication().getService(FieldNameConstantsProcessor.class),ApplicationManager.getApplication().getService(FieldNameConstantsPredefinedInnerClassFieldProcessor.class),ApplicationManager.getApplication().getService(DelegateFieldProcessor.class),ApplicationManager.getApplication().getService(GetterFieldProcessor.class),ApplicationManager.getApplication().getService(SetterFieldProcessor.class),ApplicationManager.getApplication().getService(WitherFieldProcessor.class),ApplicationManager.getApplication().getService(DelegateMethodProcessor.class),ApplicationManager.getApplication().getService(CleanupProcessor.class));###application###ApplicationManager.getApplication()###26:5:79:7
bc1128d97eccaf570870984cbe81a81ef38b2562###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/handler/BuilderHandler.java###/BuilderHandler.java###de.plushnikov.intellij.plugin.processor.handler.BuilderHandler###createBuilderMethod:PsiClass PsiClass PsiAnnotation ###finalLombokLightMethodBuildermethod=newLombokLightMethodBuilder(containingClass.getManager(),getBuilderMethodName(psiAnnotation)).withMethodReturnType(PsiClassUtil.getTypeWithGenerics(builderPsiClass)).withContainingClass(containingClass).withNavigationElement(psiAnnotation).withModifier(PsiModifier.PUBLIC,PsiModifier.STATIC);###psiTypeWithGenerics###PsiClassUtil.getTypeWithGenerics(builderPsiClass)###152:5:156:63
3af496bd9dd882ba79505cf2fd7866981ec2f9ad###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/handler/BuilderHandler.java###/BuilderHandler.java###de.plushnikov.intellij.plugin.processor.handler.BuilderHandler###createBuilderClass:PsiClass PsiAnnotation ###builderClass.withFields(generateFields(psiFields,builderClass,AccessorsInfo.build(psiClass)));###accessorsInfo###AccessorsInfo.build(psiClass)###293:5:293:101
8c1f3cc62613ea220983c01da477a4e0e829fecb###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/handler/LazyGetterHandler.java###/LazyGetterHandler.java###de.plushnikov.intellij.plugin.handler.LazyGetterHandler###isLazyGetterHandled:HighlightInfo PsiFile ###if(GETTERN_FQN.equals(psiAnnotation.getQualifiedName()))###qualifiedName###psiAnnotation.getQualifiedName()###34:14:37:8
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/DataPlain.java###/DataPlain.java###Data3###hashCode:###result=result*PRIME+(this.getName()==null?0:this.getName().hashCode());###$name###this.getName()###161:5:161:88
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/GetterLazyEahcToString.java###/GetterLazyEahcToString.java###GetterLazyEahcToString###getValue:###value=newjava.util.concurrent.atomic.AtomicReference<String>("");###actualValue###""###46:11:46:79
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/GetterLazyNative.java###/GetterLazyNative.java###GetterLazyNative###getCharField:###value=newAtomicReference<java.lang.Character>('1');###actualValue###'1'###125:11:125:65
6c1338c3e6e7ba8ee747c1ea8719b108f7c7ead3###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/clazz/builder/AbstractSuperBuilderPreDefinedInnerClassProcessor.java###/AbstractSuperBuilderPreDefinedInnerClassProcessor.java###de.plushnikov.intellij.plugin.processor.clazz.builder.AbstractSuperBuilderPreDefinedInnerClassProcessor###process:PsiClass ###returnprocessAnnotation(parentClass.get(),psiAnnotation.get(),psiClass);###psiParentClass###parentClass.get()###48:7:48:82
457d7d6c8537e591a61e724e501223529ec958bf###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/handler/BuilderHandler.java###/BuilderHandler.java###de.plushnikov.intellij.plugin.processor.handler.BuilderHandler###createFields:PsiClass ###fields.add(newLombokLightFieldBuilder(psiClass.getManager(),psiField.getName(),psiField.getType()).withModifier(PsiModifier.PRIVATE));###psiManager###psiClass.getManager()###157:9:158:49
4af99d895fd9d47f2bd3b65291f4d81c0f80f99b###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/clazz/ToStringProcessor.java###/ToStringProcessor.java###de.plushnikov.intellij.plugin.processor.clazz.ToStringProcessor###createParamString:PsiClass Collection<MemberInfo> PsiAnnotation boolean ###finalStringmemberAccessor=getEqualsAndHashCodeToStringHandler().getMemberAccessorName(memberInfo,doNotUseGetters,psiClass);###handler###getEqualsAndHashCodeToStringHandler()###164:7:164:136
01e5704043db84c5bf45e2e145d386dce4863b17###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/method/BuilderMethodInnerClassProcessor.java###/BuilderMethodInnerClassProcessor.java###de.plushnikov.intellij.plugin.processor.method.BuilderMethodInnerClassProcessor###createSetterMethods:PsiClass PsiMethod PsiAnnotation ###assertpsiParameter.getName()!=null;###psiParameterName###psiParameter.getName()###84:7:84:45
652d3f685c1f96bc17a7964a22c16665532571dc###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/field/WitherFieldProcessor.java###/WitherFieldProcessor.java###de.plushnikov.intellij.plugin.processor.field.WitherFieldProcessor###createWitherMethod:PsiField String AccessorsInfo ###copyAnnotations(psiField,methodParameter.getModifierList(),LombokUtils.NON_NULL_PATTERN,LombokUtils.NULLABLE_PATTERN,LombokUtils.DEPRECATED_PATTERN);###methodParameterModifierList###methodParameter.getModifierList()###185:7:185:160
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/EqualsAndHashCode.java###/EqualsAndHashCode.java###EqualsAndHashCode###hashCode:###result=result*PRIME+(this.a==null?0:this.a.hashCode());###$a###this.a###35:5:35:72
fedb198152e12daee36fa586783b12f3a8182165###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/handler/EqualsAndHashCodeToStringHandler.java###/EqualsAndHashCodeToStringHandler.java###de.plushnikov.intellij.plugin.processor.handler.EqualsAndHashCodeToStringHandler###buildAttributeNameString:boolean PsiField PsiClass ###if(PsiAnnotationSearchUtil.isAnnotatedWith(psiClass,Data.class,Value.class,Getter.class))###annotatedWith###PsiAnnotationSearchUtil.isAnnotatedWith(psiClass,Data.class,Value.class,Getter.class)###223:7:228:8
ed54057c425f233151a514d9aa264e2a77c72d2a###/mplushnikov_lombok-intellij-plugin/ProcessorCore/src/main/java/de/plushnikov/intellij/lombok/processor/field/GetterFieldProcessor.java###/GetterFieldProcessor.java###de.plushnikov.intellij.lombok.processor.field.GetterFieldProcessor###process:PsiField PsiAnnotation List<Psi> ###target.add((Psi)createGetterMethod(psiField,methodVisibity,psiClass,manager,elementFactory));###getterMethod###createGetterMethod(psiField,methodVisibity,psiClass,manager,elementFactory)###44:7:44:105
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/GetterLazyNative.java###/GetterLazyNative.java###GetterLazyNative###getShortField:###value=newAtomicReference<java.lang.Short>(1);###actualValue###1###50:11:50:59
652d3f685c1f96bc17a7964a22c16665532571dc###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/clazz/constructor/AbstractConstructorClassProcessor.java###/AbstractConstructorClassProcessor.java###de.plushnikov.intellij.plugin.processor.clazz.constructor.AbstractConstructorClassProcessor###createConstructor:PsiClass String boolean Collection<PsiField> PsiAnnotation ###constructor.getModifierList().addAnnotation(constructorPropertiesAnnotation.toString());###modifierList###constructor.getModifierList()###208:7:208:95
9ececea0b1ae9acc5f4ab47b8dd7d9d20820214b###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/handler/OnXAnnotationHandler.java###/OnXAnnotationHandler.java###de.plushnikov.intellij.plugin.handler.OnXAnnotationHandler###isOnXParameterAnnotation:HighlightInfo PsiFile ###if(!(ANNOTATION_TYPE_EXPECTED.equals(highlightInfo.getDescription())||CANNOT_RESOLVE_UNDERSCORES_MESSAGE.matcher(StringUtil.notNullize(highlightInfo.getDescription())).matches()))###description###StringUtil.notNullize(highlightInfo.getDescription())###38:5:41:6
df95f49cf33e774921936c71d5e841b6a9263edd###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/handler/BuilderHandler.java###/BuilderHandler.java###de.plushnikov.intellij.plugin.processor.handler.BuilderHandler###createFieldMethods:Collection<PsiField> PsiClass PsiAnnotation Collection<String> ###methods.add(newLombokLightMethodBuilder(psiField.getManager(),createSetterName(psiFieldName,fluentBuilder)).withMethodReturnType(createSetterReturnType(psiAnnotation,PsiClassUtil.getTypeWithGenerics(innerClass))).withContainingClass(innerClass).withParameter(psiFieldName,psiField.getType()).withNavigationElement(psiField.getNavigationElement()).withModifier(PsiModifier.PUBLIC).withBody(psiCodeBlock));###originalFieldElement###psiField.getNavigationElement()###385:9:391:38
9d780fdcd07741a095206bae3020a1b47d1568b8###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/java/de/plushnikov/intellij/plugin/action/LombokLightActionTest.java###/LombokLightActionTest.java###de.plushnikov.intellij.plugin.action.LombokLightActionTest###createAnActionEvent:AnAction ###returnnewAnActionEvent(null,DataManager.getInstance().getDataContext(),"",anAction.getTemplatePresentation(),ActionManager.getInstance(),0);###context###DataManager.getInstance().getDataContext()###48:5:55:7
f2960c49e4c600e28f6c9228edb2065a38d182d7###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/handler/BuilderHandler.java###/BuilderHandler.java###de.plushnikov.intellij.plugin.processor.handler.BuilderHandler###createBuilderClass:PsiClass PsiTypeParameterListOwner String PsiAnnotation ###LombokLightClassBuilderinnerClass=newLombokLightClassBuilder(psiClass.getProject(),builderClassName,builderClassQualifiedName).withContainingClass(psiClass).withNavigationElement(psiAnnotation).withParameterTypes(psiTypeParameterListOwner.getTypeParameterList()).withModifier(PsiModifier.PUBLIC).withModifier(PsiModifier.STATIC);###project###psiClass.getProject()###203:5:208:43
699c5671f7e7fcf0e6be5729106407ee9359023b###/mplushnikov_lombok-intellij-plugin/src/test/java/de/plushnikov/intellij/plugin/processor/FieldNameConstantsOldTest.java###/FieldNameConstantsOldTest.java###de.plushnikov.intellij.plugin.processor.FieldNameConstantsOldTest###setUp:###VfsRootAccess.allowRootAccess(newFile(getTestDataPath(),getBasePath()).getCanonicalPath(),newFile(OLD_LOMBOK_SRC_PATH).getCanonicalPath());###basePath###newFile(getTestDataPath(),getBasePath()).getCanonicalPath()###17:5:18:57
ed4cb3e9213cd461a404eac1d7a1e10d16ef3a7e###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/field/DelegateFieldProcessor.java###/DelegateFieldProcessor.java###de.plushnikov.intellij.plugin.processor.field.DelegateFieldProcessor###generateDelegateMethod:PsiClass PsiAnnotation PsiMethod PsiSubstitutor ###methodBuilder.withParameter(StringUtils.defaultIfEmpty(psiParameterName,"p"+parameterIndex),psiParameterType);###generatedParameterName###StringUtils.defaultIfEmpty(psiParameterName,"p"+parameterIndex)###236:7:236:121
139432e9bc78ae7f30c7794fd67ba6392f32e2a9###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/field/DelegateFieldProcessor.java###/DelegateFieldProcessor.java###de.plushnikov.intellij.plugin.processor.field.DelegateFieldProcessor###generateDelegateMethod:PsiClass PsiAnnotation PsiMethod PsiSubstitutor ###methodBuilder.withParameter(StringUtils.defaultIfEmpty(psiParameterName,"p"+parameterIndex),psiParameterType);###generatedParameterName###StringUtils.defaultIfEmpty(psiParameterName,"p"+parameterIndex)###223:7:223:121
a86dcc79f4aa35ac19f22e0b625d864e424f394f###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/action/delombok/BaseDelombokHandler.java###/BaseDelombokHandler.java###de.plushnikov.intellij.plugin.action.delombok.BaseDelombokHandler###rebuildMethod:Project PsiMethod ###finalPsiMethodresultMethod=elementFactory.createMethod(fromMethod.getName(),fromMethod.getReturnType());###returnType###fromMethod.getReturnType()###103:5:103:114
73b494df177133827c59351e4015d8f52a1db8c8###/mplushnikov_lombok-intellij-plugin/intellij-facade-10/src/main/java/de/plushnikov/intellij/lombok/psi/LombokLightParameter10Impl.java###/LombokLightParameter10Impl.java###de.plushnikov.intellij.lombok.psi.LombokLightParameter10Impl###LombokLightParameter10Impl:String PsiType PsiElement Language ###myNameIdentifier=newLightIdentifier(declarationScope.getManager(),name);###manager###declarationScope.getManager()###19:5:19:81
1868032c62ed39e616201a1f4e730f6214b6562f###/mplushnikov_lombok-intellij-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/handler/BuilderHandler.java###/BuilderHandler.java###de.plushnikov.intellij.plugin.processor.handler.BuilderHandler###createMethods:PsiClass PsiMethod PsiClass PsiType PsiAnnotation Collection<? extends PsiVariable> PsiSubstitutor ###finalPsiTypereturnType=createSetterReturnType(psiAnnotation,PsiClassUtil.getTypeWithGenerics(psiBuilderClass));###psiBuilderClassType###PsiClassUtil.getTypeWithGenerics(psiBuilderClass)###341:9:341:125
4ffbf3ae1646518445a22e56d49ef1d3775e40f8###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/provider/LombokAugmentProvider.java###/LombokAugmentProvider.java###de.plushnikov.intellij.plugin.provider.LombokAugmentProvider###getAugments:PsiElement Class<Psi> ###returnprocess(type,project,(PsiClass)element);###psiClass###(PsiClass)element###66:5:66:55
8847144dfb29c8e84697d89a31ba84b0e0ab60fc###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/handler/BuilderHandler.java###/BuilderHandler.java###de.plushnikov.intellij.plugin.processor.handler.BuilderHandler###createBuilderClass:PsiClass PsiAnnotation ###builderClass.withFields(createFields(psiClass));###builderFields###createFields(psiClass)###190:5:190:53
24c2b064d3f470041206cd683ac88500e466356c###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/main/java/de/plushnikov/intellij/plugin/processor/field/AccessorsInfo.java###/AccessorsInfo.java###de.plushnikov.intellij.plugin.processor.field.AccessorsInfo###build:PsiField ###returnbuild(psiField.getContainingClass());###containingClass###psiField.getContainingClass()###41:7:41:51
1ed73434b652fe7496c3afed77effa2e90723906###/mplushnikov_lombok-intellij-plugin/lombok-plugin/src/test/data/after/DataWithGetterNone.java###/DataWithGetterNone.java###DataWithGetterNone###hashCode:###result=result*PRIME+(this.z==null?0:this.z.hashCode());###$z###this.z###47:5:47:72
